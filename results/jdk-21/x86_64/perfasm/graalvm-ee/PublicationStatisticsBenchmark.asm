# JMH version: 1.37
# VM version: JDK 21, Java HotSpot(TM) 64-Bit Server VM, 21+35-jvmci-23.1-b15
# VM invoker: /home/gogu/bench_jdks/graalvm-jdk-21+35.1/bin/java
# VM options: -XX:ThreadPriorityPolicy=1 -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCIProduct -XX:-UnlockExperimentalVMOptions -Xms4g -Xmx4g -XX:+AlwaysPreTouch
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark.author_with_the_most_publications

# Run progress: 0.00% complete, ETA 00:23:20
# Fork: 1 of 1
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 69.780 ms/op
# Warmup Iteration   2: 40.946 ms/op
# Warmup Iteration   3: 40.460 ms/op
# Warmup Iteration   4: 39.983 ms/op
# Warmup Iteration   5: 39.990 ms/op
Iteration   1: 39.966 ms/op
Iteration   2: 39.977 ms/op
Iteration   3: 39.894 ms/op
Iteration   4: 40.206 ms/op
Iteration   5: 40.125 ms/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark.author_with_the_most_publications":
  40.034 ±(99.9%) 0.493 ms/op [Average]
  (min, avg, max) = (39.894, 40.034, 40.206), stdev = 0.128
  CI (99.9%): [39.541, 40.526] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark.author_with_the_most_publications:asm":
PrintAssembly processed: 351048 total address lines.
Perf output processed (skipped 62.939 seconds):
 Column 1: cycles (50957 events)

Hottest code regions (>10.00% "cycles" events):
 Event counts are percents of total event count.

....[Hottest Region 1]..............................................................................
jvmci, level 4, java.util.HashMap$KeySpliterator::forEachRemaining, version 4, compile id 1326 

                                                                             ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
                                                                             ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
                   0x00007f15bedd0a43:   mov    %r14,0xd8(%rsp)
                   0x00007f15bedd0a4b:   movabs $0x7f154403c7f0,%rdx         ;   {metadata(&apos;java/util/stream/Collectors$$Lambda+0x00007f154403c7f0&apos;)}
                   0x00007f15bedd0a55:   mov    %rsi,%r11
                   0x00007f15bedd0a58:   mov    %r9d,%r10d
                   0x00007f15bedd0a5b:   mov    0xa0(%rsp),%rsi
                   0x00007f15bedd0a63:   nopw   0x0(%rax,%rax,1)
                   0x00007f15bedd0a6c:   data16 data16 xchg %ax,%ax          ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                                             ; - java.util.HashMap$KeySpliterator::forEachRemaining@122 (line 1712)
   0.28%   ↗       0x00007f15bedd0a70:   mov    %r10d,0xd4(%rsp)
   0.04%   │       0x00007f15bedd0a78:   mov    %r11,0x80(%rsp)
   0.03%   │       0x00007f15bedd0a80:   test   %r11,%r11
          ╭│       0x00007f15bedd0a83:   jne    0x00007f15bedd0ac5           ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
          ││                                                                 ; - java.util.HashMap$KeySpliterator::forEachRemaining@124 (line 1712)
   0.03%  ││       0x00007f15bedd0a89:   cmp    %r10d,%edi
          ││       0x00007f15bedd0a8c:   jbe    0x00007f15bedd3f94
   0.17%  ││       0x00007f15bedd0a92:   mov    0x10(%rbx,%r10,4),%edx
   0.43%  ││       0x00007f15bedd0a97:   mov    %edx,%r9d
   0.02%  ││       0x00007f15bedd0a9a:   shl    $0x3,%r9                     ;*aaload {reexecute=0 rethrow=0 return_oop=0}
          ││                                                                 ; - java.util.HashMap$KeySpliterator::forEachRemaining@133 (line 1713)
   0.02%  ││       0x00007f15bedd0a9e:   mov    %r10d,%ecx
   0.17%  ││       0x00007f15bedd0aa1:   inc    %ecx                         ;*iinc {reexecute=0 rethrow=0 return_oop=0}
          ││                                                                 ; - java.util.HashMap$KeySpliterator::forEachRemaining@130 (line 1713)
   0.03%  ││       0x00007f15bedd0aa3:   test   %edx,%edx
          ││       0x00007f15bedd0aa5:   jne    0x00007f15bedd360e           ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
          ││                                                                 ; - java.util.HashMap$KeySpliterator::forEachRemaining@159 (line 1718)
   0.07%  ││       0x00007f15bedd0aab:   cmp    %ecx,%r8d
          ││       0x00007f15bedd0aae:   jle    0x00007f15bedd365b           ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
          ││                                                                 ; - java.util.HashMap$KeySpliterator::forEachRemaining@164 (line 1718)
   0.04%  ││       0x00007f15bedd0ab4:   mov    0x458(%r15),%rdx             ; ImmutableOopMap {rbx=Oop rsi=Oop r9=Oop r11=Oop [136]=Oop [144]=Oop [156]=NarrowOop [160]=Oop }
          ││                                                                 ;*aload {reexecute=1 rethrow=0 return_oop=0}
          ││                                                                 ; - (reexecute) java.util.HashMap$KeySpliterator::forEachRemaining@122 (line 1712)
   0.14%  ││       0x00007f15bedd0abb:   test   %eax,(%rdx)                  ;   {poll}
   0.07%  ││       0x00007f15bedd0abd:   mov    %r9,%r11
   0.01%  ││       0x00007f15bedd0ac0:   mov    %ecx,%r10d
   0.01%  │╰       0x00007f15bedd0ac3:   jmp    0x00007f15bedd0a70           ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
          │                                                                  ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@1 (line 1696)
          │                                                                  ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
          │                                                                  ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
          │                                                                  ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.07%  ↘        0x00007f15bedd0ac5:   cmpb   $0x0,0x10(%rsi)
   0.00%           0x00007f15bedd0ac9:   jne    0x00007f15bedd3908           ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                                             ; - java.util.stream.ReferencePipeline$7$1::accept@25 (line 275)
                                                                             ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.01%           0x00007f15bedd0acf:   mov    0xc(%rsi),%r9d               ;*getfield downstream {reexecute=0 rethrow=0 return_oop=0}
                                                                             ; - java.util.stream.ReferencePipeline$7$1::accept@38 (line 276)
                                                                             ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.01%           0x00007f15bedd0ad3:   mov    %r9d,0x7c(%rsp)
   0.09%           0x00007f15bedd0ad8:   nopl   0x0(%rax,%rax,1)             ; ImmutableOopMap {rbx=Oop rsi=Oop r9=NarrowOop r11=Oop [124]=NarrowOop [128]=Oop [136]=Oop [144]=Oop [156]=NarrowOop [160]=Oop }
                                                                             ;*aload {reexecute=1 rethrow=0 return_oop=0}
                                                                             ; - (reexecute) java.util.HashMap$KeySpliterator::forEachRemaining@122 (line 1712)
                   0x00007f15bedd0ae0:   cmpl   $0x256d70,0x8(,%r9,8)        ; implicit exception: dispatches to 0x00007f15bedd41d5
                                                                             ;   {metadata(&apos;java/util/stream/ReduceOps$3ReducingSink&apos;)}
   0.08%           0x00007f15bedd0aec:   jne    0x00007f15bedd412a           ;*invokeinterface accept {reexecute=0 rethrow=0 return_oop=0}
                                                                             ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
                                                                             ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
                                                                             ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
                                                                             ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.08%           0x00007f15bedd0af2:   mov    0x14(%rsi),%ecx              ; ImmutableOopMap {rbx=Oop rsi=Oop r9=NarrowOop r11=Oop [124]=NarrowOop [128]=Oop [136]=Oop [144]=Oop [156]=NarrowOop [160]=Oop }
                                                                             ;*aload {reexecute=1 rethrow=0 return_oop=0}
                                                                             ; - (reexecute) java.util.HashMap$KeySpliterator::forEachRemaining@122 (line 1712)
                   0x00007f15bedd0af5:   mov    0x34(,%rcx,8),%ecx           ; implicit exception: dispatches to 0x00007f15bedd41f8
   0.05%           0x00007f15bedd0afc:   nopl   0x0(%rax)                    ; ImmutableOopMap {rbx=Oop rsi=Oop r9=NarrowOop r11=Oop [124]=NarrowOop [128]=Oop [136]=Oop [144]=Oop [156]=NarrowOop [160]=Oop }
                                                                             ;*aload {reexecute=1 rethrow=0 return_oop=0}
                                                                             ; - (reexecute) java.util.HashMap$KeySpliterator::forEachRemaining@122 (line 1712)
   0.00%           0x00007f15bedd0b00:   cmpl   $0x102bd28,0x8(,%rcx,8)      ; implicit exception: dispatches to 0x00007f15bedd421b
                                                                             ;   {metadata(&apos;com/ionutbalosin/jvm/performance/benchmarks/miscellaneous/publicationstatistics/PublicationStatistics$$Lambda+0x00007f154402bd28&apos;)}
   0.34%           0x00007f15bedd0b0b:   jne    0x00007f15bedd3a4a           ;*invokeinterface apply {reexecute=0 rethrow=0 return_oop=0}
                                                                             ; - java.util.stream.ReferencePipeline$7$1::accept@8 (line 273)
                                                                             ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.07%           0x00007f15bedd0b11:   mov    0x10(%r11),%ecx              ;*getfield key {reexecute=0 rethrow=0 return_oop=0}
                                                                             ; - java.util.HashMap$KeySpliterator::forEachRemaining@142 (line 1715)
   6.25%           0x00007f15bedd0b15:   data16 data16 nopw 0x0(%rax,%rax,1) ; ImmutableOopMap {rcx=NarrowOop rbx=Oop rsi=Oop r9=NarrowOop r11=Oop [124]=NarrowOop [128]=Oop [136]=Oop [144]=Oop [156]=NarrowOop [160]=Oop }
                                                                             ;*aload {reexecute=1 rethrow=0 return_oop=0}
                                                                             ; - (reexecute) java.util.HashMap$KeySpliterator::forEachRemaining@122 (line 1712)
   0.03%           0x00007f15bedd0b20:   cmpl   $0x102b708,0x8(,%rcx,8)      ; implicit exception: dispatches to 0x00007f15bedd423e
                                                                             ;   {metadata(&apos;com/ionutbalosin/jvm/performance/benchmarks/miscellaneous/publicationstatistics/model/Publication&apos;)}
   1.97%           0x00007f15bedd0b2b:   jne    0x00007f15bedd3f7a           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics$$Lambda/0x00007f154402bd28::apply@1
                                                                             ; - java.util.stream.ReferencePipeline$7$1::accept@8 (line 273)
                                                                             ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.08%           0x00007f15bedd0b31:   mov    0x18(,%rcx,8),%ecx           ;*getfield authors {reexecute=0 rethrow=0 return_oop=0}
                                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.model.Publication::getAuthors@1 (line 51)
                                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::lambda$authorWithTheMostPublications$5@1 (line 108)
                                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics$$Lambda/0x00007f154402bd28::apply@4
                                                                             ; - java.util.stream.ReferencePipeline$7$1::accept@8 (line 273)
                                                                             ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   1.16%           0x00007f15bedd0b38:   mov    %ecx,0x78(%rsp)
   0.07%           0x00007f15bedd0b3c:   nopl   0x0(%rax)                    ; ImmutableOopMap {rcx=NarrowOop rbx=Oop rsi=Oop r9=NarrowOop r11=Oop [120]=NarrowOop [124]=NarrowOop [128]=Oop [136]=Oop [144]=Oop [156]=NarrowOop [160]=Oop }
                                                                             ;*aload {reexecute=1 rethrow=0 return_oop=0}
                                                                             ; - (reexecute) java.util.HashMap$KeySpliterator::forEachRemaining@122 (line 1712)
   0.01%           0x00007f15bedd0b40:   cmpl   $0xbc3f8,0x8(,%rcx,8)        ; implicit exception: dispatches to 0x00007f15bedd4261
                                                                             ;   {metadata(&apos;java/util/ArrayList&apos;)}
   5.68%           0x00007f15bedd0b4b:   jne    0x00007f15bedd38a5           ;*invokeinterface stream {reexecute=0 rethrow=0 return_oop=0}
                                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::lambda$authorWithTheMostPublications$5@4 (line 108)
                                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics$$Lambda/0x00007f154402bd28::apply@4
                                                                             ; - java.util.stream.ReferencePipeline$7$1::accept@8 (line 273)
                                                                             ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.08%           0x00007f15bedd0b51:   mov    0x14(,%rcx,8),%edx           ; ImmutableOopMap {rcx=NarrowOop rdx=NarrowOop rbx=Oop rsi=Oop r9=NarrowOop [120]=NarrowOop [124]=NarrowOop [128]=Oop [136]=Oop [144]=Oop [156]=NarrowOop [160]=Oop }
                                                                             ;*aload {reexecute=1 rethrow=0 return_oop=0}
                                                                             ; - (reexecute) java.util.HashMap$KeySpliterator::forEachRemaining@122 (line 1712)
   0.65%           0x00007f15bedd0b58:   mov    0xc(,%rdx,8),%r10d           ; implicit exception: dispatches to 0x00007f15bedd4284
   1.55%           0x00007f15bedd0b60:   mov    0x10(,%rcx,8),%r11d          ;*getfield size {reexecute=0 rethrow=0 return_oop=0}
                                                                             ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@47 (line 1701)
                                                                             ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
                                                                             ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
                                                                             ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.01%           0x00007f15bedd0b68:   mov    %r11d,0xd0(%rsp)
                   0x00007f15bedd0b70:   cmp    %r10d,%r11d
                   0x00007f15bedd0b73:   jg     0x00007f15bedd3dad           ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                                             ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@78 (line 1705)
                                                                             ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
                                                                             ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
                                                                             ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.10%           0x00007f15bedd0b79:   nopl   0x0(%rax)
                   0x00007f15bedd0b80:   cmp    $0x1,%r11d
            ╭      0x00007f15bedd0b84:   jl     0x00007f15bedd0ba9
            │      0x00007f15bedd0b8a:   mov    %r11d,%eax
   0.00%    │      0x00007f15bedd0b8d:   dec    %rax
   0.08%    │      0x00007f15bedd0b90:   mov    %r10d,%r11d
            │      0x00007f15bedd0b93:   cmp    %rax,%r11
            │      0x00007f15bedd0b96:   jbe    0x00007f15bedd3d5a
   0.04%    │      0x00007f15bedd0b9c:   nopl   0x0(%rax)
   0.00%    │      0x00007f15bedd0ba0:   test   %r10d,%r10d
            │      0x00007f15bedd0ba3:   je     0x00007f15bedd3f25           ;*aaload {reexecute=0 rethrow=0 return_oop=0}
            │                                                                ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@89 (line 1707)
            │                                                                ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
            │                                                                ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
            │                                                                ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.05%    ↘      0x00007f15bedd0ba9:   mov    0xc(,%rcx,8),%r10d           ;*getfield modCount {reexecute=0 rethrow=0 return_oop=0}
                                                                             ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@38 (line 1700)
                                                                             ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
                                                                             ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
                                                                             ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
                   0x00007f15bedd0bb1:   mov    %r10d,0xcc(%rsp)
   0.03%           0x00007f15bedd0bb9:   mov    %ecx,%r11d
   0.00%           0x00007f15bedd0bbc:   shl    $0x3,%r11                    ;*getfield authors {reexecute=0 rethrow=0 return_oop=0}
                                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.model.Publication::getAuthors@1 (line 51)
                                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::lambda$authorWithTheMostPublications$5@1 (line 108)
                                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics$$Lambda/0x00007f154402bd28::apply@4
                                                                             ; - java.util.stream.ReferencePipeline$7$1::accept@8 (line 273)
                                                                             ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.05%           0x00007f15bedd0bc0:   mov    %r11,0x70(%rsp)
                   0x00007f15bedd0bc5:   shl    $0x3,%rdx                    ;*getfield elementData {reexecute=0 rethrow=0 return_oop=0}
                                                                             ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@16 (line 1698)
                                                                             ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
                                                                             ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
                                                                             ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.04%           0x00007f15bedd0bc9:   mov    %rdx,0x68(%rsp)
   0.00%           0x00007f15bedd0bce:   mov    %r9d,%eax
   0.05%           0x00007f15bedd0bd1:   shl    $0x3,%rax                    ;*getfield downstream {reexecute=0 rethrow=0 return_oop=0}
                                                                             ; - java.util.stream.ReferencePipeline$7$1::accept@38 (line 276)
                                                                             ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
                   0x00007f15bedd0bd5:   mov    %rax,0x60(%rsp)
   0.04%           0x00007f15bedd0bda:   mov    0xd0(%rsp),%r11d
   0.00%           0x00007f15bedd0be2:   mov    $0x0,%r10d
   0.04%           0x00007f15bedd0be8:   movabs $0x7f154403c7f0,%rsi         ;   {metadata(&apos;java/util/stream/Collectors$$Lambda+0x00007f154403c7f0&apos;)}
                   0x00007f15bedd0bf2:   data16 nopw 0x0(%rax,%rax,1)
   0.04%           0x00007f15bedd0bfc:   data16 data16 xchg %ax,%ax          ;*iload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                                             ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@81 (line 1706)
                                                                             ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
                                                                             ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
                                                                             ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
                ↗  0x00007f15bedd0c00:   cmp    %r10d,%r11d
                │  0x00007f15bedd0c03:   jle    0x00007f15bedd358a           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                │                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@83 (line 1706)
                │                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
                │                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
                │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.38%        │  0x00007f15bedd0c09:   mov    0x14(,%r9,8),%r11d           ;*getfield val$accumulator {reexecute=0 rethrow=0 return_oop=0}
                │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@1 (line 169)
                │                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
                │                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
                │                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
                │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.02%        │  0x00007f15bedd0c11:   test   %r11d,%r11d
                │  0x00007f15bedd0c14:   je     0x00007f15bedd1093
   0.07%        │  0x00007f15bedd0c1a:   mov    0x8(,%r11,8),%r8d
   0.08%        │  0x00007f15bedd0c22:   movabs $0x7f1543000000,%rcx
   0.44%        │  0x00007f15bedd0c2c:   lea    (%rcx,%r8,1),%r8             ;*invokeinterface accept {reexecute=0 rethrow=0 return_oop=0}
                │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                │                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
                │                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
                │                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
                │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.02%        │  0x00007f15bedd0c30:   mov    0x10(%rdx,%r10,4),%ecx       ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                │                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@89 (line 1707)
                │                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
                │                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
                │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.73%        │  0x00007f15bedd0c35:   mov    %ecx,0x5c(%rsp)
   0.03%        │  0x00007f15bedd0c39:   mov    0xc(,%r9,8),%ebx
   0.37%        │  0x00007f15bedd0c41:   mov    %ebx,%r9d
   0.01%        │  0x00007f15bedd0c44:   shl    $0x3,%r9                     ;*getfield state {reexecute=0 rethrow=0 return_oop=0}
                │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@5 (line 169)
                │                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
                │                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
                │                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
                │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.06%        │  0x00007f15bedd0c48:   mov    %r9,0x50(%rsp)
   0.02%        │  0x00007f15bedd0c4d:   mov    %ecx,%r9d
   0.42%        │  0x00007f15bedd0c50:   shl    $0x3,%r9                     ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                │                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@89 (line 1707)
                │                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
                │                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
                │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.01%        │  0x00007f15bedd0c54:   mov    %r9,0x48(%rsp)
   0.02%        │  0x00007f15bedd0c59:   mov    %r10d,%r9d
   0.02%        │  0x00007f15bedd0c5c:   inc    %r9d                         ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                │                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@100 (line 1706)
                │                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
                │                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
                │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.40%        │  0x00007f15bedd0c5f:   mov    %r9d,0xc8(%rsp)
   0.02%        │  0x00007f15bedd0c67:   cmp    %r8,%rsi
             ╭  │  0x00007f15bedd0c6a:   jne    0x00007f15bedd0f71           ;*invokeinterface accept {reexecute=0 rethrow=0 return_oop=0}
             │  │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
             │  │                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
             │  │                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
             │  │                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
             │  │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.05%     │  │  0x00007f15bedd0c70:   mov    0xc(,%r11,8),%r8d            ;*getfield arg$1 {reexecute=0 rethrow=0 return_oop=0}
             │  │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f154403c7f0::accept@1
             │  │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
             │  │                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
             │  │                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
             │  │                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
             │  │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.02%     │  │  0x00007f15bedd0c78:   nopl   0x0(%rax,%rax,1)             ; ImmutableOopMap {rcx=NarrowOop rdx=Oop rbx=NarrowOop r11=NarrowOop [72]=Oop [80]=Oop [92]=NarrowOop [96]=Oop [104]=Oop [112]=Oop [120]=NarrowOop [124]=NarrowOop [128]=Oop [136]=Oop [144]=Oop [156]=NarrowOop [160]=Oop }
             │  │                                                            ;*iload_2 {reexecute=1 rethrow=0 return_oop=0}
             │  │                                                            ; - (reexecute) java.util.ArrayList$ArrayListSpliterator::forEachRemaining@81 (line 1706)
             │  │                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
             │  │                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
             │  │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.48%     │  │  0x00007f15bedd0c80:   cmpl   $0x103b8c8,0x8(,%r8,8)       ; implicit exception: dispatches to 0x00007f15bedd42a7
             │  │                                                            ;   {metadata(&apos;java/util/function/Function$$Lambda+0x00007f154403b8c8&apos;)}
   0.06%     │  │  0x00007f15bedd0c8c:   jne    0x00007f15bedd3ced           ;*invokeinterface apply {reexecute=0 rethrow=0 return_oop=0}
             │  │                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@3 (line 1105)
             │  │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f154403c7f0::accept@17
             │  │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
             │  │                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
             │  │                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
             │  │                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
             │  │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.03%     │  │  0x00007f15bedd0c92:   mov    %ebx,0x44(%rsp)              ;*iload_2 {reexecute=1 rethrow=0 return_oop=0}
             │  │                                                            ; - (reexecute) java.util.ArrayList$ArrayListSpliterator::forEachRemaining@81 (line 1706)
             │  │                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
             │  │                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
             │  │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.39%     │  │  0x00007f15bedd0c96:   test   %eax,0x0(,%rcx,8)            ; implicit exception: deoptimizes
             │  │                                                            ; ImmutableOopMap {rdx=Oop rbx=NarrowOop r11=NarrowOop [68]=NarrowOop [72]=Oop [80]=Oop [92]=NarrowOop [96]=Oop [104]=Oop [112]=Oop [120]=NarrowOop [124]=NarrowOop [128]=Oop [136]=Oop [144]=Oop [156]=NarrowOop [160]=Oop }
   7.97%     │  │  0x00007f15bedd0c9d:   data16 xchg %ax,%ax                 ; ImmutableOopMap {rdx=Oop r11=NarrowOop [68]=NarrowOop [72]=Oop [80]=Oop [92]=NarrowOop [96]=Oop [104]=Oop [112]=Oop [120]=NarrowOop [124]=NarrowOop [128]=Oop [136]=Oop [144]=Oop [156]=NarrowOop [160]=Oop }
             │  │                                                            ;*iload_2 {reexecute=1 rethrow=0 return_oop=0}
             │  │                                                            ; - (reexecute) java.util.ArrayList$ArrayListSpliterator::forEachRemaining@81 (line 1706)
             │  │                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
             │  │                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
             │  │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.01%     │  │  0x00007f15bedd0ca0:   cmpl   $0x8e280,0x8(,%rbx,8)        ; implicit exception: dispatches to 0x00007f15bedd42cd
             │  │                                                            ;   {metadata(&apos;java/util/HashMap&apos;)}
   0.34%     │  │  0x00007f15bedd0cab:   jne    0x00007f15bedd40d6           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
             │  │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f154403c7f0::accept@13
             │  │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
             │  │                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
             │  │                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
             │  │                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
             │  │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.14%     │  │  0x00007f15bedd0cb1:   mov    0x48(%rsp),%r9
   0.01%     │  │  0x00007f15bedd0cb6:   mov    %r10d,0xc4(%rsp)
   0.28%     │  │  0x00007f15bedd0cbe:   mov    0x14(,%r11,8),%r10d          ;*getfield arg$3 {reexecute=0 rethrow=0 return_oop=0}
             │  │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f154403c7f0::accept@9
             │  │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
             │  │                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
             │  │                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
             │  │                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
             │  │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
             │  │  0x00007f15bedd0cc6:   mov    %r10d,0x40(%rsp)
   0.11%     │  │  0x00007f15bedd0ccb:   mov    0x10(,%r11,8),%r11d          ;*getfield arg$2 {reexecute=0 rethrow=0 return_oop=0}
             │  │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f154403c7f0::accept@5
             │  │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
             │  │                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
             │  │                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
             │  │                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
             │  │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.02%     │  │  0x00007f15bedd0cd3:   mov    %r11d,0x3c(%rsp)
   0.32%     │  │  0x00007f15bedd0cd8:   mov    %r10d,%r8d
   0.00%     │  │  0x00007f15bedd0cdb:   shl    $0x3,%r8                     ;*getfield arg$3 {reexecute=0 rethrow=0 return_oop=0}
             │  │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f154403c7f0::accept@9
             │  │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
             │  │                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
             │  │                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
             │  │                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
             │  │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.14%     │  │  0x00007f15bedd0cdf:   mov    %r11d,%r10d
   0.02%     │  │  0x00007f15bedd0ce2:   shl    $0x3,%r10                    ;*getfield arg$2 {reexecute=0 rethrow=0 return_oop=0}
             │  │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f154403c7f0::accept@5
             │  │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
             │  │                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
             │  │                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
             │  │                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
             │  │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.35%     │  │  0x00007f15bedd0ce6:   mov    %r9,%rsi                     ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
             │  │                                                            ; - java.util.HashMap::hash@9 (line 338)
             │  │                                                            ; - java.util.HashMap::computeIfAbsent@13 (line 1199)
             │  │                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
             │  │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f154403c7f0::accept@17
             │  │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
             │  │                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
             │  │                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
             │  │                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
             │  │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
             │  │  0x00007f15bedd0ce9:   mov    %r8,0x30(%rsp)
   0.16%     │  │  0x00007f15bedd0cee:   mov    %r10,0x28(%rsp)
   0.01%     │  │  0x00007f15bedd0cf3:   xchg   %ax,%ax
   0.35%     │  │  0x00007f15bedd0cf5:   nop
             │  │  0x00007f15bedd0cf6:   data16 xchg %ax,%ax
   0.12%     │  │  0x00007f15bedd0cf9:   movabs $0x7f154402b2c0,%rax
   0.01%     │  │  0x00007f15bedd0d03:   call   0x00007f15b7409e60           ; ImmutableOopMap {[40]=Oop [48]=Oop [60]=NarrowOop [64]=NarrowOop [68]=NarrowOop [72]=Oop [80]=Oop [92]=NarrowOop [96]=Oop [104]=Oop [112]=Oop [120]=NarrowOop [124]=NarrowOop [128]=Oop [136]=Oop [144]=Oop [156]=NarrowOop [160]=Oop }
             │  │                                                            ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
             │  │                                                            ; - java.util.HashMap::hash@9 (line 338)
             │  │                                                            ; - java.util.HashMap::computeIfAbsent@13 (line 1199)
             │  │                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
             │  │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f154403c7f0::accept@17
             │  │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
             │  │                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
             │  │                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
             │  │                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
             │  │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
             │  │                                                            ;   {virtual_call}
   0.00%     │  │  0x00007f15bedd0d08:   nopl   0xd000778(%rax,%rax,1)       ;   {other}
             │  │  0x00007f15bedd0d10:   mov    0x44(%rsp),%ebx
   0.47%     │  │  0x00007f15bedd0d14:   mov    0x24(,%rbx,8),%r10d          ;*getfield table {reexecute=0 rethrow=0 return_oop=0}
             │  │                                                            ; - java.util.HashMap::resize@1 (line 684)
             │  │                                                            ; - java.util.HashMap::computeIfAbsent@57 (line 1206)
             │  │                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
             │  │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f154403c7f0::accept@17
             │  │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
             │  │                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
             │  │                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
             │  │                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
             │  │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.02%     │  │  0x00007f15bedd0d1c:   mov    %r10d,0x24(%rsp)
   0.04%     │  │  0x00007f15bedd0d21:   mov    0x1c(,%rbx,8),%r11d          ;*getfield threshold {reexecute=0 rethrow=0 return_oop=0}
             │  │                                                            ; - java.util.HashMap::computeIfAbsent@31 (line 1204)
             │  │                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
             │  │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f154403c7f0::accept@17
             │  │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
             │  │                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
             │  │                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
             │  │                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
             │  │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.47%     │  │  0x00007f15bedd0d29:   mov    %r10d,%r8d
             │  │  0x00007f15bedd0d2c:   shl    $0x3,%r8                     ;*getfield table {reexecute=0 rethrow=0 return_oop=0}
             │  │                                                            ; - java.util.HashMap::resize@1 (line 684)
             │  │                                                            ; - java.util.HashMap::computeIfAbsent@57 (line 1206)
             │  │                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
             │  │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f154403c7f0::accept@17
             │  │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
             │  │                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
             │  │                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
             │  │                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
             │  │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
             │  │  0x00007f15bedd0d30:   mov    %r8,0x18(%rsp)
   0.03%     │  │  0x00007f15bedd0d35:   mov    %eax,%esi
   0.45%     │  │  0x00007f15bedd0d37:   shr    $0x10,%esi                   ;*iushr {reexecute=0 rethrow=0 return_oop=0}
             │  │                                                            ; - java.util.HashMap::hash@17 (line 338)
             │  │                                                            ; - java.util.HashMap::computeIfAbsent@13 (line 1199)
             │  │                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
             │  │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f154403c7f0::accept@17
             │  │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
             │  │                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
             │  │                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
             │  │                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
             │  │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
             │  │  0x00007f15bedd0d3a:   mov    %eax,%ebp
             │  │  0x00007f15bedd0d3c:   xor    %esi,%ebp                    ;*ixor {reexecute=0 rethrow=0 return_oop=0}
             │  │                                                            ; - java.util.HashMap::hash@18 (line 338)
             │  │                                                            ; - java.util.HashMap::computeIfAbsent@13 (line 1199)
             │  │                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
             │  │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f154403c7f0::accept@17
             │  │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
             │  │                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
             │  │                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
             │  │                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
             │  │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.02%     │  │  0x00007f15bedd0d3e:   mov    %ebp,0xc0(%rsp)
   0.48%     │  │  0x00007f15bedd0d45:   cmp    0x14(,%rbx,8),%r11d
             │  │  0x00007f15bedd0d4d:   jl     0x00007f15bedd1bfa           ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
             │  │                                                            ; - java.util.HashMap::computeIfAbsent@34 (line 1204)
             │  │                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
             │  │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f154403c7f0::accept@17
             │  │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
             │  │                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
             │  │                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
             │  │                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
             │  │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
             │  │  0x00007f15bedd0d53:   test   %r10d,%r10d
             │  │  0x00007f15bedd0d56:   je     0x00007f15bedd2cf7           ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
             │  │                                                            ; - java.util.HashMap::computeIfAbsent@44 (line 1204)
             │  │                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
             │  │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f154403c7f0::accept@17
             │  │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
             │  │                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
             │  │                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
             │  │                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
             │  │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.01%     │  │  0x00007f15bedd0d5c:   mov    0xc(,%r10,8),%esi            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
             │  │                                                            ; - java.util.HashMap::computeIfAbsent@49 (line 1204)
             │  │                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
             │  │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f154403c7f0::accept@17
             │  │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
             │  │                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
             │  │                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
             │  │                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
             │  │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.40%     │  │  0x00007f15bedd0d64:   test   %esi,%esi
             │  │  0x00007f15bedd0d66:   je     0x00007f15bedd3f3f           ;*ifne {reexecute=0 rethrow=0 return_oop=0}
             │  │                                                            ; - java.util.HashMap::computeIfAbsent@53 (line 1204)
             │  │                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
             │  │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f154403c7f0::accept@17
             │  │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
             │  │                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
             │  │                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
             │  │                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
             │  │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.01%     │  │  0x00007f15bedd0d6c:   mov    %esi,%edx
   0.00%     │  │  0x00007f15bedd0d6e:   dec    %edx                         ;*isub {reexecute=0 rethrow=0 return_oop=0}
             │  │                                                            ; - java.util.HashMap::computeIfAbsent@71 (line 1207)
             │  │                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
             │  │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f154403c7f0::accept@17
             │  │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
             │  │                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
             │  │                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
             │  │                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
             │  │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
             │  │  0x00007f15bedd0d70:   and    %ebp,%edx                    ;*iand {reexecute=0 rethrow=0 return_oop=0}
             │  │                                                            ; - java.util.HashMap::computeIfAbsent@73 (line 1207)
             │  │                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
             │  │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f154403c7f0::accept@17
             │  │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
             │  │                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
             │  │                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
             │  │                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
             │  │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.48%     │  │  0x00007f15bedd0d72:   cmp    %edx,%esi
             │  │  0x00007f15bedd0d74:   jbe    0x00007f15bedd391f
   0.04%     │  │  0x00007f15bedd0d7a:   mov    0x10(%r8,%rdx,4),%ecx        ;*aaload {reexecute=0 rethrow=0 return_oop=0}
             │  │                                                            ; - java.util.HashMap::computeIfAbsent@77 (line 1207)
             │  │                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
             │  │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f154403c7f0::accept@17
             │  │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
             │  │                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
             │  │                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
             │  │                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
             │  │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.64%     │  │  0x00007f15bedd0d7f:   mov    0x40(%rsp),%r10d
             │  │  0x00007f15bedd0d84:   mov    %r8,0x18(%rsp)               ; ImmutableOopMap {rcx=NarrowOop rbx=NarrowOop r8=Oop r10=NarrowOop [24]=Oop [40]=Oop [48]=Oop [60]=NarrowOop [64]=NarrowOop [68]=NarrowOop [72]=Oop [80]=Oop [92]=NarrowOop [96]=Oop [104]=Oop [112]=Oop [120]=NarrowOop [124]=NarrowOop [128]=Oop [136]=Oop [144]=Oop [156]=NarrowOop [160]=Oop }
             │  │                                                            ;*aload {reexecute=1 rethrow=0 return_oop=0}
             │  │                                                            ; - (reexecute) java.util.HashMap::computeIfAbsent@66 (line 1207)
             │  │                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
             │  │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f154403c7f0::accept@17
             │  │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
             │  │                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
             │  │                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
             │  │                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
             │  │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.40%     │  │  0x00007f15bedd0d89:   cmpl   $0x103bf30,0x8(,%r10,8)      ; implicit exception: dispatches to 0x00007f15bedd42f0
             │  │                                                            ;   {metadata(&apos;java/util/stream/Collectors$$Lambda+0x00007f154403bf30&apos;)}
   0.12%     │  │  0x00007f15bedd0d95:   jne    0x00007f15bedd3d9b           ;*invokeinterface accept {reexecute=0 rethrow=0 return_oop=0}
             │  │                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@37 (line 1107)
             │  │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f154403c7f0::accept@17
             │  │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
             │  │                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
             │  │                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
             │  │                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
             │  │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
             │  │  0x00007f15bedd0d9b:   mov    0x18(,%rbx,8),%r11d          ;*getfield modCount {reexecute=0 rethrow=0 return_oop=0}
             │  │                                                            ; - java.util.HashMap::computeIfAbsent@195 (line 1227)
             │  │                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
             │  │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f154403c7f0::accept@17
             │  │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
             │  │                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
             │  │                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
             │  │                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
             │  │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.36%     │  │  0x00007f15bedd0da3:   mov    %r11d,0xb0(%rsp)
             │  │  0x00007f15bedd0dab:   mov    %ecx,%r13d
   0.08%     │  │  0x00007f15bedd0dae:   shl    $0x3,%r13                    ;*aaload {reexecute=0 rethrow=0 return_oop=0}
             │  │                                                            ; - java.util.HashMap::computeIfAbsent@77 (line 1207)
             │  │                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
             │  │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f154403c7f0::accept@17
             │  │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
             │  │                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
             │  │                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
             │  │                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
             │  │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
             │  │  0x00007f15bedd0db2:   test   %ecx,%ecx
             │  │  0x00007f15bedd0db4:   je     0x00007f15bedd1585           ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
             │  │                                                            ; - java.util.HashMap::computeIfAbsent@81 (line 1207)
             │  │                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
             │  │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f154403c7f0::accept@17
             │  │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
             │  │                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
             │  │                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
             │  │                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
             │  │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.42%     │  │  0x00007f15bedd0dba:   nopw   0x0(%rax,%rax,1)
             │  │  0x00007f15bedd0dc0:   cmpl   $0x1a8490,0x8(,%rcx,8)       ;   {metadata(&apos;java/util/HashMap$TreeNode&apos;)}
   4.62%     │  │  0x00007f15bedd0dcb:   je     0x00007f15bedd3772           ;*aastore {reexecute=0 rethrow=0 return_oop=0}
             │  │                                                            ; - java.util.HashMap::computeIfAbsent@289 (line 1240)
             │  │                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
             │  │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f154403c7f0::accept@17
             │  │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
             │  │                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
             │  │                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
             │  │                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
             │  │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.46%     │  │  0x00007f15bedd0dd1:   mov    %r13,%rdi
             │  │  0x00007f15bedd0dd4:   mov    $0x0,%r14d
             │╭ │  0x00007f15bedd0dda:   jmp    0x00007f15bedd0e04           ;*aload {reexecute=0 rethrow=0 return_oop=0}
             ││ │                                                            ; - java.util.HashMap::computeIfAbsent@114 (line 1213)
             ││ │                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
             ││ │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f154403c7f0::accept@17
             ││ │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
             ││ │                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
             ││ │                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
             ││ │                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
             ││ │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
             ││ │  0x00007f15bedd0ddf:   nop                                 ;*getfield hash {reexecute=0 rethrow=0 return_oop=0}
             ││ │                                                            ; - java.util.HashMap::computeIfAbsent@116 (line 1213)
             ││ │                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
             ││ │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f154403c7f0::accept@17
             ││ │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
             ││ │                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
             ││ │                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
             ││ │                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
             ││ │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   1.05%     ││↗│  0x00007f15bedd0de0:   mov    0x18(%rdi),%esi              ;*getfield next {reexecute=0 rethrow=0 return_oop=0}
             ││││                                                            ; - java.util.HashMap::computeIfAbsent@160 (line 1219)
             ││││                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
             ││││                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f154403c7f0::accept@17
             ││││                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
             ││││                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
             ││││                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
             ││││                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
             ││││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   1.49%     ││││  0x00007f15bedd0de3:   mov    %r14d,%r9d
   0.00%     ││││  0x00007f15bedd0de6:   inc    %r9d                         ;*iinc {reexecute=0 rethrow=0 return_oop=0}
             ││││                                                            ; - java.util.HashMap::computeIfAbsent@155 (line 1218)
             ││││                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
             ││││                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f154403c7f0::accept@17
             ││││                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
             ││││                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
             ││││                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
             ││││                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
             ││││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.01%     ││││  0x00007f15bedd0de9:   test   %esi,%esi
             ││││  0x00007f15bedd0deb:   je     0x00007f15bedd137e           ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
             ││││                                                            ; - java.util.HashMap::computeIfAbsent@166 (line 1219)
             ││││                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
             ││││                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f154403c7f0::accept@17
             ││││                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
             ││││                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
             ││││                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
             ││││                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
             ││││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.14%     ││││  0x00007f15bedd0df1:   mov    0x458(%r15),%rax             ; ImmutableOopMap {rcx=NarrowOop rsi=NarrowOop rdi=Oop r8=Oop r10=NarrowOop r13=Oop [24]=Oop [40]=Oop [48]=Oop [60]=NarrowOop [64]=NarrowOop [68]=NarrowOop [72]=Oop [80]=Oop [92]=NarrowOop [96]=Oop [104]=Oop [112]=Oop [120]=NarrowOop [124]=NarrowOop [128]=Oop [136]=Oop [144]=Oop [156]=NarrowOop [160]=Oop }
             ││││                                                            ;*aload {reexecute=1 rethrow=0 return_oop=0}
             ││││                                                            ; - (reexecute) java.util.HashMap::computeIfAbsent@114 (line 1213)
             ││││                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
             ││││                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f154403c7f0::accept@17
             ││││                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
             ││││                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
             ││││                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
             ││││                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
             ││││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.06%     ││││  0x00007f15bedd0df8:   test   %eax,(%rax)                  ;   {poll}
   0.58%     ││││  0x00007f15bedd0dfa:   shl    $0x3,%rsi                    ;*getfield next {reexecute=0 rethrow=0 return_oop=0}
             ││││                                                            ; - java.util.HashMap::computeIfAbsent@160 (line 1219)
             ││││                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
             ││││                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f154403c7f0::accept@17
             ││││                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
             ││││                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
             ││││                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
             ││││                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
             ││││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.00%     ││││  0x00007f15bedd0dfe:   mov    %rsi,%rdi
   0.02%     ││││  0x00007f15bedd0e01:   mov    %r9d,%r14d                   ; ImmutableOopMap {rcx=NarrowOop rdi=Oop r8=Oop r10=NarrowOop r13=Oop [24]=Oop [40]=Oop [48]=Oop [60]=NarrowOop [64]=NarrowOop [68]=NarrowOop [72]=Oop [80]=Oop [92]=NarrowOop [96]=Oop [104]=Oop [112]=Oop [120]=NarrowOop [124]=NarrowOop [128]=Oop [136]=Oop [144]=Oop [156]=NarrowOop [160]=Oop }
             ││││                                                            ;*aload {reexecute=1 rethrow=0 return_oop=0}
             ││││                                                            ; - (reexecute) java.util.HashMap::computeIfAbsent@114 (line 1213)
             ││││                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
             ││││                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f154403c7f0::accept@17
             ││││                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
             ││││                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
             ││││                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
             ││││                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
             ││││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.05%     │↘││  0x00007f15bedd0e04:   mov    0xc(%rdi),%esi               ; implicit exception: dispatches to 0x00007f15bedd4313
   4.34%     │ ││  0x00007f15bedd0e07:   mov    0x10(%rdi),%r9d              ;*getfield key {reexecute=0 rethrow=0 return_oop=0}
             │ ││                                                            ; - java.util.HashMap::computeIfAbsent@125 (line 1213)
             │ ││                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
             │ ││                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f154403c7f0::accept@17
             │ ││                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
             │ ││                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
             │ ││                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
             │ ││                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
             │ ││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.61%     │ ││  0x00007f15bedd0e0b:   mov    0x14(%rdi),%eax              ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
             │ ││                                                            ; - java.util.HashMap::computeIfAbsent@176 (line 1222)
             │ ││                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
             │ ││                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f154403c7f0::accept@17
             │ ││                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
             │ ││                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
             │ ││                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
             │ ││                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
             │ ││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.38%     │ ││  0x00007f15bedd0e0e:   cmp    %ebp,%esi
             │ ╰│  0x00007f15bedd0e10:   jne    0x00007f15bedd0de0           ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
             │  │                                                            ; - java.util.HashMap::computeIfAbsent@120 (line 1213)
             │  │                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
             │  │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f154403c7f0::accept@17
             │  │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
             │  │                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
             │  │                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
             │  │                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
             │  │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.39%     │  │  0x00007f15bedd0e12:   cmp    0x5c(%rsp),%r9d
             │  │  0x00007f15bedd0e17:   je     0x00007f15bedd3fae           ;*if_acmpeq {reexecute=0 rethrow=0 return_oop=0}
             │  │                                                            ; - java.util.HashMap::computeIfAbsent@132 (line 1213)
             │  │                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
             │  │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f154403c7f0::accept@17
             │  │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
             │  │                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
             │  │                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
             │  │                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
             │  │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.74%     │  │  0x00007f15bedd0e1d:   mov    0x5c(%rsp),%ecx
             │  │  0x00007f15bedd0e21:   cmpl   $0x102b2c0,0x8(,%rcx,8)      ;   {metadata(&apos;com/ionutbalosin/jvm/performance/benchmarks/miscellaneous/publicationstatistics/model/Author&apos;)}
   0.30%     │  │  0x00007f15bedd0e2c:   jne    0x00007f15bedd3a65           ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
             │  │                                                            ; - java.util.HashMap::computeIfAbsent@142 (line 1214)
             │  │                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
             │  │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f154403c7f0::accept@17
             │  │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
             │  │                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
             │  │                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
             │  │                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
             │  │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.34%     │  │  0x00007f15bedd0e32:   cmp    %ecx,%r9d
             │  │  0x00007f15bedd0e35:   je     0x00007f15bedd3c52           ;*if_acmpne {reexecute=0 rethrow=0 return_oop=0}
             │  │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.model.Author::equals@2 (line 45)
             │  │                                                            ; - java.util.HashMap::computeIfAbsent@142 (line 1214)
             │  │                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
             │  │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f154403c7f0::accept@17
             │  │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
             │  │                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
             │  │                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
             │  │                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
             │  │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.01%     │  │  0x00007f15bedd0e3b:   nopl   0x0(%rax,%rax,1)             ; ImmutableOopMap {rax=NarrowOop rcx=NarrowOop rdi=Oop r8=Oop r9=NarrowOop r10=NarrowOop r13=Oop [40]=Oop [48]=Oop [72]=Oop [80]=Oop [96]=Oop [104]=Oop [112]=Oop [120]=NarrowOop [124]=NarrowOop [128]=Oop [136]=Oop [144]=Oop [156]=NarrowOop [160]=Oop }
             │  │                                                            ;*aload {reexecute=1 rethrow=0 return_oop=0}
             │  │                                                            ; - (reexecute) java.util.HashMap::computeIfAbsent@114 (line 1213)
             │  │                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
             │  │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f154403c7f0::accept@17
             │  │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
             │  │                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
             │  │                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
             │  │                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
             │  │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.06%     │  │  0x00007f15bedd0e40:   cmpl   $0x102b2c0,0x8(,%r9,8)       ; implicit exception: dispatches to 0x00007f15bedd4336
             │  │                                                            ;   {metadata(&apos;com/ionutbalosin/jvm/performance/benchmarks/miscellaneous/publicationstatistics/model/Author&apos;)}
   9.89%     │  │  0x00007f15bedd0e4c:   jne    0x00007f15bedd4057           ;*if_acmpeq {reexecute=0 rethrow=0 return_oop=0}
             │  │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.model.Author::equals@19 (line 46)
             │  │                                                            ; - java.util.HashMap::computeIfAbsent@142 (line 1214)
             │  │                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
             │  │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f154403c7f0::accept@17
             │  │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
             │  │                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
             │  │                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
             │  │                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
             │  │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.41%     │  │  0x00007f15bedd0e52:   mov    0xc(,%rcx,8),%esi            ;*getfield name {reexecute=0 rethrow=0 return_oop=0}
             │  │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.model.Author::equals@30 (line 48)
             │  │                                                            ; - java.util.HashMap::computeIfAbsent@142 (line 1214)
             │  │                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
             │  │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f154403c7f0::accept@17
             │  │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
             │  │                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
             │  │                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
             │  │                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
             │  │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.00%     │  │  0x00007f15bedd0e59:   mov    0xc(,%r9,8),%ecx             ;*getfield name {reexecute=0 rethrow=0 return_oop=0}
             │  │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.model.Author::equals@34 (line 48)
             │  │                                                            ; - java.util.HashMap::computeIfAbsent@142 (line 1214)
             │  │                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
             │  │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f154403c7f0::accept@17
             │  │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
             │  │                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
             │  │                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
             │  │                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
             │  │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.44%     │  │  0x00007f15bedd0e61:   cmp    %esi,%ecx
             │  │  0x00007f15bedd0e63:   je     0x00007f15bedd109f           ; ImmutableOopMap {rax=NarrowOop rcx=NarrowOop rsi=NarrowOop rdi=Oop r8=Oop r10=NarrowOop r13=Oop [40]=Oop [48]=Oop [72]=Oop [80]=Oop [96]=Oop [104]=Oop [112]=Oop [120]=NarrowOop [124]=NarrowOop [128]=Oop [136]=Oop [144]=Oop [156]=NarrowOop [160]=Oop }
             │  │                                                            ;*aload {reexecute=1 rethrow=0 return_oop=0}
             │  │                                                            ; - (reexecute) java.util.HashMap::computeIfAbsent@114 (line 1213)
             │  │                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
             │  │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f154403c7f0::accept@17
             │  │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
             │  │                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
             │  │                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
             │  │                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
             │  │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.47%     │  │  0x00007f15bedd0e69:   movsbl 0x10(,%rsi,8),%r9d           ; implicit exception: dispatches to 0x00007f15bedd4359
   0.03%     │  │  0x00007f15bedd0e72:   mov    0x14(,%rsi,8),%r11d          ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
             │  │                                                            ; - java.lang.String::equals@0 (line 1858)
             │  │                                                            ; - java.util.Objects::equals@11 (line 64)
             │  │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.model.Author::equals@37 (line 48)
             │  │                                                            ; - java.util.HashMap::computeIfAbsent@142 (line 1214)
             │  │                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
             │  │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f154403c7f0::accept@17
             │  │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
             │  │                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
             │  │                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
             │  │                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
             │  │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.00%     │  │  0x00007f15bedd0e7a:   nopw   0x0(%rax,%rax,1)
   0.00%     │  │  0x00007f15bedd0e80:   cmp    %esi,%ecx
             │  │  0x00007f15bedd0e82:   je     0x00007f15bedd1319           ; ImmutableOopMap {rax=NarrowOop rcx=NarrowOop rdi=Oop r8=Oop r10=NarrowOop r11=NarrowOop r13=Oop [40]=Oop [48]=Oop [72]=Oop [80]=Oop [96]=Oop [104]=Oop [112]=Oop [120]=NarrowOop [124]=NarrowOop [128]=Oop [136]=Oop [144]=Oop [156]=NarrowOop [160]=Oop }
             │  │                                                            ;*aload {reexecute=1 rethrow=0 return_oop=0}
             │  │                                                            ; - (reexecute) java.util.HashMap::computeIfAbsent@114 (line 1213)
             │  │                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
             │  │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f154403c7f0::accept@17
             │  │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
             │  │                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
             │  │                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
             │  │                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
             │  │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.51%     │  │  0x00007f15bedd0e88:   movsbl 0x10(,%rcx,8),%esi           ; implicit exception: dispatches to 0x00007f15bedd437c
   3.85%     │  │  0x00007f15bedd0e90:   mov    0x14(,%rcx,8),%ecx           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
             │  │                                                            ; - java.lang.String::equals@0 (line 1858)
             │  │                                                            ; - java.util.Objects::equals@11 (line 64)
             │  │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.model.Author::equals@37 (line 48)
             │  │                                                            ; - java.util.HashMap::computeIfAbsent@142 (line 1214)
             │  │                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
             │  │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f154403c7f0::accept@17
             │  │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
             │  │                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
             │  │                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
             │  │                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
             │  │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.86%     │  │  0x00007f15bedd0e97:   cmp    %r9b,%sil
             │  │  0x00007f15bedd0e9a:   jne    0x00007f15bedd409c           ; ImmutableOopMap {rax=NarrowOop rcx=NarrowOop rdi=Oop r8=Oop r10=NarrowOop r11=NarrowOop r13=Oop [40]=Oop [48]=Oop [72]=Oop [80]=Oop [96]=Oop [104]=Oop [112]=Oop [120]=NarrowOop [124]=NarrowOop [128]=Oop [136]=Oop [144]=Oop [156]=NarrowOop [160]=Oop }
             │  │                                                            ;*aload {reexecute=1 rethrow=0 return_oop=0}
             │  │                                                            ; - (reexecute) java.util.HashMap::computeIfAbsent@114 (line 1213)
             │  │                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
             │  │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f154403c7f0::accept@17
             │  │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
             │  │                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
             │  │                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
             │  │                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
             │  │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.20%     │  │  0x00007f15bedd0ea0:   mov    0xc(,%rcx,8),%r9d            ; implicit exception: dispatches to 0x00007f15bedd439f
             │  │                                                            ; ImmutableOopMap {rax=NarrowOop rcx=NarrowOop rdi=Oop r8=Oop r10=NarrowOop r11=NarrowOop r13=Oop [40]=Oop [48]=Oop [72]=Oop [80]=Oop [96]=Oop [104]=Oop [112]=Oop [120]=NarrowOop [124]=NarrowOop [128]=Oop [136]=Oop [144]=Oop [156]=NarrowOop [160]=Oop }
             │  │                                                            ;*aload {reexecute=1 rethrow=0 return_oop=0}
             │  │                                                            ; - (reexecute) java.util.HashMap::computeIfAbsent@114 (line 1213)
             │  │                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
             │  │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f154403c7f0::accept@17
             │  │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
             │  │                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
             │  │                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
             │  │                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
             │  │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   3.28%     │  │  0x00007f15bedd0ea8:   cmp    0xc(,%r11,8),%r9d            ; implicit exception: dispatches to 0x00007f15bedd43c2
             │  │  0x00007f15bedd0eb0:   jne    0x00007f15bedd3bc5
   0.45%     │  │  0x00007f15bedd0eb6:   test   %r9d,%r9d
             │  │  0x00007f15bedd0eb9:   je     0x00007f15bedd1335
   0.37%     │  │  0x00007f15bedd0ebf:   mov    %eax,%ebx
   0.03%     │  │  0x00007f15bedd0ec1:   mov    %rdi,0x8(%rsp)
             │  │  0x00007f15bedd0ec6:   mov    %r14d,0xb4(%rsp)
   0.08%     │  │  0x00007f15bedd0ece:   shl    $0x3,%rcx
   0.39%     │  │  0x00007f15bedd0ed2:   shl    $0x3,%r11
   0.03%     │  │  0x00007f15bedd0ed6:   mov    %rcx,%rsi
             │  │  0x00007f15bedd0ed9:   mov    %edx,%eax
   0.06%     │  │  0x00007f15bedd0edb:   mov    $0x10,%rdx
   0.39%     │  │  0x00007f15bedd0ee2:   mov    %r11,%rcx
   0.04%     │  │  0x00007f15bedd0ee5:   mov    %r8,%r11
             │  │  0x00007f15bedd0ee8:   mov    $0x10,%r8                    ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
             │  │                                                            ; - java.lang.String::equals@0 (line 1858)
             │  │                                                            ; - java.util.Objects::equals@11 (line 64)
             │  │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.model.Author::equals@37 (line 48)
             │  │                                                            ; - java.util.HashMap::computeIfAbsent@142 (line 1214)
             │  │                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
             │  │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f154403c7f0::accept@17
             │  │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
             │  │                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
             │  │                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
             │  │                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
             │  │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.06%     │  │  0x00007f15bedd0eef:   mov    %eax,%ebp
   0.38%     │  │  0x00007f15bedd0ef1:   mov    %r10d,%r14d
   0.05%     │  │  0x00007f15bedd0ef4:   call   0x00007f15be8edc00           ;   {runtime_call Stub&lt;IntrinsicStubsGen.arrayRegionEqualsS1S1&gt;}
   0.50%     │  │  0x00007f15bedd0ef9:   nop
             │  │  0x00007f15bedd0efa:   nopw   0x0(%rax,%rax,1)
             │  │  0x00007f15bedd0f00:   test   %eax,%eax
             │  │  0x00007f15bedd0f02:   je     0x00007f15bedd3e6d           ; ImmutableOopMap {rbx=NarrowOop r11=Oop r13=Oop r14=NarrowOop [8]=Oop [40]=Oop [48]=Oop [72]=Oop [80]=Oop [96]=Oop [104]=Oop [112]=Oop [120]=NarrowOop [124]=NarrowOop [128]=Oop [136]=Oop [144]=Oop [156]=NarrowOop [160]=Oop }
             │  │                                                            ;*aload {reexecute=1 rethrow=0 return_oop=0}
             │  │                                                            ; - (reexecute) java.util.HashMap::computeIfAbsent@148 (line 1215)
             │  │                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
             │  │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f154403c7f0::accept@17
             │  │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
             │  │                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
             │  │                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
             │  │                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
             │  │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.02%     │  │  0x00007f15bedd0f08:   cmpl   $0x2a80,0x8(,%rbx,8)         ; implicit exception: dispatches to 0x00007f15bedd43e5
             │  │                                                            ;   {metadata({type array long})}
   0.53%     │  │  0x00007f15bedd0f13:   jne    0x00007f15bedd3bb9           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
             │  │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f154403bf30::accept@5
             │  │                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@37 (line 1107)
             │  │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f154403c7f0::accept@17
             │  │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
             │  │                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
             │  │                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
             │  │                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
             │  │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.01%     │  │  0x00007f15bedd0f19:   mov    0xc(,%r14,8),%esi            ; ImmutableOopMap {rbx=NarrowOop r11=Oop r13=Oop [8]=Oop [40]=Oop [48]=Oop [72]=Oop [80]=Oop [96]=Oop [104]=Oop [112]=Oop [120]=NarrowOop [124]=NarrowOop [128]=Oop [136]=Oop [144]=Oop [156]=NarrowOop [160]=Oop }
             │  │                                                            ;*aload {reexecute=1 rethrow=0 return_oop=0}
             │  │                                                            ; - (reexecute) java.util.HashMap::computeIfAbsent@148 (line 1215)
             │  │                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
             │  │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f154403c7f0::accept@17
             │  │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
             │  │                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
             │  │                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
             │  │                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
             │  │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
             │  │  0x00007f15bedd0f21:   cmpl   $0x103bb00,0x8(,%rsi,8)      ; implicit exception: dispatches to 0x00007f15bedd4408
             │  │                                                            ;   {metadata(&apos;java/util/stream/Collectors$$Lambda+0x00007f154403bb00&apos;)}
   0.48%     │  │  0x00007f15bedd0f2c:   jne    0x00007f15bedd4091           ;*invokeinterface applyAsLong {reexecute=0 rethrow=0 return_oop=0}
             │  │                                                            ; - java.util.stream.Collectors::lambda$summingLong$23@6 (line 662)
             │  │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f154403bf30::accept@9
             │  │                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@37 (line 1107)
             │  │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f154403c7f0::accept@17
             │  │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
             │  │                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
             │  │                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
             │  │                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
             │  │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.02%     │  │  0x00007f15bedd0f32:   cmpl   $0x0,0xc(,%rbx,8)
   0.47%     │  │  0x00007f15bedd0f3a:   je     0x00007f15bedd37b9
   0.01%     │  │  0x00007f15bedd0f40:   incq   0x10(,%rbx,8)                ;*lastore {reexecute=0 rethrow=0 return_oop=0}
             │  │                                                            ; - java.util.stream.Collectors::lambda$summingLong$23@12 (line 662)
             │  │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f154403bf30::accept@9
             │  │                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@37 (line 1107)
             │  │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f154403c7f0::accept@17
             │  │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
             │  │                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
             │  │                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
             │  │                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
             │  │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.42%     │  │  0x00007f15bedd0f48:   mov    0xc8(%rsp),%r10d
   0.01%     │  │  0x00007f15bedd0f50:   mov    0x68(%rsp),%rdx
             │  │  0x00007f15bedd0f55:   mov    0xd0(%rsp),%r11d
   0.47%     │  │  0x00007f15bedd0f5d:   mov    0x7c(%rsp),%r9d
   0.00%     │  │  0x00007f15bedd0f62:   movabs $0x7f154403c7f0,%rsi         ;   {metadata(&apos;java/util/stream/Collectors$$Lambda+0x00007f154403c7f0&apos;)}
   0.01%     │  ╰  0x00007f15bedd0f6c:   jmp    0x00007f15bedd0c00           ;*iload_2 {reexecute=0 rethrow=0 return_oop=0}
             │                                                               ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@81 (line 1706)
             │                                                               ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
             │                                                               ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
             │                                                               ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
             ↘     0x00007f15bedd0f71:   mov    %r10d,0xc4(%rsp)
                   0x00007f15bedd0f79:   movabs $0x7f1544069340,%rbp         ;   {metadata(&apos;java/util/stream/Collectors$$Lambda+0x00007f1544069340&apos;)}
                   0x00007f15bedd0f83:   cmp    %r8,%rbp
                   0x00007f15bedd0f86:   jne    0x00007f15bedd3ffa           ; ImmutableOopMap {rcx=NarrowOop rbx=NarrowOop [72]=Oop [80]=Oop [92]=NarrowOop [96]=Oop [104]=Oop [112]=Oop [120]=NarrowOop [124]=NarrowOop [128]=Oop [136]=Oop [144]=Oop [156]=NarrowOop [160]=Oop }
                                                                             ;*iload_2 {reexecute=1 rethrow=0 return_oop=0}
                                                                             ; - (reexecute) java.util.ArrayList$ArrayListSpliterator::forEachRemaining@81 (line 1706)
....................................................................................................
  80.79%  <total for region 1>

....[Hottest Regions]...............................................................................
  80.79%       jvmci, level 4  java.util.HashMap$KeySpliterator::forEachRemaining, version 4, compile id 1326 
   6.66%       jvmci, level 4  com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.model.Author::hashCode, version 3, compile id 1279 
   4.79%                       <unknown> 
   1.66%       jvmci, level 4  java.util.HashMap$KeySpliterator::forEachRemaining, version 4, compile id 1326 
   1.48%                       <unknown> 
   1.48%       jvmci, level 4  com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.model.Author::hashCode, version 3, compile id 1279 
   0.67%                       <unknown> 
   0.37%               kernel  [unknown] 
   0.20%               kernel  [unknown] 
   0.10%               kernel  [unknown] 
   0.08%               kernel  [unknown] 
   0.07%               kernel  [unknown] 
   0.06%               kernel  [unknown] 
   0.05%               kernel  [unknown] 
   0.04%               kernel  [unknown] 
   0.04%               kernel  [unknown] 
   0.04%       jvmci, level 4  java.util.HashMap$KeySpliterator::forEachRemaining, version 4, compile id 1326 
   0.03%               kernel  [unknown] 
   0.03%            libjvm.so  G1CardSet::occupied 
   0.02%       jvmci, level 4  java.util.HashMap::replaceAll, version 5, compile id 1346 
   1.36%  <...other 416 warm regions...>
....................................................................................................
 100.00%  <totals>

....[Hottest Methods (after inlining)]..............................................................
  82.56%       jvmci, level 4  java.util.HashMap$KeySpliterator::forEachRemaining, version 4, compile id 1326 
   8.14%       jvmci, level 4  com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.model.Author::hashCode, version 3, compile id 1279 
   7.00%                       <unknown> 
   1.74%               kernel  [unknown] 
   0.04%       jvmci, level 4  java.util.HashMap$EntrySpliterator::forEachRemaining, version 4, compile id 1347 
   0.03%       jvmci, level 4  java.util.HashMap::replaceAll, version 5, compile id 1346 
   0.03%            libjvm.so  G1CardSet::occupied 
   0.02%         libc-2.31.so  __vfprintf_internal 
   0.01%            libjvm.so  defaultStream::write 
   0.01%         libc-2.31.so  _IO_default_xsputn 
   0.01%            libjvm.so  StatSamplerTask::task 
   0.01%            libjvm.so  xmlStream::write_text 
   0.01%            libjvm.so  ElfSymbolTable::lookup 
   0.01%            libjvm.so  G1ParScanThreadState::trim_queue_to_threshold 
   0.01%            libjvm.so  decode_env::print_hook_comments 
   0.01%         libc-2.31.so  __strchr_avx2 
   0.01%            libjvm.so  fileStream::write 
   0.01%         libc-2.31.so  __strchrnul_avx2 
   0.01%            libjvm.so  G1ConcurrentRefine::RemSetSamplingClosure::do_heap_region 
   0.01%         libc-2.31.so  _IO_fwrite 
   0.34%  <...other 137 warm methods...>
....................................................................................................
 100.00%  <totals>

....[Distribution by Source]........................................................................
  90.77%       jvmci, level 4
   7.00%                     
   1.74%               kernel
   0.28%            libjvm.so
   0.09%         libc-2.31.so
   0.05%  libjvmcicompiler.so
   0.02%       hsdis-amd64.so
   0.02%   libpthread-2.31.so
   0.01%          c1, level 3
   0.01%          interpreter
   0.00%           ld-2.31.so
   0.00%     Unknown, level 0
....................................................................................................
 100.00%  <totals>



# JMH version: 1.37
# VM version: JDK 21, Java HotSpot(TM) 64-Bit Server VM, 21+35-jvmci-23.1-b15
# VM invoker: /home/gogu/bench_jdks/graalvm-jdk-21+35.1/bin/java
# VM options: -XX:ThreadPriorityPolicy=1 -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCIProduct -XX:-UnlockExperimentalVMOptions -Xms4g -Xmx4g -XX:+AlwaysPreTouch
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark.authors_with_no_duplicate_collaborations

# Run progress: 7.14% complete, ETA 00:25:38
# Fork: 1 of 1
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 160.180 ms/op
# Warmup Iteration   2: 63.153 ms/op
# Warmup Iteration   3: 61.862 ms/op
# Warmup Iteration   4: 62.041 ms/op
# Warmup Iteration   5: 61.803 ms/op
Iteration   1: 61.757 ms/op
Iteration   2: 62.118 ms/op
Iteration   3: 61.603 ms/op
Iteration   4: 61.778 ms/op
Iteration   5: 62.821 ms/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark.authors_with_no_duplicate_collaborations":
  62.015 ±(99.9%) 1.878 ms/op [Average]
  (min, avg, max) = (61.603, 62.015, 62.821), stdev = 0.488
  CI (99.9%): [60.137, 63.894] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark.authors_with_no_duplicate_collaborations:asm":
PrintAssembly processed: 364362 total address lines.
Perf output processed (skipped 62.813 seconds):
 Column 1: cycles (50943 events)

Hottest code regions (>10.00% "cycles" events):
 Event counts are percents of total event count.

....[Hottest Region 1]..............................................................................
jvmci, level 4, java.util.ArrayList$ArrayListSpliterator::forEachRemaining, version 7, compile id 1306 

              # parm0:    rdx:rdx   = &apos;java/util/function/Consumer&apos;
              #           [sp+0xe0]  (sp of caller)
              0x00007fd3aadc5c80:   mov    0x8(%rsi),%r10d              ;   {no_reloc}
              0x00007fd3aadc5c84:   movabs $0x7fd32f000000,%r12
              0x00007fd3aadc5c8e:   add    %r12,%r10
              0x00007fd3aadc5c91:   xor    %r12,%r12
              0x00007fd3aadc5c94:   cmp    %r10,%rax
              0x00007fd3aadc5c97:   jne    0x00007fd3aa764080           ;   {runtime_call ic_miss_stub}
              0x00007fd3aadc5c9d:   data16 xchg %ax,%ax
            [Verified Entry Point]
   0.00%      0x00007fd3aadc5ca0:   mov    %eax,-0x14000(%rsp)
   0.06%      0x00007fd3aadc5ca7:   sub    $0xd8,%rsp
              0x00007fd3aadc5cae:   xchg   %ax,%ax
              0x00007fd3aadc5cb0:   cmpl   $0x1,0x20(%r15)
   0.04%      0x00007fd3aadc5cb8:   jne    0x00007fd3aadc866c
              0x00007fd3aadc5cbe:   mov    %rbp,0xd0(%rsp)
              0x00007fd3aadc5cc6:   mov    %rsi,0x90(%rsp)
              0x00007fd3aadc5cce:   mov    %rdx,0x88(%rsp)              ; ImmutableOopMap {rdx=Oop rsi=Oop [136]=Oop [144]=Oop }
                                                                        ;*aload_1 {reexecute=1 rethrow=0 return_oop=0}
                                                                        ; - (reexecute) java.util.ArrayList$ArrayListSpliterator::forEachRemaining@0 (line 1696)
   0.08%      0x00007fd3aadc5cd6:   test   %eax,(%rdx)                  ; implicit exception: dispatches to 0x00007fd3aadc8693
   0.00%      0x00007fd3aadc5cd8:   nopl   0x0(%rax,%rax,1)
              0x00007fd3aadc5ce0:   cmpl   $0x0,0x10(%rsi)
   0.00%      0x00007fd3aadc5ce4:   jge    0x00007fd3aadc8096           ;*ifge {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@31 (line 1699)
   0.06%      0x00007fd3aadc5cea:   mov    0xc(%rsi),%ecx               ;*getfield index {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@61 (line 1705)
   0.01%      0x00007fd3aadc5ced:   test   %ecx,%ecx
              0x00007fd3aadc5cef:   jl     0x00007fd3aadc85d2           ;*iflt {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@66 (line 1705)
              0x00007fd3aadc5cf5:   data16 data16 nopw 0x0(%rax,%rax,1)
   0.00%      0x00007fd3aadc5d00:   cmpl   $0x256d70,0x8(%rdx)          ;   {metadata(&apos;java/util/stream/ReduceOps$3ReducingSink&apos;)}
   0.07%      0x00007fd3aadc5d07:   jne    0x00007fd3aadc8517           ;*invokeinterface accept {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
              0x00007fd3aadc5d0d:   mov    0x18(%rsi),%r10d             ; ImmutableOopMap {rdx=Oop rsi=Oop r10=NarrowOop [136]=Oop [144]=Oop }
                                                                        ;*aload_1 {reexecute=1 rethrow=0 return_oop=0}
                                                                        ; - (reexecute) java.util.ArrayList$ArrayListSpliterator::forEachRemaining@0 (line 1696)
              0x00007fd3aadc5d11:   mov    0x14(,%r10,8),%r11d          ; implicit exception: dispatches to 0x00007fd3aadc86b6
   0.21%      0x00007fd3aadc5d19:   mov    0x10(,%r10,8),%ebp           ;*getfield size {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@47 (line 1701)
   0.07%      0x00007fd3aadc5d21:   mov    %ebp,0xc4(%rsp)
   0.02%      0x00007fd3aadc5d28:   mov    0xc(,%r10,8),%r13d           ;*getfield modCount {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@38 (line 1700)
              0x00007fd3aadc5d30:   mov    %r13d,0xc0(%rsp)             ; ImmutableOopMap {rdx=Oop rsi=Oop r11=NarrowOop [136]=Oop [144]=Oop }
                                                                        ;*aload_1 {reexecute=1 rethrow=0 return_oop=0}
                                                                        ; - (reexecute) java.util.ArrayList$ArrayListSpliterator::forEachRemaining@0 (line 1696)
   0.00%      0x00007fd3aadc5d38:   mov    0xc(,%r11,8),%r10d           ; implicit exception: dispatches to 0x00007fd3aadc86d9
   0.75%      0x00007fd3aadc5d40:   cmp    %r10d,%ebp
              0x00007fd3aadc5d43:   jg     0x00007fd3aadc8123           ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@78 (line 1705)
   0.03%      0x00007fd3aadc5d49:   cmp    %ecx,%ebp
              0x00007fd3aadc5d4b:   jg     0x00007fd3aadc7ddb           ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@89 (line 1707)
   0.04%      0x00007fd3aadc5d51:   mov    %ebp,0xc(%rsi)               ;*putfield index {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@72 (line 1705)
   0.02%      0x00007fd3aadc5d54:   shl    $0x3,%r11                    ;*getfield elementData {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@16 (line 1698)
              0x00007fd3aadc5d58:   mov    %r11,0x80(%rsp)
              0x00007fd3aadc5d60:   movabs $0x7fd330069340,%r14         ;   {metadata(&apos;java/util/stream/Collectors$$Lambda+0x00007fd330069340&apos;)}
   0.02%      0x00007fd3aadc5d6a:   movabs $0x7ffc0ed28,%rdi            ;   {oop(a &apos;java/lang/Object&apos;{0x00000007ffc0ed28})}
   0.04%      0x00007fd3aadc5d74:   mov    %rdi,0x78(%rsp)
   0.00%      0x00007fd3aadc5d79:   movabs $0x7fd3bcd22000,%r10         ;*aastore {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - java.util.HashMap::computeIfAbsent@289 (line 1240)
                                                                        ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x00007fd33003bae0::accept@17
                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                        ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
              0x00007fd3aadc5d83:   mov    %r10,0xb8(%rsp)
   0.03%      0x00007fd3aadc5d8b:   movabs $0x7fd33003bae0,%r8          ;   {metadata(&apos;java/util/stream/Collectors$$Lambda+0x00007fd33003bae0&apos;)}
   0.04%      0x00007fd3aadc5d95:   mov    %ecx,%r13d
              0x00007fd3aadc5d98:   nopl   0x0(%rax,%rax,1)             ;*iload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@81 (line 1706)
   0.31%      0x00007fd3aadc5da0:   cmp    %r13d,%ebp
              0x00007fd3aadc5da3:   jle    0x00007fd3aadc7d99           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@83 (line 1706)
   0.03%      0x00007fd3aadc5da9:   mov    0x14(%rdx),%ecx              ;*getfield val$accumulator {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@1 (line 169)
                                                                        ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
   0.04%      0x00007fd3aadc5dac:   test   %ecx,%ecx
              0x00007fd3aadc5dae:   je     0x00007fd3aadc6637
   0.00%      0x00007fd3aadc5db4:   mov    0x8(,%rcx,8),%ebx
   0.30%      0x00007fd3aadc5dbb:   movabs $0x7fd32f000000,%rax
   0.03%      0x00007fd3aadc5dc5:   lea    (%rax,%rbx,1),%rbx           ;*invokeinterface accept {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                        ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
   0.04%      0x00007fd3aadc5dc9:   mov    %r13d,0xb4(%rsp)
              0x00007fd3aadc5dd1:   mov    0x10(%r11,%r13,4),%eax       ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@89 (line 1707)
   0.66%      0x00007fd3aadc5dd6:   mov    %eax,0x74(%rsp)
   0.04%      0x00007fd3aadc5dda:   mov    0xc(%rdx),%ebp
   0.04%      0x00007fd3aadc5ddd:   mov    %ebp,%edi
              0x00007fd3aadc5ddf:   shl    $0x3,%rdi                    ;*getfield state {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@5 (line 169)
                                                                        ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
   0.21%      0x00007fd3aadc5de3:   mov    %eax,%r10d
   0.03%      0x00007fd3aadc5de6:   shl    $0x3,%r10                    ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@89 (line 1707)
   0.04%      0x00007fd3aadc5dea:   mov    %r10,0x68(%rsp)
              0x00007fd3aadc5def:   mov    %r13d,%r10d
   0.25%      0x00007fd3aadc5df2:   inc    %r10d                        ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@100 (line 1706)
   0.03%      0x00007fd3aadc5df5:   mov    %r10d,0xb0(%rsp)
   0.04%      0x00007fd3aadc5dfd:   data16 xchg %ax,%ax
              0x00007fd3aadc5e00:   cmp    %rbx,%r8
              0x00007fd3aadc5e03:   jne    0x00007fd3aadc6310           ;*invokeinterface accept {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                        ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
   0.22%      0x00007fd3aadc5e09:   mov    0xc(,%rcx,8),%ebx            ;*getfield arg$1 {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - java.util.stream.Collectors$$Lambda/0x00007fd33003bae0::accept@1
                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                        ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
   0.05%      0x00007fd3aadc5e10:   data16 data16 nopw 0x0(%rax,%rax,1)
   0.04%      0x00007fd3aadc5e1b:   data16 data16 xchg %ax,%ax
              0x00007fd3aadc5e1f:   nop                                 ; ImmutableOopMap {rax=NarrowOop rcx=NarrowOop rdx=Oop rbp=NarrowOop rdi=Oop r11=Oop [104]=Oop [116]=NarrowOop [120]=Oop [128]=Oop [136]=Oop [144]=Oop }
                                                                        ;*iload_2 {reexecute=1 rethrow=0 return_oop=0}
                                                                        ; - (reexecute) java.util.ArrayList$ArrayListSpliterator::forEachRemaining@81 (line 1706)
   0.23%      0x00007fd3aadc5e20:   cmpl   $0x1084000,0x8(,%rbx,8)      ; implicit exception: dispatches to 0x00007fd3aadc86fc
                                                                        ;   {metadata(&apos;com/ionutbalosin/jvm/performance/benchmarks/miscellaneous/publicationstatistics/PublicationStatistics$$Lambda+0x00007fd330084000&apos;)}
   0.09%      0x00007fd3aadc5e2b:   jne    0x00007fd3aadc854b           ;*invokeinterface apply {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - java.util.stream.Collectors::lambda$groupingBy$53@3 (line 1105)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x00007fd33003bae0::accept@17
                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                        ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
   0.00%      0x00007fd3aadc5e31:   data16 data16 nopw 0x0(%rax,%rax,1)
   0.23%      0x00007fd3aadc5e3c:   data16 data16 xchg %ax,%ax          ; ImmutableOopMap {rax=NarrowOop rcx=NarrowOop rdx=Oop rbp=NarrowOop rdi=Oop r11=Oop [104]=Oop [116]=NarrowOop [120]=Oop [128]=Oop [136]=Oop [144]=Oop }
                                                                        ;*iload_2 {reexecute=1 rethrow=0 return_oop=0}
                                                                        ; - (reexecute) java.util.ArrayList$ArrayListSpliterator::forEachRemaining@81 (line 1706)
   0.03%      0x00007fd3aadc5e40:   cmpl   $0x8e280,0x8(,%rbp,8)        ; implicit exception: dispatches to 0x00007fd3aadc871f
                                                                        ;   {metadata(&apos;java/util/HashMap&apos;)}
   0.04%      0x00007fd3aadc5e4b:   jne    0x00007fd3aadc84f5           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - java.util.stream.Collectors$$Lambda/0x00007fd33003bae0::accept@13
                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                        ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
   0.25%      0x00007fd3aadc5e51:   data16 data16 nopw 0x0(%rax,%rax,1)
   0.03%      0x00007fd3aadc5e5c:   data16 data16 xchg %ax,%ax          ; ImmutableOopMap {rax=NarrowOop rcx=NarrowOop rdx=Oop rbp=NarrowOop rdi=Oop r11=Oop [104]=Oop [116]=NarrowOop [120]=Oop [128]=Oop [136]=Oop [144]=Oop }
                                                                        ;*iload_2 {reexecute=1 rethrow=0 return_oop=0}
                                                                        ; - (reexecute) java.util.ArrayList$ArrayListSpliterator::forEachRemaining@81 (line 1706)
   0.03%      0x00007fd3aadc5e60:   cmpl   $0x102b2b0,0x8(,%rax,8)      ; implicit exception: dispatches to 0x00007fd3aadc8742
                                                                        ;   {metadata(&apos;com/ionutbalosin/jvm/performance/benchmarks/miscellaneous/publicationstatistics/model/Author&apos;)}
   6.96%      0x00007fd3aadc5e6b:   jne    0x00007fd3aadc83a8           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics$$Lambda/0x00007fd330084000::apply@1
                                                                        ; - java.util.stream.Collectors::lambda$groupingBy$53@3 (line 1105)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x00007fd33003bae0::accept@17
                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                        ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
   0.08%      0x00007fd3aadc5e71:   mov    0xc(,%rax,8),%ebx            ; ImmutableOopMap {rcx=NarrowOop rdx=Oop rbx=NarrowOop rbp=NarrowOop rdi=Oop [104]=Oop [116]=NarrowOop [120]=Oop [128]=Oop [136]=Oop [144]=Oop }
                                                                        ;*iload_2 {reexecute=1 rethrow=0 return_oop=0}
                                                                        ; - (reexecute) java.util.ArrayList$ArrayListSpliterator::forEachRemaining@81 (line 1706)
   0.21%      0x00007fd3aadc5e78:   mov    0xc(,%rbx,8),%r13d           ; implicit exception: dispatches to 0x00007fd3aadc8765
   1.11%      0x00007fd3aadc5e80:   mov    0x14(,%rcx,8),%r10d          ;*getfield arg$3 {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - java.util.stream.Collectors$$Lambda/0x00007fd33003bae0::accept@9
                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                        ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
   0.17%      0x00007fd3aadc5e88:   mov    %r10d,0x64(%rsp)
   0.00%      0x00007fd3aadc5e8d:   mov    0x10(,%rcx,8),%ecx
              0x00007fd3aadc5e94:   mov    %ecx,0x60(%rsp)
   0.12%      0x00007fd3aadc5e98:   mov    %ecx,%r11d
   0.16%      0x00007fd3aadc5e9b:   shl    $0x3,%r11                    ;*getfield arg$2 {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - java.util.stream.Collectors$$Lambda/0x00007fd33003bae0::accept@5
                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                        ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
              0x00007fd3aadc5e9f:   mov    %r11,0x58(%rsp)
              0x00007fd3aadc5ea4:   mov    %r10d,%r11d
   0.12%      0x00007fd3aadc5ea7:   shl    $0x3,%r11                    ;*getfield arg$3 {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - java.util.stream.Collectors$$Lambda/0x00007fd33003bae0::accept@9
                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                        ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
   0.21%      0x00007fd3aadc5eab:   mov    %ebx,%r10d
   0.00%      0x00007fd3aadc5eae:   shl    $0x3,%r10                    ;*getfield name {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.model.Author::getName@1 (line 40)
                                                                        ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::lambda$authorsWithNoDuplicateCollaborations$7@1 (line 118)
                                                                        ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics$$Lambda/0x00007fd330084000::apply@4
                                                                        ; - java.util.stream.Collectors::lambda$groupingBy$53@3 (line 1105)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x00007fd33003bae0::accept@17
                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                        ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
              0x00007fd3aadc5eb2:   test   %r13d,%r13d
              0x00007fd3aadc5eb5:   je     0x00007fd3aadc65b2           ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - java.lang.String::hashCode@6 (line 2364)
                                                                        ; - java.util.HashMap::hash@9 (line 338)
                                                                        ; - java.util.HashMap::computeIfAbsent@13 (line 1199)
                                                                        ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x00007fd33003bae0::accept@17
                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                        ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
   0.11%      0x00007fd3aadc5ebb:   mov    %r13d,%esi
   0.18%      0x00007fd3aadc5ebe:   mov    %r10,0x50(%rsp)
   0.00%      0x00007fd3aadc5ec3:   mov    %r11,0x48(%rsp)
   0.00%      0x00007fd3aadc5ec8:   mov    0x64(%rsp),%r14d
   0.13%      0x00007fd3aadc5ecd:   mov    %ebx,%r13d
   0.20%      0x00007fd3aadc5ed0:   mov    %ebp,0x34(%rsp)
   0.01%      0x00007fd3aadc5ed4:   mov    0x1c(,%rbp,8),%edx           ;*getfield threshold {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - java.util.HashMap::computeIfAbsent@31 (line 1204)
                                                                        ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x00007fd33003bae0::accept@17
                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                        ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
              0x00007fd3aadc5edb:   mov    %esi,%ecx
   0.09%      0x00007fd3aadc5edd:   shr    $0x10,%ecx                   ;*iushr {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - java.util.HashMap::hash@17 (line 338)
                                                                        ; - java.util.HashMap::computeIfAbsent@13 (line 1199)
                                                                        ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x00007fd33003bae0::accept@17
                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                        ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
   0.19%      0x00007fd3aadc5ee0:   xor    %esi,%ecx                    ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - java.util.HashMap::hash@18 (line 338)
                                                                        ; - java.util.HashMap::computeIfAbsent@13 (line 1199)
                                                                        ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x00007fd33003bae0::accept@17
                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                        ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
   0.00%      0x00007fd3aadc5ee2:   cmp    0x14(,%rbp,8),%edx
              0x00007fd3aadc5ee9:   jl     0x00007fd3aadc7c9b           ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - java.util.HashMap::computeIfAbsent@34 (line 1204)
                                                                        ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x00007fd33003bae0::accept@17
                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                        ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
   0.11%      0x00007fd3aadc5eef:   mov    0x24(,%rbp,8),%esi           ;*getfield table {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - java.util.HashMap::computeIfAbsent@38 (line 1204)
                                                                        ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x00007fd33003bae0::accept@17
                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                        ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
   0.19%      0x00007fd3aadc5ef6:   test   %esi,%esi
              0x00007fd3aadc5ef8:   je     0x00007fd3aadc7c9b           ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - java.util.HashMap::computeIfAbsent@44 (line 1204)
                                                                        ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x00007fd33003bae0::accept@17
                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                        ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
   0.00%      0x00007fd3aadc5efe:   mov    0xc(,%rsi,8),%edx            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - java.util.HashMap::computeIfAbsent@49 (line 1204)
                                                                        ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x00007fd33003bae0::accept@17
                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                        ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
              0x00007fd3aadc5f05:   test   %edx,%edx
              0x00007fd3aadc5f07:   je     0x00007fd3aadc7c9b           ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - java.util.HashMap::computeIfAbsent@53 (line 1204)
                                                                        ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x00007fd33003bae0::accept@17
                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                        ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
   0.10%      0x00007fd3aadc5f0d:   shl    $0x3,%rsi                    ;*getfield table {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - java.util.HashMap::computeIfAbsent@38 (line 1204)
                                                                        ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x00007fd33003bae0::accept@17
                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                        ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
   0.20%      0x00007fd3aadc5f11:   mov    %edx,%r8d
              0x00007fd3aadc5f14:   dec    %r8d                         ;*isub {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - java.util.HashMap::computeIfAbsent@71 (line 1207)
                                                                        ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x00007fd33003bae0::accept@17
                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                        ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
   0.00%      0x00007fd3aadc5f17:   and    %ecx,%r8d                    ;*iand {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - java.util.HashMap::computeIfAbsent@73 (line 1207)
                                                                        ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x00007fd33003bae0::accept@17
                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                        ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
   0.16%      0x00007fd3aadc5f1a:   nopw   0x0(%rax,%rax,1)
   0.19%      0x00007fd3aadc5f20:   cmp    0xc(%rsi),%r8d
              0x00007fd3aadc5f24:   jae    0x00007fd3aadc819e
   0.00%      0x00007fd3aadc5f2a:   mov    0x10(%rsi,%r8,4),%r9d
   0.83%      0x00007fd3aadc5f2f:   mov    %r9d,%r11d
   0.03%      0x00007fd3aadc5f32:   shl    $0x3,%r11
   0.26%      0x00007fd3aadc5f36:   mov    %r11,0x28(%rsp)
   0.24%      0x00007fd3aadc5f3b:   nopl   0x0(%rax,%rax,1)
              0x00007fd3aadc5f40:   test   %r9d,%r9d
              0x00007fd3aadc5f43:   je     0x00007fd3aadc7525
   0.00%      0x00007fd3aadc5f49:   cmpl   $0x1a8490,0x8(,%r9,8)        ;   {metadata(&apos;java/util/HashMap$TreeNode&apos;)}
   5.78%      0x00007fd3aadc5f55:   je     0x00007fd3aadc8157           ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - java.util.HashMap::computeIfAbsent@77 (line 1207)
                                                                        ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x00007fd33003bae0::accept@17
                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                        ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
   0.20%      0x00007fd3aadc5f5b:   mov    %r11,%r10
              0x00007fd3aadc5f5e:   mov    $0x0,%ebx
   0.08%  ╭   0x00007fd3aadc5f63:   jmp    0x00007fd3aadc5fa5           ;*aload {reexecute=0 rethrow=0 return_oop=0}
          │                                                             ; - java.util.HashMap::computeIfAbsent@114 (line 1213)
          │                                                             ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
          │                                                             ; - java.util.stream.Collectors$$Lambda/0x00007fd33003bae0::accept@17
          │                                                             ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
          │                                                             ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
          │   0x00007fd3aadc5f68:   data16 data16 nopw 0x0(%rax,%rax,1)
          │   0x00007fd3aadc5f73:   data16 data16 xchg %ax,%ax
          │   0x00007fd3aadc5f77:   nopw   0x0(%rax,%rax,1)             ;*getfield hash {reexecute=0 rethrow=0 return_oop=0}
          │                                                             ; - java.util.HashMap::computeIfAbsent@116 (line 1213)
          │                                                             ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
          │                                                             ; - java.util.stream.Collectors$$Lambda/0x00007fd33003bae0::accept@17
          │                                                             ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
          │                                                             ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
   0.84%  │↗  0x00007fd3aadc5f80:   mov    0x18(%r10),%edx              ;*getfield next {reexecute=0 rethrow=0 return_oop=0}
          ││                                                            ; - java.util.HashMap::computeIfAbsent@160 (line 1219)
          ││                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
          ││                                                            ; - java.util.stream.Collectors$$Lambda/0x00007fd33003bae0::accept@17
          ││                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
          ││                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
   1.21%  ││  0x00007fd3aadc5f84:   mov    %ebx,%r9d
   0.00%  ││  0x00007fd3aadc5f87:   inc    %r9d                         ;*iinc {reexecute=0 rethrow=0 return_oop=0}
          ││                                                            ; - java.util.HashMap::computeIfAbsent@155 (line 1218)
          ││                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
          ││                                                            ; - java.util.stream.Collectors$$Lambda/0x00007fd33003bae0::accept@17
          ││                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
          ││                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
   0.02%  ││  0x00007fd3aadc5f8a:   test   %edx,%edx
          ││  0x00007fd3aadc5f8c:   je     0x00007fd3aadc70db           ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
          ││                                                            ; - java.util.HashMap::computeIfAbsent@166 (line 1219)
          ││                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
          ││                                                            ; - java.util.stream.Collectors$$Lambda/0x00007fd33003bae0::accept@17
          ││                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
          ││                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
   0.13%  ││  0x00007fd3aadc5f92:   mov    0x458(%r15),%rax             ; ImmutableOopMap {rdx=NarrowOop rbp=NarrowOop rsi=Oop rdi=Oop r10=Oop r11=Oop r13=NarrowOop r14=NarrowOop [40]=Oop [52]=NarrowOop [72]=Oop [80]=Oop [88]=Oop [96]=NarrowOop [100]=NarrowOop [104]=Oop [116]=NarrowOop [120]=Oop [128]=Oop [136]=Oop [144]=Oop }
          ││                                                            ;*aload {reexecute=1 rethrow=0 return_oop=0}
          ││                                                            ; - (reexecute) java.util.HashMap::computeIfAbsent@114 (line 1213)
          ││                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
          ││                                                            ; - java.util.stream.Collectors$$Lambda/0x00007fd33003bae0::accept@17
          ││                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
          ││                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
   0.01%  ││  0x00007fd3aadc5f99:   test   %eax,(%rax)                  ;   {poll}
   0.51%  ││  0x00007fd3aadc5f9b:   shl    $0x3,%rdx                    ;*getfield next {reexecute=0 rethrow=0 return_oop=0}
          ││                                                            ; - java.util.HashMap::computeIfAbsent@160 (line 1219)
          ││                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
          ││                                                            ; - java.util.stream.Collectors$$Lambda/0x00007fd33003bae0::accept@17
          ││                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
          ││                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
   0.02%  ││  0x00007fd3aadc5f9f:   mov    %rdx,%r10
   0.03%  ││  0x00007fd3aadc5fa2:   mov    %r9d,%ebx                    ; ImmutableOopMap {rbp=NarrowOop rsi=Oop rdi=Oop r10=Oop r11=Oop r13=NarrowOop r14=NarrowOop [40]=Oop [52]=NarrowOop [72]=Oop [80]=Oop [88]=Oop [96]=NarrowOop [100]=NarrowOop [104]=Oop [116]=NarrowOop [120]=Oop [128]=Oop [136]=Oop [144]=Oop }
          ││                                                            ;*aload {reexecute=1 rethrow=0 return_oop=0}
          ││                                                            ; - (reexecute) java.util.HashMap::computeIfAbsent@114 (line 1213)
          ││                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
          ││                                                            ; - java.util.stream.Collectors$$Lambda/0x00007fd33003bae0::accept@17
          ││                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
          ││                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
   0.00%  ↘│  0x00007fd3aadc5fa5:   mov    0xc(%r10),%edx               ; implicit exception: dispatches to 0x00007fd3aadc8788
   3.92%   │  0x00007fd3aadc5fa9:   mov    0x10(%r10),%r9d              ;*getfield key {reexecute=0 rethrow=0 return_oop=0}
           │                                                            ; - java.util.HashMap::computeIfAbsent@125 (line 1213)
           │                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
           │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007fd33003bae0::accept@17
           │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
           │                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
   0.77%   │  0x00007fd3aadc5fad:   mov    0x14(%r10),%eax              ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
           │                                                            ; - java.util.HashMap::computeIfAbsent@176 (line 1222)
           │                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
           │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007fd33003bae0::accept@17
           │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
           │                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
   0.26%   │  0x00007fd3aadc5fb1:   cmp    %ecx,%edx
           ╰  0x00007fd3aadc5fb3:   jne    0x00007fd3aadc5f80           ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - java.util.HashMap::computeIfAbsent@120 (line 1213)
                                                                        ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x00007fd33003bae0::accept@17
                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                        ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
   0.36%      0x00007fd3aadc5fb5:   cmp    %r13d,%r9d
              0x00007fd3aadc5fb8:   je     0x00007fd3aadc862f           ;*if_acmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - java.util.HashMap::computeIfAbsent@132 (line 1213)
                                                                        ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x00007fd33003bae0::accept@17
                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                        ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
   0.34%      0x00007fd3aadc5fbe:   xchg   %ax,%ax
              0x00007fd3aadc5fc0:   cmp    %r13d,%r9d
              0x00007fd3aadc5fc3:   je     0x00007fd3aadc6bc5           ; ImmutableOopMap {rax=NarrowOop rsi=Oop rdi=Oop r9=NarrowOop r10=Oop r11=Oop r13=NarrowOop r14=NarrowOop [40]=Oop [72]=Oop [80]=Oop [88]=Oop [104]=Oop [116]=NarrowOop [120]=Oop [128]=Oop [136]=Oop [144]=Oop }
                                                                        ;*aload {reexecute=1 rethrow=0 return_oop=0}
                                                                        ; - (reexecute) java.util.HashMap::computeIfAbsent@114 (line 1213)
                                                                        ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x00007fd33003bae0::accept@17
                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                        ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
   0.21%      0x00007fd3aadc5fc9:   cmpl   $0xe8d8,0x8(,%r9,8)          ; implicit exception: dispatches to 0x00007fd3aadc87ad
                                                                        ;   {metadata(&apos;java/lang/String&apos;)}
   7.09%      0x00007fd3aadc5fd5:   jne    0x00007fd3aadc81e0
   0.29%      0x00007fd3aadc5fdb:   movsbl 0x10(,%r13,8),%edx
   0.04%      0x00007fd3aadc5fe4:   cmp    0x10(,%r9,8),%dl
              0x00007fd3aadc5fec:   jne    0x00007fd3aadc8273           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - java.lang.String::equals@0 (line 1858)
                                                                        ; - java.util.HashMap::computeIfAbsent@142 (line 1214)
                                                                        ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x00007fd33003bae0::accept@17
                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                        ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
   0.71%      0x00007fd3aadc5ff2:   mov    0x14(,%r9,8),%edx            ; ImmutableOopMap {rax=NarrowOop rdx=NarrowOop rsi=Oop rdi=Oop r10=Oop r11=Oop r13=NarrowOop r14=NarrowOop [40]=Oop [72]=Oop [80]=Oop [88]=Oop [104]=Oop [116]=NarrowOop [120]=Oop [128]=Oop [136]=Oop [144]=Oop }
                                                                        ;*aload {reexecute=1 rethrow=0 return_oop=0}
                                                                        ; - (reexecute) java.util.HashMap::computeIfAbsent@114 (line 1213)
                                                                        ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x00007fd33003bae0::accept@17
                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                        ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
   0.34%      0x00007fd3aadc5ffa:   mov    0xc(,%rdx,8),%r9d            ; implicit exception: dispatches to 0x00007fd3aadc87d0
   1.85%      0x00007fd3aadc6002:   mov    0x14(,%r13,8),%ebp           ; ImmutableOopMap {rax=NarrowOop rdx=NarrowOop rbp=NarrowOop rsi=Oop rdi=Oop r10=Oop r11=Oop r14=NarrowOop [40]=Oop [72]=Oop [80]=Oop [88]=Oop [104]=Oop [116]=NarrowOop [120]=Oop [128]=Oop [136]=Oop [144]=Oop }
                                                                        ;*aload {reexecute=1 rethrow=0 return_oop=0}
                                                                        ; - (reexecute) java.util.HashMap::computeIfAbsent@114 (line 1213)
                                                                        ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x00007fd33003bae0::accept@17
                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                        ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
   0.00%      0x00007fd3aadc600a:   cmp    0xc(,%rbp,8),%r9d            ; implicit exception: dispatches to 0x00007fd3aadc87f3
              0x00007fd3aadc6012:   jne    0x00007fd3aadc7f9f
   0.34%      0x00007fd3aadc6018:   nopl   0x0(%rax,%rax,1)
   0.01%      0x00007fd3aadc6020:   test   %r9d,%r9d
              0x00007fd3aadc6023:   je     0x00007fd3aadc6bc5
   0.25%      0x00007fd3aadc6029:   mov    %eax,%r13d
              0x00007fd3aadc602c:   mov    %r10,0x20(%rsp)
   0.03%      0x00007fd3aadc6031:   mov    %ebx,0xa4(%rsp)
   0.01%      0x00007fd3aadc6038:   mov    %r8d,0xa8(%rsp)
   0.25%      0x00007fd3aadc6040:   mov    %ecx,0xac(%rsp)
   0.01%      0x00007fd3aadc6047:   shl    $0x3,%rdx
   0.04%      0x00007fd3aadc604b:   shl    $0x3,%rbp
   0.01%      0x00007fd3aadc604f:   mov    %rsi,%rbx
   0.23%      0x00007fd3aadc6052:   mov    %rdx,%rsi
   0.01%      0x00007fd3aadc6055:   mov    $0x10,%rdx
   0.04%      0x00007fd3aadc605c:   mov    %rbp,%rcx
   0.01%      0x00007fd3aadc605f:   mov    $0x10,%r8                    ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - java.lang.String::equals@0 (line 1858)
                                                                        ; - java.util.HashMap::computeIfAbsent@142 (line 1214)
                                                                        ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x00007fd33003bae0::accept@17
                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                        ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
   0.26%      0x00007fd3aadc6066:   mov    %rdi,%r11
              0x00007fd3aadc6069:   call   0x00007fd3aa8edb80           ;   {runtime_call Stub&lt;IntrinsicStubsGen.arrayRegionEqualsS1S1&gt;}
   0.30%      0x00007fd3aadc606e:   nop
              0x00007fd3aadc606f:   test   %eax,%eax
              0x00007fd3aadc6071:   je     0x00007fd3aadc821d           ;*aload {reexecute=1 rethrow=0 return_oop=0}
                                                                        ; - (reexecute) java.util.HashMap::computeIfAbsent@169 (line 1222)
                                                                        ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x00007fd33003bae0::accept@17
                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                        ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
   0.00%      0x00007fd3aadc6077:   test   %eax,0x0(,%r13,8)            ; implicit exception: deoptimizes
                                                                        ; ImmutableOopMap {rbx=Oop r11=Oop r13=NarrowOop r14=NarrowOop [32]=Oop [40]=Oop [72]=Oop [80]=Oop [88]=Oop [104]=Oop [116]=NarrowOop [120]=Oop [128]=Oop [136]=Oop [144]=Oop }
   0.73%      0x00007fd3aadc607f:   mov    %r13d,%eax
              0x00007fd3aadc6082:   shl    $0x3,%rax                    ; ImmutableOopMap {rax=Oop [72]=Oop [104]=Oop [116]=NarrowOop [120]=Oop [128]=Oop [136]=Oop [144]=Oop }
                                                                        ;*astore {reexecute=1 rethrow=0 return_oop=0}
                                                                        ; - (reexecute) java.util.stream.Collectors::lambda$groupingBy$53@30 (line 1106)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x00007fd33003bae0::accept@17
                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                        ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
              0x00007fd3aadc6086:   cmpl   $0x3a66e8,0x8(,%r14,8)       ; implicit exception: dispatches to 0x00007fd3aadc8816
                                                                        ;   {metadata(&apos;java/util/stream/Collectors$$Lambda+0x800000044&apos;)}
   0.26%      0x00007fd3aadc6092:   jne    0x00007fd3aadc8365           ;*invokeinterface accept {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - java.util.stream.Collectors::lambda$groupingBy$53@37 (line 1107)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x00007fd33003bae0::accept@17
                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                        ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
   0.01%      0x00007fd3aadc6098:   nopl   0x0(%rax,%rax,1)
              0x00007fd3aadc60a0:   cmpl   $0xdf768,0x8(%rax)           ;   {metadata(&apos;java/util/HashSet&apos;)}
   0.09%      0x00007fd3aadc60a7:   jne    0x00007fd3aadc7ed4           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - java.util.stream.Collectors$$Lambda/0x800000044::accept@1
                                                                        ; - java.util.stream.Collectors::lambda$groupingBy$53@37 (line 1107)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x00007fd33003bae0::accept@17
                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                        ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
   0.33%      0x00007fd3aadc60ad:   mov    0x74(%rsp),%r10d
   0.00%      0x00007fd3aadc60b2:   mov    0xc(%rax),%r9d               ;*getfield map {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - java.util.HashSet::add@1 (line 229)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x800000044::accept@8
                                                                        ; - java.util.stream.Collectors::lambda$groupingBy$53@37 (line 1107)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x00007fd33003bae0::accept@17
                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                        ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
              0x00007fd3aadc60b6:   mov    %r9d,0x64(%rsp)              ; ImmutableOopMap {rax=Oop r9=NarrowOop r10=NarrowOop [72]=Oop [100]=NarrowOop [104]=Oop [116]=NarrowOop [120]=Oop [128]=Oop [136]=Oop [144]=Oop }
                                                                        ;*astore {reexecute=1 rethrow=0 return_oop=0}
                                                                        ; - (reexecute) java.util.stream.Collectors::lambda$groupingBy$53@30 (line 1106)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x00007fd33003bae0::accept@17
                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                        ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
   0.30%      0x00007fd3aadc60bb:   mov    0x8(,%r9,8),%ecx             ; implicit exception: dispatches to 0x00007fd3aadc8839
                                                                        ; ImmutableOopMap {rax=Oop r9=NarrowOop [72]=Oop [100]=NarrowOop [104]=Oop [116]=NarrowOop [120]=Oop [128]=Oop [136]=Oop [144]=Oop }
                                                                        ;*astore {reexecute=1 rethrow=0 return_oop=0}
                                                                        ; - (reexecute) java.util.stream.Collectors::lambda$groupingBy$53@30 (line 1106)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x00007fd33003bae0::accept@17
                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                        ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
   0.15%      0x00007fd3aadc60c3:   mov    0x8(,%r10,8),%esi            ; implicit exception: dispatches to 0x00007fd3aadc885c
   0.02%      0x00007fd3aadc60cb:   movabs $0x7fd32f000000,%rbx
              0x00007fd3aadc60d5:   lea    (%rbx,%rsi,1),%rsi
   0.28%      0x00007fd3aadc60d9:   mov    0x1e0(%rsi),%rbx
   0.06%      0x00007fd3aadc60e0:   mov    0x40(%rbx),%rdi              ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - java.util.HashMap::hash@9 (line 338)
                                                                        ; - java.util.HashMap::put@2 (line 618)
                                                                        ; - java.util.HashSet::add@8 (line 229)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x800000044::accept@8
                                                                        ; - java.util.stream.Collectors::lambda$groupingBy$53@37 (line 1107)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x00007fd33003bae0::accept@17
                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                        ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
   0.05%      0x00007fd3aadc60e4:   mov    %r9d,%edx
              0x00007fd3aadc60e7:   shl    $0x3,%rdx                    ;*getfield map {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - java.util.HashSet::add@1 (line 229)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x800000044::accept@8
                                                                        ; - java.util.stream.Collectors::lambda$groupingBy$53@37 (line 1107)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x00007fd33003bae0::accept@17
                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                        ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
   0.27%      0x00007fd3aadc60eb:   mov    0x68(%rsp),%rsi
   0.05%      0x00007fd3aadc60f0:   mov    %rax,0x20(%rsp)
   0.01%      0x00007fd3aadc60f5:   mov    %rdi,%rax                    ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - java.util.HashMap::hash@9 (line 338)
                                                                        ; - java.util.HashMap::put@2 (line 618)
                                                                        ; - java.util.HashSet::add@8 (line 229)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x800000044::accept@8
                                                                        ; - java.util.stream.Collectors::lambda$groupingBy$53@37 (line 1107)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x00007fd33003bae0::accept@17
                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                        ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
              0x00007fd3aadc60f8:   mov    %rdx,0x28(%rsp)
   0.25%      0x00007fd3aadc60fd:   mov    %ecx,0xa8(%rsp)
   0.03%      0x00007fd3aadc6104:   call   *%rax                        ; ImmutableOopMap {[32]=Oop [40]=Oop [100]=NarrowOop [104]=Oop [116]=NarrowOop [120]=Oop [128]=Oop [136]=Oop [144]=Oop }
                                                                        ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - java.util.HashMap::hash@9 (line 338)
                                                                        ; - java.util.HashMap::put@2 (line 618)
                                                                        ; - java.util.HashSet::add@8 (line 229)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x800000044::accept@8
                                                                        ; - java.util.stream.Collectors::lambda$groupingBy$53@37 (line 1107)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x00007fd33003bae0::accept@17
                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                        ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
   0.00%      0x00007fd3aadc6106:   nopl   0x0(%rax,%rax,1)
              0x00007fd3aadc610e:   mov    0x64(%rsp),%r9d
   0.24%      0x00007fd3aadc6113:   mov    0x24(,%r9,8),%esi            ;*getfield table {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - java.util.HashMap::putVal@1 (line 634)
                                                                        ; - java.util.HashMap::put@9 (line 618)
                                                                        ; - java.util.HashSet::add@8 (line 229)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x800000044::accept@8
                                                                        ; - java.util.stream.Collectors::lambda$groupingBy$53@37 (line 1107)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x00007fd33003bae0::accept@17
                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                        ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
   0.10%      0x00007fd3aadc611b:   mov    %eax,%edx
              0x00007fd3aadc611d:   shr    $0x10,%edx                   ;*iushr {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - java.util.HashMap::hash@17 (line 338)
                                                                        ; - java.util.HashMap::put@2 (line 618)
                                                                        ; - java.util.HashSet::add@8 (line 229)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x800000044::accept@8
                                                                        ; - java.util.stream.Collectors::lambda$groupingBy$53@37 (line 1107)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x00007fd33003bae0::accept@17
                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                        ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
              0x00007fd3aadc6120:   mov    %eax,%r11d
   0.30%      0x00007fd3aadc6123:   xor    %edx,%r11d                   ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - java.util.HashMap::hash@18 (line 338)
                                                                        ; - java.util.HashMap::put@2 (line 618)
                                                                        ; - java.util.HashSet::add@8 (line 229)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x800000044::accept@8
                                                                        ; - java.util.stream.Collectors::lambda$groupingBy$53@37 (line 1107)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x00007fd33003bae0::accept@17
                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                        ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
   0.01%      0x00007fd3aadc6126:   mov    %r11d,0xa4(%rsp)
              0x00007fd3aadc612e:   test   %esi,%esi
              0x00007fd3aadc6130:   je     0x00007fd3aadc6cb9           ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - java.util.HashMap::putVal@7 (line 634)
                                                                        ; - java.util.HashMap::put@9 (line 618)
                                                                        ; - java.util.HashSet::add@8 (line 229)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x800000044::accept@8
                                                                        ; - java.util.stream.Collectors::lambda$groupingBy$53@37 (line 1107)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x00007fd33003bae0::accept@17
                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                        ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
              0x00007fd3aadc6136:   mov    0xc(,%rsi,8),%edx            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - java.util.HashMap::putVal@12 (line 634)
                                                                        ; - java.util.HashMap::put@9 (line 618)
                                                                        ; - java.util.HashSet::add@8 (line 229)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x800000044::accept@8
                                                                        ; - java.util.stream.Collectors::lambda$groupingBy$53@37 (line 1107)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x00007fd33003bae0::accept@17
                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                        ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
   1.76%      0x00007fd3aadc613d:   data16 xchg %ax,%ax
              0x00007fd3aadc6140:   test   %edx,%edx
              0x00007fd3aadc6142:   je     0x00007fd3aadc81ad           ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - java.util.HashMap::putVal@16 (line 634)
                                                                        ; - java.util.HashMap::put@9 (line 618)
                                                                        ; - java.util.HashSet::add@8 (line 229)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x800000044::accept@8
                                                                        ; - java.util.stream.Collectors::lambda$groupingBy$53@37 (line 1107)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x00007fd33003bae0::accept@17
                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                        ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
   0.13%      0x00007fd3aadc6148:   shl    $0x3,%rsi                    ;*getfield table {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - java.util.HashMap::putVal@1 (line 634)
                                                                        ; - java.util.HashMap::put@9 (line 618)
                                                                        ; - java.util.HashSet::add@8 (line 229)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x800000044::accept@8
                                                                        ; - java.util.stream.Collectors::lambda$groupingBy$53@37 (line 1107)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x00007fd33003bae0::accept@17
                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                        ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
              0x00007fd3aadc614c:   mov    %rsi,0x18(%rsp)
   0.15%      0x00007fd3aadc6151:   mov    %edx,%ecx
              0x00007fd3aadc6153:   dec    %ecx                         ;*isub {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - java.util.HashMap::putVal@34 (line 636)
                                                                        ; - java.util.HashMap::put@9 (line 618)
                                                                        ; - java.util.HashSet::add@8 (line 229)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x800000044::accept@8
                                                                        ; - java.util.stream.Collectors::lambda$groupingBy$53@37 (line 1107)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x00007fd33003bae0::accept@17
                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                        ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
   0.13%      0x00007fd3aadc6155:   mov    %r11d,%r10d
   0.00%      0x00007fd3aadc6158:   and    %ecx,%r10d                   ;*iand {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - java.util.HashMap::putVal@36 (line 636)
                                                                        ; - java.util.HashMap::put@9 (line 618)
                                                                        ; - java.util.HashSet::add@8 (line 229)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x800000044::accept@8
                                                                        ; - java.util.stream.Collectors::lambda$groupingBy$53@37 (line 1107)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x00007fd33003bae0::accept@17
                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                        ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
   0.20%      0x00007fd3aadc615b:   nopl   0x0(%rax,%rax,1)
              0x00007fd3aadc6160:   cmp    0xc(%rsi),%r10d
              0x00007fd3aadc6164:   jae    0x00007fd3aadc85ad
   0.21%      0x00007fd3aadc616a:   mov    0x10(%rsi,%r10,4),%ebx       ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - java.util.HashMap::putVal@40 (line 636)
                                                                        ; - java.util.HashMap::put@9 (line 618)
                                                                        ; - java.util.HashSet::add@8 (line 229)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x800000044::accept@8
                                                                        ; - java.util.stream.Collectors::lambda$groupingBy$53@37 (line 1107)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x00007fd33003bae0::accept@17
                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                        ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
   1.98%      0x00007fd3aadc616f:   test   %ebx,%ebx
              0x00007fd3aadc6171:   je     0x00007fd3aadc6445           ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - java.util.HashMap::putVal@44 (line 636)
                                                                        ; - java.util.HashMap::put@9 (line 618)
                                                                        ; - java.util.HashSet::add@8 (line 229)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x800000044::accept@8
                                                                        ; - java.util.stream.Collectors::lambda$groupingBy$53@37 (line 1107)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x00007fd33003bae0::accept@17
                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                        ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
   0.36%      0x00007fd3aadc6177:   mov    %ebx,%ebp
              0x00007fd3aadc6179:   shl    $0x3,%rbp                    ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - java.util.HashMap::putVal@40 (line 636)
                                                                        ; - java.util.HashMap::put@9 (line 618)
                                                                        ; - java.util.HashSet::add@8 (line 229)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x800000044::accept@8
                                                                        ; - java.util.stream.Collectors::lambda$groupingBy$53@37 (line 1107)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x00007fd33003bae0::accept@17
                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                        ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
   0.11%      0x00007fd3aadc617d:   data16 xchg %ax,%ax
              0x00007fd3aadc6180:   cmp    0xc(,%rbx,8),%r11d
              0x00007fd3aadc6188:   jne    0x00007fd3aadc69bc           ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - java.util.HashMap::putVal@69 (line 640)
                                                                        ; - java.util.HashMap::put@9 (line 618)
                                                                        ; - java.util.HashSet::add@8 (line 229)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x800000044::accept@8
                                                                        ; - java.util.stream.Collectors::lambda$groupingBy$53@37 (line 1107)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x00007fd33003bae0::accept@17
                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                        ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
   2.94%      0x00007fd3aadc618e:   mov    0x10(,%rbx,8),%ecx           ;*getfield key {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - java.util.HashMap::putVal@74 (line 640)
                                                                        ; - java.util.HashMap::put@9 (line 618)
                                                                        ; - java.util.HashSet::add@8 (line 229)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x800000044::accept@8
                                                                        ; - java.util.stream.Collectors::lambda$groupingBy$53@37 (line 1107)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x00007fd33003bae0::accept@17
                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                        ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
   1.01%      0x00007fd3aadc6195:   cmp    0x74(%rsp),%ecx
              0x00007fd3aadc6199:   je     0x00007fd3aadc77f5           ;*if_acmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - java.util.HashMap::putVal@81 (line 640)
                                                                        ; - java.util.HashMap::put@9 (line 618)
                                                                        ; - java.util.HashSet::add@8 (line 229)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x800000044::accept@8
                                                                        ; - java.util.stream.Collectors::lambda$groupingBy$53@37 (line 1107)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x00007fd33003bae0::accept@17
                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                        ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
   0.19%      0x00007fd3aadc619f:   nop
   0.07%      0x00007fd3aadc61a0:   cmp    0x74(%rsp),%ecx              ;   {no_reloc}
              0x00007fd3aadc61a4:   je     0x00007fd3aadc860a           ; ImmutableOopMap {rcx=NarrowOop rbx=NarrowOop rbp=Oop rsi=Oop [24]=Oop [32]=Oop [40]=Oop [100]=NarrowOop [104]=Oop [116]=NarrowOop [120]=Oop [128]=Oop [136]=Oop [144]=Oop }
                                                                        ;*aload {reexecute=1 rethrow=0 return_oop=0}
                                                                        ; - (reexecute) java.util.HashMap::putVal@29 (line 636)
                                                                        ; - java.util.HashMap::put@9 (line 618)
                                                                        ; - java.util.HashSet::add@8 (line 229)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x800000044::accept@8
                                                                        ; - java.util.stream.Collectors::lambda$groupingBy$53@37 (line 1107)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x00007fd33003bae0::accept@17
                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                        ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
   0.20%      0x00007fd3aadc61aa:   cmpl   $0x102b2b0,0x8(,%rcx,8)      ; implicit exception: dispatches to 0x00007fd3aadc887f
                                                                        ;   {metadata(&apos;com/ionutbalosin/jvm/performance/benchmarks/miscellaneous/publicationstatistics/model/Author&apos;)}
   1.90%      0x00007fd3aadc61b5:   jne    0x00007fd3aadc85e5           ;*if_acmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.model.Author::equals@19 (line 46)
                                                                        ; - java.util.HashMap::putVal@91 (line 641)
                                                                        ; - java.util.HashMap::put@9 (line 618)
                                                                        ; - java.util.HashSet::add@8 (line 229)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x800000044::accept@8
                                                                        ; - java.util.stream.Collectors::lambda$groupingBy$53@37 (line 1107)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x00007fd33003bae0::accept@17
                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                        ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
   0.33%      0x00007fd3aadc61bb:   mov    0x74(%rsp),%eax
              0x00007fd3aadc61bf:   mov    0xc(,%rax,8),%r8d            ;*getfield name {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.model.Author::equals@30 (line 48)
                                                                        ; - java.util.HashMap::putVal@91 (line 641)
                                                                        ; - java.util.HashMap::put@9 (line 618)
                                                                        ; - java.util.HashSet::add@8 (line 229)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x800000044::accept@8
                                                                        ; - java.util.stream.Collectors::lambda$groupingBy$53@37 (line 1107)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x00007fd33003bae0::accept@17
                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                        ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
              0x00007fd3aadc61c7:   mov    0xc(,%rcx,8),%ecx            ;*getfield name {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.model.Author::equals@34 (line 48)
                                                                        ; - java.util.HashMap::putVal@91 (line 641)
                                                                        ; - java.util.HashMap::put@9 (line 618)
                                                                        ; - java.util.HashSet::add@8 (line 229)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x800000044::accept@8
                                                                        ; - java.util.stream.Collectors::lambda$groupingBy$53@37 (line 1107)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x00007fd33003bae0::accept@17
                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                        ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
   0.29%      0x00007fd3aadc61ce:   cmp    %r8d,%ecx
              0x00007fd3aadc61d1:   je     0x00007fd3aadc7459           ; ImmutableOopMap {rax=NarrowOop rcx=NarrowOop rbx=NarrowOop rbp=Oop rsi=Oop r8=NarrowOop [24]=Oop [32]=Oop [40]=Oop [100]=NarrowOop [104]=Oop [116]=NarrowOop [120]=Oop [128]=Oop [136]=Oop [144]=Oop }
                                                                        ;*aload {reexecute=1 rethrow=0 return_oop=0}
                                                                        ; - (reexecute) java.util.HashMap::putVal@29 (line 636)
                                                                        ; - java.util.HashMap::put@9 (line 618)
                                                                        ; - java.util.HashSet::add@8 (line 229)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x800000044::accept@8
                                                                        ; - java.util.stream.Collectors::lambda$groupingBy$53@37 (line 1107)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x00007fd33003bae0::accept@17
                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                        ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
   0.29%      0x00007fd3aadc61d7:   movsbl 0x10(,%r8,8),%r10d           ; implicit exception: dispatches to 0x00007fd3aadc88a2
   0.00%      0x00007fd3aadc61e0:   mov    0x14(,%r8,8),%edi
              0x00007fd3aadc61e8:   cmp    %r8d,%ecx
              0x00007fd3aadc61eb:   je     0x00007fd3aadc6cea
   0.09%      0x00007fd3aadc61f1:   test   %ecx,%ecx
              0x00007fd3aadc61f3:   je     0x00007fd3aadc6cf7
   0.30%      0x00007fd3aadc61f9:   nopl   0x0(%rax)
              0x00007fd3aadc6200:   cmp    0x10(,%rcx,8),%r10b
              0x00007fd3aadc6208:   jne    0x00007fd3aadc6d0c           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - java.lang.String::equals@0 (line 1858)
                                                                        ; - java.util.Objects::equals@11 (line 64)
                                                                        ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.model.Author::equals@37 (line 48)
                                                                        ; - java.util.HashMap::putVal@91 (line 641)
                                                                        ; - java.util.HashMap::put@9 (line 618)
                                                                        ; - java.util.HashSet::add@8 (line 229)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x800000044::accept@8
                                                                        ; - java.util.stream.Collectors::lambda$groupingBy$53@37 (line 1107)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x00007fd33003bae0::accept@17
                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                        ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
   0.60%      0x00007fd3aadc620e:   mov    0x14(,%rcx,8),%ecx           ; ImmutableOopMap {rax=NarrowOop rcx=NarrowOop rbx=NarrowOop rbp=Oop rsi=Oop rdi=NarrowOop [24]=Oop [32]=Oop [40]=Oop [100]=NarrowOop [104]=Oop [116]=NarrowOop [120]=Oop [128]=Oop [136]=Oop [144]=Oop }
                                                                        ;*aload {reexecute=1 rethrow=0 return_oop=0}
                                                                        ; - (reexecute) java.util.HashMap::putVal@29 (line 636)
                                                                        ; - java.util.HashMap::put@9 (line 618)
                                                                        ; - java.util.HashSet::add@8 (line 229)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x800000044::accept@8
                                                                        ; - java.util.stream.Collectors::lambda$groupingBy$53@37 (line 1107)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x00007fd33003bae0::accept@17
                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                        ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
   0.07%      0x00007fd3aadc6215:   mov    0xc(,%rcx,8),%r10d           ; implicit exception: dispatches to 0x00007fd3aadc88c5
   1.11%      0x00007fd3aadc621d:   data16 xchg %ax,%ax                 ; ImmutableOopMap {rax=NarrowOop rcx=NarrowOop rbx=NarrowOop rbp=Oop rsi=Oop rdi=NarrowOop [24]=Oop [32]=Oop [40]=Oop [100]=NarrowOop [104]=Oop [116]=NarrowOop [120]=Oop [128]=Oop [136]=Oop [144]=Oop }
                                                                        ;*aload {reexecute=1 rethrow=0 return_oop=0}
                                                                        ; - (reexecute) java.util.HashMap::putVal@29 (line 636)
                                                                        ; - java.util.HashMap::put@9 (line 618)
                                                                        ; - java.util.HashSet::add@8 (line 229)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x800000044::accept@8
                                                                        ; - java.util.stream.Collectors::lambda$groupingBy$53@37 (line 1107)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x00007fd33003bae0::accept@17
                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                        ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
              0x00007fd3aadc6220:   cmp    0xc(,%rdi,8),%r10d           ; implicit exception: dispatches to 0x00007fd3aadc88e8
              0x00007fd3aadc6228:   jne    0x00007fd3aadc6d25
   0.35%      0x00007fd3aadc622e:   test   %r10d,%r10d
              0x00007fd3aadc6231:   je     0x00007fd3aadc6d3a
   0.19%      0x00007fd3aadc6237:   mov    %ebx,0x34(%rsp)
              0x00007fd3aadc623b:   shl    $0x3,%rcx
              0x00007fd3aadc623f:   shl    $0x3,%rdi
   0.10%      0x00007fd3aadc6243:   mov    %rsi,%r13
   0.21%      0x00007fd3aadc6246:   mov    %rcx,%rsi
              0x00007fd3aadc6249:   mov    $0x10,%rdx
              0x00007fd3aadc6250:   mov    %rdi,%rcx
   0.10%      0x00007fd3aadc6253:   mov    $0x10,%r8
   0.17%      0x00007fd3aadc625a:   mov    %r10d,%r9d                   ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - java.lang.String::equals@0 (line 1858)
                                                                        ; - java.util.Objects::equals@11 (line 64)
                                                                        ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.model.Author::equals@37 (line 48)
                                                                        ; - java.util.HashMap::putVal@91 (line 641)
                                                                        ; - java.util.HashMap::put@9 (line 618)
                                                                        ; - java.util.HashSet::add@8 (line 229)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x800000044::accept@8
                                                                        ; - java.util.stream.Collectors::lambda$groupingBy$53@37 (line 1107)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x00007fd33003bae0::accept@17
                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                        ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
              0x00007fd3aadc625d:   mov    %eax,%ebx
              0x00007fd3aadc625f:   nop
   0.11%      0x00007fd3aadc6260:   call   0x00007fd3aa8edb80           ;   {runtime_call Stub&lt;IntrinsicStubsGen.arrayRegionEqualsS1S1&gt;}
   0.31%      0x00007fd3aadc6265:   nop
              0x00007fd3aadc6266:   test   %eax,%eax
              0x00007fd3aadc6268:   je     0x00007fd3aadc7509           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - java.util.HashMap::putVal@94 (line 641)
                                                                        ; - java.util.HashMap::put@9 (line 618)
                                                                        ; - java.util.HashSet::add@8 (line 229)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x800000044::accept@8
                                                                        ; - java.util.stream.Collectors::lambda$groupingBy$53@37 (line 1107)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x00007fd33003bae0::accept@17
                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                        ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
              0x00007fd3aadc626e:   mov    0xb8(%rsp),%rdi              ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - java.util.HashMap::putVal@97 (line 642)
                                                                        ; - java.util.HashMap::put@9 (line 618)
                                                                        ; - java.util.HashSet::add@8 (line 229)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x800000044::accept@8
                                                                        ; - java.util.stream.Collectors::lambda$groupingBy$53@37 (line 1107)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x00007fd33003bae0::accept@17
                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                        ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
   0.34%      0x00007fd3aadc6276:   test   %rbp,%rbp
              0x00007fd3aadc6279:   je     0x00007fd3aadc69b2           ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - java.util.HashMap::putVal@224 (line 659)
                                                                        ; - java.util.HashMap::put@9 (line 618)
                                                                        ; - java.util.HashSet::add@8 (line 229)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x800000044::accept@8
                                                                        ; - java.util.stream.Collectors::lambda$groupingBy$53@37 (line 1107)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x00007fd33003bae0::accept@17
                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                        ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
              0x00007fd3aadc627f:   nop
              0x00007fd3aadc6280:   cmpl   $0x8e280,0xa8(%rsp)          ;   {metadata(&apos;java/util/HashMap&apos;)}
              0x00007fd3aadc628b:   jne    0x00007fd3aadc7e31           ;*invokevirtual afterNodeAccess {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - java.util.HashMap::putVal@253 (line 663)
                                                                        ; - java.util.HashMap::put@9 (line 618)
                                                                        ; - java.util.HashSet::add@8 (line 229)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x800000044::accept@8
                                                                        ; - java.util.stream.Collectors::lambda$groupingBy$53@37 (line 1107)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x00007fd33003bae0::accept@17
                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                        ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
   0.33%      0x00007fd3aadc6291:   cmpb   $0x0,0x40(%r15)
              0x00007fd3aadc6296:   jne    0x00007fd3aadc6651
              0x00007fd3aadc629c:   movl   $0xfff81da5,0x14(%rbp)       ;   {oop(a &apos;java/lang/Object&apos;{0x00000007ffc0ed28})}
              0x00007fd3aadc62a3:   mov    %rbp,%rsi
   0.27%      0x00007fd3aadc62a6:   xor    0x78(%rsp),%rsi
              0x00007fd3aadc62ab:   test   $0xffffffffffe00000,%rsi
              0x00007fd3aadc62b2:   je     0x00007fd3aadc6686
              0x00007fd3aadc62b8:   mov    0x78(%rsp),%r10
              0x00007fd3aadc62bd:   data16 xchg %ax,%ax
   0.31%      0x00007fd3aadc62c0:   test   %r10,%r10
              0x00007fd3aadc62c3:   je     0x00007fd3aadc66be
              0x00007fd3aadc62c9:   shr    $0x9,%rbp
              0x00007fd3aadc62cd:   cmpb   $0x2,0x0(%rbp,%rdi,1)
   0.38%      0x00007fd3aadc62d2:   jne    0x00007fd3aadc66f6
   0.00%      0x00007fd3aadc62d8:   mov    0xb0(%rsp),%r13d
              0x00007fd3aadc62e0:   movabs $0x7fd33003bae0,%r8          ;   {metadata(&apos;java/util/stream/Collectors$$Lambda+0x00007fd33003bae0&apos;)}
              0x00007fd3aadc62ea:   movabs $0x7fd330069340,%r14         ;   {metadata(&apos;java/util/stream/Collectors$$Lambda+0x00007fd330069340&apos;)}
   0.30%      0x00007fd3aadc62f4:   mov    0x80(%rsp),%r11
   0.00%      0x00007fd3aadc62fc:   mov    0xc4(%rsp),%ebp
              0x00007fd3aadc6303:   mov    0x88(%rsp),%rdx
              0x00007fd3aadc630b:   jmp    0x00007fd3aadc5da0           ;*putfield value {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - java.util.HashMap::putVal@247 (line 662)
                                                                        ; - java.util.HashMap::put@9 (line 618)
                                                                        ; - java.util.HashSet::add@8 (line 229)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x800000044::accept@8
                                                                        ; - java.util.stream.Collectors::lambda$groupingBy$53@37 (line 1107)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x00007fd33003bae0::accept@17
                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                        ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
....................................................................................................
  65.58%  <total for region 1>

....[Hottest Regions]...............................................................................
  65.58%      jvmci, level 4  java.util.ArrayList$ArrayListSpliterator::forEachRemaining, version 7, compile id 1306 
   8.42%      jvmci, level 4  java.util.HashMap$KeySpliterator::forEachRemaining, version 4, compile id 1348 
   7.67%      jvmci, level 4  java.util.stream.ReferencePipeline$7$1::accept, version 3, compile id 1245 
   5.02%      jvmci, level 4  com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.model.Author::hashCode, version 3, compile id 1235 
   4.87%                      <unknown> 
   1.99%                      <unknown> 
   0.94%      jvmci, level 4  com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.model.Author::hashCode, version 3, compile id 1235 
   0.79%                      <unknown> 
   0.60%      jvmci, level 4  java.util.ArrayList$ArrayListSpliterator::forEachRemaining, version 7, compile id 1306 
   0.45%                      <unknown> 
   0.22%              kernel  [unknown] 
   0.18%    perf-2147475.map  [unknown] 
   0.12%              kernel  [unknown] 
   0.10%              kernel  [unknown] 
   0.08%              kernel  [unknown] 
   0.07%              kernel  [unknown] 
   0.07%              kernel  [unknown] 
   0.07%      jvmci, level 4  java.util.HashMap$ValueSpliterator::forEachRemaining, version 4, compile id 1367 
   0.05%              kernel  [unknown] 
   0.05%              kernel  [unknown] 
   2.65%  <...other 631 warm regions...>
....................................................................................................
 100.00%  <totals>

....[Hottest Methods (after inlining)]..............................................................
  66.24%      jvmci, level 4  java.util.ArrayList$ArrayListSpliterator::forEachRemaining, version 7, compile id 1306 
   8.55%      jvmci, level 4  java.util.HashMap$KeySpliterator::forEachRemaining, version 4, compile id 1348 
   8.32%                      <unknown> 
   7.68%      jvmci, level 4  java.util.stream.ReferencePipeline$7$1::accept, version 3, compile id 1245 
   5.96%      jvmci, level 4  com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.model.Author::hashCode, version 3, compile id 1235 
   2.09%              kernel  [unknown] 
   0.18%      jvmci, level 4  java.util.HashMap$ValueSpliterator::forEachRemaining, version 4, compile id 1367 
   0.18%    perf-2147475.map  [unknown] 
   0.08%      jvmci, level 4  java.util.HashSet::add, version 2, compile id 1120 
   0.06%      jvmci, level 4  java.util.HashMap::resize, version 2, compile id 1353 
   0.04%      jvmci, level 4  java.util.stream.DistinctOps$1$2::accept, version 3, compile id 1363 
   0.04%           libjvm.so  G1CardSet::occupied 
   0.03%      jvmci, level 4  java.util.stream.ReferencePipeline$3$1::accept, version 6, compile id 1390 
   0.03%        libc-2.31.so  __vfprintf_internal 
   0.02%      jvmci, level 4  java.util.stream.ReduceOps$3ReducingSink::accept, version 8, compile id 1389 
   0.02%      jvmci, level 4  java.util.Collection::stream, version 3, compile id 1244 
   0.02%           libjvm.so  CompilerOracle::has_option_value<bool> 
   0.02%          ld-2.31.so  __tls_get_addr 
   0.02%      jvmci, level 4  java.util.HashMap$KeySpliterator::characteristics, version 3, compile id 1349 
   0.02%        libc-2.31.so  syscall 
   0.42%  <...other 133 warm methods...>
....................................................................................................
 100.00%  <totals>

....[Distribution by Source]........................................................................
  88.91%      jvmci, level 4
   8.32%                    
   2.09%              kernel
   0.28%           libjvm.so
   0.18%    perf-2147475.map
   0.14%        libc-2.31.so
   0.03%  libpthread-2.31.so
   0.02%      hsdis-amd64.so
   0.02%          ld-2.31.so
   0.01%         interpreter
   0.01%         c1, level 3
   0.00%              [vdso]
   0.00%      libz.so.1.2.11
....................................................................................................
 100.00%  <totals>



# JMH version: 1.37
# VM version: JDK 21, Java HotSpot(TM) 64-Bit Server VM, 21+35-jvmci-23.1-b15
# VM invoker: /home/gogu/bench_jdks/graalvm-jdk-21+35.1/bin/java
# VM options: -XX:ThreadPriorityPolicy=1 -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCIProduct -XX:-UnlockExperimentalVMOptions -Xms4g -Xmx4g -XX:+AlwaysPreTouch
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark.first_publication_year

# Run progress: 14.29% complete, ETA 00:23:32
# Fork: 1 of 1
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 7.729 ms/op
# Warmup Iteration   2: 5.239 ms/op
# Warmup Iteration   3: 5.133 ms/op
# Warmup Iteration   4: 5.390 ms/op
# Warmup Iteration   5: 5.178 ms/op
Iteration   1: 5.197 ms/op
Iteration   2: 4.996 ms/op
Iteration   3: 4.926 ms/op
Iteration   4: 4.940 ms/op
Iteration   5: 5.289 ms/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark.first_publication_year":
  5.070 ±(99.9%) 0.629 ms/op [Average]
  (min, avg, max) = (4.926, 5.070, 5.289), stdev = 0.163
  CI (99.9%): [4.440, 5.699] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark.first_publication_year:asm":
PrintAssembly processed: 310527 total address lines.
Perf output processed (skipped 62.404 seconds):
 Column 1: cycles (51544 events)

Hottest code regions (>10.00% "cycles" events):
 Event counts are percents of total event count.

....[Hottest Region 1]..............................................................................
jvmci, level 4, com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::first_publication_year, version 4, compile id 1284 

             0x00007f63a2e02bfc:   data16 data16 xchg %ax,%ax          ;*getfield val$predicate {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - java.util.stream.ReferencePipeline$2$1::accept@4 (line 178)
                                                                       ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
                                                                       ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
                                                                       ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                                                                       ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
                                                                       ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                                                                       ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearOfTheFirstPublication@32 (line 135)
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::first_publication_year@3 (line 112)
   0.33%     0x00007f63a2e02c00:   mov    0x10(%r9),%r11d              ; ImmutableOopMap {rdx=Oop rsi=Oop r8=Oop r9=Oop [72]=Oop [80]=Oop [88]=Oop [96]=Oop [104]=Oop [112]=Oop [124]=NarrowOop }
                                                                       ;*aload {reexecute=1 rethrow=0 return_oop=0}
                                                                       ; - (reexecute) java.util.HashMap$KeySpliterator::forEachRemaining@122 (line 1712)
                                                                       ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
                                                                       ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                                                                       ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
                                                                       ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                                                                       ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearOfTheFirstPublication@32 (line 135)
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::first_publication_year@3 (line 112)
   0.99%     0x00007f63a2e02c04:   mov    0x34(,%r11,8),%r11d          ; implicit exception: dispatches to 0x00007f63a2e0587e
   1.62%     0x00007f63a2e02c0c:   test   %r11d,%r11d
             0x00007f63a2e02c0f:   je     0x00007f63a2e0301a
   0.24%     0x00007f63a2e02c15:   mov    0x8(,%r11,8),%esi
   1.57%     0x00007f63a2e02c1d:   mov    %r11d,0x44(%rsp)
             0x00007f63a2e02c22:   movabs $0x7f6327000000,%r11
   0.07%     0x00007f63a2e02c2c:   lea    (%r11,%rsi,1),%rsi           ;*invokeinterface test {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - java.util.stream.ReferencePipeline$2$1::accept@8 (line 178)
                                                                       ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
                                                                       ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
                                                                       ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                                                                       ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
                                                                       ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                                                                       ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearOfTheFirstPublication@32 (line 135)
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::first_publication_year@3 (line 112)
   0.31%     0x00007f63a2e02c30:   mov    0x10(%r8),%r11d
  26.94%     0x00007f63a2e02c34:   test   %r11d,%r11d
             0x00007f63a2e02c37:   je     0x00007f63a2e0302b
   0.50%     0x00007f63a2e02c3d:   mov    0x8(,%r11,8),%r13d
  17.47%     0x00007f63a2e02c45:   movabs $0x7f6327000000,%r14
   0.01%     0x00007f63a2e02c4f:   lea    (%r14,%r13,1),%r13
   0.60%     0x00007f63a2e02c53:   mov    %r8,0x38(%rsp)
             0x00007f63a2e02c58:   mov    %r11d,%r14d
   0.04%     0x00007f63a2e02c5b:   shl    $0x3,%r14                    ;*getfield key {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - java.util.HashMap$KeySpliterator::forEachRemaining@142 (line 1715)
                                                                       ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
                                                                       ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                                                                       ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
                                                                       ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                                                                       ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearOfTheFirstPublication@32 (line 135)
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::first_publication_year@3 (line 112)
   0.01%     0x00007f63a2e02c5f:   mov    %r14,0x30(%rsp)
   0.55%     0x00007f63a2e02c64:   cmp    %rsi,%rbx
             0x00007f63a2e02c67:   jne    0x00007f63a2e038b5           ;*invokeinterface test {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - java.util.stream.ReferencePipeline$2$1::accept@8 (line 178)
                                                                       ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
                                                                       ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
                                                                       ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                                                                       ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
                                                                       ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                                                                       ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearOfTheFirstPublication@32 (line 135)
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::first_publication_year@3 (line 112)
             0x00007f63a2e02c6d:   cmp    %r13,%rcx
             0x00007f63a2e02c70:   jne    0x00007f63a2e0552a           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics$$Lambda/0x00007f632802bd18::test@1
                                                                       ; - java.util.stream.ReferencePipeline$2$1::accept@8 (line 178)
                                                                       ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
                                                                       ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
                                                                       ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                                                                       ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
                                                                       ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                                                                       ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearOfTheFirstPublication@32 (line 135)
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::first_publication_year@3 (line 112)
   0.03%     0x00007f63a2e02c76:   data16 nopw 0x0(%rax,%rax,1)
   0.01%     0x00007f63a2e02c80:   cmpl   $0x76c,0xc(,%r11,8)
   0.72%     0x00007f63a2e02c8c:   jl     0x00007f63a2e052f5           ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::lambda$yearOfTheFirstPublication$9@7 (line 133)
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics$$Lambda/0x00007f632802bd18::test@4
                                                                       ; - java.util.stream.ReferencePipeline$2$1::accept@8 (line 178)
                                                                       ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
                                                                       ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
                                                                       ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                                                                       ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
                                                                       ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                                                                       ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearOfTheFirstPublication@32 (line 135)
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::first_publication_year@3 (line 112)
   0.19%     0x00007f63a2e02c92:   mov    0xc(%r9),%esi
   0.00%     0x00007f63a2e02c96:   mov    %esi,%r14d
   0.42%     0x00007f63a2e02c99:   shl    $0x3,%r14                    ;*getfield downstream {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - java.util.stream.ReferencePipeline$2$1::accept@17 (line 179)
                                                                       ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
                                                                       ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
                                                                       ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                                                                       ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
                                                                       ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                                                                       ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearOfTheFirstPublication@32 (line 135)
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::first_publication_year@3 (line 112)
             0x00007f63a2e02c9d:   data16 xchg %ax,%ax
   0.15%     0x00007f63a2e02ca0:   test   %esi,%esi
             0x00007f63a2e02ca2:   je     0x00007f63a2e03037
   0.01%     0x00007f63a2e02ca8:   cmpl   $0x227550,0x8(,%rsi,8)       ;   {metadata(&apos;java/util/stream/ReferencePipeline$3$1&apos;)}
   0.39%     0x00007f63a2e02cb3:   jne    0x00007f63a2e03f26           ;*invokeinterface accept {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - java.util.stream.ReferencePipeline$2$1::accept@21 (line 179)
                                                                       ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
                                                                       ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
                                                                       ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                                                                       ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
                                                                       ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                                                                       ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearOfTheFirstPublication@32 (line 135)
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::first_publication_year@3 (line 112)
   0.16%     0x00007f63a2e02cb9:   mov    0x10(,%rsi,8),%r14d          ; ImmutableOopMap {rdx=Oop rsi=NarrowOop r8=Oop r11=NarrowOop [48]=Oop [56]=Oop [72]=Oop [80]=Oop [88]=Oop [96]=Oop [104]=Oop [112]=Oop [124]=NarrowOop }
                                                                       ;*aload {reexecute=1 rethrow=0 return_oop=0}
                                                                       ; - (reexecute) java.util.HashMap$KeySpliterator::forEachRemaining@122 (line 1712)
                                                                       ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
                                                                       ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                                                                       ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
                                                                       ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                                                                       ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearOfTheFirstPublication@32 (line 135)
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::first_publication_year@3 (line 112)
   0.01%     0x00007f63a2e02cc1:   mov    0x34(,%r14,8),%r14d          ; implicit exception: dispatches to 0x00007f63a2e058a1
   0.43%     0x00007f63a2e02cc9:   mov    0xc(,%rsi,8),%esi
             0x00007f63a2e02cd0:   shl    $0x3,%rsi                    ;*getfield downstream {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - java.util.stream.ReferencePipeline$3$1::accept@1 (line 197)
                                                                       ; - java.util.stream.ReferencePipeline$2$1::accept@21 (line 179)
                                                                       ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
                                                                       ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
                                                                       ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                                                                       ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
                                                                       ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                                                                       ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearOfTheFirstPublication@32 (line 135)
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::first_publication_year@3 (line 112)
   0.17%     0x00007f63a2e02cd4:   mov    %r14d,%r9d
   0.01%     0x00007f63a2e02cd7:   shl    $0x3,%r9                     ;*getfield val$mapper {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - java.util.stream.ReferencePipeline$3$1::accept@8 (line 197)
                                                                       ; - java.util.stream.ReferencePipeline$2$1::accept@21 (line 179)
                                                                       ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
                                                                       ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
                                                                       ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                                                                       ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
                                                                       ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                                                                       ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearOfTheFirstPublication@32 (line 135)
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::first_publication_year@3 (line 112)
   0.49%     0x00007f63a2e02cdb:   nopl   0x0(%rax,%rax,1)
             0x00007f63a2e02ce0:   test   %r14d,%r14d
             0x00007f63a2e02ce3:   je     0x00007f63a2e030b5
   0.21%     0x00007f63a2e02ce9:   cmpl   $0x1084000,0x8(,%r14,8)      ;   {metadata(&apos;com/ionutbalosin/jvm/performance/benchmarks/miscellaneous/publicationstatistics/PublicationStatistics$$Lambda+0x00007f6328084000&apos;)}
   0.53%     0x00007f63a2e02cf5:   jne    0x00007f63a2e02f9a           ;*invokeinterface apply {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - java.util.stream.ReferencePipeline$3$1::accept@12 (line 197)
                                                                       ; - java.util.stream.ReferencePipeline$2$1::accept@21 (line 179)
                                                                       ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
                                                                       ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
                                                                       ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                                                                       ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
                                                                       ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                                                                       ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearOfTheFirstPublication@32 (line 135)
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::first_publication_year@3 (line 112)
   0.00%     0x00007f63a2e02cfb:   mov    $0x1,%r14d
   0.15%     0x00007f63a2e02d01:   mov    %rsi,%r9
   0.00%     0x00007f63a2e02d04:   cmp    %r13,%rcx
             0x00007f63a2e02d07:   jne    0x00007f63a2e0531e           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics$$Lambda/0x00007f6328084000::apply@1
                                                                       ; - java.util.stream.ReferencePipeline$3$1::accept@12 (line 197)
                                                                       ; - java.util.stream.ReferencePipeline$2$1::accept@21 (line 179)
                                                                       ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
                                                                       ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
                                                                       ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                                                                       ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
                                                                       ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                                                                       ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearOfTheFirstPublication@32 (line 135)
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::first_publication_year@3 (line 112)
   0.43%     0x00007f63a2e02d0d:   mov    0xc(,%r11,8),%r11d           ;*getfield year {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.model.Publication::getYear@1 (line 43)
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics$$Lambda/0x00007f6328084000::apply@4
                                                                       ; - java.util.stream.ReferencePipeline$3$1::accept@12 (line 197)
                                                                       ; - java.util.stream.ReferencePipeline$2$1::accept@21 (line 179)
                                                                       ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
                                                                       ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
                                                                       ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                                                                       ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
                                                                       ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                                                                       ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearOfTheFirstPublication@32 (line 135)
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::first_publication_year@3 (line 112)
   0.01%     0x00007f63a2e02d15:   lea    0x80(%r11),%esi
   0.17%     0x00007f63a2e02d1c:   nopl   0x0(%rax)
             0x00007f63a2e02d20:   cmp    $0x100,%esi
          ╭  0x00007f63a2e02d26:   jb     0x00007f63a2e02e85
   0.39%  │  0x00007f63a2e02d2c:   mov    0x1b8(%r15),%rsi
   0.01%  │  0x00007f63a2e02d33:   lea    0x10(%rsi),%r13
   0.16%  │  0x00007f63a2e02d37:   nopw   0x0(%rax,%rax,1)
          │  0x00007f63a2e02d40:   cmp    0x1c8(%r15),%r13
          │  0x00007f63a2e02d47:   ja     0x00007f63a2e0346a
   0.48%  │  0x00007f63a2e02d4d:   mov    %r13,0x1b8(%r15)
   0.01%  │  0x00007f63a2e02d54:   prefetchw 0xd0(%rsi)
   0.16%  │  0x00007f63a2e02d5b:   movq   $0x1,(%rsi)
   0.00%  │  0x00007f63a2e02d62:   movl   $0x25c88,0x8(%rsi)           ;   {metadata(&apos;java/lang/Integer&apos;)}
   0.44%  │  0x00007f63a2e02d69:   mov    %r11d,0xc(%rsi)
   0.01%  │  0x00007f63a2e02d6d:   mov    %rsi,%r11                    ;* unwind (locked if synchronized)
          │                                                            ; - java.lang.Integer::valueOf@-3
          │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics$$Lambda/0x00007f6328084000::apply@7
          │                                                            ; - java.util.stream.ReferencePipeline$3$1::accept@12 (line 197)
          │                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@21 (line 179)
          │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
          │                                                            ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
          │                                                            ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
          │                                                            ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
          │                                                            ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
          │                                                            ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
          │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearOfTheFirstPublication@32 (line 135)
          │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::first_publication_year@3 (line 112)
   0.15%  │  0x00007f63a2e02d70:   mov    %r11,0x20(%rsp)
   0.00%  │  0x00007f63a2e02d75:   data16 data16 nopw 0x0(%rax,%rax,1) ; ImmutableOopMap {r8=Oop r9=Oop r11=Oop [32]=Oop [56]=Oop [72]=Oop [80]=Oop [88]=Oop [96]=Oop [104]=Oop [112]=Oop [124]=NarrowOop }
          │                                                            ;*invokeinterface accept {reexecute=1 rethrow=0 return_oop=0}
          │                                                            ; - (reexecute) java.util.stream.ReferencePipeline$3$1::accept@17 (line 197)
          │                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@21 (line 179)
          │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
          │                                                            ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
          │                                                            ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
          │                                                            ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
          │                                                            ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
          │                                                            ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
          │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearOfTheFirstPublication@32 (line 135)
          │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::first_publication_year@3 (line 112)
   0.46%  │  0x00007f63a2e02d80:   cmpl   $0x256d70,0x8(%r9)           ; implicit exception: dispatches to 0x00007f63a2e058c4
          │                                                            ;   {metadata(&apos;java/util/stream/ReduceOps$3ReducingSink&apos;)}
   0.01%  │  0x00007f63a2e02d88:   jne    0x00007f63a2e05545           ;*invokeinterface accept {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - java.util.stream.ReferencePipeline$3$1::accept@17 (line 197)
          │                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@21 (line 179)
          │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
          │                                                            ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
          │                                                            ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
          │                                                            ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
          │                                                            ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
          │                                                            ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
          │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearOfTheFirstPublication@32 (line 135)
          │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::first_publication_year@3 (line 112)
   0.16%  │  0x00007f63a2e02d8e:   mov    0xc(%r9),%r13d               ;*getfield state {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@5 (line 169)
          │                                                            ; - java.util.stream.ReferencePipeline$3$1::accept@17 (line 197)
          │                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@21 (line 179)
          │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
          │                                                            ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
          │                                                            ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
          │                                                            ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
          │                                                            ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
          │                                                            ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
          │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearOfTheFirstPublication@32 (line 135)
          │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::first_publication_year@3 (line 112)
          │  0x00007f63a2e02d92:   test   %r13d,%r13d
          │  0x00007f63a2e02d95:   je     0x00007f63a2e030a9
   0.44%  │  0x00007f63a2e02d9b:   mov    0x8(,%r13,8),%esi
   0.01%  │  0x00007f63a2e02da3:   movabs $0x7f6327000000,%r14
   0.14%  │  0x00007f63a2e02dad:   lea    (%r14,%rsi,1),%rsi           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f6328069340::accept@1
          │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
          │                                                            ; - java.util.stream.ReferencePipeline$3$1::accept@17 (line 197)
          │                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@21 (line 179)
          │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
          │                                                            ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
          │                                                            ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
          │                                                            ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
          │                                                            ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
          │                                                            ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
          │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearOfTheFirstPublication@32 (line 135)
          │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::first_publication_year@3 (line 112)
   0.00%  │  0x00007f63a2e02db1:   mov    0x14(%r9),%r14d              ; ImmutableOopMap {r8=Oop r9=Oop r11=Oop r13=NarrowOop [32]=Oop [56]=Oop [72]=Oop [80]=Oop [88]=Oop [96]=Oop [104]=Oop [112]=Oop [124]=NarrowOop }
          │                                                            ;*invokeinterface accept {reexecute=1 rethrow=0 return_oop=0}
          │                                                            ; - (reexecute) java.util.stream.ReferencePipeline$3$1::accept@17 (line 197)
          │                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@21 (line 179)
          │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
          │                                                            ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
          │                                                            ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
          │                                                            ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
          │                                                            ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
          │                                                            ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
          │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearOfTheFirstPublication@32 (line 135)
          │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::first_publication_year@3 (line 112)
   0.40%  │  0x00007f63a2e02db5:   mov    0x8(,%r14,8),%r14d           ; implicit exception: dispatches to 0x00007f63a2e058e7
   0.01%  │  0x00007f63a2e02dbd:   mov    %r9,0x18(%rsp)
   0.17%  │  0x00007f63a2e02dc2:   mov    0x18(%r8),%r9d
   0.01%  │  0x00007f63a2e02dc6:   shl    $0x3,%r9                     ;*getfield next {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@152 (line 1716)
          │                                                            ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
          │                                                            ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
          │                                                            ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
          │                                                            ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
          │                                                            ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
          │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearOfTheFirstPublication@32 (line 135)
          │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::first_publication_year@3 (line 112)
   0.42%  │  0x00007f63a2e02dca:   mov    %r13d,%ecx
   0.01%  │  0x00007f63a2e02dcd:   shl    $0x3,%rcx
   0.14%  │  0x00007f63a2e02dd1:   cmp    $0x103c3d8,%r14d             ;   {metadata(&apos;java/util/stream/Collectors$$Lambda+0x00007f632803c3d8&apos;)}
          │  0x00007f63a2e02dd8:   jne    0x00007f63a2e02e95           ;*invokeinterface accept {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
          │                                                            ; - java.util.stream.ReferencePipeline$3$1::accept@17 (line 197)
          │                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@21 (line 179)
          │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
          │                                                            ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
          │                                                            ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
          │                                                            ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
          │                                                            ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
          │                                                            ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
          │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearOfTheFirstPublication@32 (line 135)
          │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::first_publication_year@3 (line 112)
          │  0x00007f63a2e02dde:   xchg   %ax,%ax
   0.41%  │  0x00007f63a2e02de0:   cmp    %rsi,%rdi
          │  0x00007f63a2e02de3:   jne    0x00007f63a2e05505           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f632803c3d8::accept@1
          │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
          │                                                            ; - java.util.stream.ReferencePipeline$3$1::accept@17 (line 197)
          │                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@21 (line 179)
          │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
          │                                                            ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
          │                                                            ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
          │                                                            ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
          │                                                            ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
          │                                                            ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
          │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearOfTheFirstPublication@32 (line 135)
          │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::first_publication_year@3 (line 112)
   0.01%  │  0x00007f63a2e02de9:   cmpb   $0x0,0xc(,%r13,8)
   0.16%  │  0x00007f63a2e02df2:   je     0x00007f63a2e041ca           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - java.util.stream.Collectors$1OptionalBox::accept@4 (line 895)
          │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f632803c3d8::accept@5
          │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
          │                                                            ; - java.util.stream.ReferencePipeline$3$1::accept@17 (line 197)
          │                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@21 (line 179)
          │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
          │                                                            ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
          │                                                            ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
          │                                                            ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
          │                                                            ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
          │                                                            ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
          │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearOfTheFirstPublication@32 (line 135)
          │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::first_publication_year@3 (line 112)
   0.47%  │  0x00007f63a2e02df8:   mov    0x14(,%r13,8),%esi           ; ImmutableOopMap {rcx=Oop rsi=NarrowOop r8=Oop r9=Oop r11=Oop r13=NarrowOop [24]=Oop [32]=Oop [72]=Oop [80]=Oop [88]=Oop [96]=Oop [104]=Oop [112]=Oop [124]=NarrowOop }
          │                                                            ;*invokeinterface accept {reexecute=1 rethrow=0 return_oop=0}
          │                                                            ; - (reexecute) java.util.stream.ReferencePipeline$3$1::accept@17 (line 197)
          │                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@21 (line 179)
          │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
          │                                                            ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
          │                                                            ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
          │                                                            ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
          │                                                            ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
          │                                                            ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
          │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearOfTheFirstPublication@32 (line 135)
          │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::first_publication_year@3 (line 112)
   0.00%  │  0x00007f63a2e02e00:   cmpl   $0x103bf70,0x8(,%rsi,8)      ; implicit exception: dispatches to 0x00007f63a2e0590d
          │                                                            ;   {metadata(&apos;java/util/function/BinaryOperator$$Lambda+0x00007f632803bf70&apos;)}
   0.19%  │  0x00007f63a2e02e0b:   jne    0x00007f63a2e052d3           ;*invokeinterface apply {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - java.util.stream.Collectors$1OptionalBox::accept@17 (line 896)
          │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f632803c3d8::accept@5
          │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
          │                                                            ; - java.util.stream.ReferencePipeline$3$1::accept@17 (line 197)
          │                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@21 (line 179)
          │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
          │                                                            ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
          │                                                            ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
          │                                                            ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
          │                                                            ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
          │                                                            ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
          │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearOfTheFirstPublication@32 (line 135)
          │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::first_publication_year@3 (line 112)
   0.49%  │  0x00007f63a2e02e11:   mov    0xc(,%rsi,8),%esi            ;*getfield arg$1 {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - java.util.function.BinaryOperator$$Lambda/0x00007f632803bf70::apply@1
          │                                                            ; - java.util.stream.Collectors$1OptionalBox::accept@17 (line 896)
          │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f632803c3d8::accept@5
          │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
          │                                                            ; - java.util.stream.ReferencePipeline$3$1::accept@17 (line 197)
          │                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@21 (line 179)
          │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
          │                                                            ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
          │                                                            ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
          │                                                            ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
          │                                                            ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
          │                                                            ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
          │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearOfTheFirstPublication@32 (line 135)
          │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::first_publication_year@3 (line 112)
   0.00%  │  0x00007f63a2e02e18:   nopl   0x0(%rax,%rax,1)             ; ImmutableOopMap {rcx=Oop r8=Oop r9=Oop r11=Oop r13=NarrowOop [24]=Oop [32]=Oop [72]=Oop [80]=Oop [88]=Oop [96]=Oop [104]=Oop [112]=Oop [124]=NarrowOop }
          │                                                            ;*invokeinterface accept {reexecute=1 rethrow=0 return_oop=0}
          │                                                            ; - (reexecute) java.util.stream.ReferencePipeline$3$1::accept@17 (line 197)
          │                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@21 (line 179)
          │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
          │                                                            ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
          │                                                            ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
          │                                                            ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
          │                                                            ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
          │                                                            ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
          │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearOfTheFirstPublication@32 (line 135)
          │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::first_publication_year@3 (line 112)
   0.20%  │  0x00007f63a2e02e20:   cmpl   $0x103b8c8,0x8(,%rsi,8)      ; implicit exception: dispatches to 0x00007f63a2e05930
          │                                                            ;   {metadata(&apos;java/util/Comparators$NaturalOrderComparator&apos;)}
   0.45%  │  0x00007f63a2e02e2b:   jne    0x00007f63a2e05736           ;*invokeinterface compare {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - java.util.function.BinaryOperator::lambda$minBy$0@3 (line 59)
          │                                                            ; - java.util.function.BinaryOperator$$Lambda/0x00007f632803bf70::apply@6
          │                                                            ; - java.util.stream.Collectors$1OptionalBox::accept@17 (line 896)
          │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f632803c3d8::accept@5
          │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
          │                                                            ; - java.util.stream.ReferencePipeline$3$1::accept@17 (line 197)
          │                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@21 (line 179)
          │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
          │                                                            ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
          │                                                            ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
          │                                                            ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
          │                                                            ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
          │                                                            ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
          │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearOfTheFirstPublication@32 (line 135)
          │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::first_publication_year@3 (line 112)
   0.01%  │  0x00007f63a2e02e31:   mov    0x10(,%r13,8),%esi           ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - java.util.stream.Collectors$1OptionalBox::accept@13 (line 896)
          │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f632803c3d8::accept@5
          │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
          │                                                            ; - java.util.stream.ReferencePipeline$3$1::accept@17 (line 197)
          │                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@21 (line 179)
          │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
          │                                                            ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
          │                                                            ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
          │                                                            ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
          │                                                            ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
          │                                                            ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
          │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearOfTheFirstPublication@32 (line 135)
          │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::first_publication_year@3 (line 112)
   0.17%  │  0x00007f63a2e02e39:   nopl   0x0(%rax)                    ; ImmutableOopMap {rcx=Oop rsi=NarrowOop r8=Oop r9=Oop r11=Oop r13=NarrowOop [24]=Oop [32]=Oop [72]=Oop [80]=Oop [88]=Oop [96]=Oop [104]=Oop [112]=Oop [124]=NarrowOop }
          │                                                            ;*invokeinterface accept {reexecute=1 rethrow=0 return_oop=0}
          │                                                            ; - (reexecute) java.util.stream.ReferencePipeline$3$1::accept@17 (line 197)
          │                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@21 (line 179)
          │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
          │                                                            ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
          │                                                            ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
          │                                                            ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
          │                                                            ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
          │                                                            ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
          │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearOfTheFirstPublication@32 (line 135)
          │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::first_publication_year@3 (line 112)
          │  0x00007f63a2e02e40:   cmpl   $0x25c88,0x8(,%rsi,8)        ; implicit exception: dispatches to 0x00007f63a2e05953
          │                                                            ;   {metadata(&apos;java/lang/Integer&apos;)}
   0.45%  │  0x00007f63a2e02e4b:   jne    0x00007f63a2e056e9           ; ImmutableOopMap {rcx=Oop rsi=NarrowOop r8=Oop r9=Oop r11=Oop r13=NarrowOop [24]=Oop [32]=Oop [72]=Oop [80]=Oop [88]=Oop [96]=Oop [104]=Oop [112]=Oop [124]=NarrowOop }
          │                                                            ;*invokeinterface accept {reexecute=1 rethrow=0 return_oop=0}
          │                                                            ; - (reexecute) java.util.stream.ReferencePipeline$3$1::accept@17 (line 197)
          │                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@21 (line 179)
          │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
          │                                                            ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
          │                                                            ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
          │                                                            ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
          │                                                            ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
          │                                                            ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
          │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearOfTheFirstPublication@32 (line 135)
          │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::first_publication_year@3 (line 112)
   0.16%  │  0x00007f63a2e02e51:   cmpl   $0x25c88,0x8(%r11)           ; implicit exception: dispatches to 0x00007f63a2e05976
          │                                                            ;   {metadata(&apos;java/lang/Integer&apos;)}
   0.00%  │  0x00007f63a2e02e59:   jne    0x00007f63a2e05369           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - java.util.Comparators$NaturalOrderComparator::compare@6 (line 47)
          │                                                            ; - java.util.function.BinaryOperator::lambda$minBy$0@3 (line 59)
          │                                                            ; - java.util.function.BinaryOperator$$Lambda/0x00007f632803bf70::apply@6
          │                                                            ; - java.util.stream.Collectors$1OptionalBox::accept@17 (line 896)
          │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f632803c3d8::accept@5
          │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
          │                                                            ; - java.util.stream.ReferencePipeline$3$1::accept@17 (line 197)
          │                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@21 (line 179)
          │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
          │                                                            ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
          │                                                            ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
          │                                                            ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
          │                                                            ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
          │                                                            ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
          │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearOfTheFirstPublication@32 (line 135)
          │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::first_publication_year@3 (line 112)
   0.44%  │  0x00007f63a2e02e5f:   mov    0xc(%r11),%r8d               ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - java.lang.Integer::compareTo@5 (line 1466)
          │                                                            ; - java.lang.Integer::compareTo@5 (line 72)
          │                                                            ; - java.util.Comparators$NaturalOrderComparator::compare@2 (line 52)
          │                                                            ; - java.util.Comparators$NaturalOrderComparator::compare@9 (line 47)
          │                                                            ; - java.util.function.BinaryOperator::lambda$minBy$0@3 (line 59)
          │                                                            ; - java.util.function.BinaryOperator$$Lambda/0x00007f632803bf70::apply@6
          │                                                            ; - java.util.stream.Collectors$1OptionalBox::accept@17 (line 896)
          │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f632803c3d8::accept@5
          │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
          │                                                            ; - java.util.stream.ReferencePipeline$3$1::accept@17 (line 197)
          │                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@21 (line 179)
          │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
          │                                                            ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
          │                                                            ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
          │                                                            ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
          │                                                            ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
          │                                                            ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
          │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearOfTheFirstPublication@32 (line 135)
          │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::first_publication_year@3 (line 112)
   0.01%  │  0x00007f63a2e02e63:   cmp    0xc(,%rsi,8),%r8d
          │  0x00007f63a2e02e6b:   jl     0x00007f63a2e03bfb           ;*ifgt {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - java.util.function.BinaryOperator::lambda$minBy$0@8 (line 59)
          │                                                            ; - java.util.function.BinaryOperator$$Lambda/0x00007f632803bf70::apply@6
          │                                                            ; - java.util.stream.Collectors$1OptionalBox::accept@17 (line 896)
          │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f632803c3d8::accept@5
          │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
          │                                                            ; - java.util.stream.ReferencePipeline$3$1::accept@17 (line 197)
          │                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@21 (line 179)
          │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
          │                                                            ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
          │                                                            ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
          │                                                            ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
          │                                                            ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
          │                                                            ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
          │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearOfTheFirstPublication@32 (line 135)
          │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::first_publication_year@3 (line 112)
   0.15%  │  0x00007f63a2e02e71:   mov    %r9,%r8
   0.44%  │  0x00007f63a2e02e74:   mov    0xb8(%rsp),%rdx
   0.01%  │  0x00007f63a2e02e7c:   nopl   0x0(%rax)
   0.17%  │  0x00007f63a2e02e80:   jmp    0x00007f63a2e02b3d
          ↘  0x00007f63a2e02e85:   mov    0x10(%rdx,%rsi,4),%esi
             0x00007f63a2e02e89:   shl    $0x3,%rsi                    ;* unwind (locked if synchronized)
                                                                       ; - java.lang.Integer::valueOf@-3
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics$$Lambda/0x00007f6328084000::apply@7
                                                                       ; - java.util.stream.ReferencePipeline$3$1::accept@12 (line 197)
                                                                       ; - java.util.stream.ReferencePipeline$2$1::accept@21 (line 179)
                                                                       ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
                                                                       ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
                                                                       ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                                                                       ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
....................................................................................................
  64.58%  <total for region 1>

....[Hottest Region 2]..............................................................................
jvmci, level 4, com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::first_publication_year, version 4, compile id 1284 

               0x00007f63a2e02b14:   nopl   0x0(%rax,%rax,1)
               0x00007f63a2e02b1c:   data16 data16 xchg %ax,%ax          ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - java.util.HashMap$KeySpliterator::forEachRemaining@124 (line 1712)
                                                                         ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
                                                                         ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                                                                         ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
                                                                         ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                                                                         ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
                                                                         ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearOfTheFirstPublication@32 (line 135)
                                                                         ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::first_publication_year@3 (line 112)
   0.42%   ↗   0x00007f63a2e02b20:   cmp    %r10d,%r11d
           │   0x00007f63a2e02b23:   jbe    0x00007f63a2e052a0
   0.02%   │   0x00007f63a2e02b29:   mov    0x10(%rsi,%r10,4),%r8d
   1.64%   │   0x00007f63a2e02b2e:   shl    $0x3,%r8                     ;*aaload {reexecute=0 rethrow=0 return_oop=0}
           │                                                             ; - java.util.HashMap$KeySpliterator::forEachRemaining@133 (line 1713)
           │                                                             ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
           │                                                             ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
           │                                                             ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
           │                                                             ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
           │                                                             ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
           │                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearOfTheFirstPublication@32 (line 135)
           │                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::first_publication_year@3 (line 112)
   0.20%   │   0x00007f63a2e02b32:   inc    %r10d                        ;*iinc {reexecute=0 rethrow=0 return_oop=0}
           │                                                             ; - java.util.HashMap$KeySpliterator::forEachRemaining@130 (line 1713)
           │                                                             ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
           │                                                             ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
           │                                                             ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
           │                                                             ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
           │                                                             ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
           │                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearOfTheFirstPublication@32 (line 135)
           │                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::first_publication_year@3 (line 112)
   0.36%   │   0x00007f63a2e02b35:   mov    0xb8(%rsp),%rdx              ;*aload {reexecute=0 rethrow=0 return_oop=0}
           │                                                             ; - java.util.HashMap$KeySpliterator::forEachRemaining@157 (line 1718)
           │                                                             ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
           │                                                             ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
           │                                                             ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
           │                                                             ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
           │                                                             ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
           │                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearOfTheFirstPublication@32 (line 135)
           │                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::first_publication_year@3 (line 112)
           │   0x00007f63a2e02b3d:   data16 xchg %ax,%ax
   1.46%   │   0x00007f63a2e02b40:   test   %r8,%r8
          ╭│   0x00007f63a2e02b43:   jne    0x00007f63a2e02bd6           ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
          ││                                                             ; - java.util.HashMap$KeySpliterator::forEachRemaining@159 (line 1718)
          ││                                                             ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
          ││                                                             ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
          ││                                                             ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
          ││                                                             ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
          ││                                                             ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
          ││                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearOfTheFirstPublication@32 (line 135)
          ││                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::first_publication_year@3 (line 112)
   0.31%  ││   0x00007f63a2e02b49:   mov    0xc0(%rsp),%r9d
   0.63%  ││   0x00007f63a2e02b51:   cmp    %r10d,%r9d
          ││   0x00007f63a2e02b54:   jle    0x00007f63a2e046e7           ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
          ││                                                             ; - java.util.HashMap$KeySpliterator::forEachRemaining@164 (line 1718)
          ││                                                             ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
          ││                                                             ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
          ││                                                             ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
          ││                                                             ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
          ││                                                             ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
          ││                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearOfTheFirstPublication@32 (line 135)
          ││                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::first_publication_year@3 (line 112)
   0.43%  ││↗  0x00007f63a2e02b5a:   mov    0xb4(%rsp),%esi
   1.21%  │││  0x00007f63a2e02b61:   inc    %esi
   0.36%  │││  0x00007f63a2e02b63:   cmp    $0x2000,%esi
          │││  0x00007f63a2e02b69:   jge    0x00007f63a2e055e1
   0.58%  │││  0x00007f63a2e02b6f:   mov    %esi,0xb4(%rsp)
   0.56%  │││  0x00007f63a2e02b76:   movabs $0x7f632802bd18,%rbx         ;   {metadata(&apos;com/ionutbalosin/jvm/performance/benchmarks/miscellaneous/publicationstatistics/PublicationStatistics$$Lambda+0x00007f632802bd18&apos;)}
   1.15%  │││  0x00007f63a2e02b80:   movabs $0x7f632802b6f8,%rcx         ;   {metadata(&apos;com/ionutbalosin/jvm/performance/benchmarks/miscellaneous/publicationstatistics/model/Publication&apos;)}
   0.28%  │││  0x00007f63a2e02b8a:   movabs $0x7f632700e8d8,%rbp         ;   {metadata(&apos;java/lang/String&apos;)}
   0.45%  │││  0x00007f63a2e02b94:   movabs $0x7f63270deff0,%rdi         ;   {metadata(&apos;java/util/stream/Collectors$1OptionalBox&apos;)}
   0.58%  │││  0x00007f63a2e02b9e:   movabs $0x7f63270bc3f8,%rax         ;   {metadata(&apos;java/util/ArrayList&apos;)}
   1.09%  │││  0x00007f63a2e02ba8:   mov    0x50(%rsp),%rsi
   0.62%  │││  0x00007f63a2e02bad:   mov    0xb0(%rsp),%r11d
   0.38%  │││  0x00007f63a2e02bb5:   vpxor  %xmm0,%xmm0,%xmm0
   0.30%  │││  0x00007f63a2e02bb9:   movabs $0x7ffed2180,%rdx            ;   {oop(a &apos;java/lang/Integer&apos;[256] {0x00000007ffed2180})}
   1.08%  │││  0x00007f63a2e02bc3:   mov    0x68(%rsp),%r9               ;*aload {reexecute=0 rethrow=0 return_oop=0}
          │││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@122 (line 1712)
          │││                                                            ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
          │││                                                            ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
          │││                                                            ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
          │││                                                            ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
          │││                                                            ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
          │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearOfTheFirstPublication@32 (line 135)
          │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::first_publication_year@3 (line 112)
   0.45%  │││  0x00007f63a2e02bc8:   test   %r8,%r8
          │╰│  0x00007f63a2e02bcb:   je     0x00007f63a2e02b20
          │ │  0x00007f63a2e02bd1:   jmp    0x00007f63a2e02c00           ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
          │ │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@124 (line 1712)
          │ │                                                            ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
          │ │                                                            ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
          │ │                                                            ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
          │ │                                                            ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
          │ │                                                            ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
          │ │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearOfTheFirstPublication@32 (line 135)
          │ │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::first_publication_year@3 (line 112)
   0.76%  ↘ │  0x00007f63a2e02bd6:   mov    0xc0(%rsp),%r9d
   1.13%    │  0x00007f63a2e02bde:   xchg   %ax,%ax
            ╰  0x00007f63a2e02be0:   jmp    0x00007f63a2e02b5a
               0x00007f63a2e02be5:   data16 data16 nopw 0x0(%rax,%rax,1)
               0x00007f63a2e02bf0:   data16 data16 xchg %ax,%ax
               0x00007f63a2e02bf4:   nopl   0x0(%rax,%rax,1)
               0x00007f63a2e02bfc:   data16 data16 xchg %ax,%ax          ;*getfield val$predicate {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - java.util.stream.ReferencePipeline$2$1::accept@4 (line 178)
                                                                         ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
                                                                         ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
                                                                         ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                                                                         ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
....................................................................................................
  16.45%  <total for region 2>

....[Hottest Region 3]..............................................................................
jvmci, level 4, java.util.HashMap$KeySpliterator::forEachRemaining, version 6, compile id 1209 

                  0x00007f63a2dd3230:   mov    %rbp,0x88(%rsp)
                  0x00007f63a2dd3238:   movabs $0x7ffed2180,%rbp            ;   {oop(a &apos;java/lang/Integer&apos;[256] {0x00000007ffed2180})}
                  0x00007f63a2dd3242:   movabs $0x7f632802b6f8,%rbp         ;   {metadata(&apos;com/ionutbalosin/jvm/performance/benchmarks/miscellaneous/publicationstatistics/model/Publication&apos;)}
                  0x00007f63a2dd324c:   movabs $0x7f632802bd18,%rbp         ;   {metadata(&apos;com/ionutbalosin/jvm/performance/benchmarks/miscellaneous/publicationstatistics/PublicationStatistics$$Lambda+0x00007f632802bd18&apos;)}
                  0x00007f63a2dd3256:   movabs $0x7f632802b6f8,%r10         ;   {metadata(&apos;com/ionutbalosin/jvm/performance/benchmarks/miscellaneous/publicationstatistics/model/Publication&apos;)}
                  0x00007f63a2dd3260:   movabs $0x7ffed2180,%r11            ;   {oop(a &apos;java/lang/Integer&apos;[256] {0x00000007ffed2180})}
                  0x00007f63a2dd326a:   movabs $0x7f632700e8d8,%r8          ;   {metadata(&apos;java/lang/String&apos;)}
                  0x00007f63a2dd3274:   jmp    0x00007f63a2dd4ddf
                  0x00007f63a2dd3279:   nopl   0x0(%rax)                    ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@124 (line 1712)
   0.02%   ↗      0x00007f63a2dd3280:   cmp    %r9d,%ebx
           │      0x00007f63a2dd3283:   jbe    0x00007f63a2dd5025
   0.01%   │      0x00007f63a2dd3289:   mov    0x10(%rcx,%r9,4),%edi
   0.37%   │      0x00007f63a2dd328e:   shl    $0x3,%rdi                    ;*aaload {reexecute=0 rethrow=0 return_oop=0}
           │                                                                ; - java.util.HashMap$KeySpliterator::forEachRemaining@133 (line 1713)
   0.12%   │      0x00007f63a2dd3292:   inc    %r9d                         ;*iinc {reexecute=0 rethrow=0 return_oop=0}
           │                                                                ; - java.util.HashMap$KeySpliterator::forEachRemaining@130 (line 1713)
           │      0x00007f63a2dd3295:   mov    %rdx,%r13
           │      0x00007f63a2dd3298:   mov    0x98(%rsp),%rdx              ;*aload {reexecute=0 rethrow=0 return_oop=0}
           │                                                                ; - java.util.HashMap$KeySpliterator::forEachRemaining@157 (line 1718)
   0.28%   │   ↗  0x00007f63a2dd32a0:   test   %rdi,%rdi
          ╭│   │  0x00007f63a2dd32a3:   jne    0x00007f63a2dd3333           ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
          ││   │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@159 (line 1718)
   0.15%  ││   │  0x00007f63a2dd32a9:   mov    0xb0(%rsp),%r8d
   0.07%  ││   │  0x00007f63a2dd32b1:   cmp    %r9d,%r8d
          ││   │  0x00007f63a2dd32b4:   jle    0x00007f63a2dd4c6b           ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
          ││   │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@164 (line 1718)
   0.12%  ││ ↗ │  0x00007f63a2dd32ba:   mov    0x84(%rsp),%esi
   0.24%  ││ │ │  0x00007f63a2dd32c1:   inc    %esi
   0.10%  ││ │ │  0x00007f63a2dd32c3:   cmp    $0x2000,%esi
          ││ │ │  0x00007f63a2dd32c9:   jge    0x00007f63a2dd4d5d
   0.09%  ││ │ │  0x00007f63a2dd32cf:   mov    %esi,0x84(%rsp)
   0.12%  ││ │ │  0x00007f63a2dd32d6:   movabs $0x7f632802bd18,%rbp         ;   {metadata(&apos;com/ionutbalosin/jvm/performance/benchmarks/miscellaneous/publicationstatistics/PublicationStatistics$$Lambda+0x00007f632802bd18&apos;)}
   0.19%  ││ │ │  0x00007f63a2dd32e0:   movabs $0x7f632802b6f8,%r10         ;   {metadata(&apos;com/ionutbalosin/jvm/performance/benchmarks/miscellaneous/publicationstatistics/model/Publication&apos;)}
   0.10%  ││ │ │  0x00007f63a2dd32ea:   movabs $0x7ffed2180,%r11            ;   {oop(a &apos;java/lang/Integer&apos;[256] {0x00000007ffed2180})}
   0.02%  ││ │ │  0x00007f63a2dd32f4:   movabs $0x7f63270deff0,%r14         ;   {metadata(&apos;java/util/stream/Collectors$1OptionalBox&apos;)}
   0.13%  ││ │ │  0x00007f63a2dd32fe:   vpxor  %xmm0,%xmm0,%xmm0
   0.20%  ││ │ │  0x00007f63a2dd3302:   mov    0x50(%rsp),%rcx
   0.10%  ││ │ │  0x00007f63a2dd3307:   mov    0xac(%rsp),%ebx
   0.03%  ││ │ │  0x00007f63a2dd330e:   mov    %r13,%rdx
   0.05%  ││ │ │  0x00007f63a2dd3311:   movabs $0x7f632700e8d8,%r8          ;   {metadata(&apos;java/lang/String&apos;)}
   0.23%  ││ │ │  0x00007f63a2dd331b:   movabs $0x7f63270bc3f8,%r13         ;   {metadata(&apos;java/util/ArrayList&apos;)}
   0.14%  ││ │ │  0x00007f63a2dd3325:   test   %rdi,%rdi
          │╰ │ │  0x00007f63a2dd3328:   je     0x00007f63a2dd3280
          │ ╭│ │  0x00007f63a2dd332e:   jmp    0x00007f63a2dd3340           ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
          │ ││ │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@124 (line 1712)
   0.30%  ↘ ││ │  0x00007f63a2dd3333:   mov    0xb0(%rsp),%r8d
   0.26%    │╰ │  0x00007f63a2dd333b:   jmp    0x00007f63a2dd32ba           ;*getfield val$predicate {reexecute=0 rethrow=0 return_oop=0}
            │  │                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@4 (line 178)
            │  │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.09%    ↘  │  0x00007f63a2dd3340:   mov    0x10(%rdx),%ecx              ; ImmutableOopMap {rdx=Oop rdi=Oop r11=Oop [72]=Oop [80]=Oop [92]=NarrowOop [96]=Oop }
               │                                                            ;*aload {reexecute=1 rethrow=0 return_oop=0}
               │                                                            ; - (reexecute) java.util.HashMap$KeySpliterator::forEachRemaining@122 (line 1712)
   0.12%       │  0x00007f63a2dd3343:   mov    0x34(,%rcx,8),%ecx           ; implicit exception: dispatches to 0x00007f63a2dd51f3
   0.27%       │  0x00007f63a2dd334a:   test   %ecx,%ecx
               │  0x00007f63a2dd334c:   je     0x00007f63a2dd3725
   0.05%       │  0x00007f63a2dd3352:   mov    0x8(,%rcx,8),%ebx
   0.31%       │  0x00007f63a2dd3359:   mov    %ecx,0x44(%rsp)
               │  0x00007f63a2dd335d:   movabs $0x7f6327000000,%rcx
               │  0x00007f63a2dd3367:   lea    (%rcx,%rbx,1),%rbx           ;*invokeinterface test {reexecute=0 rethrow=0 return_oop=0}
               │                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@8 (line 178)
               │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.06%       │  0x00007f63a2dd336b:   mov    0x10(%rdi),%ecx
   4.87%       │  0x00007f63a2dd336e:   test   %ecx,%ecx
               │  0x00007f63a2dd3370:   je     0x00007f63a2dd3735
   0.10%       │  0x00007f63a2dd3376:   mov    0x8(,%rcx,8),%eax
   3.32%       │  0x00007f63a2dd337d:   movabs $0x7f6327000000,%rsi
   0.00%       │  0x00007f63a2dd3387:   lea    (%rsi,%rax,1),%rax
   0.13%       │  0x00007f63a2dd338b:   mov    %rdi,0x38(%rsp)
               │  0x00007f63a2dd3390:   mov    %ecx,%esi
               │  0x00007f63a2dd3392:   shl    $0x3,%rsi                    ;*getfield key {reexecute=0 rethrow=0 return_oop=0}
               │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@142 (line 1715)
   0.00%       │  0x00007f63a2dd3396:   cmp    %rbx,%rbp
               │  0x00007f63a2dd3399:   jne    0x00007f63a2dd4066           ;*invokeinterface test {reexecute=0 rethrow=0 return_oop=0}
               │                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@8 (line 178)
               │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.10%       │  0x00007f63a2dd339f:   nop
               │  0x00007f63a2dd33a0:   cmp    %rax,%r10
               │  0x00007f63a2dd33a3:   jne    0x00007f63a2dd5034           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
               │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics$$Lambda/0x00007f632802bd18::test@1
               │                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@8 (line 178)
               │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
               │  0x00007f63a2dd33a9:   cmpl   $0x76c,0xc(,%rcx,8)
   0.16%       │  0x00007f63a2dd33b4:   jl     0x00007f63a2dd4fdd           ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
               │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::lambda$yearOfTheFirstPublication$9@7 (line 133)
               │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics$$Lambda/0x00007f632802bd18::test@4
               │                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@8 (line 178)
               │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.02%       │  0x00007f63a2dd33ba:   mov    0xc(%rdx),%ebx
               │  0x00007f63a2dd33bd:   mov    %ebx,%edx
   0.00%       │  0x00007f63a2dd33bf:   shl    $0x3,%rdx                    ;*getfield downstream {reexecute=0 rethrow=0 return_oop=0}
               │                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@17 (line 179)
               │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.08%       │  0x00007f63a2dd33c3:   test   %ebx,%ebx
               │  0x00007f63a2dd33c5:   je     0x00007f63a2dd3745
   0.03%       │  0x00007f63a2dd33cb:   cmpl   $0x227550,0x8(,%rbx,8)       ;   {metadata(&apos;java/util/stream/ReferencePipeline$3$1&apos;)}
               │  0x00007f63a2dd33d6:   jne    0x00007f63a2dd45be           ;*invokeinterface accept {reexecute=0 rethrow=0 return_oop=0}
               │                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@21 (line 179)
               │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.10%       │  0x00007f63a2dd33dc:   mov    0x10(,%rbx,8),%edx           ; ImmutableOopMap {rcx=NarrowOop rbx=NarrowOop rsi=Oop rdi=Oop r11=Oop [56]=Oop [72]=Oop [80]=Oop [92]=NarrowOop [96]=Oop }
               │                                                            ;*aload {reexecute=1 rethrow=0 return_oop=0}
               │                                                            ; - (reexecute) java.util.HashMap$KeySpliterator::forEachRemaining@122 (line 1712)
   0.03%       │  0x00007f63a2dd33e3:   mov    0x34(,%rdx,8),%edx           ; implicit exception: dispatches to 0x00007f63a2dd5216
               │  0x00007f63a2dd33ea:   mov    0xc(,%rbx,8),%ebx
               │  0x00007f63a2dd33f1:   shl    $0x3,%rbx                    ;*getfield downstream {reexecute=0 rethrow=0 return_oop=0}
               │                                                            ; - java.util.stream.ReferencePipeline$3$1::accept@1 (line 197)
               │                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@21 (line 179)
               │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.10%       │  0x00007f63a2dd33f5:   mov    %edx,%ebp
   0.02%       │  0x00007f63a2dd33f7:   shl    $0x3,%rbp                    ;*getfield val$mapper {reexecute=0 rethrow=0 return_oop=0}
               │                                                            ; - java.util.stream.ReferencePipeline$3$1::accept@8 (line 197)
               │                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@21 (line 179)
               │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
               │  0x00007f63a2dd33fb:   nopl   0x0(%rax,%rax,1)
   0.01%       │  0x00007f63a2dd3400:   test   %edx,%edx
               │  0x00007f63a2dd3402:   je     0x00007f63a2dd3794
   0.08%       │  0x00007f63a2dd3408:   cmpl   $0x1084000,0x8(,%rdx,8)      ;   {metadata(&apos;com/ionutbalosin/jvm/performance/benchmarks/miscellaneous/publicationstatistics/PublicationStatistics$$Lambda+0x00007f6328084000&apos;)}
   0.04%       │  0x00007f63a2dd3413:   jne    0x00007f63a2dd36bc           ;*invokeinterface apply {reexecute=0 rethrow=0 return_oop=0}
               │                                                            ; - java.util.stream.ReferencePipeline$3$1::accept@12 (line 197)
               │                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@21 (line 179)
               │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
               │  0x00007f63a2dd3419:   mov    $0x1,%edx
   0.09%       │  0x00007f63a2dd341e:   xchg   %ax,%ax
   0.03%       │  0x00007f63a2dd3420:   cmp    %rax,%r10
               │  0x00007f63a2dd3423:   jne    0x00007f63a2dd512f           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
               │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics$$Lambda/0x00007f6328084000::apply@1
               │                                                            ; - java.util.stream.ReferencePipeline$3$1::accept@12 (line 197)
               │                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@21 (line 179)
               │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
               │  0x00007f63a2dd3429:   mov    0xc(,%rcx,8),%ecx            ;*getfield year {reexecute=0 rethrow=0 return_oop=0}
               │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.model.Publication::getYear@1 (line 43)
               │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics$$Lambda/0x00007f6328084000::apply@4
               │                                                            ; - java.util.stream.ReferencePipeline$3$1::accept@12 (line 197)
               │                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@21 (line 179)
               │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.00%       │  0x00007f63a2dd3430:   lea    0x80(%rcx),%eax
   0.10%       │  0x00007f63a2dd3436:   data16 nopw 0x0(%rax,%rax,1)
   0.03%       │  0x00007f63a2dd3440:   cmp    $0x100,%eax
              ╭│  0x00007f63a2dd3446:   jb     0x00007f63a2dd35a5
              ││  0x00007f63a2dd344c:   mov    0x1b8(%r15),%rax
              ││  0x00007f63a2dd3453:   lea    0x10(%rax),%rbp
   0.09%      ││  0x00007f63a2dd3457:   nopw   0x0(%rax,%rax,1)
   0.02%      ││  0x00007f63a2dd3460:   cmp    0x1c8(%r15),%rbp
              ││  0x00007f63a2dd3467:   ja     0x00007f63a2dd3bd6
   0.00%      ││  0x00007f63a2dd346d:   mov    %rbp,0x1b8(%r15)
   0.00%      ││  0x00007f63a2dd3474:   prefetchw 0xd0(%rax)
   0.10%      ││  0x00007f63a2dd347b:   movq   $0x1,(%rax)
   0.03%      ││  0x00007f63a2dd3482:   movl   $0x25c88,0x8(%rax)           ;   {metadata(&apos;java/lang/Integer&apos;)}
              ││  0x00007f63a2dd3489:   mov    %ecx,0xc(%rax)               ;* unwind (locked if synchronized)
              ││                                                            ; - java.lang.Integer::valueOf@-3
              ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics$$Lambda/0x00007f6328084000::apply@7
              ││                                                            ; - java.util.stream.ReferencePipeline$3$1::accept@12 (line 197)
              ││                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@21 (line 179)
              ││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.00%      ││  0x00007f63a2dd348c:   mov    %rbx,%rcx
   0.09%      ││  0x00007f63a2dd348f:   mov    %rax,%rbx                    ; ImmutableOopMap {rcx=Oop rbx=Oop rdi=Oop [56]=Oop [72]=Oop [80]=Oop [92]=NarrowOop [96]=Oop }
              ││                                                            ;*invokeinterface accept {reexecute=1 rethrow=0 return_oop=0}
              ││                                                            ; - (reexecute) java.util.stream.ReferencePipeline$3$1::accept@17 (line 197)
              ││                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@21 (line 179)
              ││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.02%      ││  0x00007f63a2dd3492:   cmpl   $0x256d70,0x8(%rcx)          ; implicit exception: dispatches to 0x00007f63a2dd5239
              ││                                                            ;   {metadata(&apos;java/util/stream/ReduceOps$3ReducingSink&apos;)}
              ││  0x00007f63a2dd3499:   jne    0x00007f63a2dd5043           ;*invokeinterface accept {reexecute=0 rethrow=0 return_oop=0}
              ││                                                            ; - java.util.stream.ReferencePipeline$3$1::accept@17 (line 197)
              ││                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@21 (line 179)
              ││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.00%      ││  0x00007f63a2dd349f:   mov    0xc(%rcx),%ebp               ;*getfield state {reexecute=0 rethrow=0 return_oop=0}
              ││                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@5 (line 169)
              ││                                                            ; - java.util.stream.ReferencePipeline$3$1::accept@17 (line 197)
              ││                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@21 (line 179)
              ││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.09%      ││  0x00007f63a2dd34a2:   test   %ebp,%ebp
              ││  0x00007f63a2dd34a4:   je     0x00007f63a2dd3788
   0.03%      ││  0x00007f63a2dd34aa:   mov    0x8(,%rbp,8),%esi
              ││  0x00007f63a2dd34b1:   movabs $0x7f6327000000,%rax
   0.00%      ││  0x00007f63a2dd34bb:   lea    (%rax,%rsi,1),%rsi           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
              ││                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f6328069340::accept@1
              ││                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
              ││                                                            ; - java.util.stream.ReferencePipeline$3$1::accept@17 (line 197)
              ││                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@21 (line 179)
              ││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.09%      ││  0x00007f63a2dd34bf:   mov    0x14(%rcx),%eax              ; ImmutableOopMap {rcx=Oop rbx=Oop rbp=NarrowOop rdi=Oop [56]=Oop [72]=Oop [80]=Oop [92]=NarrowOop [96]=Oop }
              ││                                                            ;*invokeinterface accept {reexecute=1 rethrow=0 return_oop=0}
              ││                                                            ; - (reexecute) java.util.stream.ReferencePipeline$3$1::accept@17 (line 197)
              ││                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@21 (line 179)
              ││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.04%      ││  0x00007f63a2dd34c2:   mov    0x8(,%rax,8),%eax            ; implicit exception: dispatches to 0x00007f63a2dd525c
              ││  0x00007f63a2dd34c9:   mov    0x18(%rdi),%edx
              ││  0x00007f63a2dd34cc:   shl    $0x3,%rdx                    ;*getfield next {reexecute=0 rethrow=0 return_oop=0}
              ││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@152 (line 1716)
   0.10%      ││  0x00007f63a2dd34d0:   mov    %rdx,0x20(%rsp)
   0.03%      ││  0x00007f63a2dd34d5:   mov    %rcx,0x18(%rsp)
              ││  0x00007f63a2dd34da:   mov    %ebp,%ecx
              ││  0x00007f63a2dd34dc:   shl    $0x3,%rcx                    ;*getfield state {reexecute=0 rethrow=0 return_oop=0}
              ││                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@5 (line 169)
              ││                                                            ; - java.util.stream.ReferencePipeline$3$1::accept@17 (line 197)
              ││                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@21 (line 179)
              ││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.10%      ││  0x00007f63a2dd34e0:   mov    %rcx,0x10(%rsp)
   0.01%      ││  0x00007f63a2dd34e5:   cmp    $0x103c3d8,%eax              ;   {metadata(&apos;java/util/stream/Collectors$$Lambda+0x00007f632803c3d8&apos;)}
              ││  0x00007f63a2dd34eb:   jne    0x00007f63a2dd35b9           ;*invokeinterface accept {reexecute=0 rethrow=0 return_oop=0}
              ││                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
              ││                                                            ; - java.util.stream.ReferencePipeline$3$1::accept@17 (line 197)
              ││                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@21 (line 179)
              ││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
              ││  0x00007f63a2dd34f1:   cmp    %rsi,%r14
              ││  0x00007f63a2dd34f4:   jne    0x00007f63a2dd4f32           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
              ││                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f632803c3d8::accept@1
              ││                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
              ││                                                            ; - java.util.stream.ReferencePipeline$3$1::accept@17 (line 197)
              ││                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@21 (line 179)
              ││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.00%      ││  0x00007f63a2dd34fa:   nopw   0x0(%rax,%rax,1)
   0.09%      ││  0x00007f63a2dd3500:   cmpb   $0x0,0xc(,%rbp,8)
   0.03%      ││  0x00007f63a2dd3508:   je     0x00007f63a2dd4752           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
              ││                                                            ; - java.util.stream.Collectors$1OptionalBox::accept@4 (line 895)
              ││                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f632803c3d8::accept@5
              ││                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
              ││                                                            ; - java.util.stream.ReferencePipeline$3$1::accept@17 (line 197)
              ││                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@21 (line 179)
              ││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.00%      ││  0x00007f63a2dd350e:   mov    0x14(,%rbp,8),%esi           ;*getfield val$op {reexecute=0 rethrow=0 return_oop=0}
              ││                                                            ; - java.util.stream.Collectors$1OptionalBox::accept@9 (line 896)
              ││                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f632803c3d8::accept@5
              ││                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
              ││                                                            ; - java.util.stream.ReferencePipeline$3$1::accept@17 (line 197)
              ││                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@21 (line 179)
              ││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.08%      ││  0x00007f63a2dd3515:   data16 data16 nopw 0x0(%rax,%rax,1) ; ImmutableOopMap {rdx=Oop rbx=Oop rbp=NarrowOop rsi=NarrowOop rdi=Oop [16]=Oop [24]=Oop [32]=Oop [72]=Oop [80]=Oop [92]=NarrowOop [96]=Oop }
              ││                                                            ;*invokeinterface accept {reexecute=1 rethrow=0 return_oop=0}
              ││                                                            ; - (reexecute) java.util.stream.ReferencePipeline$3$1::accept@17 (line 197)
              ││                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@21 (line 179)
              ││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.02%      ││  0x00007f63a2dd3520:   cmpl   $0x103bf70,0x8(,%rsi,8)      ; implicit exception: dispatches to 0x00007f63a2dd527f
              ││                                                            ;   {metadata(&apos;java/util/function/BinaryOperator$$Lambda+0x00007f632803bf70&apos;)}
              ││  0x00007f63a2dd352b:   jne    0x00007f63a2dd5055           ;*invokeinterface apply {reexecute=0 rethrow=0 return_oop=0}
              ││                                                            ; - java.util.stream.Collectors$1OptionalBox::accept@17 (line 896)
              ││                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f632803c3d8::accept@5
              ││                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
              ││                                                            ; - java.util.stream.ReferencePipeline$3$1::accept@17 (line 197)
              ││                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@21 (line 179)
              ││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.08%      ││  0x00007f63a2dd3531:   mov    0xc(,%rsi,8),%esi            ;*getfield arg$1 {reexecute=0 rethrow=0 return_oop=0}
              ││                                                            ; - java.util.function.BinaryOperator$$Lambda/0x00007f632803bf70::apply@1
              ││                                                            ; - java.util.stream.Collectors$1OptionalBox::accept@17 (line 896)
              ││                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f632803c3d8::accept@5
              ││                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
              ││                                                            ; - java.util.stream.ReferencePipeline$3$1::accept@17 (line 197)
              ││                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@21 (line 179)
              ││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.03%      ││  0x00007f63a2dd3538:   nopl   0x0(%rax,%rax,1)             ; ImmutableOopMap {rdx=Oop rbx=Oop rbp=NarrowOop rdi=Oop [16]=Oop [24]=Oop [32]=Oop [72]=Oop [80]=Oop [92]=NarrowOop [96]=Oop }
              ││                                                            ;*invokeinterface accept {reexecute=1 rethrow=0 return_oop=0}
              ││                                                            ; - (reexecute) java.util.stream.ReferencePipeline$3$1::accept@17 (line 197)
              ││                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@21 (line 179)
              ││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.00%      ││  0x00007f63a2dd3540:   cmpl   $0x103b8c8,0x8(,%rsi,8)      ; implicit exception: dispatches to 0x00007f63a2dd52a2
              ││                                                            ;   {metadata(&apos;java/util/Comparators$NaturalOrderComparator&apos;)}
   0.06%      ││  0x00007f63a2dd354b:   jne    0x00007f63a2dd4cf1
   0.03%      ││  0x00007f63a2dd3551:   cmpl   $0x25c88,0x8(%rbx)           ;   {metadata(&apos;java/lang/Integer&apos;)}
              ││  0x00007f63a2dd3558:   jne    0x00007f63a2dd50a5           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
              ││                                                            ; - java.util.Comparators$NaturalOrderComparator::compare@6 (line 47)
              ││                                                            ; - java.util.function.BinaryOperator::lambda$minBy$0@3 (line 59)
              ││                                                            ; - java.util.function.BinaryOperator$$Lambda/0x00007f632803bf70::apply@6
              ││                                                            ; - java.util.stream.Collectors$1OptionalBox::accept@17 (line 896)
              ││                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f632803c3d8::accept@5
              ││                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
              ││                                                            ; - java.util.stream.ReferencePipeline$3$1::accept@17 (line 197)
              ││                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@21 (line 179)
              ││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
              ││  0x00007f63a2dd355e:   mov    0x10(,%rbp,8),%esi           ; ImmutableOopMap {rdx=Oop rbx=Oop rbp=NarrowOop rsi=NarrowOop rdi=Oop [16]=Oop [24]=Oop [32]=Oop [72]=Oop [80]=Oop [92]=NarrowOop [96]=Oop }
              ││                                                            ;*invokeinterface accept {reexecute=1 rethrow=0 return_oop=0}
              ││                                                            ; - (reexecute) java.util.stream.ReferencePipeline$3$1::accept@17 (line 197)
              ││                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@21 (line 179)
              ││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.07%      ││  0x00007f63a2dd3565:   cmpl   $0x25c88,0x8(,%rsi,8)        ; implicit exception: dispatches to 0x00007f63a2dd52c5
              ││                                                            ;   {metadata(&apos;java/lang/Integer&apos;)}
   0.02%      ││  0x00007f63a2dd3570:   jne    0x00007f63a2dd500d           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
              ││                                                            ; - java.util.Comparators$NaturalOrderComparator::compare@2 (line 47)
              ││                                                            ; - java.util.function.BinaryOperator::lambda$minBy$0@3 (line 59)
              ││                                                            ; - java.util.function.BinaryOperator$$Lambda/0x00007f632803bf70::apply@6
              ││                                                            ; - java.util.stream.Collectors$1OptionalBox::accept@17 (line 896)
              ││                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f632803c3d8::accept@5
              ││                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
              ││                                                            ; - java.util.stream.ReferencePipeline$3$1::accept@17 (line 197)
              ││                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@21 (line 179)
              ││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
              ││  0x00007f63a2dd3576:   mov    0xc(%rbx),%eax               ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
              ││                                                            ; - java.lang.Integer::compareTo@5 (line 1466)
              ││                                                            ; - java.lang.Integer::compareTo@5 (line 72)
              ││                                                            ; - java.util.Comparators$NaturalOrderComparator::compare@2 (line 52)
              ││                                                            ; - java.util.Comparators$NaturalOrderComparator::compare@9 (line 47)
              ││                                                            ; - java.util.function.BinaryOperator::lambda$minBy$0@3 (line 59)
              ││                                                            ; - java.util.function.BinaryOperator$$Lambda/0x00007f632803bf70::apply@6
              ││                                                            ; - java.util.stream.Collectors$1OptionalBox::accept@17 (line 896)
              ││                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f632803c3d8::accept@5
              ││                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
              ││                                                            ; - java.util.stream.ReferencePipeline$3$1::accept@17 (line 197)
              ││                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@21 (line 179)
              ││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.07%      ││  0x00007f63a2dd3579:   nopl   0x0(%rax)
   0.02%      ││  0x00007f63a2dd3580:   cmp    0xc(,%rsi,8),%eax
              ││  0x00007f63a2dd3587:   jl     0x00007f63a2dd434a           ;*ifgt {reexecute=0 rethrow=0 return_oop=0}
              ││                                                            ; - java.util.function.BinaryOperator::lambda$minBy$0@8 (line 59)
              ││                                                            ; - java.util.function.BinaryOperator$$Lambda/0x00007f632803bf70::apply@6
              ││                                                            ; - java.util.stream.Collectors$1OptionalBox::accept@17 (line 896)
              ││                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f632803c3d8::accept@5
              ││                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
              ││                                                            ; - java.util.stream.ReferencePipeline$3$1::accept@17 (line 197)
              ││                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@21 (line 179)
              ││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.00%      ││  0x00007f63a2dd358d:   mov    %rdx,%rdi
   0.09%      ││  0x00007f63a2dd3590:   mov    0x98(%rsp),%rdx
   0.03%      ││  0x00007f63a2dd3598:   mov    0x60(%rsp),%r13
              ││  0x00007f63a2dd359d:   data16 xchg %ax,%ax
              │╰  0x00007f63a2dd35a0:   jmp    0x00007f63a2dd32a0
              ↘   0x00007f63a2dd35a5:   mov    0x10(%r11,%rax,4),%esi
                  0x00007f63a2dd35aa:   shl    $0x3,%rsi                    ;* unwind (locked if synchronized)
                                                                            ; - java.lang.Integer::valueOf@-3
                                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics$$Lambda/0x00007f6328084000::apply@7
                                                                            ; - java.util.stream.ReferencePipeline$3$1::accept@12 (line 197)
                                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@21 (line 179)
                                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
                  0x00007f63a2dd35ae:   mov    %rbx,%rcx
....................................................................................................
  15.32%  <total for region 3>

....[Hottest Regions]...............................................................................
  64.58%       jvmci, level 4  com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::first_publication_year, version 4, compile id 1284 
  16.45%       jvmci, level 4  com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::first_publication_year, version 4, compile id 1284 
  15.32%       jvmci, level 4  java.util.HashMap$KeySpliterator::forEachRemaining, version 6, compile id 1209 
   0.98%               kernel  [unknown] 
   0.20%               kernel  [unknown] 
   0.12%               kernel  [unknown] 
   0.09%               kernel  [unknown] 
   0.07%               kernel  [unknown] 
   0.07%               kernel  [unknown] 
   0.06%               kernel  [unknown] 
   0.04%               kernel  [unknown] 
   0.04%               kernel  [unknown] 
   0.04%               kernel  [unknown] 
   0.03%               kernel  [unknown] 
   0.03%            libjvm.so  CompilerOracle::has_option_value<bool> 
   0.03%               kernel  [unknown] 
   0.03%               kernel  [unknown] 
   0.03%               kernel  [unknown] 
   0.03%               kernel  [unknown] 
   0.02%               kernel  [unknown] 
   1.75%  <...other 564 warm regions...>
....................................................................................................
 100.00%  <totals>

....[Hottest Methods (after inlining)]..............................................................
  81.04%       jvmci, level 4  com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::first_publication_year, version 4, compile id 1284 
  15.32%       jvmci, level 4  java.util.HashMap$KeySpliterator::forEachRemaining, version 6, compile id 1209 
   2.68%               kernel  [unknown] 
   0.09%                       <unknown> 
   0.03%            libjvm.so  CompilerOracle::has_option_value<bool> 
   0.03%         libc-2.31.so  __vfprintf_internal 
   0.02%            libjvm.so  xmlStream::write_text 
   0.02%           ld-2.31.so  __tls_get_addr 
   0.02%            libjvm.so  fileStream::write 
   0.01%         libc-2.31.so  __strchrnul_avx2 
   0.01%         libc-2.31.so  _IO_default_xsputn 
   0.01%  libjvmcicompiler.so  com.oracle.svm.core.genscavenge.GreyToBlackObjRefVisitor::visitObjectReferenceInline 
   0.01%            libjvm.so  defaultStream::write 
   0.01%   libpthread-2.31.so  __libc_write 
   0.01%         libc-2.31.so  syscall 
   0.01%         libc-2.31.so  clock_gettime@GLIBC_2.2.5 
   0.01%            libjvm.so  SpinPause 
   0.01%            libjvm.so  G1CardSet::occupied 
   0.01%       hsdis-amd64.so  print_insn 
   0.01%  libjvmcicompiler.so  org.graalvm.collections.EconomicMapImpl::findHash 
   0.64%  <...other 261 warm methods...>
....................................................................................................
 100.00%  <totals>

....[Distribution by Source]........................................................................
  96.35%       jvmci, level 4
   2.68%               kernel
   0.35%            libjvm.so
   0.26%  libjvmcicompiler.so
   0.16%         libc-2.31.so
   0.09%                     
   0.03%   libpthread-2.31.so
   0.02%          interpreter
   0.02%       hsdis-amd64.so
   0.02%           ld-2.31.so
   0.01%          c1, level 3
   0.01%               [vdso]
   0.01%     perf-2147542.map
....................................................................................................
 100.00%  <totals>



# JMH version: 1.37
# VM version: JDK 21, Java HotSpot(TM) 64-Bit Server VM, 21+35-jvmci-23.1-b15
# VM invoker: /home/gogu/bench_jdks/graalvm-jdk-21+35.1/bin/java
# VM options: -XX:ThreadPriorityPolicy=1 -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCIProduct -XX:-UnlockExperimentalVMOptions -Xms4g -Xmx4g -XX:+AlwaysPreTouch
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark.last_publication_year

# Run progress: 21.43% complete, ETA 00:21:26
# Fork: 1 of 1
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 8.133 ms/op
# Warmup Iteration   2: 5.193 ms/op
# Warmup Iteration   3: 5.038 ms/op
# Warmup Iteration   4: 5.238 ms/op
# Warmup Iteration   5: 5.034 ms/op
Iteration   1: 5.143 ms/op
Iteration   2: 5.031 ms/op
Iteration   3: 5.024 ms/op
Iteration   4: 3.030 ms/op
Iteration   5: 2.478 ms/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark.last_publication_year":
  4.141 ±(99.9%) 4.938 ms/op [Average]
  (min, avg, max) = (2.478, 4.141, 5.143), stdev = 1.282
  CI (99.9%): [≈ 0, 9.080] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark.last_publication_year:asm":
PrintAssembly processed: 312805 total address lines.
Perf output processed (skipped 62.543 seconds):
 Column 1: cycles (51481 events)

Hottest code regions (>10.00% "cycles" events):
 Event counts are percents of total event count.

....[Hottest Region 1]..............................................................................
jvmci, level 4, java.util.HashMap$KeySpliterator::forEachRemaining, version 8, compile id 1241 

   0.74%       0x00007fcc4ade5b39:   mov    0xb0(%rsp),%r8d
   1.03%       0x00007fcc4ade5b41:   jmp    0x00007fcc4ade5abd
               0x00007fcc4ade5b46:   data16 data16 nopw 0x0(%rax,%rax,1)
               0x00007fcc4ade5b51:   data16 data16 xchg %ax,%ax
               0x00007fcc4ade5b55:   data16 data16 nopw 0x0(%rax,%rax,1) ;*getfield val$predicate {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - java.util.stream.ReferencePipeline$2$1::accept@4 (line 178)
                                                                         ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
               0x00007fcc4ade5b60:   mov    0x10(%r10),%ebx              ; ImmutableOopMap {rcx=Oop r8=Oop r10=Oop [80]=Oop [88]=Oop [100]=NarrowOop [104]=Oop }
                                                                         ;*aload {reexecute=1 rethrow=0 return_oop=0}
                                                                         ; - (reexecute) java.util.HashMap$KeySpliterator::forEachRemaining@122 (line 1712)
   0.19%       0x00007fcc4ade5b64:   mov    0x34(,%rbx,8),%ebx           ; implicit exception: dispatches to 0x00007fcc4ade7b1b
   0.74%       0x00007fcc4ade5b6b:   test   %ebx,%ebx
               0x00007fcc4ade5b6d:   je     0x00007fcc4ade5f1c
   0.35%       0x00007fcc4ade5b73:   mov    0x8(,%rbx,8),%edi
   0.81%       0x00007fcc4ade5b7a:   mov    %ebx,0x4c(%rsp)
               0x00007fcc4ade5b7e:   movabs $0x7fcbcf000000,%rbx
   0.16%       0x00007fcc4ade5b88:   lea    (%rbx,%rdi,1),%rdi           ;*invokeinterface test {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - java.util.stream.ReferencePipeline$2$1::accept@8 (line 178)
                                                                         ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.40%       0x00007fcc4ade5b8c:   mov    0x10(%rcx),%ebx
  20.34%       0x00007fcc4ade5b8f:   test   %ebx,%ebx
               0x00007fcc4ade5b91:   je     0x00007fcc4ade5f2c
   0.32%       0x00007fcc4ade5b97:   mov    0x8(,%rbx,8),%eax
  13.47%       0x00007fcc4ade5b9e:   movabs $0x7fcbcf000000,%r13
   0.02%       0x00007fcc4ade5ba8:   lea    0x0(%r13,%rax,1),%rax
   1.25%       0x00007fcc4ade5bad:   mov    %rcx,0x40(%rsp)
               0x00007fcc4ade5bb2:   mov    %ebx,%r13d
   0.05%       0x00007fcc4ade5bb5:   shl    $0x3,%r13                    ;*getfield key {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - java.util.HashMap$KeySpliterator::forEachRemaining@142 (line 1715)
   0.03%       0x00007fcc4ade5bb9:   mov    %r13,0x38(%rsp)
   0.51%       0x00007fcc4ade5bbe:   xchg   %ax,%ax
               0x00007fcc4ade5bc0:   cmp    %rdi,%rdx
               0x00007fcc4ade5bc3:   jne    0x00007fcc4ade6765           ;*invokeinterface test {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - java.util.stream.ReferencePipeline$2$1::accept@8 (line 178)
                                                                         ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.05%       0x00007fcc4ade5bc9:   cmp    %rax,%r11
               0x00007fcc4ade5bcc:   jne    0x00007fcc4ade75a5           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics$$Lambda/0x00007fcbd002bd18::test@1
                                                                         ; - java.util.stream.ReferencePipeline$2$1::accept@8 (line 178)
                                                                         ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.04%       0x00007fcc4ade5bd2:   data16 nopw 0x0(%rax,%rax,1)
   0.38%       0x00007fcc4ade5bdc:   data16 data16 xchg %ax,%ax
               0x00007fcc4ade5be0:   cmpl   $0x76c,0xc(,%rbx,8)
   0.10%       0x00007fcc4ade5beb:   jl     0x00007fcc4ade74b9           ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::lambda$yearOfTheLastPublication$10@7 (line 145)
                                                                         ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics$$Lambda/0x00007fcbd002bd18::test@4
                                                                         ; - java.util.stream.ReferencePipeline$2$1::accept@8 (line 178)
                                                                         ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.41%       0x00007fcc4ade5bf1:   mov    0xc(%r10),%edi
   0.00%       0x00007fcc4ade5bf5:   mov    %edi,%r13d
   0.05%       0x00007fcc4ade5bf8:   shl    $0x3,%r13                    ;*getfield downstream {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - java.util.stream.ReferencePipeline$2$1::accept@17 (line 179)
                                                                         ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.04%       0x00007fcc4ade5bfc:   nopl   0x0(%rax)
   0.44%       0x00007fcc4ade5c00:   test   %edi,%edi
               0x00007fcc4ade5c02:   je     0x00007fcc4ade5f38
               0x00007fcc4ade5c08:   cmpl   $0x227550,0x8(,%rdi,8)       ;   {metadata(&apos;java/util/stream/ReferencePipeline$3$1&apos;)}
   0.09%       0x00007fcc4ade5c13:   jne    0x00007fcc4ade6f77           ;*invokeinterface accept {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - java.util.stream.ReferencePipeline$2$1::accept@21 (line 179)
                                                                         ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.41%       0x00007fcc4ade5c19:   mov    0x10(,%rdi,8),%r13d          ; ImmutableOopMap {rcx=Oop rbx=NarrowOop rdi=NarrowOop r8=Oop [56]=Oop [64]=Oop [80]=Oop [88]=Oop [100]=NarrowOop [104]=Oop }
                                                                         ;*aload {reexecute=1 rethrow=0 return_oop=0}
                                                                         ; - (reexecute) java.util.HashMap$KeySpliterator::forEachRemaining@122 (line 1712)
               0x00007fcc4ade5c21:   mov    0x34(,%r13,8),%r13d          ; implicit exception: dispatches to 0x00007fcc4ade7b3e
   0.05%       0x00007fcc4ade5c29:   mov    0xc(,%rdi,8),%edi
   0.02%       0x00007fcc4ade5c30:   shl    $0x3,%rdi                    ;*getfield downstream {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - java.util.stream.ReferencePipeline$3$1::accept@1 (line 197)
                                                                         ; - java.util.stream.ReferencePipeline$2$1::accept@21 (line 179)
                                                                         ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.38%       0x00007fcc4ade5c34:   mov    %r13d,%r10d
               0x00007fcc4ade5c37:   shl    $0x3,%r10                    ;*getfield val$mapper {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - java.util.stream.ReferencePipeline$3$1::accept@8 (line 197)
                                                                         ; - java.util.stream.ReferencePipeline$2$1::accept@21 (line 179)
                                                                         ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.04%       0x00007fcc4ade5c3b:   nopl   0x0(%rax,%rax,1)
   0.04%       0x00007fcc4ade5c40:   test   %r13d,%r13d
               0x00007fcc4ade5c43:   je     0x00007fcc4ade6000
   0.40%       0x00007fcc4ade5c49:   cmpl   $0x1084000,0x8(,%r13,8)      ;   {metadata(&apos;com/ionutbalosin/jvm/performance/benchmarks/miscellaneous/publicationstatistics/PublicationStatistics$$Lambda+0x00007fcbd0084000&apos;)}
   0.05%       0x00007fcc4ade5c55:   jne    0x00007fcc4ade5f85           ;*invokeinterface apply {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - java.util.stream.ReferencePipeline$3$1::accept@12 (line 197)
                                                                         ; - java.util.stream.ReferencePipeline$2$1::accept@21 (line 179)
                                                                         ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.03%       0x00007fcc4ade5c5b:   mov    $0x1,%r10d
   0.43%       0x00007fcc4ade5c61:   cmp    %rax,%r11
               0x00007fcc4ade5c64:   jne    0x00007fcc4ade7391           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics$$Lambda/0x00007fcbd0084000::apply@1
                                                                         ; - java.util.stream.ReferencePipeline$3$1::accept@12 (line 197)
                                                                         ; - java.util.stream.ReferencePipeline$2$1::accept@21 (line 179)
                                                                         ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
               0x00007fcc4ade5c6a:   mov    0xc(,%rbx,8),%ebx            ;*getfield year {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.model.Publication::getYear@1 (line 43)
                                                                         ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics$$Lambda/0x00007fcbd0084000::apply@4
                                                                         ; - java.util.stream.ReferencePipeline$3$1::accept@12 (line 197)
                                                                         ; - java.util.stream.ReferencePipeline$2$1::accept@21 (line 179)
                                                                         ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.06%       0x00007fcc4ade5c71:   lea    0x80(%rbx),%eax
   0.04%       0x00007fcc4ade5c77:   nopw   0x0(%rax,%rax,1)
   0.42%       0x00007fcc4ade5c80:   cmp    $0x100,%eax
          ╭    0x00007fcc4ade5c86:   jb     0x00007fcc4ade5dff
          │    0x00007fcc4ade5c8c:   mov    0x1b8(%r15),%rax
   0.04%  │    0x00007fcc4ade5c93:   lea    0x10(%rax),%r13
   0.04%  │    0x00007fcc4ade5c97:   nopw   0x0(%rax,%rax,1)
   0.41%  │    0x00007fcc4ade5ca0:   cmp    0x1c8(%r15),%r13
          │    0x00007fcc4ade5ca7:   ja     0x00007fcc4ade6465
          │    0x00007fcc4ade5cad:   mov    %r13,0x1b8(%r15)
   0.05%  │    0x00007fcc4ade5cb4:   prefetchw 0xd0(%rax)
   0.05%  │    0x00007fcc4ade5cbb:   movq   $0x1,(%rax)
   0.45%  │    0x00007fcc4ade5cc2:   movl   $0x25c88,0x8(%rax)           ;   {metadata(&apos;java/lang/Integer&apos;)}
          │    0x00007fcc4ade5cc9:   mov    %ebx,0xc(%rax)
   0.04%  │    0x00007fcc4ade5ccc:   mov    %rax,%r10                    ;* unwind (locked if synchronized)
          │                                                              ; - java.lang.Integer::valueOf@-3
          │                                                              ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics$$Lambda/0x00007fcbd0084000::apply@7
          │                                                              ; - java.util.stream.ReferencePipeline$3$1::accept@12 (line 197)
          │                                                              ; - java.util.stream.ReferencePipeline$2$1::accept@21 (line 179)
          │                                                              ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.04%  │ ↗  0x00007fcc4ade5ccf:   mov    %r10,0x28(%rsp)
   0.40%  │ │  0x00007fcc4ade5cd4:   nopl   0x0(%rax,%rax,1)
          │ │  0x00007fcc4ade5cdc:   data16 data16 xchg %ax,%ax          ; ImmutableOopMap {rcx=Oop rdi=Oop r10=Oop [40]=Oop [64]=Oop [80]=Oop [88]=Oop [100]=NarrowOop [104]=Oop }
          │ │                                                            ;*invokeinterface accept {reexecute=1 rethrow=0 return_oop=0}
          │ │                                                            ; - (reexecute) java.util.stream.ReferencePipeline$3$1::accept@17 (line 197)
          │ │                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@21 (line 179)
          │ │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.05%  │ │  0x00007fcc4ade5ce0:   cmpl   $0x256d70,0x8(%rdi)          ; implicit exception: dispatches to 0x00007fcc4ade7b61
          │ │                                                            ;   {metadata(&apos;java/util/stream/ReduceOps$3ReducingSink&apos;)}
   0.04%  │ │  0x00007fcc4ade5ce7:   jne    0x00007fcc4ade75fa           ;*invokeinterface accept {reexecute=0 rethrow=0 return_oop=0}
          │ │                                                            ; - java.util.stream.ReferencePipeline$3$1::accept@17 (line 197)
          │ │                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@21 (line 179)
          │ │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.42%  │ │  0x00007fcc4ade5ced:   mov    0xc(%rdi),%ebx               ;*getfield state {reexecute=0 rethrow=0 return_oop=0}
          │ │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@5 (line 169)
          │ │                                                            ; - java.util.stream.ReferencePipeline$3$1::accept@17 (line 197)
          │ │                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@21 (line 179)
          │ │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
          │ │  0x00007fcc4ade5cf0:   test   %ebx,%ebx
          │ │  0x00007fcc4ade5cf2:   je     0x00007fcc4ade5ff4
   0.07%  │ │  0x00007fcc4ade5cf8:   mov    0x8(,%rbx,8),%eax
   0.04%  │ │  0x00007fcc4ade5cff:   movabs $0x7fcbcf000000,%r13
   0.42%  │ │  0x00007fcc4ade5d09:   lea    0x0(%r13,%rax,1),%rax        ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
          │ │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007fcbd0069340::accept@1
          │ │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
          │ │                                                            ; - java.util.stream.ReferencePipeline$3$1::accept@17 (line 197)
          │ │                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@21 (line 179)
          │ │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.00%  │ │  0x00007fcc4ade5d0e:   mov    0x14(%rdi),%r13d             ; ImmutableOopMap {rcx=Oop rbx=NarrowOop rdi=Oop r10=Oop [40]=Oop [64]=Oop [80]=Oop [88]=Oop [100]=NarrowOop [104]=Oop }
          │ │                                                            ;*invokeinterface accept {reexecute=1 rethrow=0 return_oop=0}
          │ │                                                            ; - (reexecute) java.util.stream.ReferencePipeline$3$1::accept@17 (line 197)
          │ │                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@21 (line 179)
          │ │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.05%  │ │  0x00007fcc4ade5d12:   mov    0x8(,%r13,8),%r13d           ; implicit exception: dispatches to 0x00007fcc4ade7b84
   0.03%  │ │  0x00007fcc4ade5d1a:   mov    %rdi,0x20(%rsp)
   0.42%  │ │  0x00007fcc4ade5d1f:   mov    0x18(%rcx),%edi
   0.01%  │ │  0x00007fcc4ade5d22:   shl    $0x3,%rdi                    ;*getfield next {reexecute=0 rethrow=0 return_oop=0}
          │ │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@152 (line 1716)
   0.04%  │ │  0x00007fcc4ade5d26:   mov    %rdi,0x18(%rsp)
   0.05%  │ │  0x00007fcc4ade5d2b:   mov    %ebx,%r11d
   0.42%  │ │  0x00007fcc4ade5d2e:   shl    $0x3,%r11                    ;*getfield state {reexecute=0 rethrow=0 return_oop=0}
          │ │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@5 (line 169)
          │ │                                                            ; - java.util.stream.ReferencePipeline$3$1::accept@17 (line 197)
          │ │                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@21 (line 179)
          │ │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
          │ │  0x00007fcc4ade5d32:   mov    %r11,0x10(%rsp)
   0.04%  │ │  0x00007fcc4ade5d37:   nopw   0x0(%rax,%rax,1)
   0.03%  │ │  0x00007fcc4ade5d40:   cmp    $0x103c3d8,%r13d             ;   {metadata(&apos;java/util/stream/Collectors$$Lambda+0x00007fcbd003c3d8&apos;)}
          │╭│  0x00007fcc4ade5d47:   jne    0x00007fcc4ade5e0d           ;*invokeinterface accept {reexecute=0 rethrow=0 return_oop=0}
          │││                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
          │││                                                            ; - java.util.stream.ReferencePipeline$3$1::accept@17 (line 197)
          │││                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@21 (line 179)
          │││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.46%  │││  0x00007fcc4ade5d4d:   cmp    %rax,%r14
          │││  0x00007fcc4ade5d50:   jne    0x00007fcc4ade784c           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
          │││                                                            ; - java.util.stream.Collectors$$Lambda/0x00007fcbd003c3d8::accept@1
          │││                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
          │││                                                            ; - java.util.stream.ReferencePipeline$3$1::accept@17 (line 197)
          │││                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@21 (line 179)
          │││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
          │││  0x00007fcc4ade5d56:   data16 nopw 0x0(%rax,%rax,1)
   0.04%  │││  0x00007fcc4ade5d60:   cmpb   $0x0,0xc(,%rbx,8)
   0.47%  │││  0x00007fcc4ade5d68:   je     0x00007fcc4ade6bab           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
          │││                                                            ; - java.util.stream.Collectors$1OptionalBox::accept@4 (line 895)
          │││                                                            ; - java.util.stream.Collectors$$Lambda/0x00007fcbd003c3d8::accept@5
          │││                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
          │││                                                            ; - java.util.stream.ReferencePipeline$3$1::accept@17 (line 197)
          │││                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@21 (line 179)
          │││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
          │││  0x00007fcc4ade5d6e:   mov    0x14(,%rbx,8),%eax           ;*getfield val$op {reexecute=0 rethrow=0 return_oop=0}
          │││                                                            ; - java.util.stream.Collectors$1OptionalBox::accept@9 (line 896)
          │││                                                            ; - java.util.stream.Collectors$$Lambda/0x00007fcbd003c3d8::accept@5
          │││                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
          │││                                                            ; - java.util.stream.ReferencePipeline$3$1::accept@17 (line 197)
          │││                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@21 (line 179)
          │││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.04%  │││  0x00007fcc4ade5d75:   data16 data16 nopw 0x0(%rax,%rax,1) ; ImmutableOopMap {rax=NarrowOop rcx=Oop rbx=NarrowOop rdi=Oop r10=Oop r11=Oop [24]=Oop [32]=Oop [80]=Oop [88]=Oop [100]=NarrowOop [104]=Oop }
          │││                                                            ;*invokeinterface accept {reexecute=1 rethrow=0 return_oop=0}
          │││                                                            ; - (reexecute) java.util.stream.ReferencePipeline$3$1::accept@17 (line 197)
          │││                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@21 (line 179)
          │││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.03%  │││  0x00007fcc4ade5d80:   cmpl   $0x103bf70,0x8(,%rax,8)      ; implicit exception: dispatches to 0x00007fcc4ade7ba7
          │││                                                            ;   {metadata(&apos;java/util/function/BinaryOperator$$Lambda+0x00007fcbd003bf70&apos;)}
   0.45%  │││  0x00007fcc4ade5d8b:   jne    0x00007fcc4ade777c           ;*invokeinterface apply {reexecute=0 rethrow=0 return_oop=0}
          │││                                                            ; - java.util.stream.Collectors$1OptionalBox::accept@17 (line 896)
          │││                                                            ; - java.util.stream.Collectors$$Lambda/0x00007fcbd003c3d8::accept@5
          │││                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
          │││                                                            ; - java.util.stream.ReferencePipeline$3$1::accept@17 (line 197)
          │││                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@21 (line 179)
          │││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.05%  │││  0x00007fcc4ade5d91:   mov    0xc(,%rax,8),%eax            ;*getfield arg$1 {reexecute=0 rethrow=0 return_oop=0}
          │││                                                            ; - java.util.function.BinaryOperator$$Lambda/0x00007fcbd003bf70::apply@1
          │││                                                            ; - java.util.stream.Collectors$1OptionalBox::accept@17 (line 896)
          │││                                                            ; - java.util.stream.Collectors$$Lambda/0x00007fcbd003c3d8::accept@5
          │││                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
          │││                                                            ; - java.util.stream.ReferencePipeline$3$1::accept@17 (line 197)
          │││                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@21 (line 179)
          │││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.04%  │││  0x00007fcc4ade5d98:   nopl   0x0(%rax,%rax,1)             ; ImmutableOopMap {rcx=Oop rbx=NarrowOop rdi=Oop r10=Oop r11=Oop [24]=Oop [32]=Oop [80]=Oop [88]=Oop [100]=NarrowOop [104]=Oop }
          │││                                                            ;*invokeinterface accept {reexecute=1 rethrow=0 return_oop=0}
          │││                                                            ; - (reexecute) java.util.stream.ReferencePipeline$3$1::accept@17 (line 197)
          │││                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@21 (line 179)
          │││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.38%  │││  0x00007fcc4ade5da0:   cmpl   $0x103b8c8,0x8(,%rax,8)      ; implicit exception: dispatches to 0x00007fcc4ade7bcd
          │││                                                            ;   {metadata(&apos;java/util/Comparators$NaturalOrderComparator&apos;)}
   0.05%  │││  0x00007fcc4ade5dab:   jne    0x00007fcc4ade7543
   0.05%  │││  0x00007fcc4ade5db1:   cmpl   $0x25c88,0x8(%r10)           ;   {metadata(&apos;java/lang/Integer&apos;)}
   0.36%  │││  0x00007fcc4ade5db9:   jne    0x00007fcc4ade774c           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
          │││                                                            ; - java.util.Comparators$NaturalOrderComparator::compare@6 (line 47)
          │││                                                            ; - java.util.function.BinaryOperator::lambda$maxBy$1@3 (line 74)
          │││                                                            ; - java.util.function.BinaryOperator$$Lambda/0x00007fcbd003bf70::apply@6
          │││                                                            ; - java.util.stream.Collectors$1OptionalBox::accept@17 (line 896)
          │││                                                            ; - java.util.stream.Collectors$$Lambda/0x00007fcbd003c3d8::accept@5
          │││                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
          │││                                                            ; - java.util.stream.ReferencePipeline$3$1::accept@17 (line 197)
          │││                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@21 (line 179)
          │││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.00%  │││  0x00007fcc4ade5dbf:   mov    0x10(,%rbx,8),%eax           ; ImmutableOopMap {rax=NarrowOop rcx=Oop rbx=NarrowOop rdi=Oop r10=Oop r11=Oop [24]=Oop [32]=Oop [80]=Oop [88]=Oop [100]=NarrowOop [104]=Oop }
          │││                                                            ;*invokeinterface accept {reexecute=1 rethrow=0 return_oop=0}
          │││                                                            ; - (reexecute) java.util.stream.ReferencePipeline$3$1::accept@17 (line 197)
          │││                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@21 (line 179)
          │││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.05%  │││  0x00007fcc4ade5dc6:   cmpl   $0x25c88,0x8(,%rax,8)        ; implicit exception: dispatches to 0x00007fcc4ade7bf0
          │││                                                            ;   {metadata(&apos;java/lang/Integer&apos;)}
   0.43%  │││  0x00007fcc4ade5dd1:   jne    0x00007fcc4ade78bd           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
          │││                                                            ; - java.util.Comparators$NaturalOrderComparator::compare@2 (line 47)
          │││                                                            ; - java.util.function.BinaryOperator::lambda$maxBy$1@3 (line 74)
          │││                                                            ; - java.util.function.BinaryOperator$$Lambda/0x00007fcbd003bf70::apply@6
          │││                                                            ; - java.util.stream.Collectors$1OptionalBox::accept@17 (line 896)
          │││                                                            ; - java.util.stream.Collectors$$Lambda/0x00007fcbd003c3d8::accept@5
          │││                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
          │││                                                            ; - java.util.stream.ReferencePipeline$3$1::accept@17 (line 197)
          │││                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@21 (line 179)
          │││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
          │││  0x00007fcc4ade5dd7:   mov    0xc(,%rax,8),%ecx            ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
          │││                                                            ; - java.lang.Integer::compareTo@1 (line 1466)
          │││                                                            ; - java.lang.Integer::compareTo@5 (line 72)
          │││                                                            ; - java.util.Comparators$NaturalOrderComparator::compare@2 (line 52)
          │││                                                            ; - java.util.Comparators$NaturalOrderComparator::compare@9 (line 47)
          │││                                                            ; - java.util.function.BinaryOperator::lambda$maxBy$1@3 (line 74)
          │││                                                            ; - java.util.function.BinaryOperator$$Lambda/0x00007fcbd003bf70::apply@6
          │││                                                            ; - java.util.stream.Collectors$1OptionalBox::accept@17 (line 896)
          │││                                                            ; - java.util.stream.Collectors$$Lambda/0x00007fcbd003c3d8::accept@5
          │││                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
          │││                                                            ; - java.util.stream.ReferencePipeline$3$1::accept@17 (line 197)
          │││                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@21 (line 179)
          │││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.03%  │││  0x00007fcc4ade5dde:   xchg   %ax,%ax
   0.02%  │││  0x00007fcc4ade5de0:   cmp    0xc(%r10),%ecx
          │││  0x00007fcc4ade5de4:   jl     0x00007fcc4ade78ed           ;*iflt {reexecute=0 rethrow=0 return_oop=0}
          │││                                                            ; - java.util.function.BinaryOperator::lambda$maxBy$1@8 (line 74)
          │││                                                            ; - java.util.function.BinaryOperator$$Lambda/0x00007fcbd003bf70::apply@6
          │││                                                            ; - java.util.stream.Collectors$1OptionalBox::accept@17 (line 896)
          │││                                                            ; - java.util.stream.Collectors$$Lambda/0x00007fcbd003c3d8::accept@5
          │││                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
          │││                                                            ; - java.util.stream.ReferencePipeline$3$1::accept@17 (line 197)
          │││                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@21 (line 179)
          │││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.41%  │││  0x00007fcc4ade5dea:   mov    %rdi,%r10
          │││  0x00007fcc4ade5ded:   mov    0x98(%rsp),%rcx
   0.05%  │││  0x00007fcc4ade5df5:   mov    0x68(%rsp),%rbp
   0.03%  │││  0x00007fcc4ade5dfa:   jmp    0x00007fcc4ade5aa3
          ↘││  0x00007fcc4ade5dff:   mov    0x10(%r8,%rax,4),%r10d
           ││  0x00007fcc4ade5e04:   shl    $0x3,%r10                    ;* unwind (locked if synchronized)
           ││                                                            ; - java.lang.Integer::valueOf@-3
           ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics$$Lambda/0x00007fcbd0084000::apply@7
           ││                                                            ; - java.util.stream.ReferencePipeline$3$1::accept@12 (line 197)
           ││                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@21 (line 179)
           ││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
           │╰  0x00007fcc4ade5e08:   jmp    0x00007fcc4ade5ccf
           ↘   0x00007fcc4ade5e0d:   cmp    $0x1069340,%r13d             ;   {metadata(&apos;java/util/stream/Collectors$$Lambda+0x00007fcbd0069340&apos;)}
               0x00007fcc4ade5e14:   jne    0x00007fcc4ade740d           ;*invokeinterface accept {reexecute=0 rethrow=0 return_oop=0}
....................................................................................................
  49.73%  <total for region 1>

....[Hottest Region 2]..............................................................................
jvmci, level 4, com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::last_publication_year, version 6, compile id 1335 

                                    0x00007fcc4ae05833:   nopw   0x0(%rax,%rax,1)
                                    0x00007fcc4ae0583c:   data16 data16 xchg %ax,%ax          ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                                                              ; - java.util.HashMap$KeySpliterator::forEachRemaining@124 (line 1712)
                                                                                              ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
                                                                                              ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                                                                                              ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
                                                                                              ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                                                                                              ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
                                                                                              ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearOfTheLastPublication@32 (line 147)
                                                                                              ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::last_publication_year@3 (line 118)
   0.22%         ↗                  0x00007fcc4ae05840:   cmp    %ebx,%r11d
                 │                  0x00007fcc4ae05843:   jbe    0x00007fcc4ae06766
   0.03%         │                  0x00007fcc4ae05849:   mov    0x10(%r8,%rbx,4),%esi
   0.03%         │                  0x00007fcc4ae0584e:   mov    %esi,%eax
   0.08%         │                  0x00007fcc4ae05850:   shl    $0x3,%rax                    ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                 │                                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@133 (line 1713)
                 │                                                                            ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
                 │                                                                            ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                 │                                                                            ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
                 │                                                                            ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                 │                                                                            ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
                 │                                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearOfTheLastPublication@32 (line 147)
                 │                                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::last_publication_year@3 (line 118)
   0.24%         │                  0x00007fcc4ae05854:   inc    %ebx                         ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                 │                                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@130 (line 1713)
                 │                                                                            ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
                 │                                                                            ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                 │                                                                            ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
                 │                                                                            ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                 │                                                                            ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
                 │                                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearOfTheLastPublication@32 (line 147)
                 │                                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::last_publication_year@3 (line 118)
   0.02%         │                  0x00007fcc4ae05856:   test   %esi,%esi
          ╭      │                  0x00007fcc4ae05858:   jne    0x00007fcc4ae05ac5           ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
          │      │                                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@159 (line 1718)
          │      │                                                                            ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
          │      │                                                                            ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
          │      │                                                                            ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
          │      │                                                                            ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
          │      │                                                                            ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
          │      │                                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearOfTheLastPublication@32 (line 147)
          │      │                                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::last_publication_year@3 (line 118)
   0.05%  │      │                  0x00007fcc4ae0585e:   xchg   %ax,%ax
   0.05%  │      │                  0x00007fcc4ae05860:   cmp    %ebx,%r11d
          │      │                  0x00007fcc4ae05863:   jle    0x00007fcc4ae062f5           ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
          │      │                                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@164 (line 1718)
          │      │                                                                            ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
          │      │                                                                            ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
          │      │                                                                            ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
          │      │                                                                            ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
          │      │                                                                            ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
          │      │                                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearOfTheLastPublication@32 (line 147)
          │      │                                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::last_publication_year@3 (line 118)
   0.19%  │      │                  0x00007fcc4ae05869:   mov    %rax,%rdi
   0.23%  │      │   ↗      ↗  ↗    0x00007fcc4ae0586c:   test   %rdi,%rdi
          │╭     │   │      │  │    0x00007fcc4ae0586f:   jne    0x00007fcc4ae059a5           ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
          ││     │   │      │  │                                                              ; - java.util.HashMap$KeySpliterator::forEachRemaining@124 (line 1712)
          ││     │   │      │  │                                                              ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
          ││     │   │      │  │                                                              ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
          ││     │   │      │  │                                                              ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
          ││     │   │      │  │                                                              ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
          ││     │   │      │  │                                                              ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
          ││     │   │      │  │                                                              ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearOfTheLastPublication@32 (line 147)
          ││     │   │      │  │                                                              ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::last_publication_year@3 (line 118)
   0.02%  ││     │   │      │  │    0x00007fcc4ae05875:   cmp    %ebx,%r11d
          ││     │   │      │  │    0x00007fcc4ae05878:   jbe    0x00007fcc4ae06755
   0.11%  ││     │   │      │  │    0x00007fcc4ae0587e:   mov    0x10(%r8,%rbx,4),%esi
   0.21%  ││     │   │      │  │    0x00007fcc4ae05883:   mov    %esi,%eax
   0.02%  ││     │   │      │  │    0x00007fcc4ae05885:   shl    $0x3,%rax                    ;*aaload {reexecute=0 rethrow=0 return_oop=0}
          ││     │   │      │  │                                                              ; - java.util.HashMap$KeySpliterator::forEachRemaining@133 (line 1713)
          ││     │   │      │  │                                                              ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
          ││     │   │      │  │                                                              ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
          ││     │   │      │  │                                                              ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
          ││     │   │      │  │                                                              ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
          ││     │   │      │  │                                                              ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
          ││     │   │      │  │                                                              ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearOfTheLastPublication@32 (line 147)
          ││     │   │      │  │                                                              ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::last_publication_year@3 (line 118)
   0.05%  ││     │   │      │  │    0x00007fcc4ae05889:   inc    %ebx                         ;*iinc {reexecute=0 rethrow=0 return_oop=0}
          ││     │   │      │  │                                                              ; - java.util.HashMap$KeySpliterator::forEachRemaining@130 (line 1713)
          ││     │   │      │  │                                                              ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
          ││     │   │      │  │                                                              ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
          ││     │   │      │  │                                                              ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
          ││     │   │      │  │                                                              ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
          ││     │   │      │  │                                                              ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
          ││     │   │      │  │                                                              ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearOfTheLastPublication@32 (line 147)
          ││     │   │      │  │                                                              ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::last_publication_year@3 (line 118)
   0.16%  ││     │   │      │  │    0x00007fcc4ae0588b:   test   %esi,%esi
          ││╭    │   │      │  │    0x00007fcc4ae0588d:   jne    0x00007fcc4ae05acd           ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
          │││    │   │      │  │                                                              ; - java.util.HashMap$KeySpliterator::forEachRemaining@159 (line 1718)
          │││    │   │      │  │                                                              ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
          │││    │   │      │  │                                                              ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
          │││    │   │      │  │                                                              ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
          │││    │   │      │  │                                                              ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
          │││    │   │      │  │                                                              ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
          │││    │   │      │  │                                                              ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearOfTheLastPublication@32 (line 147)
          │││    │   │      │  │                                                              ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::last_publication_year@3 (line 118)
   0.18%  │││    │   │      │  │    0x00007fcc4ae05893:   cmp    %ebx,%r11d
          │││    │   │      │  │    0x00007fcc4ae05896:   jle    0x00007fcc4ae062f5           ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
          │││    │   │      │  │                                                              ; - java.util.HashMap$KeySpliterator::forEachRemaining@164 (line 1718)
          │││    │   │      │  │                                                              ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
          │││    │   │      │  │                                                              ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
          │││    │   │      │  │                                                              ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
          │││    │   │      │  │                                                              ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
          │││    │   │      │  │                                                              ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
          │││    │   │      │  │                                                              ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearOfTheLastPublication@32 (line 147)
          │││    │   │      │  │                                                              ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::last_publication_year@3 (line 118)
   0.07%  │││    │   │      │  │    0x00007fcc4ae0589c:   mov    %rax,%rdi
   0.24%  │││    │   │ ↗    │↗ │↗   0x00007fcc4ae0589f:   nop
   0.07%  │││    │   │ │    ││ ││   0x00007fcc4ae058a0:   test   %rdi,%rdi
          │││╭   │   │ │    ││ ││   0x00007fcc4ae058a3:   jne    0x00007fcc4ae05a05           ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
          ││││   │   │ │    ││ ││                                                             ; - java.util.HashMap$KeySpliterator::forEachRemaining@124 (line 1712)
          ││││   │   │ │    ││ ││                                                             ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
          ││││   │   │ │    ││ ││                                                             ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
          ││││   │   │ │    ││ ││                                                             ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
          ││││   │   │ │    ││ ││                                                             ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
          ││││   │   │ │    ││ ││                                                             ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
          ││││   │   │ │    ││ ││                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearOfTheLastPublication@32 (line 147)
          ││││   │   │ │    ││ ││                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::last_publication_year@3 (line 118)
   0.10%  ││││   │   │ │    ││ ││   0x00007fcc4ae058a9:   cmp    %ebx,%r11d
          ││││   │   │ │    ││ ││   0x00007fcc4ae058ac:   jbe    0x00007fcc4ae06805
   0.13%  ││││   │   │ │    ││ ││   0x00007fcc4ae058b2:   mov    0x10(%r8,%rbx,4),%esi
   0.08%  ││││   │   │ │    ││ ││   0x00007fcc4ae058b7:   mov    %esi,%eax
   0.07%  ││││   │   │ │    ││ ││   0x00007fcc4ae058b9:   shl    $0x3,%rax                    ;*aaload {reexecute=0 rethrow=0 return_oop=0}
          ││││   │   │ │    ││ ││                                                             ; - java.util.HashMap$KeySpliterator::forEachRemaining@133 (line 1713)
          ││││   │   │ │    ││ ││                                                             ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
          ││││   │   │ │    ││ ││                                                             ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
          ││││   │   │ │    ││ ││                                                             ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
          ││││   │   │ │    ││ ││                                                             ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
          ││││   │   │ │    ││ ││                                                             ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
          ││││   │   │ │    ││ ││                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearOfTheLastPublication@32 (line 147)
          ││││   │   │ │    ││ ││                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::last_publication_year@3 (line 118)
   0.12%  ││││   │   │ │    ││ ││   0x00007fcc4ae058bd:   inc    %ebx                         ;*iinc {reexecute=0 rethrow=0 return_oop=0}
          ││││   │   │ │    ││ ││                                                             ; - java.util.HashMap$KeySpliterator::forEachRemaining@130 (line 1713)
          ││││   │   │ │    ││ ││                                                             ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
          ││││   │   │ │    ││ ││                                                             ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
          ││││   │   │ │    ││ ││                                                             ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
          ││││   │   │ │    ││ ││                                                             ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
          ││││   │   │ │    ││ ││                                                             ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
          ││││   │   │ │    ││ ││                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearOfTheLastPublication@32 (line 147)
          ││││   │   │ │    ││ ││                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::last_publication_year@3 (line 118)
   0.10%  ││││   │   │ │    ││ ││   0x00007fcc4ae058bf:   nop
   0.01%  ││││   │   │ │    ││ ││   0x00007fcc4ae058c0:   test   %esi,%esi
          ││││╭  │   │ │    ││ ││   0x00007fcc4ae058c2:   jne    0x00007fcc4ae05ad5           ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
          │││││  │   │ │    ││ ││                                                             ; - java.util.HashMap$KeySpliterator::forEachRemaining@159 (line 1718)
          │││││  │   │ │    ││ ││                                                             ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
          │││││  │   │ │    ││ ││                                                             ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
          │││││  │   │ │    ││ ││                                                             ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
          │││││  │   │ │    ││ ││                                                             ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
          │││││  │   │ │    ││ ││                                                             ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
          │││││  │   │ │    ││ ││                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearOfTheLastPublication@32 (line 147)
          │││││  │   │ │    ││ ││                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::last_publication_year@3 (line 118)
   0.10%  │││││  │   │ │    ││ ││   0x00007fcc4ae058c8:   cmp    %ebx,%r11d
          │││││  │   │ │    ││ ││   0x00007fcc4ae058cb:   jle    0x00007fcc4ae062f5           ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
          │││││  │   │ │    ││ ││                                                             ; - java.util.HashMap$KeySpliterator::forEachRemaining@164 (line 1718)
          │││││  │   │ │    ││ ││                                                             ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
          │││││  │   │ │    ││ ││                                                             ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
          │││││  │   │ │    ││ ││                                                             ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
          │││││  │   │ │    ││ ││                                                             ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
          │││││  │   │ │    ││ ││                                                             ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
          │││││  │   │ │    ││ ││                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearOfTheLastPublication@32 (line 147)
          │││││  │   │ │    ││ ││                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::last_publication_year@3 (line 118)
   0.10%  │││││  │   │ │    ││ ││   0x00007fcc4ae058d1:   mov    %rax,%rdi
   0.25%  │││││  │   │ │ ↗  ││↗││↗  0x00007fcc4ae058d4:   test   %rdi,%rdi
          │││││╭ │   │ │ │  ││││││  0x00007fcc4ae058d7:   jne    0x00007fcc4ae05a65           ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
          ││││││ │   │ │ │  ││││││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@124 (line 1712)
          ││││││ │   │ │ │  ││││││                                                            ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
          ││││││ │   │ │ │  ││││││                                                            ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
          ││││││ │   │ │ │  ││││││                                                            ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
          ││││││ │   │ │ │  ││││││                                                            ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
          ││││││ │   │ │ │  ││││││                                                            ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
          ││││││ │   │ │ │  ││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearOfTheLastPublication@32 (line 147)
          ││││││ │   │ │ │  ││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::last_publication_year@3 (line 118)
          ││││││ │   │ │ │  ││││││                                                            ;   {no_reloc}
   0.05%  ││││││ │   │ │ │  ││││││  0x00007fcc4ae058dd:   data16 xchg %ax,%ax
   0.06%  ││││││ │   │ │ │  ││││││  0x00007fcc4ae058e0:   cmp    %ebx,%r11d
          ││││││ │   │ │ │  ││││││  0x00007fcc4ae058e3:   jbe    0x00007fcc4ae06834
   0.18%  ││││││ │   │ │ │  ││││││  0x00007fcc4ae058e9:   mov    0x10(%r8,%rbx,4),%esi
   0.10%  ││││││ │   │ │ │  ││││││  0x00007fcc4ae058ee:   mov    %esi,%eax
   0.05%  ││││││ │   │ │ │  ││││││  0x00007fcc4ae058f0:   shl    $0x3,%rax                    ;*aaload {reexecute=0 rethrow=0 return_oop=0}
          ││││││ │   │ │ │  ││││││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@133 (line 1713)
          ││││││ │   │ │ │  ││││││                                                            ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
          ││││││ │   │ │ │  ││││││                                                            ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
          ││││││ │   │ │ │  ││││││                                                            ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
          ││││││ │   │ │ │  ││││││                                                            ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
          ││││││ │   │ │ │  ││││││                                                            ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
          ││││││ │   │ │ │  ││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearOfTheLastPublication@32 (line 147)
          ││││││ │   │ │ │  ││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::last_publication_year@3 (line 118)
   0.09%  ││││││ │   │ │ │  ││││││  0x00007fcc4ae058f4:   inc    %ebx                         ;*iinc {reexecute=0 rethrow=0 return_oop=0}
          ││││││ │   │ │ │  ││││││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@130 (line 1713)
          ││││││ │   │ │ │  ││││││                                                            ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
          ││││││ │   │ │ │  ││││││                                                            ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
          ││││││ │   │ │ │  ││││││                                                            ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
          ││││││ │   │ │ │  ││││││                                                            ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
          ││││││ │   │ │ │  ││││││                                                            ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
          ││││││ │   │ │ │  ││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearOfTheLastPublication@32 (line 147)
          ││││││ │   │ │ │  ││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::last_publication_year@3 (line 118)
   0.14%  ││││││ │   │ │ │  ││││││  0x00007fcc4ae058f6:   test   %esi,%esi
          ││││││╭│   │ │ │  ││││││  0x00007fcc4ae058f8:   je     0x00007fcc4ae05920           ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
          ││││││││   │ │ │  ││││││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@159 (line 1718)
          ││││││││   │ │ │  ││││││                                                            ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
          ││││││││   │ │ │  ││││││                                                            ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
          ││││││││   │ │ │  ││││││                                                            ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
          ││││││││   │ │ │  ││││││                                                            ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
          ││││││││   │ │ │  ││││││                                                            ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
          ││││││││   │ │ │  ││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearOfTheLastPublication@32 (line 147)
          ││││││││   │ │ │  ││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::last_publication_year@3 (line 118)
   0.43%  ││││││││ ↗ │ │ │ ↗││││││  0x00007fcc4ae058fe:   lea    0x4(%r13),%r13d
   0.15%  ││││││││ │ │ │ │ │││││││  0x00007fcc4ae05902:   cmp    $0x1ffc,%r13d
          ││││││││ │ │ │ │ │││││││  0x00007fcc4ae05909:   jge    0x00007fcc4ae06069
   0.14%  ││││││││ │ │ │ │ │││││││  0x00007fcc4ae0590f:   mov    %rax,%rdi
   0.13%  ││││││││ │ │ │ │ │││││││  0x00007fcc4ae05912:   test   %rdi,%rdi
          │││││││╰ │ │ │ │ │││││││  0x00007fcc4ae05915:   je     0x00007fcc4ae05840
   0.04%  │││││││ ╭│ │ │ │ │││││││  0x00007fcc4ae0591b:   jmp    0x00007fcc4ae05940           ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
          │││││││ ││ │ │ │ │││││││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@124 (line 1712)
          │││││││ ││ │ │ │ │││││││                                                            ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
          │││││││ ││ │ │ │ │││││││                                                            ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
          │││││││ ││ │ │ │ │││││││                                                            ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
          │││││││ ││ │ │ │ │││││││                                                            ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
          │││││││ ││ │ │ │ │││││││                                                            ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
          │││││││ ││ │ │ │ │││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearOfTheLastPublication@32 (line 147)
          │││││││ ││ │ │ │ │││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::last_publication_year@3 (line 118)
   0.08%  ││││││↘ ││ │ │ │ │││││││  0x00007fcc4ae05920:   cmp    %ebx,%r11d
          ││││││  │╰ │ │ │ │││││││  0x00007fcc4ae05923:   jg     0x00007fcc4ae058fe
          ││││││  │  │ │ │ │││││││  0x00007fcc4ae05925:   jmp    0x00007fcc4ae062f5           ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
          ││││││  │  │ │ │ │││││││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@164 (line 1718)
          ││││││  │  │ │ │ │││││││                                                            ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
          ││││││  │  │ │ │ │││││││                                                            ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
          ││││││  │  │ │ │ │││││││                                                            ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
          ││││││  │  │ │ │ │││││││                                                            ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
          ││││││  │  │ │ │ │││││││                                                            ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
          ││││││  │  │ │ │ │││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearOfTheLastPublication@32 (line 147)
          ││││││  │  │ │ │ │││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::last_publication_year@3 (line 118)
          ││││││  │  │ │ │ │││││││  0x00007fcc4ae0592a:   data16 data16 nopw 0x0(%rax,%rax,1)
          ││││││  │  │ │ │ │││││││  0x00007fcc4ae05935:   data16 data16 xchg %ax,%ax
          ││││││  │  │ │ │ │││││││  0x00007fcc4ae05939:   nopl   0x0(%rax)                    ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
          ││││││  │  │ │ │ │││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::lambda$yearOfTheLastPublication$10@7 (line 145)
          ││││││  │  │ │ │ │││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics$$Lambda/0x00007fcbd002bd18::test@4
          ││││││  │  │ │ │ │││││││                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@8 (line 178)
          ││││││  │  │ │ │ │││││││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
          ││││││  │  │ │ │ │││││││                                                            ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
          ││││││  │  │ │ │ │││││││                                                            ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
          ││││││  │  │ │ │ │││││││                                                            ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
          ││││││  │  │ │ │ │││││││                                                            ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
          ││││││  │  │ │ │ │││││││                                                            ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
          ││││││  │  │ │ │ │││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearOfTheLastPublication@32 (line 147)
          ││││││  │  │ │ │ │││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::last_publication_year@3 (line 118)
   0.02%  ││││││  ↘  │ │ │ │││││││  0x00007fcc4ae05940:   mov    0x10(%rdi),%esi              ; ImmutableOopMap {rcx=Oop rbp=Oop rsi=NarrowOop rdi=Oop r8=Oop r9=Oop [8]=Oop }
          ││││││     │ │ │ │││││││                                                            ;*aload {reexecute=1 rethrow=0 return_oop=0}
          ││││││     │ │ │ │││││││                                                            ; - (reexecute) java.util.HashMap$KeySpliterator::forEachRemaining@122 (line 1712)
          ││││││     │ │ │ │││││││                                                            ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
          ││││││     │ │ │ │││││││                                                            ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
          ││││││     │ │ │ │││││││                                                            ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
          ││││││     │ │ │ │││││││                                                            ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
          ││││││     │ │ │ │││││││                                                            ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
          ││││││     │ │ │ │││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearOfTheLastPublication@32 (line 147)
          ││││││     │ │ │ │││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::last_publication_year@3 (line 118)
   3.78%  ││││││     │ │ │ │││││││  0x00007fcc4ae05943:   cmpl   $0x102b6f8,0x8(,%rsi,8)      ; implicit exception: dispatches to 0x00007fcc4ae06c83
          ││││││     │ │ │ │││││││                                                            ;   {metadata(&apos;com/ionutbalosin/jvm/performance/benchmarks/miscellaneous/publicationstatistics/model/Publication&apos;)}
   2.53%  ││││││     │ │ │ │││││││  0x00007fcc4ae0594e:   jne    0x00007fcc4ae067f0           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
          ││││││     │ │ │ │││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics$$Lambda/0x00007fcbd002bd18::test@1
          ││││││     │ │ │ │││││││                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@8 (line 178)
          ││││││     │ │ │ │││││││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
          ││││││     │ │ │ │││││││                                                            ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
          ││││││     │ │ │ │││││││                                                            ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
          ││││││     │ │ │ │││││││                                                            ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
          ││││││     │ │ │ │││││││                                                            ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
          ││││││     │ │ │ │││││││                                                            ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
          ││││││     │ │ │ │││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearOfTheLastPublication@32 (line 147)
          ││││││     │ │ │ │││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::last_publication_year@3 (line 118)
   0.07%  ││││││     │ │ │ │││││││  0x00007fcc4ae05954:   mov    0xc(,%rsi,8),%r14d           ;*getfield year {reexecute=0 rethrow=0 return_oop=0}
          ││││││     │ │ │ │││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.model.Publication::getYear@1 (line 43)
          ││││││     │ │ │ │││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::lambda$yearOfTheLastPublication$10@1 (line 145)
          ││││││     │ │ │ │││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics$$Lambda/0x00007fcbd002bd18::test@4
          ││││││     │ │ │ │││││││                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@8 (line 178)
          ││││││     │ │ │ │││││││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
          ││││││     │ │ │ │││││││                                                            ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
          ││││││     │ │ │ │││││││                                                            ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
          ││││││     │ │ │ │││││││                                                            ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
          ││││││     │ │ │ │││││││                                                            ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
          ││││││     │ │ │ │││││││                                                            ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
          ││││││     │ │ │ │││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearOfTheLastPublication@32 (line 147)
          ││││││     │ │ │ │││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::last_publication_year@3 (line 118)
   0.03%  ││││││     │ │ │ │││││││  0x00007fcc4ae0595c:   nopl   0x0(%rax)
   0.02%  ││││││     │ │ │ │││││││  0x00007fcc4ae05960:   cmp    $0x76c,%r14d
          ││││││     │ │ │ │││││││  0x00007fcc4ae05967:   jl     0x00007fcc4ae06523           ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
          ││││││     │ │ │ │││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::lambda$yearOfTheLastPublication$10@7 (line 145)
          ││││││     │ │ │ │││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics$$Lambda/0x00007fcbd002bd18::test@4
          ││││││     │ │ │ │││││││                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@8 (line 178)
          ││││││     │ │ │ │││││││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
          ││││││     │ │ │ │││││││                                                            ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
          ││││││     │ │ │ │││││││                                                            ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
          ││││││     │ │ │ │││││││                                                            ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
          ││││││     │ │ │ │││││││                                                            ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
          ││││││     │ │ │ │││││││                                                            ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
          ││││││     │ │ │ │││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearOfTheLastPublication@32 (line 147)
          ││││││     │ │ │ │││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::last_publication_year@3 (line 118)
   0.04%  ││││││     │ │ │ │││││││  0x00007fcc4ae0596d:   mov    0x18(%rdi),%eax
   0.08%  ││││││     │ │ │ │││││││  0x00007fcc4ae05970:   mov    %eax,%esi
   0.01%  ││││││     │ │ │ │││││││  0x00007fcc4ae05972:   shl    $0x3,%rsi                    ;*getfield next {reexecute=0 rethrow=0 return_oop=0}
          ││││││     │ │ │ │││││││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@152 (line 1716)
          ││││││     │ │ │ │││││││                                                            ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
          ││││││     │ │ │ │││││││                                                            ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
          ││││││     │ │ │ │││││││                                                            ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
          ││││││     │ │ │ │││││││                                                            ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
          ││││││     │ │ │ │││││││                                                            ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
          ││││││     │ │ │ │││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearOfTheLastPublication@32 (line 147)
          ││││││     │ │ │ │││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::last_publication_year@3 (line 118)
   0.02%  ││││││     │ │ │ │││││││  0x00007fcc4ae05976:   test   %edx,%edx
          ││││││     │ │ │ │││││││  0x00007fcc4ae05978:   je     0x00007fcc4ae05afd           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
          ││││││     │ │ │ │││││││                                                            ; - java.util.stream.Collectors$1OptionalBox::accept@4 (line 895)
          ││││││     │ │ │ │││││││                                                            ; - java.util.stream.Collectors$$Lambda/0x00007fcbd003c3d8::accept@5
          ││││││     │ │ │ │││││││                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
          ││││││     │ │ │ │││││││                                                            ; - java.util.stream.ReferencePipeline$3$1::accept@17 (line 197)
          ││││││     │ │ │ │││││││                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@21 (line 179)
          ││││││     │ │ │ │││││││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
          ││││││     │ │ │ │││││││                                                            ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
          ││││││     │ │ │ │││││││                                                            ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
          ││││││     │ │ │ │││││││                                                            ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
          ││││││     │ │ │ │││││││                                                            ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
          ││││││     │ │ │ │││││││                                                            ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
          ││││││     │ │ │ │││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearOfTheLastPublication@32 (line 147)
          ││││││     │ │ │ │││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::last_publication_year@3 (line 118)
   0.04%  ││││││     │ │ │ │││││││  0x00007fcc4ae0597e:   xchg   %ax,%ax                      ; ImmutableOopMap {rax=NarrowOop rcx=Oop rbp=Oop rsi=Oop rdi=Oop r8=Oop r9=Oop [8]=Oop }
          ││││││     │ │ │ │││││││                                                            ;*aload {reexecute=1 rethrow=0 return_oop=0}
          ││││││     │ │ │ │││││││                                                            ; - (reexecute) java.util.HashMap$KeySpliterator::forEachRemaining@122 (line 1712)
          ││││││     │ │ │ │││││││                                                            ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
          ││││││     │ │ │ │││││││                                                            ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
          ││││││     │ │ │ │││││││                                                            ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
          ││││││     │ │ │ │││││││                                                            ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
          ││││││     │ │ │ │││││││                                                            ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
          ││││││     │ │ │ │││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearOfTheLastPublication@32 (line 147)
          ││││││     │ │ │ │││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::last_publication_year@3 (line 118)
   0.07%  ││││││     │ │ │ │││││││  0x00007fcc4ae05980:   cmp    0xc(%rbp),%r14d              ; implicit exception: dispatches to 0x00007fcc4ae06ca6
          ││││││     │ │ │ │││││││  0x00007fcc4ae05984:   jg     0x00007fcc4ae0685c
   0.00%  ││││││     │ │ │ │││││││  0x00007fcc4ae0598a:   test   %eax,%eax
          ││││││    ╭│ │ │ │││││││  0x00007fcc4ae0598c:   jne    0x00007fcc4ae05add           ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
          ││││││    ││ │ │ │││││││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@159 (line 1718)
          ││││││    ││ │ │ │││││││                                                            ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
          ││││││    ││ │ │ │││││││                                                            ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
          ││││││    ││ │ │ │││││││                                                            ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
          ││││││    ││ │ │ │││││││                                                            ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
          ││││││    ││ │ │ │││││││                                                            ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
          ││││││    ││ │ │ │││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearOfTheLastPublication@32 (line 147)
          ││││││    ││ │ │ │││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::last_publication_year@3 (line 118)
   0.01%  ││││││    ││ │ │ │││││││  0x00007fcc4ae05992:   cmp    %ebx,%r11d
          ││││││    ││ │ │ │││││││  0x00007fcc4ae05995:   jle    0x00007fcc4ae06312           ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
          ││││││    ││ │ │ │││││││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@164 (line 1718)
          ││││││    ││ │ │ │││││││                                                            ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
          ││││││    ││ │ │ │││││││                                                            ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
          ││││││    ││ │ │ │││││││                                                            ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
          ││││││    ││ │ │ │││││││                                                            ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
          ││││││    ││ │ │ │││││││                                                            ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
          ││││││    ││ │ │ │││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearOfTheLastPublication@32 (line 147)
          ││││││    ││ │ │ │││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::last_publication_year@3 (line 118)
   0.03%  ││││││    ││ │ │ │││││││  0x00007fcc4ae0599b:   mov    %rsi,%rdi
   0.05%  ││││││    ││ │ │ │││││││  0x00007fcc4ae0599e:   xchg   %ax,%ax
   0.00%  ││││││    │╰ │ │ │││││││  0x00007fcc4ae059a0:   jmp    0x00007fcc4ae0586c           ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
          ││││││    │  │ │ │││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::lambda$yearOfTheLastPublication$10@7 (line 145)
          ││││││    │  │ │ │││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics$$Lambda/0x00007fcbd002bd18::test@4
          ││││││    │  │ │ │││││││                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@8 (line 178)
          ││││││    │  │ │ │││││││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
          ││││││    │  │ │ │││││││                                                            ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
          ││││││    │  │ │ │││││││                                                            ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
          ││││││    │  │ │ │││││││                                                            ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
          ││││││    │  │ │ │││││││                                                            ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
          ││││││    │  │ │ │││││││                                                            ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
          ││││││    │  │ │ │││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearOfTheLastPublication@32 (line 147)
          ││││││    │  │ │ │││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::last_publication_year@3 (line 118)
   0.11%  │↘││││    │  │ │ │││││││  0x00007fcc4ae059a5:   mov    0x10(%rdi),%esi              ; ImmutableOopMap {rcx=Oop rbp=Oop rsi=NarrowOop rdi=Oop r8=Oop r9=Oop [8]=Oop }
          │ ││││    │  │ │ │││││││                                                            ;*aload {reexecute=1 rethrow=0 return_oop=0}
          │ ││││    │  │ │ │││││││                                                            ; - (reexecute) java.util.HashMap$KeySpliterator::forEachRemaining@122 (line 1712)
          │ ││││    │  │ │ │││││││                                                            ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
          │ ││││    │  │ │ │││││││                                                            ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
          │ ││││    │  │ │ │││││││                                                            ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
          │ ││││    │  │ │ │││││││                                                            ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
          │ ││││    │  │ │ │││││││                                                            ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
          │ ││││    │  │ │ │││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearOfTheLastPublication@32 (line 147)
          │ ││││    │  │ │ │││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::last_publication_year@3 (line 118)
   3.47%  │ ││││    │  │ │ │││││││  0x00007fcc4ae059a8:   cmpl   $0x102b6f8,0x8(,%rsi,8)      ; implicit exception: dispatches to 0x00007fcc4ae06ccd
          │ ││││    │  │ │ │││││││                                                            ;   {metadata(&apos;com/ionutbalosin/jvm/performance/benchmarks/miscellaneous/publicationstatistics/model/Publication&apos;)}
   2.38%  │ ││││    │  │ │ │││││││  0x00007fcc4ae059b3:   jne    0x00007fcc4ae06aa5           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
          │ ││││    │  │ │ │││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics$$Lambda/0x00007fcbd002bd18::test@1
          │ ││││    │  │ │ │││││││                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@8 (line 178)
          │ ││││    │  │ │ │││││││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
          │ ││││    │  │ │ │││││││                                                            ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
          │ ││││    │  │ │ │││││││                                                            ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
          │ ││││    │  │ │ │││││││                                                            ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
          │ ││││    │  │ │ │││││││                                                            ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
          │ ││││    │  │ │ │││││││                                                            ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
          │ ││││    │  │ │ │││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearOfTheLastPublication@32 (line 147)
          │ ││││    │  │ │ │││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::last_publication_year@3 (line 118)
   0.11%  │ ││││    │  │ │ │││││││  0x00007fcc4ae059b9:   mov    0xc(,%rsi,8),%r14d           ;*getfield year {reexecute=0 rethrow=0 return_oop=0}
          │ ││││    │  │ │ │││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.model.Publication::getYear@1 (line 43)
          │ ││││    │  │ │ │││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::lambda$yearOfTheLastPublication$10@1 (line 145)
          │ ││││    │  │ │ │││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics$$Lambda/0x00007fcbd002bd18::test@4
          │ ││││    │  │ │ │││││││                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@8 (line 178)
          │ ││││    │  │ │ │││││││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
          │ ││││    │  │ │ │││││││                                                            ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
          │ ││││    │  │ │ │││││││                                                            ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
          │ ││││    │  │ │ │││││││                                                            ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
          │ ││││    │  │ │ │││││││                                                            ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
          │ ││││    │  │ │ │││││││                                                            ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
          │ ││││    │  │ │ │││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearOfTheLastPublication@32 (line 147)
          │ ││││    │  │ │ │││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::last_publication_year@3 (line 118)
   0.02%  │ ││││    │  │ │ │││││││  0x00007fcc4ae059c1:   cmp    $0x76c,%r14d
          │ ││││    │  │ │ │││││││  0x00007fcc4ae059c8:   jl     0x00007fcc4ae064fc           ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
          │ ││││    │  │ │ │││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::lambda$yearOfTheLastPublication$10@7 (line 145)
          │ ││││    │  │ │ │││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics$$Lambda/0x00007fcbd002bd18::test@4
          │ ││││    │  │ │ │││││││                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@8 (line 178)
          │ ││││    │  │ │ │││││││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
          │ ││││    │  │ │ │││││││                                                            ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
          │ ││││    │  │ │ │││││││                                                            ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
          │ ││││    │  │ │ │││││││                                                            ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
          │ ││││    │  │ │ │││││││                                                            ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
          │ ││││    │  │ │ │││││││                                                            ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
          │ ││││    │  │ │ │││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearOfTheLastPublication@32 (line 147)
          │ ││││    │  │ │ │││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::last_publication_year@3 (line 118)
   0.02%  │ ││││    │  │ │ │││││││  0x00007fcc4ae059ce:   mov    0x18(%rdi),%eax
          │ ││││    │  │ │ │││││││  0x00007fcc4ae059d1:   mov    %eax,%esi
   0.12%  │ ││││    │  │ │ │││││││  0x00007fcc4ae059d3:   shl    $0x3,%rsi                    ;*getfield next {reexecute=0 rethrow=0 return_oop=0}
          │ ││││    │  │ │ │││││││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@152 (line 1716)
          │ ││││    │  │ │ │││││││                                                            ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
          │ ││││    │  │ │ │││││││                                                            ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
          │ ││││    │  │ │ │││││││                                                            ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
          │ ││││    │  │ │ │││││││                                                            ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
          │ ││││    │  │ │ │││││││                                                            ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
          │ ││││    │  │ │ │││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearOfTheLastPublication@32 (line 147)
          │ ││││    │  │ │ │││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::last_publication_year@3 (line 118)
   0.00%  │ ││││    │  │ │ │││││││  0x00007fcc4ae059d7:   test   %edx,%edx
          │ ││││    │  │ │ │││││││  0x00007fcc4ae059d9:   je     0x00007fcc4ae05b7d           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
          │ ││││    │  │ │ │││││││                                                            ; - java.util.stream.Collectors$1OptionalBox::accept@4 (line 895)
          │ ││││    │  │ │ │││││││                                                            ; - java.util.stream.Collectors$$Lambda/0x00007fcbd003c3d8::accept@5
          │ ││││    │  │ │ │││││││                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
          │ ││││    │  │ │ │││││││                                                            ; - java.util.stream.ReferencePipeline$3$1::accept@17 (line 197)
          │ ││││    │  │ │ │││││││                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@21 (line 179)
          │ ││││    │  │ │ │││││││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
          │ ││││    │  │ │ │││││││                                                            ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
          │ ││││    │  │ │ │││││││                                                            ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
          │ ││││    │  │ │ │││││││                                                            ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
          │ ││││    │  │ │ │││││││                                                            ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
          │ ││││    │  │ │ │││││││                                                            ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
          │ ││││    │  │ │ │││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearOfTheLastPublication@32 (line 147)
          │ ││││    │  │ │ │││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::last_publication_year@3 (line 118)
   0.03%  │ ││││    │  │ │ │││││││  0x00007fcc4ae059df:   nop                                 ; ImmutableOopMap {rax=NarrowOop rcx=Oop rbp=Oop rsi=Oop rdi=Oop r8=Oop r9=Oop [8]=Oop }
          │ ││││    │  │ │ │││││││                                                            ;*aload {reexecute=1 rethrow=0 return_oop=0}
          │ ││││    │  │ │ │││││││                                                            ; - (reexecute) java.util.HashMap$KeySpliterator::forEachRemaining@122 (line 1712)
          │ ││││    │  │ │ │││││││                                                            ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
          │ ││││    │  │ │ │││││││                                                            ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
          │ ││││    │  │ │ │││││││                                                            ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
          │ ││││    │  │ │ │││││││                                                            ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
          │ ││││    │  │ │ │││││││                                                            ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
          │ ││││    │  │ │ │││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearOfTheLastPublication@32 (line 147)
          │ ││││    │  │ │ │││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::last_publication_year@3 (line 118)
          │ ││││    │  │ │ │││││││  0x00007fcc4ae059e0:   cmp    0xc(%rbp),%r14d              ; implicit exception: dispatches to 0x00007fcc4ae06cf0
          │ ││││    │  │ │ │││││││  0x00007fcc4ae059e4:   jg     0x00007fcc4ae068f7
   0.12%  │ ││││    │  │ │ │││││││  0x00007fcc4ae059ea:   test   %eax,%eax
          │ ││││    │ ╭│ │ │││││││  0x00007fcc4ae059ec:   jne    0x00007fcc4ae05ae5           ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
          │ ││││    │ ││ │ │││││││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@159 (line 1718)
          │ ││││    │ ││ │ │││││││                                                            ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
          │ ││││    │ ││ │ │││││││                                                            ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
          │ ││││    │ ││ │ │││││││                                                            ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
          │ ││││    │ ││ │ │││││││                                                            ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
          │ ││││    │ ││ │ │││││││                                                            ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
          │ ││││    │ ││ │ │││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearOfTheLastPublication@32 (line 147)
          │ ││││    │ ││ │ │││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::last_publication_year@3 (line 118)
   0.01%  │ ││││    │ ││ │ │││││││  0x00007fcc4ae059f2:   cmp    %ebx,%r11d
          │ ││││    │ ││ │ │││││││  0x00007fcc4ae059f5:   jle    0x00007fcc4ae06312           ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
          │ ││││    │ ││ │ │││││││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@164 (line 1718)
          │ ││││    │ ││ │ │││││││                                                            ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
          │ ││││    │ ││ │ │││││││                                                            ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
          │ ││││    │ ││ │ │││││││                                                            ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
          │ ││││    │ ││ │ │││││││                                                            ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
          │ ││││    │ ││ │ │││││││                                                            ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
          │ ││││    │ ││ │ │││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearOfTheLastPublication@32 (line 147)
          │ ││││    │ ││ │ │││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::last_publication_year@3 (line 118)
   0.03%  │ ││││    │ ││ │ │││││││  0x00007fcc4ae059fb:   mov    %rsi,%rdi
          │ ││││    │ ││ │ │││││││  0x00007fcc4ae059fe:   xchg   %ax,%ax
   0.07%  │ ││││    │ │╰ │ │││││││  0x00007fcc4ae05a00:   jmp    0x00007fcc4ae0589f           ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
          │ ││││    │ │  │ │││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::lambda$yearOfTheLastPublication$10@7 (line 145)
          │ ││││    │ │  │ │││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics$$Lambda/0x00007fcbd002bd18::test@4
          │ ││││    │ │  │ │││││││                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@8 (line 178)
          │ ││││    │ │  │ │││││││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
          │ ││││    │ │  │ │││││││                                                            ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
          │ ││││    │ │  │ │││││││                                                            ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
          │ ││││    │ │  │ │││││││                                                            ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
          │ ││││    │ │  │ │││││││                                                            ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
          │ ││││    │ │  │ │││││││                                                            ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
          │ ││││    │ │  │ │││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearOfTheLastPublication@32 (line 147)
          │ ││││    │ │  │ │││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::last_publication_year@3 (line 118)
   0.14%  │ │↘││    │ │  │ │││││││  0x00007fcc4ae05a05:   mov    0x10(%rdi),%esi              ; ImmutableOopMap {rcx=Oop rbp=Oop rsi=NarrowOop rdi=Oop r8=Oop r9=Oop [8]=Oop }
          │ │ ││    │ │  │ │││││││                                                            ;*aload {reexecute=1 rethrow=0 return_oop=0}
          │ │ ││    │ │  │ │││││││                                                            ; - (reexecute) java.util.HashMap$KeySpliterator::forEachRemaining@122 (line 1712)
          │ │ ││    │ │  │ │││││││                                                            ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
          │ │ ││    │ │  │ │││││││                                                            ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
          │ │ ││    │ │  │ │││││││                                                            ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
          │ │ ││    │ │  │ │││││││                                                            ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
          │ │ ││    │ │  │ │││││││                                                            ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
          │ │ ││    │ │  │ │││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearOfTheLastPublication@32 (line 147)
          │ │ ││    │ │  │ │││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::last_publication_year@3 (line 118)
   3.28%  │ │ ││    │ │  │ │││││││  0x00007fcc4ae05a08:   cmpl   $0x102b6f8,0x8(,%rsi,8)      ; implicit exception: dispatches to 0x00007fcc4ae06d13
          │ │ ││    │ │  │ │││││││                                                            ;   {metadata(&apos;com/ionutbalosin/jvm/performance/benchmarks/miscellaneous/publicationstatistics/model/Publication&apos;)}
   2.41%  │ │ ││    │ │  │ │││││││  0x00007fcc4ae05a13:   jne    0x00007fcc4ae06825           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
          │ │ ││    │ │  │ │││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics$$Lambda/0x00007fcbd002bd18::test@1
          │ │ ││    │ │  │ │││││││                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@8 (line 178)
          │ │ ││    │ │  │ │││││││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
          │ │ ││    │ │  │ │││││││                                                            ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
          │ │ ││    │ │  │ │││││││                                                            ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
          │ │ ││    │ │  │ │││││││                                                            ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
          │ │ ││    │ │  │ │││││││                                                            ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
          │ │ ││    │ │  │ │││││││                                                            ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
          │ │ ││    │ │  │ │││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearOfTheLastPublication@32 (line 147)
          │ │ ││    │ │  │ │││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::last_publication_year@3 (line 118)
   0.11%  │ │ ││    │ │  │ │││││││  0x00007fcc4ae05a19:   mov    0xc(,%rsi,8),%r14d           ;*getfield year {reexecute=0 rethrow=0 return_oop=0}
          │ │ ││    │ │  │ │││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.model.Publication::getYear@1 (line 43)
          │ │ ││    │ │  │ │││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::lambda$yearOfTheLastPublication$10@1 (line 145)
          │ │ ││    │ │  │ │││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics$$Lambda/0x00007fcbd002bd18::test@4
          │ │ ││    │ │  │ │││││││                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@8 (line 178)
          │ │ ││    │ │  │ │││││││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
          │ │ ││    │ │  │ │││││││                                                            ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
          │ │ ││    │ │  │ │││││││                                                            ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
          │ │ ││    │ │  │ │││││││                                                            ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
          │ │ ││    │ │  │ │││││││                                                            ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
          │ │ ││    │ │  │ │││││││                                                            ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
          │ │ ││    │ │  │ │││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearOfTheLastPublication@32 (line 147)
          │ │ ││    │ │  │ │││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::last_publication_year@3 (line 118)
   0.03%  │ │ ││    │ │  │ │││││││  0x00007fcc4ae05a21:   cmp    $0x76c,%r14d
          │ │ ││    │ │  │ │││││││  0x00007fcc4ae05a28:   jl     0x00007fcc4ae067b7           ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
          │ │ ││    │ │  │ │││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::lambda$yearOfTheLastPublication$10@7 (line 145)
          │ │ ││    │ │  │ │││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics$$Lambda/0x00007fcbd002bd18::test@4
          │ │ ││    │ │  │ │││││││                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@8 (line 178)
          │ │ ││    │ │  │ │││││││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
          │ │ ││    │ │  │ │││││││                                                            ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
          │ │ ││    │ │  │ │││││││                                                            ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
          │ │ ││    │ │  │ │││││││                                                            ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
          │ │ ││    │ │  │ │││││││                                                            ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
          │ │ ││    │ │  │ │││││││                                                            ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
          │ │ ││    │ │  │ │││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearOfTheLastPublication@32 (line 147)
          │ │ ││    │ │  │ │││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::last_publication_year@3 (line 118)
   0.04%  │ │ ││    │ │  │ │││││││  0x00007fcc4ae05a2e:   mov    0x18(%rdi),%eax
          │ │ ││    │ │  │ │││││││  0x00007fcc4ae05a31:   mov    %eax,%esi
   0.09%  │ │ ││    │ │  │ │││││││  0x00007fcc4ae05a33:   shl    $0x3,%rsi                    ;*getfield next {reexecute=0 rethrow=0 return_oop=0}
          │ │ ││    │ │  │ │││││││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@152 (line 1716)
          │ │ ││    │ │  │ │││││││                                                            ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
          │ │ ││    │ │  │ │││││││                                                            ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
          │ │ ││    │ │  │ │││││││                                                            ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
          │ │ ││    │ │  │ │││││││                                                            ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
          │ │ ││    │ │  │ │││││││                                                            ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
          │ │ ││    │ │  │ │││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearOfTheLastPublication@32 (line 147)
          │ │ ││    │ │  │ │││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::last_publication_year@3 (line 118)
   0.00%  │ │ ││    │ │  │ │││││││  0x00007fcc4ae05a37:   test   %edx,%edx
          │ │ ││    │ │  │ │││││││  0x00007fcc4ae05a39:   je     0x00007fcc4ae05bfd           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
          │ │ ││    │ │  │ │││││││                                                            ; - java.util.stream.Collectors$1OptionalBox::accept@4 (line 895)
          │ │ ││    │ │  │ │││││││                                                            ; - java.util.stream.Collectors$$Lambda/0x00007fcbd003c3d8::accept@5
          │ │ ││    │ │  │ │││││││                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
          │ │ ││    │ │  │ │││││││                                                            ; - java.util.stream.ReferencePipeline$3$1::accept@17 (line 197)
          │ │ ││    │ │  │ │││││││                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@21 (line 179)
          │ │ ││    │ │  │ │││││││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
          │ │ ││    │ │  │ │││││││                                                            ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
          │ │ ││    │ │  │ │││││││                                                            ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
          │ │ ││    │ │  │ │││││││                                                            ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
          │ │ ││    │ │  │ │││││││                                                            ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
          │ │ ││    │ │  │ │││││││                                                            ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
          │ │ ││    │ │  │ │││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearOfTheLastPublication@32 (line 147)
          │ │ ││    │ │  │ │││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::last_publication_year@3 (line 118)
   0.02%  │ │ ││    │ │  │ │││││││  0x00007fcc4ae05a3f:   nop                                 ; ImmutableOopMap {rax=NarrowOop rcx=Oop rbp=Oop rsi=Oop rdi=Oop r8=Oop r9=Oop [8]=Oop }
          │ │ ││    │ │  │ │││││││                                                            ;*aload {reexecute=1 rethrow=0 return_oop=0}
          │ │ ││    │ │  │ │││││││                                                            ; - (reexecute) java.util.HashMap$KeySpliterator::forEachRemaining@122 (line 1712)
          │ │ ││    │ │  │ │││││││                                                            ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
          │ │ ││    │ │  │ │││││││                                                            ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
          │ │ ││    │ │  │ │││││││                                                            ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
          │ │ ││    │ │  │ │││││││                                                            ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
          │ │ ││    │ │  │ │││││││                                                            ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
          │ │ ││    │ │  │ │││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearOfTheLastPublication@32 (line 147)
          │ │ ││    │ │  │ │││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::last_publication_year@3 (line 118)
          │ │ ││    │ │  │ │││││││  0x00007fcc4ae05a40:   cmp    0xc(%rbp),%r14d              ; implicit exception: dispatches to 0x00007fcc4ae06d36
          │ │ ││    │ │  │ │││││││  0x00007fcc4ae05a44:   jg     0x00007fcc4ae06a27
   0.12%  │ │ ││    │ │  │ │││││││  0x00007fcc4ae05a4a:   test   %eax,%eax
          │ │ ││    │ │ ╭│ │││││││  0x00007fcc4ae05a4c:   jne    0x00007fcc4ae05aed           ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
          │ │ ││    │ │ ││ │││││││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@159 (line 1718)
          │ │ ││    │ │ ││ │││││││                                                            ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
          │ │ ││    │ │ ││ │││││││                                                            ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
          │ │ ││    │ │ ││ │││││││                                                            ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
          │ │ ││    │ │ ││ │││││││                                                            ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
          │ │ ││    │ │ ││ │││││││                                                            ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
          │ │ ││    │ │ ││ │││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearOfTheLastPublication@32 (line 147)
          │ │ ││    │ │ ││ │││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::last_publication_year@3 (line 118)
   0.00%  │ │ ││    │ │ ││ │││││││  0x00007fcc4ae05a52:   cmp    %ebx,%r11d
          │ │ ││    │ │ ││ │││││││  0x00007fcc4ae05a55:   jle    0x00007fcc4ae06312           ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
          │ │ ││    │ │ ││ │││││││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@164 (line 1718)
          │ │ ││    │ │ ││ │││││││                                                            ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
          │ │ ││    │ │ ││ │││││││                                                            ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
          │ │ ││    │ │ ││ │││││││                                                            ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
          │ │ ││    │ │ ││ │││││││                                                            ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
          │ │ ││    │ │ ││ │││││││                                                            ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
          │ │ ││    │ │ ││ │││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearOfTheLastPublication@32 (line 147)
          │ │ ││    │ │ ││ │││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::last_publication_year@3 (line 118)
   0.02%  │ │ ││    │ │ ││ │││││││  0x00007fcc4ae05a5b:   mov    %rsi,%rdi
          │ │ ││    │ │ ││ │││││││  0x00007fcc4ae05a5e:   xchg   %ax,%ax
   0.08%  │ │ ││    │ │ │╰ │││││││  0x00007fcc4ae05a60:   jmp    0x00007fcc4ae058d4           ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
          │ │ ││    │ │ │  │││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::lambda$yearOfTheLastPublication$10@7 (line 145)
          │ │ ││    │ │ │  │││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics$$Lambda/0x00007fcbd002bd18::test@4
          │ │ ││    │ │ │  │││││││                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@8 (line 178)
          │ │ ││    │ │ │  │││││││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
          │ │ ││    │ │ │  │││││││                                                            ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
          │ │ ││    │ │ │  │││││││                                                            ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
          │ │ ││    │ │ │  │││││││                                                            ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
          │ │ ││    │ │ │  │││││││                                                            ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
          │ │ ││    │ │ │  │││││││                                                            ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
          │ │ ││    │ │ │  │││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearOfTheLastPublication@32 (line 147)
          │ │ ││    │ │ │  │││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::last_publication_year@3 (line 118)
   0.16%  │ │ │↘    │ │ │  │││││││  0x00007fcc4ae05a65:   mov    0x10(%rdi),%esi              ; ImmutableOopMap {rcx=Oop rbp=Oop rsi=NarrowOop rdi=Oop r8=Oop r9=Oop [8]=Oop }
          │ │ │     │ │ │  │││││││                                                            ;*aload {reexecute=1 rethrow=0 return_oop=0}
          │ │ │     │ │ │  │││││││                                                            ; - (reexecute) java.util.HashMap$KeySpliterator::forEachRemaining@122 (line 1712)
          │ │ │     │ │ │  │││││││                                                            ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
          │ │ │     │ │ │  │││││││                                                            ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
          │ │ │     │ │ │  │││││││                                                            ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
          │ │ │     │ │ │  │││││││                                                            ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
          │ │ │     │ │ │  │││││││                                                            ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
          │ │ │     │ │ │  │││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearOfTheLastPublication@32 (line 147)
          │ │ │     │ │ │  │││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::last_publication_year@3 (line 118)
   3.35%  │ │ │     │ │ │  │││││││  0x00007fcc4ae05a68:   cmpl   $0x102b6f8,0x8(,%rsi,8)      ; implicit exception: dispatches to 0x00007fcc4ae06d59
          │ │ │     │ │ │  │││││││                                                            ;   {metadata(&apos;com/ionutbalosin/jvm/performance/benchmarks/miscellaneous/publicationstatistics/model/Publication&apos;)}
   2.36%  │ │ │     │ │ │  │││││││  0x00007fcc4ae05a73:   jne    0x00007fcc4ae069f4           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
          │ │ │     │ │ │  │││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics$$Lambda/0x00007fcbd002bd18::test@1
          │ │ │     │ │ │  │││││││                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@8 (line 178)
          │ │ │     │ │ │  │││││││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
          │ │ │     │ │ │  │││││││                                                            ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
          │ │ │     │ │ │  │││││││                                                            ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
          │ │ │     │ │ │  │││││││                                                            ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
          │ │ │     │ │ │  │││││││                                                            ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
          │ │ │     │ │ │  │││││││                                                            ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
          │ │ │     │ │ │  │││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearOfTheLastPublication@32 (line 147)
          │ │ │     │ │ │  │││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::last_publication_year@3 (line 118)
   0.14%  │ │ │     │ │ │  │││││││  0x00007fcc4ae05a79:   mov    0xc(,%rsi,8),%r14d           ;*getfield year {reexecute=0 rethrow=0 return_oop=0}
          │ │ │     │ │ │  │││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.model.Publication::getYear@1 (line 43)
          │ │ │     │ │ │  │││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::lambda$yearOfTheLastPublication$10@1 (line 145)
          │ │ │     │ │ │  │││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics$$Lambda/0x00007fcbd002bd18::test@4
          │ │ │     │ │ │  │││││││                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@8 (line 178)
          │ │ │     │ │ │  │││││││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
          │ │ │     │ │ │  │││││││                                                            ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
          │ │ │     │ │ │  │││││││                                                            ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
          │ │ │     │ │ │  │││││││                                                            ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
          │ │ │     │ │ │  │││││││                                                            ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
          │ │ │     │ │ │  │││││││                                                            ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
          │ │ │     │ │ │  │││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearOfTheLastPublication@32 (line 147)
          │ │ │     │ │ │  │││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::last_publication_year@3 (line 118)
   0.03%  │ │ │     │ │ │  │││││││  0x00007fcc4ae05a81:   cmp    $0x76c,%r14d
          │ │ │     │ │ │  │││││││  0x00007fcc4ae05a88:   jl     0x00007fcc4ae068e5           ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
          │ │ │     │ │ │  │││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::lambda$yearOfTheLastPublication$10@7 (line 145)
          │ │ │     │ │ │  │││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics$$Lambda/0x00007fcbd002bd18::test@4
          │ │ │     │ │ │  │││││││                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@8 (line 178)
          │ │ │     │ │ │  │││││││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
          │ │ │     │ │ │  │││││││                                                            ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
          │ │ │     │ │ │  │││││││                                                            ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
          │ │ │     │ │ │  │││││││                                                            ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
          │ │ │     │ │ │  │││││││                                                            ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
          │ │ │     │ │ │  │││││││                                                            ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
          │ │ │     │ │ │  │││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearOfTheLastPublication@32 (line 147)
          │ │ │     │ │ │  │││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::last_publication_year@3 (line 118)
   0.01%  │ │ │     │ │ │  │││││││  0x00007fcc4ae05a8e:   mov    0x18(%rdi),%eax
   0.00%  │ │ │     │ │ │  │││││││  0x00007fcc4ae05a91:   mov    %eax,%esi
   0.11%  │ │ │     │ │ │  │││││││  0x00007fcc4ae05a93:   shl    $0x3,%rsi                    ;*getfield next {reexecute=0 rethrow=0 return_oop=0}
          │ │ │     │ │ │  │││││││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@152 (line 1716)
          │ │ │     │ │ │  │││││││                                                            ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
          │ │ │     │ │ │  │││││││                                                            ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
          │ │ │     │ │ │  │││││││                                                            ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
          │ │ │     │ │ │  │││││││                                                            ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
          │ │ │     │ │ │  │││││││                                                            ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
          │ │ │     │ │ │  │││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearOfTheLastPublication@32 (line 147)
          │ │ │     │ │ │  │││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::last_publication_year@3 (line 118)
   0.01%  │ │ │     │ │ │  │││││││  0x00007fcc4ae05a97:   test   %edx,%edx
          │ │ │     │ │ │  │││││││  0x00007fcc4ae05a99:   je     0x00007fcc4ae05c7d           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
          │ │ │     │ │ │  │││││││                                                            ; - java.util.stream.Collectors$1OptionalBox::accept@4 (line 895)
          │ │ │     │ │ │  │││││││                                                            ; - java.util.stream.Collectors$$Lambda/0x00007fcbd003c3d8::accept@5
          │ │ │     │ │ │  │││││││                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
          │ │ │     │ │ │  │││││││                                                            ; - java.util.stream.ReferencePipeline$3$1::accept@17 (line 197)
          │ │ │     │ │ │  │││││││                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@21 (line 179)
          │ │ │     │ │ │  │││││││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
          │ │ │     │ │ │  │││││││                                                            ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
          │ │ │     │ │ │  │││││││                                                            ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
          │ │ │     │ │ │  │││││││                                                            ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
          │ │ │     │ │ │  │││││││                                                            ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
          │ │ │     │ │ │  │││││││                                                            ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
          │ │ │     │ │ │  │││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearOfTheLastPublication@32 (line 147)
          │ │ │     │ │ │  │││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::last_publication_year@3 (line 118)
   0.03%  │ │ │     │ │ │  │││││││  0x00007fcc4ae05a9f:   nop                                 ; ImmutableOopMap {rax=NarrowOop rcx=Oop rbp=Oop rsi=Oop rdi=Oop r8=Oop r9=Oop [8]=Oop }
          │ │ │     │ │ │  │││││││                                                            ;*aload {reexecute=1 rethrow=0 return_oop=0}
          │ │ │     │ │ │  │││││││                                                            ; - (reexecute) java.util.HashMap$KeySpliterator::forEachRemaining@122 (line 1712)
          │ │ │     │ │ │  │││││││                                                            ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
          │ │ │     │ │ │  │││││││                                                            ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
          │ │ │     │ │ │  │││││││                                                            ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
          │ │ │     │ │ │  │││││││                                                            ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
          │ │ │     │ │ │  │││││││                                                            ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
          │ │ │     │ │ │  │││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearOfTheLastPublication@32 (line 147)
          │ │ │     │ │ │  │││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::last_publication_year@3 (line 118)
          │ │ │     │ │ │  │││││││  0x00007fcc4ae05aa0:   cmp    0xc(%rbp),%r14d              ; implicit exception: dispatches to 0x00007fcc4ae06d7c
          │ │ │     │ │ │  │││││││  0x00007fcc4ae05aa4:   jg     0x00007fcc4ae06ade
   0.11%  │ │ │     │ │ │  │││││││  0x00007fcc4ae05aaa:   test   %eax,%eax
          │ │ │     │ │ │ ╭│││││││  0x00007fcc4ae05aac:   jne    0x00007fcc4ae05af5           ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
          │ │ │     │ │ │ ││││││││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@159 (line 1718)
          │ │ │     │ │ │ ││││││││                                                            ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
          │ │ │     │ │ │ ││││││││                                                            ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
          │ │ │     │ │ │ ││││││││                                                            ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
          │ │ │     │ │ │ ││││││││                                                            ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
          │ │ │     │ │ │ ││││││││                                                            ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
          │ │ │     │ │ │ ││││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearOfTheLastPublication@32 (line 147)
          │ │ │     │ │ │ ││││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::last_publication_year@3 (line 118)
   0.01%  │ │ │     │ │ │ ││││││││  0x00007fcc4ae05ab2:   cmp    %ebx,%r11d
          │ │ │     │ │ │ ││││││││  0x00007fcc4ae05ab5:   jle    0x00007fcc4ae06312           ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
          │ │ │     │ │ │ ││││││││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@164 (line 1718)
          │ │ │     │ │ │ ││││││││                                                            ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
          │ │ │     │ │ │ ││││││││                                                            ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
          │ │ │     │ │ │ ││││││││                                                            ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
          │ │ │     │ │ │ ││││││││                                                            ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
          │ │ │     │ │ │ ││││││││                                                            ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
          │ │ │     │ │ │ ││││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearOfTheLastPublication@32 (line 147)
          │ │ │     │ │ │ ││││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::last_publication_year@3 (line 118)
   0.02%  │ │ │     │ │ │ ││││││││  0x00007fcc4ae05abb:   mov    %rsi,%rax
          │ │ │     │ │ │ ││││││││  0x00007fcc4ae05abe:   xchg   %ax,%ax
   0.08%  │ │ │     │ │ │ │╰││││││  0x00007fcc4ae05ac0:   jmp    0x00007fcc4ae058fe
   0.13%  ↘ │ │     │ │ │ │ ││││││  0x00007fcc4ae05ac5:   mov    %rax,%rdi
   0.06%    │ │     │ │ │ │ ╰│││││  0x00007fcc4ae05ac8:   jmp    0x00007fcc4ae0586c
   0.14%    ↘ │     │ │ │ │  │││││  0x00007fcc4ae05acd:   mov    %rax,%rdi
   0.01%      │     │ │ │ │  ╰││││  0x00007fcc4ae05ad0:   jmp    0x00007fcc4ae0589f
   0.12%      ↘     │ │ │ │   ││││  0x00007fcc4ae05ad5:   mov    %rax,%rdi
   0.05%            │ │ │ │   ╰│││  0x00007fcc4ae05ad8:   jmp    0x00007fcc4ae058d4
   0.09%            ↘ │ │ │    │││  0x00007fcc4ae05add:   mov    %rsi,%rdi
   0.02%              │ │ │    ╰││  0x00007fcc4ae05ae0:   jmp    0x00007fcc4ae0586c
   0.10%              ↘ │ │     ││  0x00007fcc4ae05ae5:   mov    %rsi,%rdi
   0.01%                │ │     ╰│  0x00007fcc4ae05ae8:   jmp    0x00007fcc4ae0589f
   0.08%                ↘ │      │  0x00007fcc4ae05aed:   mov    %rsi,%rdi
   0.01%                  │      ╰  0x00007fcc4ae05af0:   jmp    0x00007fcc4ae058d4
   0.07%                  ↘         0x00007fcc4ae05af5:   mov    %rsi,%rax
   0.02%                            0x00007fcc4ae05af8:   jmp    0x00007fcc4ae058fe           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                                                              ; - java.util.stream.Collectors$1OptionalBox::accept@4 (line 895)
                                                                                              ; - java.util.stream.Collectors$$Lambda/0x00007fcbd003c3d8::accept@5
                                                                                              ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                                              ; - java.util.stream.ReferencePipeline$3$1::accept@17 (line 197)
                                                                                              ; - java.util.stream.ReferencePipeline$2$1::accept@21 (line 179)
                                                                                              ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
                                                                                              ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
                                                                                              ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                                                                                              ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
                                                                                              ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
....................................................................................................
  32.00%  <total for region 2>

....[Hottest Region 3]..............................................................................
jvmci, level 4, java.util.HashMap$KeySpliterator::forEachRemaining, version 8, compile id 1241 

                0x00007fcc4ade5a36:   movabs $0x7ffed2180,%rdx            ;   {oop(a &apos;java/lang/Integer&apos;[256] {0x00000007ffed2180})}
                0x00007fcc4ade5a40:   movabs $0x7fcbd002b6f8,%rdx         ;   {metadata(&apos;com/ionutbalosin/jvm/performance/benchmarks/miscellaneous/publicationstatistics/model/Publication&apos;)}
                0x00007fcc4ade5a4a:   movabs $0x7fcbd002bd18,%rdx         ;   {metadata(&apos;com/ionutbalosin/jvm/performance/benchmarks/miscellaneous/publicationstatistics/PublicationStatistics$$Lambda+0x00007fcbd002bd18&apos;)}
                0x00007fcc4ade5a54:   mov    0x68(%rsp),%r10
                0x00007fcc4ade5a59:   movabs $0x7fcbd002b6f8,%r11         ;   {metadata(&apos;com/ionutbalosin/jvm/performance/benchmarks/miscellaneous/publicationstatistics/model/Publication&apos;)}
                0x00007fcc4ade5a63:   movabs $0x7ffed2180,%r8             ;   {oop(a &apos;java/lang/Integer&apos;[256] {0x00000007ffed2180})}
                0x00007fcc4ade5a6d:   jmp    0x00007fcc4ade76a8
                0x00007fcc4ade5a72:   data16 nopw 0x0(%rax,%rax,1)
                0x00007fcc4ade5a7c:   data16 data16 xchg %ax,%ax          ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - java.util.HashMap$KeySpliterator::forEachRemaining@124 (line 1712)
   0.07%   ↗    0x00007fcc4ade5a80:   cmp    %r9d,%edi
           │    0x00007fcc4ade5a83:   jbe    0x00007fcc4ade751e
   0.76%   │    0x00007fcc4ade5a89:   mov    0x10(%rbx,%r9,4),%ecx
   0.52%   │    0x00007fcc4ade5a8e:   shl    $0x3,%rcx                    ;*aaload {reexecute=0 rethrow=0 return_oop=0}
           │                                                              ; - java.util.HashMap$KeySpliterator::forEachRemaining@133 (line 1713)
   0.61%   │    0x00007fcc4ade5a92:   inc    %r9d                         ;*iinc {reexecute=0 rethrow=0 return_oop=0}
           │                                                              ; - java.util.HashMap$KeySpliterator::forEachRemaining@130 (line 1713)
   0.04%   │    0x00007fcc4ade5a95:   mov    %r10,%rbp
   0.53%   │    0x00007fcc4ade5a98:   mov    %rcx,%r10
   0.04%   │    0x00007fcc4ade5a9b:   mov    0x98(%rsp),%rcx              ;*aload {reexecute=0 rethrow=0 return_oop=0}
           │                                                              ; - java.util.HashMap$KeySpliterator::forEachRemaining@157 (line 1718)
   1.11%   │    0x00007fcc4ade5aa3:   test   %r10,%r10
          ╭│    0x00007fcc4ade5aa6:   jne    0x00007fcc4ade5b39           ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
          ││                                                              ; - java.util.HashMap$KeySpliterator::forEachRemaining@159 (line 1718)
   0.24%  ││    0x00007fcc4ade5aac:   mov    0xb0(%rsp),%r8d
   0.74%  ││    0x00007fcc4ade5ab4:   cmp    %r9d,%r8d
          ││    0x00007fcc4ade5ab7:   jle    0x00007fcc4ade730a           ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
          ││                                                              ; - java.util.HashMap$KeySpliterator::forEachRemaining@164 (line 1718)
   0.34%  ││ ↗  0x00007fcc4ade5abd:   mov    0x84(%rsp),%esi
   1.01%  ││ │  0x00007fcc4ade5ac4:   inc    %esi
   0.12%  ││ │  0x00007fcc4ade5ac6:   cmp    $0x2000,%esi
          ││ │  0x00007fcc4ade5acc:   jge    0x00007fcc4ade7658
   0.72%  ││ │  0x00007fcc4ade5ad2:   mov    %esi,0x84(%rsp)
   0.45%  ││ │  0x00007fcc4ade5ad9:   movabs $0x7fcbd002bd18,%rdx         ;   {metadata(&apos;com/ionutbalosin/jvm/performance/benchmarks/miscellaneous/publicationstatistics/PublicationStatistics$$Lambda+0x00007fcbd002bd18&apos;)}
   0.72%  ││ │  0x00007fcc4ade5ae3:   movabs $0x7fcbd002b6f8,%r11         ;   {metadata(&apos;com/ionutbalosin/jvm/performance/benchmarks/miscellaneous/publicationstatistics/model/Publication&apos;)}
   0.02%  ││ │  0x00007fcc4ade5aed:   movabs $0x7fcbcf0deff0,%r14         ;   {metadata(&apos;java/util/stream/Collectors$1OptionalBox&apos;)}
   0.61%  ││ │  0x00007fcc4ade5af7:   movabs $0x7fcbcf0bc3f8,%rsi         ;   {metadata(&apos;java/util/ArrayList&apos;)}
   0.38%  ││ │  0x00007fcc4ade5b01:   vpxor  %xmm0,%xmm0,%xmm0
   0.80%  ││ │  0x00007fcc4ade5b05:   mov    0x58(%rsp),%rbx
   0.17%  ││ │  0x00007fcc4ade5b0a:   mov    0xac(%rsp),%edi
   0.62%  ││ │  0x00007fcc4ade5b11:   mov    %r10,%rcx
   0.30%  ││ │  0x00007fcc4ade5b14:   movabs $0x7ffed2180,%r8             ;   {oop(a &apos;java/lang/Integer&apos;[256] {0x00000007ffed2180})}
   0.69%  ││ │  0x00007fcc4ade5b1e:   mov    %rbp,%r10
   0.16%  ││ │  0x00007fcc4ade5b21:   movabs $0x7fcbcf00e8d8,%rbp         ;*aload {reexecute=0 rethrow=0 return_oop=0}
          ││ │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@122 (line 1712)
          ││ │                                                            ;   {metadata(&apos;java/lang/String&apos;)}
   0.69%  ││ │  0x00007fcc4ade5b2b:   test   %rcx,%rcx
          │╰ │  0x00007fcc4ade5b2e:   je     0x00007fcc4ade5a80
   0.26%  │ ╭│  0x00007fcc4ade5b34:   jmp    0x00007fcc4ade5b60           ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
          │ ││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@124 (line 1712)
   0.74%  ↘ ││  0x00007fcc4ade5b39:   mov    0xb0(%rsp),%r8d
   1.03%    │╰  0x00007fcc4ade5b41:   jmp    0x00007fcc4ade5abd
            │   0x00007fcc4ade5b46:   data16 data16 nopw 0x0(%rax,%rax,1)
            │   0x00007fcc4ade5b51:   data16 data16 xchg %ax,%ax
            │   0x00007fcc4ade5b55:   data16 data16 nopw 0x0(%rax,%rax,1) ;*getfield val$predicate {reexecute=0 rethrow=0 return_oop=0}
            │                                                             ; - java.util.stream.ReferencePipeline$2$1::accept@4 (line 178)
            │                                                             ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
            ↘   0x00007fcc4ade5b60:   mov    0x10(%r10),%ebx              ; ImmutableOopMap {rcx=Oop r8=Oop r10=Oop [80]=Oop [88]=Oop [100]=NarrowOop [104]=Oop }
                                                                          ;*aload {reexecute=1 rethrow=0 return_oop=0}
                                                                          ; - (reexecute) java.util.HashMap$KeySpliterator::forEachRemaining@122 (line 1712)
   0.19%        0x00007fcc4ade5b64:   mov    0x34(,%rbx,8),%ebx           ; implicit exception: dispatches to 0x00007fcc4ade7b1b
   0.74%        0x00007fcc4ade5b6b:   test   %ebx,%ebx
....................................................................................................
  14.48%  <total for region 3>

....[Hottest Regions]...............................................................................
  49.73%      jvmci, level 4  java.util.HashMap$KeySpliterator::forEachRemaining, version 8, compile id 1241 
  32.00%      jvmci, level 4  com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::last_publication_year, version 6, compile id 1335 
  14.48%      jvmci, level 4  java.util.HashMap$KeySpliterator::forEachRemaining, version 8, compile id 1241 
   0.55%              kernel  [unknown] 
   0.18%              kernel  [unknown] 
   0.14%              kernel  [unknown] 
   0.11%              kernel  [unknown] 
   0.10%              kernel  [unknown] 
   0.09%              kernel  [unknown] 
   0.06%              kernel  [unknown] 
   0.05%           libjvm.so  CompilerOracle::has_option_value<bool> 
   0.04%              kernel  [unknown] 
   0.04%              kernel  [unknown] 
   0.03%          ld-2.31.so  __tls_get_addr 
   0.03%              kernel  [unknown] 
   0.03%              kernel  [unknown] 
   0.02%              kernel  [unknown] 
   0.02%              kernel  [unknown] 
   0.02%              kernel  [unknown] 
   0.02%      jvmci, level 4  com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::last_publication_year, version 6, compile id 1335 
   2.26%  <...other 669 warm regions...>
....................................................................................................
 100.00%  <totals>

....[Hottest Methods (after inlining)]..............................................................
  64.22%      jvmci, level 4  java.util.HashMap$KeySpliterator::forEachRemaining, version 8, compile id 1241 
  32.05%      jvmci, level 4  com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::last_publication_year, version 6, compile id 1335 
   2.45%              kernel  [unknown] 
   0.47%                      <unknown> 
   0.05%           libjvm.so  CompilerOracle::has_option_value<bool> 
   0.04%        libc-2.31.so  __vfprintf_internal 
   0.03%          ld-2.31.so  __tls_get_addr 
   0.02%           libjvm.so  fileStream::write 
   0.02%           libjvm.so  ElfSymbolTable::lookup 
   0.02%           libjvm.so  defaultStream::write 
   0.02%        libc-2.31.so  clock_gettime@GLIBC_2.2.5 
   0.02%              [vdso]  __vdso_clock_gettime 
   0.02%           libjvm.so  xmlStream::write_text 
   0.02%  libpthread-2.31.so  pthread_cond_timedwait@@GLIBC_2.3.2 
   0.02%      jvmci, level 4  java.util.HashMap$KeySpliterator::forEachRemaining, version 3, compile id 1205 
   0.01%        libc-2.31.so  __strchrnul_avx2 
   0.01%           libjvm.so  MethodMatcher::matches 
   0.01%        libc-2.31.so  _IO_default_xsputn 
   0.01%        libc-2.31.so  _IO_fwrite 
   0.01%      hsdis-amd64.so  print_insn 
   0.48%  <...other 157 warm methods...>
....................................................................................................
 100.00%  <totals>

....[Distribution by Source]........................................................................
  96.29%      jvmci, level 4
   2.45%              kernel
   0.47%                    
   0.43%           libjvm.so
   0.18%        libc-2.31.so
   0.05%  libpthread-2.31.so
   0.04%          ld-2.31.so
   0.04%         interpreter
   0.02%      hsdis-amd64.so
   0.02%              [vdso]
   0.01%         c1, level 3
   0.00%    perf-2147606.map
....................................................................................................
 100.00%  <totals>



# JMH version: 1.37
# VM version: JDK 21, Java HotSpot(TM) 64-Bit Server VM, 21+35-jvmci-23.1-b15
# VM invoker: /home/gogu/bench_jdks/graalvm-jdk-21+35.1/bin/java
# VM options: -XX:ThreadPriorityPolicy=1 -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCIProduct -XX:-UnlockExperimentalVMOptions -Xms4g -Xmx4g -XX:+AlwaysPreTouch
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark.most_prolific_pair_of_authors

# Run progress: 28.57% complete, ETA 00:19:25
# Fork: 1 of 1
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 13094.343 ms/op
# Warmup Iteration   2: 6834.892 ms/op
# Warmup Iteration   3: 4648.360 ms/op
# Warmup Iteration   4: 5186.087 ms/op
# Warmup Iteration   5: 5656.405 ms/op
Iteration   1: 5296.436 ms/op
Iteration   2: 5371.229 ms/op
Iteration   3: 5457.426 ms/op
Iteration   4: 5368.003 ms/op
Iteration   5: 5639.937 ms/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark.most_prolific_pair_of_authors":
  5426.606 ±(99.9%) 509.047 ms/op [Average]
  (min, avg, max) = (5296.436, 5426.606, 5639.937), stdev = 132.198
  CI (99.9%): [4917.560, 5935.653] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark.most_prolific_pair_of_authors:asm":
PrintAssembly processed: 467965 total address lines.
Perf output processed (skipped 74.915 seconds):
 Column 1: cycles (57070 events)

Hottest code regions (>10.00% "cycles" events):
 Event counts are percents of total event count.

....[Hottest Region 1]..............................................................................
jvmci, level 4, java.util.HashMap$TreeNode::find, version 3, compile id 1404 

   0.00%                          0x00007fbf3edd70b2:   cmpl   $0x17fee8,0x8(%rcx)          ; implicit exception: dispatches to 0x00007fbf3edd7fc6
                                                                                            ;   {metadata(&apos;java/util/AbstractMap$SimpleImmutableEntry&apos;)}
   0.00%  ╭                       0x00007fbf3edd70b9:   je     0x00007fbf3edd7241
          │                       0x00007fbf3edd70bf:   nop
          │                       0x00007fbf3edd70c0:   jmp    0x00007fbf3edd7df2
          │                       0x00007fbf3edd70c5:   data16 data16 nopw 0x0(%rax,%rax,1)
          │                       0x00007fbf3edd70d0:   data16 data16 xchg %ax,%ax
          │                       0x00007fbf3edd70d4:   nopl   0x0(%rax,%rax,1)
          │                       0x00007fbf3edd70dc:   data16 data16 xchg %ax,%ax          ;*aload {reexecute=0 rethrow=0 return_oop=0}
          │                                                                                 ; - java.util.HashMap$TreeNode::find@165 (line 2040)
   0.02%  │ ↗                     0x00007fbf3edd70e0:   mov    %ebp,%r14d
   0.01%  │ │                     0x00007fbf3edd70e3:   shl    $0x3,%r14                    ;*getfield left {reexecute=0 rethrow=0 return_oop=0}
          │ │                                                                               ; - java.util.HashMap$TreeNode::find@5 (line 2021)
   0.04%  │ │                     0x00007fbf3edd70e7:   mov    %r14,0x70(%rsp)
   0.07%  │ │                     0x00007fbf3edd70ec:   cmp    %edx,%r9d
          │ │                     0x00007fbf3edd70ef:   jg     0x00007fbf3edd790e           ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
          │ │                                                                               ; - java.util.HashMap$TreeNode::find@26 (line 2022)
   0.02%  │ │                     0x00007fbf3edd70f5:   mov    %r11d,%r10d
   0.01%  │ │                     0x00007fbf3edd70f8:   shl    $0x3,%r10                    ;*getfield key {reexecute=0 rethrow=0 return_oop=0}
          │ │                                                                               ; - java.util.HashMap$TreeNode::find@51 (line 2026)
   0.03%  │ │                     0x00007fbf3edd70fc:   nopl   0x0(%rax)
   0.04%  │ │                     0x00007fbf3edd7100:   cmp    %rcx,%r10
          │ │                     0x00007fbf3edd7103:   je     0x00007fbf3edd7f4d           ;*if_acmpeq {reexecute=0 rethrow=0 return_oop=0}
          │ │                                                                               ; - java.util.HashMap$TreeNode::find@58 (line 2026)
   0.02%  │ │                     0x00007fbf3edd7109:   mov    0xc(%rcx),%r9d               ; ImmutableOopMap {rcx=Oop rbx=NarrowOop rbp=NarrowOop rsi=Oop r8=Oop r9=NarrowOop r10=Oop r11=NarrowOop r13=Oop r14=Oop [112]=Oop [120]=Oop }
          │ │                                                                               ;*aload {reexecute=1 rethrow=0 return_oop=0}
          │ │                                                                               ; - (reexecute) java.util.HashMap$TreeNode::find@3 (line 2021)
   0.01%  │ │                     0x00007fbf3edd710d:   cmpl   $0x102b2c0,0x8(,%r9,8)       ; implicit exception: dispatches to 0x00007fbf3edd7fed
          │ │                                                                               ;   {metadata(&apos;com/ionutbalosin/jvm/performance/benchmarks/miscellaneous/publicationstatistics/model/Author&apos;)}
   0.08%  │ │                     0x00007fbf3edd7119:   jne    0x00007fbf3edd7d52           ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
          │ │                                                                               ; - java.util.AbstractMap::eq@18 (line 584)
          │ │                                                                               ; - java.util.AbstractMap$SimpleImmutableEntry::equals@22 (line 850)
          │ │                                                                               ; - java.util.HashMap$TreeNode::find@68 (line 2026)
   0.03%  │ │                     0x00007fbf3edd711f:   nop                                 ; ImmutableOopMap {rcx=Oop rbx=NarrowOop rbp=NarrowOop rsi=Oop r8=Oop r9=NarrowOop r10=Oop r11=NarrowOop r13=Oop r14=Oop [112]=Oop [120]=Oop }
          │ │                                                                               ;*aload {reexecute=1 rethrow=0 return_oop=0}
          │ │                                                                               ; - (reexecute) java.util.HashMap$TreeNode::find@3 (line 2021)
   0.01%  │ │                     0x00007fbf3edd7120:   cmpl   $0x17fee8,0x8(,%r11,8)       ; implicit exception: dispatches to 0x00007fbf3edd8010
          │ │                                                                               ;   {metadata(&apos;java/util/AbstractMap$SimpleImmutableEntry&apos;)}
   2.98%  │ │                     0x00007fbf3edd712c:   jne    0x00007fbf3edd7e7c           ;*instanceof {reexecute=0 rethrow=0 return_oop=0}
          │ │                                                                               ; - java.util.AbstractMap$SimpleImmutableEntry::equals@1 (line 851)
          │ │                                                                               ; - java.util.HashMap$TreeNode::find@68 (line 2026)
   0.07%  │ │                     0x00007fbf3edd7132:   mov    0xc(,%r11,8),%edi            ;*getfield key {reexecute=0 rethrow=0 return_oop=0}
          │ │                                                                               ; - java.util.AbstractMap$SimpleImmutableEntry::getKey@1 (line 798)
          │ │                                                                               ; - java.util.AbstractMap$SimpleImmutableEntry::equals@17 (line 850)
          │ │                                                                               ; - java.util.HashMap$TreeNode::find@68 (line 2026)
   0.05%  │ │                     0x00007fbf3edd713a:   nopw   0x0(%rax,%rax,1)
   0.01%  │ │                     0x00007fbf3edd7140:   cmp    %r9d,%edi
          │ │                     0x00007fbf3edd7143:   je     0x00007fbf3edd7c1e           ; ImmutableOopMap {rcx=Oop rbx=NarrowOop rbp=NarrowOop rsi=Oop rdi=NarrowOop r8=Oop r9=NarrowOop r10=Oop r11=NarrowOop r13=Oop r14=Oop [112]=Oop [120]=Oop }
          │ │                                                                               ;*aload {reexecute=1 rethrow=0 return_oop=0}
          │ │                                                                               ; - (reexecute) java.util.HashMap$TreeNode::find@3 (line 2021)
   0.02%  │ │                     0x00007fbf3edd7149:   cmpl   $0x102b2c0,0x8(,%rdi,8)      ; implicit exception: dispatches to 0x00007fbf3edd8033
          │ │                                                                               ;   {metadata(&apos;com/ionutbalosin/jvm/performance/benchmarks/miscellaneous/publicationstatistics/model/Author&apos;)}
   6.25%  │ │                     0x00007fbf3edd7154:   jne    0x00007fbf3edd7f5f           ;*if_acmpeq {reexecute=0 rethrow=0 return_oop=0}
          │ │                                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.model.Author::equals@19 (line 46)
          │ │                                                                               ; - java.util.AbstractMap::eq@18 (line 584)
          │ │                                                                               ; - java.util.AbstractMap$SimpleImmutableEntry::equals@22 (line 850)
          │ │                                                                               ; - java.util.HashMap$TreeNode::find@68 (line 2026)
   0.07%  │ │                     0x00007fbf3edd715a:   mov    0xc(,%r9,8),%r9d             ;*getfield name {reexecute=0 rethrow=0 return_oop=0}
          │ │                                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.model.Author::equals@30 (line 48)
          │ │                                                                               ; - java.util.AbstractMap::eq@18 (line 584)
          │ │                                                                               ; - java.util.AbstractMap$SimpleImmutableEntry::equals@22 (line 850)
          │ │                                                                               ; - java.util.HashMap$TreeNode::find@68 (line 2026)
   0.00%  │ │                     0x00007fbf3edd7162:   mov    0xc(,%rdi,8),%edi            ;*getfield name {reexecute=0 rethrow=0 return_oop=0}
          │ │                                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.model.Author::equals@34 (line 48)
          │ │                                                                               ; - java.util.AbstractMap::eq@18 (line 584)
          │ │                                                                               ; - java.util.AbstractMap$SimpleImmutableEntry::equals@22 (line 850)
          │ │                                                                               ; - java.util.HashMap$TreeNode::find@68 (line 2026)
   0.07%  │ │                     0x00007fbf3edd7169:   cmp    %r9d,%edi
          │ │                     0x00007fbf3edd716c:   je     0x00007fbf3edd793d           ;*if_acmpeq {reexecute=0 rethrow=0 return_oop=0}
          │ │                                                                               ; - java.util.Objects::equals@2 (line 64)
          │ │                                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.model.Author::equals@37 (line 48)
          │ │                                                                               ; - java.util.AbstractMap::eq@18 (line 584)
          │ │                                                                               ; - java.util.AbstractMap$SimpleImmutableEntry::equals@22 (line 850)
          │ │                                                                               ; - java.util.HashMap$TreeNode::find@68 (line 2026)
   0.06%  │ │                     0x00007fbf3edd7172:   mov    %r11d,0x4c(%rsp)             ; ImmutableOopMap {rcx=Oop rbx=NarrowOop rbp=NarrowOop rsi=Oop rdi=NarrowOop r8=Oop r9=NarrowOop r10=Oop r13=Oop r14=Oop [76]=NarrowOop [112]=Oop [120]=Oop }
          │ │                                                                               ;*aload {reexecute=1 rethrow=0 return_oop=0}
          │ │                                                                               ; - (reexecute) java.util.HashMap$TreeNode::find@3 (line 2021)
   0.00%  │ │                     0x00007fbf3edd7177:   movsbl 0x10(,%r9,8),%eax            ; implicit exception: dispatches to 0x00007fbf3edd8056
   0.01%  │ │                     0x00007fbf3edd7180:   mov    0x14(,%r9,8),%r11d
   0.01%  │ │                     0x00007fbf3edd7188:   cmp    %r9d,%edi
          │ │                     0x00007fbf3edd718b:   je     0x00007fbf3edd7a20
   0.06%  │ │                     0x00007fbf3edd7191:   test   %edi,%edi
          │ │                     0x00007fbf3edd7193:   je     0x00007fbf3edd78d8
   0.06%  │ │                     0x00007fbf3edd7199:   nopl   0x0(%rax)
   0.01%  │ │                     0x00007fbf3edd71a0:   cmp    0x10(,%rdi,8),%al
          │ │                     0x00007fbf3edd71a7:   jne    0x00007fbf3edd78ea           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
          │ │                                                                               ; - java.lang.String::equals@0 (line 1858)
          │ │                                                                               ; - java.util.Objects::equals@11 (line 64)
          │ │                                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.model.Author::equals@37 (line 48)
          │ │                                                                               ; - java.util.AbstractMap::eq@18 (line 584)
          │ │                                                                               ; - java.util.AbstractMap$SimpleImmutableEntry::equals@22 (line 850)
          │ │                                                                               ; - java.util.HashMap$TreeNode::find@68 (line 2026)
   1.68%  │ │                     0x00007fbf3edd71ad:   mov    0x14(,%rdi,8),%r9d           ; ImmutableOopMap {rcx=Oop rbx=NarrowOop rbp=NarrowOop rsi=Oop r8=Oop r9=NarrowOop r10=Oop r11=NarrowOop r13=Oop r14=Oop [76]=NarrowOop [112]=Oop [120]=Oop }
          │ │                                                                               ;*aload {reexecute=1 rethrow=0 return_oop=0}
          │ │                                                                               ; - (reexecute) java.util.HashMap$TreeNode::find@3 (line 2021)
   0.06%  │ │                     0x00007fbf3edd71b5:   mov    0xc(,%r9,8),%edi             ; implicit exception: dispatches to 0x00007fbf3edd8079
   1.11%  │ │                     0x00007fbf3edd71bd:   data16 xchg %ax,%ax                 ; ImmutableOopMap {rcx=Oop rbx=NarrowOop rbp=NarrowOop rsi=Oop r8=Oop r9=NarrowOop r10=Oop r11=NarrowOop r13=Oop r14=Oop [76]=NarrowOop [112]=Oop [120]=Oop }
          │ │                                                                               ;*aload {reexecute=1 rethrow=0 return_oop=0}
          │ │                                                                               ; - (reexecute) java.util.HashMap$TreeNode::find@3 (line 2021)
   0.01%  │ │                     0x00007fbf3edd71c0:   cmp    0xc(,%r11,8),%edi            ; implicit exception: dispatches to 0x00007fbf3edd809c
          │ │                     0x00007fbf3edd71c8:   jne    0x00007fbf3edd78fc
   0.11%  │ │                     0x00007fbf3edd71ce:   test   %edi,%edi
          │ │                     0x00007fbf3edd71d0:   je     0x00007fbf3edd7a3e
   0.05%  │ │                     0x00007fbf3edd71d6:   mov    %r10,0x68(%rsp)
   0.02%  │ │                     0x00007fbf3edd71db:   mov    %rsi,0x58(%rsp)
   0.00%  │ │                     0x00007fbf3edd71e0:   shl    $0x3,%r9
   0.02%  │ │                     0x00007fbf3edd71e4:   shl    $0x3,%r11
   0.06%  │ │                     0x00007fbf3edd71e8:   mov    %r9,%rsi
   0.01%  │ │                     0x00007fbf3edd71eb:   mov    $0x10,%rdx
          │ │                     0x00007fbf3edd71f2:   mov    %r11,%rcx
   0.03%  │ │                     0x00007fbf3edd71f5:   mov    %r8,%r11
   0.04%  │ │                     0x00007fbf3edd71f8:   mov    $0x10,%r8                    ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
          │ │                                                                               ; - java.lang.String::equals@0 (line 1858)
          │ │                                                                               ; - java.util.Objects::equals@11 (line 64)
          │ │                                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.model.Author::equals@37 (line 48)
          │ │                                                                               ; - java.util.AbstractMap::eq@18 (line 584)
          │ │                                                                               ; - java.util.AbstractMap$SimpleImmutableEntry::equals@22 (line 850)
          │ │                                                                               ; - java.util.HashMap$TreeNode::find@68 (line 2026)
   0.01%  │ │                     0x00007fbf3edd71ff:   mov    %edi,%r9d
          │ │                     0x00007fbf3edd7202:   call   0x00007fbf3e8ee580           ;   {runtime_call Stub&lt;IntrinsicStubsGen.arrayRegionEqualsS1S1&gt;}
   0.17%  │ │                     0x00007fbf3edd7207:   nop
   0.01%  │ │                     0x00007fbf3edd7208:   test   %eax,%eax
          │ │                     0x00007fbf3edd720a:   jne    0x00007fbf3edd7a5c           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
          │ │                                                                               ; - java.util.AbstractMap$SimpleImmutableEntry::equals@25 (line 850)
          │ │                                                                               ; - java.util.HashMap$TreeNode::find@68 (line 2026)
   0.06%  │ │                     0x00007fbf3edd7210:   test   %ebp,%ebp
          │╭│                     0x00007fbf3edd7212:   jne    0x00007fbf3edd7262           ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
          │││                                                                               ; - java.util.HashMap$TreeNode::find@79 (line 2028)
   0.06%  │││                     0x00007fbf3edd7218:   mov    %r11,%r8                     ;*aload {reexecute=0 rethrow=0 return_oop=0}
          │││                                                                               ; - java.util.HashMap$TreeNode::find@165 (line 2040)
   0.03%  │││                     0x00007fbf3edd721b:   nopl   0x0(%rax,%rax,1)
   0.02%  │││↗                    0x00007fbf3edd7220:   test   %r13,%r13
          ││││                    0x00007fbf3edd7223:   je     0x00007fbf3edd7916           ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
          ││││                                                                              ; - java.util.HashMap$TreeNode::find@167 (line 2040)
   0.08%  ││││                    0x00007fbf3edd7229:   mov    0x458(%r15),%rax             ; ImmutableOopMap {r8=Oop r13=Oop [120]=Oop }
          ││││                                                                              ;*aload {reexecute=1 rethrow=0 return_oop=0}
          ││││                                                                              ; - (reexecute) java.util.HashMap$TreeNode::find@165 (line 2040)
   0.02%  ││││                    0x00007fbf3edd7230:   test   %eax,(%rax)                  ;   {poll}
   0.06%  ││││                    0x00007fbf3edd7232:   mov    %r13,%rsi
   0.01%  ││││                    0x00007fbf3edd7235:   mov    0x78(%rsp),%rcx
   0.02%  ││││                    0x00007fbf3edd723a:   mov    0x84(%rsp),%edx              ; ImmutableOopMap {rcx=Oop rsi=Oop r8=Oop [120]=Oop }
          ││││                                                                              ;*aload {reexecute=1 rethrow=0 return_oop=0}
          ││││                                                                              ; - (reexecute) java.util.HashMap$TreeNode::find@3 (line 2021)
   0.01%  ↘│││                    0x00007fbf3edd7241:   mov    0xc(%rsi),%r9d               ; implicit exception: dispatches to 0x00007fbf3edd80bf
   1.83%   │││                    0x00007fbf3edd7245:   mov    0x10(%rsi),%r11d             ;*getfield key {reexecute=0 rethrow=0 return_oop=0}
           │││                                                                              ; - java.util.HashMap$TreeNode::find@51 (line 2026)
   0.11%   │││                    0x00007fbf3edd7249:   mov    0x30(%rsi),%ebx              ;*getfield right {reexecute=0 rethrow=0 return_oop=0}
           │││                                                                              ; - java.util.HashMap$TreeNode::find@12 (line 2021)
   0.27%   │││                    0x00007fbf3edd724c:   mov    0x2c(%rsi),%ebp              ;*getfield left {reexecute=0 rethrow=0 return_oop=0}
           │││                                                                              ; - java.util.HashMap$TreeNode::find@5 (line 2021)
   0.03%   │││                    0x00007fbf3edd724f:   mov    %ebx,%r13d
   0.02%   │││                    0x00007fbf3edd7252:   shl    $0x3,%r13                    ;*getfield right {reexecute=0 rethrow=0 return_oop=0}
           │││                                                                              ; - java.util.HashMap$TreeNode::find@12 (line 2021)
   0.03%   │││                    0x00007fbf3edd7256:   cmp    %r9d,%edx
           │╰│                    0x00007fbf3edd7259:   jle    0x00007fbf3edd70e0
           │ │                    0x00007fbf3edd725f:   nop
           │ ╰                    0x00007fbf3edd7260:   jmp    0x00007fbf3edd7220           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
           │                                                                                ; - java.util.HashMap$TreeNode::find@39 (line 2024)
   0.06%   ↘                      0x00007fbf3edd7262:   test   %ebx,%ebx
                                  0x00007fbf3edd7264:   je     0x00007fbf3edd78cd           ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                                                            ; - java.util.HashMap$TreeNode::find@91 (line 2030)
   0.03%                          0x00007fbf3edd726a:   test   %r11,%r11
              ╭                   0x00007fbf3edd726d:   je     0x00007fbf3edd73e5
              │                   0x00007fbf3edd7273:   jmp    0x00007fbf3edd7eb4           ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
              │                                                                             ; - java.util.HashMap$TreeNode::find@102 (line 2032)
              │                   0x00007fbf3edd7278:   nopl   0x0(%rax,%rax,1)             ;*aload {reexecute=0 rethrow=0 return_oop=0}
              │                                                                             ; - java.util.HashMap$TreeNode::find@165 (line 2040)
              │                                                                             ; - java.util.HashMap$TreeNode::find@149 (line 2036)
   0.04%      │ ↗                 0x00007fbf3edd7280:   cmp    %edx,%esi
              │ │                 0x00007fbf3edd7282:   jg     0x00007fbf3edd78b0           ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
              │ │                                                                           ; - java.util.HashMap$TreeNode::find@26 (line 2022)
              │ │                                                                           ; - java.util.HashMap$TreeNode::find@149 (line 2036)
   0.02%      │ │                 0x00007fbf3edd7288:   mov    %r11d,%edi
   0.05%      │ │                 0x00007fbf3edd728b:   shl    $0x3,%rdi                    ;*getfield key {reexecute=0 rethrow=0 return_oop=0}
              │ │                                                                           ; - java.util.HashMap$TreeNode::find@51 (line 2026)
              │ │                                                                           ; - java.util.HashMap$TreeNode::find@149 (line 2036)
   0.02%      │ │                 0x00007fbf3edd728f:   cmp    %rcx,%rdi
              │ │                 0x00007fbf3edd7292:   je     0x00007fbf3edd7ea2           ;*if_acmpeq {reexecute=0 rethrow=0 return_oop=0}
              │ │                                                                           ; - java.util.HashMap$TreeNode::find@58 (line 2026)
              │ │                                                                           ; - java.util.HashMap$TreeNode::find@149 (line 2036)
   0.03%      │ │                 0x00007fbf3edd7298:   mov    0xc(%rcx),%esi               ;*getfield key {reexecute=0 rethrow=0 return_oop=0}
              │ │                                                                           ; - java.util.AbstractMap$SimpleImmutableEntry::equals@13 (line 849)
              │ │                                                                           ; - java.util.HashMap$TreeNode::find@68 (line 2026)
              │ │                                                                           ; - java.util.HashMap$TreeNode::find@149 (line 2036)
   0.02%      │ │                 0x00007fbf3edd729b:   nopl   0x0(%rax,%rax,1)             ; ImmutableOopMap {rcx=Oop rbx=NarrowOop rbp=NarrowOop rsi=NarrowOop rdi=Oop r10=Oop r11=NarrowOop r13=Oop [112]=Oop [120]=Oop }
              │ │                                                                           ;*aload {reexecute=1 rethrow=0 return_oop=0}
              │ │                                                                           ; - (reexecute) java.util.HashMap$TreeNode::find@3 (line 2021)
              │ │                                                                           ; - java.util.HashMap$TreeNode::find@149 (line 2036)
   0.03%      │ │                 0x00007fbf3edd72a0:   cmpl   $0x102b2c0,0x8(,%rsi,8)      ; implicit exception: dispatches to 0x00007fbf3edd80e2
              │ │                                                                           ;   {metadata(&apos;com/ionutbalosin/jvm/performance/benchmarks/miscellaneous/publicationstatistics/model/Author&apos;)}
   0.19%      │ │                 0x00007fbf3edd72ab:   jne    0x00007fbf3edd7ee1           ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
              │ │                                                                           ; - java.util.AbstractMap::eq@18 (line 584)
              │ │                                                                           ; - java.util.AbstractMap$SimpleImmutableEntry::equals@22 (line 850)
              │ │                                                                           ; - java.util.HashMap$TreeNode::find@68 (line 2026)
              │ │                                                                           ; - java.util.HashMap$TreeNode::find@149 (line 2036)
   0.06%      │ │                 0x00007fbf3edd72b1:   data16 data16 nopw 0x0(%rax,%rax,1)
   0.04%      │ │                 0x00007fbf3edd72bc:   data16 data16 xchg %ax,%ax          ; ImmutableOopMap {rcx=Oop rbx=NarrowOop rbp=NarrowOop rsi=NarrowOop rdi=Oop r10=Oop r11=NarrowOop r13=Oop [112]=Oop [120]=Oop }
              │ │                                                                           ;*aload {reexecute=1 rethrow=0 return_oop=0}
              │ │                                                                           ; - (reexecute) java.util.HashMap$TreeNode::find@3 (line 2021)
              │ │                                                                           ; - java.util.HashMap$TreeNode::find@149 (line 2036)
   0.02%      │ │                 0x00007fbf3edd72c0:   cmpl   $0x17fee8,0x8(,%r11,8)       ; implicit exception: dispatches to 0x00007fbf3edd8105
              │ │                                                                           ;   {metadata(&apos;java/util/AbstractMap$SimpleImmutableEntry&apos;)}
   3.46%      │ │                 0x00007fbf3edd72cc:   jne    0x00007fbf3edd7e6a           ;*instanceof {reexecute=0 rethrow=0 return_oop=0}
              │ │                                                                           ; - java.util.AbstractMap$SimpleImmutableEntry::equals@1 (line 851)
              │ │                                                                           ; - java.util.HashMap$TreeNode::find@68 (line 2026)
              │ │                                                                           ; - java.util.HashMap$TreeNode::find@149 (line 2036)
   0.06%      │ │                 0x00007fbf3edd72d2:   mov    0xc(,%r11,8),%r8d            ;*getfield key {reexecute=0 rethrow=0 return_oop=0}
              │ │                                                                           ; - java.util.AbstractMap$SimpleImmutableEntry::getKey@1 (line 798)
              │ │                                                                           ; - java.util.AbstractMap$SimpleImmutableEntry::equals@17 (line 850)
              │ │                                                                           ; - java.util.HashMap$TreeNode::find@68 (line 2026)
              │ │                                                                           ; - java.util.HashMap$TreeNode::find@149 (line 2036)
   0.05%      │ │                 0x00007fbf3edd72da:   nopw   0x0(%rax,%rax,1)
   0.01%      │ │                 0x00007fbf3edd72e0:   cmp    %esi,%r8d
              │ │                 0x00007fbf3edd72e3:   je     0x00007fbf3edd7c3f           ; ImmutableOopMap {rcx=Oop rbx=NarrowOop rbp=NarrowOop rsi=NarrowOop rdi=Oop r8=NarrowOop r10=Oop r11=NarrowOop r13=Oop [112]=Oop [120]=Oop }
              │ │                                                                           ;*aload {reexecute=1 rethrow=0 return_oop=0}
              │ │                                                                           ; - (reexecute) java.util.HashMap$TreeNode::find@3 (line 2021)
              │ │                                                                           ; - java.util.HashMap$TreeNode::find@149 (line 2036)
   0.06%      │ │                 0x00007fbf3edd72e9:   cmpl   $0x102b2c0,0x8(,%r8,8)       ; implicit exception: dispatches to 0x00007fbf3edd8128
              │ │                                                                           ;   {metadata(&apos;com/ionutbalosin/jvm/performance/benchmarks/miscellaneous/publicationstatistics/model/Author&apos;)}
   7.18%      │ │                 0x00007fbf3edd72f5:   jne    0x00007fbf3edd7cf9           ;*if_acmpeq {reexecute=0 rethrow=0 return_oop=0}
              │ │                                                                           ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.model.Author::equals@19 (line 46)
              │ │                                                                           ; - java.util.AbstractMap::eq@18 (line 584)
              │ │                                                                           ; - java.util.AbstractMap$SimpleImmutableEntry::equals@22 (line 850)
              │ │                                                                           ; - java.util.HashMap$TreeNode::find@68 (line 2026)
              │ │                                                                           ; - java.util.HashMap$TreeNode::find@149 (line 2036)
   0.11%      │ │                 0x00007fbf3edd72fb:   mov    0xc(,%rsi,8),%esi            ;*getfield name {reexecute=0 rethrow=0 return_oop=0}
              │ │                                                                           ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.model.Author::equals@30 (line 48)
              │ │                                                                           ; - java.util.AbstractMap::eq@18 (line 584)
              │ │                                                                           ; - java.util.AbstractMap$SimpleImmutableEntry::equals@22 (line 850)
              │ │                                                                           ; - java.util.HashMap$TreeNode::find@68 (line 2026)
              │ │                                                                           ; - java.util.HashMap$TreeNode::find@149 (line 2036)
   0.01%      │ │                 0x00007fbf3edd7302:   mov    0xc(,%r8,8),%r8d             ;*getfield name {reexecute=0 rethrow=0 return_oop=0}
              │ │                                                                           ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.model.Author::equals@34 (line 48)
              │ │                                                                           ; - java.util.AbstractMap::eq@18 (line 584)
              │ │                                                                           ; - java.util.AbstractMap$SimpleImmutableEntry::equals@22 (line 850)
              │ │                                                                           ; - java.util.HashMap$TreeNode::find@68 (line 2026)
              │ │                                                                           ; - java.util.HashMap$TreeNode::find@149 (line 2036)
   0.06%      │ │                 0x00007fbf3edd730a:   cmp    %esi,%r8d
              │ │                 0x00007fbf3edd730d:   je     0x00007fbf3edd79b1           ; ImmutableOopMap {rcx=Oop rbx=NarrowOop rbp=NarrowOop rsi=NarrowOop rdi=Oop r8=NarrowOop r10=Oop r11=NarrowOop r13=Oop [112]=Oop [120]=Oop }
              │ │                                                                           ;*aload {reexecute=1 rethrow=0 return_oop=0}
              │ │                                                                           ; - (reexecute) java.util.HashMap$TreeNode::find@3 (line 2021)
              │ │                                                                           ; - java.util.HashMap$TreeNode::find@149 (line 2036)
   0.06%      │ │                 0x00007fbf3edd7313:   movsbl 0x10(,%rsi,8),%r9d           ; implicit exception: dispatches to 0x00007fbf3edd814d
   0.02%      │ │                 0x00007fbf3edd731c:   mov    0x14(,%rsi,8),%eax
   0.01%      │ │                 0x00007fbf3edd7323:   cmp    %esi,%r8d
              │ │                 0x00007fbf3edd7326:   je     0x00007fbf3edd7ac6
   0.11%      │ │                 0x00007fbf3edd732c:   test   %r8d,%r8d
              │ │                 0x00007fbf3edd732f:   je     0x00007fbf3edd788d
   0.06%      │ │                 0x00007fbf3edd7335:   data16 data16 nopw 0x0(%rax,%rax,1)
   0.03%      │ │                 0x00007fbf3edd7340:   cmp    0x10(,%r8,8),%r9b
              │ │                 0x00007fbf3edd7348:   jne    0x00007fbf3edd7898           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
              │ │                                                                           ; - java.lang.String::equals@0 (line 1858)
              │ │                                                                           ; - java.util.Objects::equals@11 (line 64)
              │ │                                                                           ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.model.Author::equals@37 (line 48)
              │ │                                                                           ; - java.util.AbstractMap::eq@18 (line 584)
              │ │                                                                           ; - java.util.AbstractMap$SimpleImmutableEntry::equals@22 (line 850)
              │ │                                                                           ; - java.util.HashMap$TreeNode::find@68 (line 2026)
              │ │                                                                           ; - java.util.HashMap$TreeNode::find@149 (line 2036)
   1.80%      │ │                 0x00007fbf3edd734e:   mov    0x14(,%r8,8),%esi            ; ImmutableOopMap {rax=NarrowOop rcx=Oop rbx=NarrowOop rbp=NarrowOop rsi=NarrowOop rdi=Oop r10=Oop r11=NarrowOop r13=Oop [112]=Oop [120]=Oop }
              │ │                                                                           ;*aload {reexecute=1 rethrow=0 return_oop=0}
              │ │                                                                           ; - (reexecute) java.util.HashMap$TreeNode::find@3 (line 2021)
              │ │                                                                           ; - java.util.HashMap$TreeNode::find@149 (line 2036)
   0.06%      │ │                 0x00007fbf3edd7356:   mov    0xc(,%rsi,8),%r9d            ; implicit exception: dispatches to 0x00007fbf3edd8170
   1.33%      │ │                 0x00007fbf3edd735e:   xchg   %ax,%ax                      ; ImmutableOopMap {rax=NarrowOop rcx=Oop rbx=NarrowOop rbp=NarrowOop rsi=NarrowOop rdi=Oop r10=Oop r11=NarrowOop r13=Oop [112]=Oop [120]=Oop }
              │ │                                                                           ;*aload {reexecute=1 rethrow=0 return_oop=0}
              │ │                                                                           ; - (reexecute) java.util.HashMap$TreeNode::find@3 (line 2021)
              │ │                                                                           ; - java.util.HashMap$TreeNode::find@149 (line 2036)
              │ │                 0x00007fbf3edd7360:   cmp    0xc(,%rax,8),%r9d            ; implicit exception: dispatches to 0x00007fbf3edd8193
              │ │                 0x00007fbf3edd7368:   jne    0x00007fbf3edd78a5
   0.13%      │ │                 0x00007fbf3edd736e:   test   %r9d,%r9d
              │ │                 0x00007fbf3edd7371:   je     0x00007fbf3edd7ade
   0.08%      │ │                 0x00007fbf3edd7377:   mov    %rdi,0x40(%rsp)
   0.01%      │ │                 0x00007fbf3edd737c:   mov    %r11d,0x2c(%rsp)
   0.02%      │ │                 0x00007fbf3edd7381:   mov    %r13,0x30(%rsp)
   0.02%      │ │                 0x00007fbf3edd7386:   shl    $0x3,%rsi
   0.08%      │ │                 0x00007fbf3edd738a:   shl    $0x3,%rax
   0.01%      │ │                 0x00007fbf3edd738e:   mov    %edx,%r8d
   0.01%      │ │                 0x00007fbf3edd7391:   mov    $0x10,%rdx
   0.04%      │ │                 0x00007fbf3edd7398:   mov    %rax,%rcx
   0.07%      │ │                 0x00007fbf3edd739b:   mov    %r8d,%eax
   0.00%      │ │                 0x00007fbf3edd739e:   mov    $0x10,%r8                    ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
              │ │                                                                           ; - java.lang.String::equals@0 (line 1858)
              │ │                                                                           ; - java.util.Objects::equals@11 (line 64)
              │ │                                                                           ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.model.Author::equals@37 (line 48)
              │ │                                                                           ; - java.util.AbstractMap::eq@18 (line 584)
              │ │                                                                           ; - java.util.AbstractMap$SimpleImmutableEntry::equals@22 (line 850)
              │ │                                                                           ; - java.util.HashMap$TreeNode::find@68 (line 2026)
              │ │                                                                           ; - java.util.HashMap$TreeNode::find@149 (line 2036)
   0.01%      │ │                 0x00007fbf3edd73a5:   mov    %eax,%r11d
   0.03%      │ │                 0x00007fbf3edd73a8:   mov    %r10,%r13
   0.08%      │ │                 0x00007fbf3edd73ab:   call   0x00007fbf3e8ee580           ;   {runtime_call Stub&lt;IntrinsicStubsGen.arrayRegionEqualsS1S1&gt;}
   0.20%      │ │                 0x00007fbf3edd73b0:   nop
   0.00%      │ │                 0x00007fbf3edd73b1:   test   %eax,%eax
              │ │                 0x00007fbf3edd73b3:   jne    0x00007fbf3edd7b4d           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
              │ │                                                                           ; - java.util.AbstractMap$SimpleImmutableEntry::equals@25 (line 850)
              │ │                                                                           ; - java.util.HashMap$TreeNode::find@68 (line 2026)
              │ │                                                                           ; - java.util.HashMap$TreeNode::find@149 (line 2036)
   0.07%      │ │                 0x00007fbf3edd73b9:   nopl   0x0(%rax)
   0.01%      │ │                 0x00007fbf3edd73c0:   test   %ebp,%ebp
              │╭│                 0x00007fbf3edd73c2:   jne    0x00007fbf3edd7412           ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
              │││                                                                           ; - java.util.HashMap$TreeNode::find@79 (line 2028)
              │││                                                                           ; - java.util.HashMap$TreeNode::find@149 (line 2036)
   0.11%      │││                 0x00007fbf3edd73c8:   mov    %r13,%r10                    ;*aload {reexecute=0 rethrow=0 return_oop=0}
              │││                                                                           ; - java.util.HashMap$TreeNode::find@165 (line 2040)
              │││                                                                           ; - java.util.HashMap$TreeNode::find@149 (line 2036)
   0.01%      │││                 0x00007fbf3edd73cb:   nopl   0x0(%rax,%rax,1)
   0.04%      │││↗                0x00007fbf3edd73d0:   test   %r10,%r10
              ││││                0x00007fbf3edd73d3:   je     0x00007fbf3edd78bc           ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
              ││││                                                                          ; - java.util.HashMap$TreeNode::find@167 (line 2040)
              ││││                                                                          ; - java.util.HashMap$TreeNode::find@149 (line 2036)
   0.08%      ││││                0x00007fbf3edd73d9:   mov    0x458(%r15),%rax             ; ImmutableOopMap {r10=Oop [112]=Oop [120]=Oop }
              ││││                                                                          ;*aload {reexecute=1 rethrow=0 return_oop=0}
              ││││                                                                          ; - (reexecute) java.util.HashMap$TreeNode::find@165 (line 2040)
              ││││                                                                          ; - java.util.HashMap$TreeNode::find@149 (line 2036)
   0.05%      ││││                0x00007fbf3edd73e0:   test   %eax,(%rax)                  ;   {poll}
   0.08%      ││││                0x00007fbf3edd73e2:   mov    %r10,%r13                    ;*aload {reexecute=0 rethrow=0 return_oop=0}
              ││││                                                                          ; - java.util.HashMap$TreeNode::find@3 (line 2021)
              ││││                                                                          ; - java.util.HashMap$TreeNode::find@149 (line 2036)
   0.07%      ↘│││                0x00007fbf3edd73e5:   mov    0x78(%rsp),%rcx
   0.11%       │││                0x00007fbf3edd73ea:   mov    0x84(%rsp),%edx              ; ImmutableOopMap {rcx=Oop r13=Oop [112]=Oop [120]=Oop }
               │││                                                                          ;*aload {reexecute=1 rethrow=0 return_oop=0}
               │││                                                                          ; - (reexecute) java.util.HashMap$TreeNode::find@3 (line 2021)
               │││                                                                          ; - java.util.HashMap$TreeNode::find@149 (line 2036)
   0.00%       │││                0x00007fbf3edd73f1:   mov    0xc(%r13),%esi               ; implicit exception: dispatches to 0x00007fbf3edd81b6
   1.88%       │││                0x00007fbf3edd73f5:   mov    0x10(%r13),%r11d             ;*getfield key {reexecute=0 rethrow=0 return_oop=0}
               │││                                                                          ; - java.util.HashMap$TreeNode::find@51 (line 2026)
               │││                                                                          ; - java.util.HashMap$TreeNode::find@149 (line 2036)
   0.10%       │││                0x00007fbf3edd73f9:   mov    0x30(%r13),%ebx              ;*getfield right {reexecute=0 rethrow=0 return_oop=0}
               │││                                                                          ; - java.util.HashMap$TreeNode::find@12 (line 2021)
               │││                                                                          ; - java.util.HashMap$TreeNode::find@149 (line 2036)
   0.28%       │││                0x00007fbf3edd73fd:   mov    0x2c(%r13),%ebp              ;*getfield left {reexecute=0 rethrow=0 return_oop=0}
               │││                                                                          ; - java.util.HashMap$TreeNode::find@5 (line 2021)
               │││                                                                          ; - java.util.HashMap$TreeNode::find@149 (line 2036)
   0.03%       │││                0x00007fbf3edd7401:   mov    %ebx,%r10d
   0.03%       │││                0x00007fbf3edd7404:   shl    $0x3,%r10                    ;*getfield right {reexecute=0 rethrow=0 return_oop=0}
               │││                                                                          ; - java.util.HashMap$TreeNode::find@12 (line 2021)
               │││                                                                          ; - java.util.HashMap$TreeNode::find@149 (line 2036)
   0.03%       │││                0x00007fbf3edd7408:   cmp    %esi,%edx
               │╰│                0x00007fbf3edd740a:   jle    0x00007fbf3edd7280
               │ ╰                0x00007fbf3edd7410:   jmp    0x00007fbf3edd73d0           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
               │                                                                            ; - java.util.HashMap$TreeNode::find@39 (line 2024)
               │                                                                            ; - java.util.HashMap$TreeNode::find@149 (line 2036)
   0.10%       ↘                  0x00007fbf3edd7412:   shl    $0x3,%rbp                    ;*getfield left {reexecute=0 rethrow=0 return_oop=0}
                                                                                            ; - java.util.HashMap$TreeNode::find@5 (line 2021)
                                                                                            ; - java.util.HashMap$TreeNode::find@149 (line 2036)
   0.04%                          0x00007fbf3edd7416:   mov    %rbp,0x38(%rsp)
   0.11%                          0x00007fbf3edd741b:   nopl   0x0(%rax,%rax,1)
   0.02%                          0x00007fbf3edd7420:   test   %ebx,%ebx
                                  0x00007fbf3edd7422:   je     0x00007fbf3edd7885           ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                                                            ; - java.util.HashMap$TreeNode::find@91 (line 2030)
                                                                                            ; - java.util.HashMap$TreeNode::find@149 (line 2036)
                                  0x00007fbf3edd7428:   mov    %r13,%r10
   0.01%                          0x00007fbf3edd742b:   mov    0x78(%rsp),%rbx
   0.02%          ╭               0x00007fbf3edd7430:   jmp    0x00007fbf3edd75b2           ;*aload {reexecute=0 rethrow=0 return_oop=0}
                  │                                                                         ; - java.util.HashMap$TreeNode::find@3 (line 2021)
                  │                                                                         ; - java.util.HashMap$TreeNode::find@149 (line 2036)
                  │                                                                         ; - java.util.HashMap$TreeNode::find@149 (line 2036)
                  │               0x00007fbf3edd7435:   data16 data16 nopw 0x0(%rax,%rax,1) ;*aload {reexecute=0 rethrow=0 return_oop=0}
                  │                                                                         ; - java.util.HashMap$TreeNode::find@165 (line 2040)
                  │                                                                         ; - java.util.HashMap$TreeNode::find@149 (line 2036)
                  │                                                                         ; - java.util.HashMap$TreeNode::find@149 (line 2036)
   0.02%          │ ↗             0x00007fbf3edd7440:   cmp    %r11d,%esi
                  │ │             0x00007fbf3edd7443:   jg     0x00007fbf3edd7865           ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                  │ │                                                                       ; - java.util.HashMap$TreeNode::find@26 (line 2022)
                  │ │                                                                       ; - java.util.HashMap$TreeNode::find@149 (line 2036)
                  │ │                                                                       ; - java.util.HashMap$TreeNode::find@149 (line 2036)
   0.05%          │ │             0x00007fbf3edd7449:   mov    %r13d,%r8d
   0.00%          │ │             0x00007fbf3edd744c:   shl    $0x3,%r8                     ;*getfield key {reexecute=0 rethrow=0 return_oop=0}
                  │ │                                                                       ; - java.util.HashMap$TreeNode::find@51 (line 2026)
                  │ │                                                                       ; - java.util.HashMap$TreeNode::find@149 (line 2036)
                  │ │                                                                       ; - java.util.HashMap$TreeNode::find@149 (line 2036)
   0.04%          │ │             0x00007fbf3edd7450:   cmp    %rbx,%r8
                  │ │             0x00007fbf3edd7453:   je     0x00007fbf3edd7ef3           ;*if_acmpeq {reexecute=0 rethrow=0 return_oop=0}
                  │ │                                                                       ; - java.util.HashMap$TreeNode::find@58 (line 2026)
                  │ │                                                                       ; - java.util.HashMap$TreeNode::find@149 (line 2036)
                  │ │                                                                       ; - java.util.HashMap$TreeNode::find@149 (line 2036)
   0.03%          │ │             0x00007fbf3edd7459:   mov    0xc(%rbx),%esi               ;*getfield key {reexecute=0 rethrow=0 return_oop=0}
                  │ │                                                                       ; - java.util.AbstractMap$SimpleImmutableEntry::equals@13 (line 849)
                  │ │                                                                       ; - java.util.HashMap$TreeNode::find@68 (line 2026)
                  │ │                                                                       ; - java.util.HashMap$TreeNode::find@149 (line 2036)
                  │ │                                                                       ; - java.util.HashMap$TreeNode::find@149 (line 2036)
   0.04%          │ │             0x00007fbf3edd745c:   nopl   0x0(%rax)                    ; ImmutableOopMap {rax=NarrowOop rbx=Oop rsi=NarrowOop rdi=NarrowOop r8=Oop r9=Oop r10=Oop r13=NarrowOop [56]=Oop [112]=Oop [120]=Oop }
                  │ │                                                                       ;*aload {reexecute=1 rethrow=0 return_oop=0}
                  │ │                                                                       ; - (reexecute) java.util.HashMap$TreeNode::find@3 (line 2021)
                  │ │                                                                       ; - java.util.HashMap$TreeNode::find@149 (line 2036)
                  │ │                                                                       ; - java.util.HashMap$TreeNode::find@149 (line 2036)
   0.01%          │ │             0x00007fbf3edd7460:   cmpl   $0x102b2c0,0x8(,%rsi,8)      ; implicit exception: dispatches to 0x00007fbf3edd81d9
                  │ │                                                                       ;   {metadata(&apos;com/ionutbalosin/jvm/performance/benchmarks/miscellaneous/publicationstatistics/model/Author&apos;)}
   0.14%          │ │             0x00007fbf3edd746b:   jne    0x00007fbf3edd7dcd           ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                  │ │                                                                       ; - java.util.AbstractMap::eq@18 (line 584)
                  │ │                                                                       ; - java.util.AbstractMap$SimpleImmutableEntry::equals@22 (line 850)
                  │ │                                                                       ; - java.util.HashMap$TreeNode::find@68 (line 2026)
                  │ │                                                                       ; - java.util.HashMap$TreeNode::find@149 (line 2036)
                  │ │                                                                       ; - java.util.HashMap$TreeNode::find@149 (line 2036)
   0.06%          │ │             0x00007fbf3edd7471:   data16 data16 nopw 0x0(%rax,%rax,1)
   0.00%          │ │             0x00007fbf3edd747c:   data16 data16 xchg %ax,%ax          ; ImmutableOopMap {rax=NarrowOop rbx=Oop rsi=NarrowOop rdi=NarrowOop r8=Oop r9=Oop r10=Oop r13=NarrowOop [56]=Oop [112]=Oop [120]=Oop }
                  │ │                                                                       ;*aload {reexecute=1 rethrow=0 return_oop=0}
                  │ │                                                                       ; - (reexecute) java.util.HashMap$TreeNode::find@3 (line 2021)
                  │ │                                                                       ; - java.util.HashMap$TreeNode::find@149 (line 2036)
                  │ │                                                                       ; - java.util.HashMap$TreeNode::find@149 (line 2036)
   0.03%          │ │             0x00007fbf3edd7480:   cmpl   $0x17fee8,0x8(,%r13,8)       ; implicit exception: dispatches to 0x00007fbf3edd81fc
                  │ │                                                                       ;   {metadata(&apos;java/util/AbstractMap$SimpleImmutableEntry&apos;)}
   3.23%          │ │             0x00007fbf3edd748c:   jne    0x00007fbf3edd7d7a           ;*instanceof {reexecute=0 rethrow=0 return_oop=0}
                  │ │                                                                       ; - java.util.AbstractMap$SimpleImmutableEntry::equals@1 (line 851)
                  │ │                                                                       ; - java.util.HashMap$TreeNode::find@68 (line 2026)
                  │ │                                                                       ; - java.util.HashMap$TreeNode::find@149 (line 2036)
                  │ │                                                                       ; - java.util.HashMap$TreeNode::find@149 (line 2036)
   0.06%          │ │             0x00007fbf3edd7492:   mov    0xc(,%r13,8),%edx            ;*getfield key {reexecute=0 rethrow=0 return_oop=0}
                  │ │                                                                       ; - java.util.AbstractMap$SimpleImmutableEntry::getKey@1 (line 798)
                  │ │                                                                       ; - java.util.AbstractMap$SimpleImmutableEntry::equals@17 (line 850)
                  │ │                                                                       ; - java.util.HashMap$TreeNode::find@68 (line 2026)
                  │ │                                                                       ; - java.util.HashMap$TreeNode::find@149 (line 2036)
                  │ │                                                                       ; - java.util.HashMap$TreeNode::find@149 (line 2036)
   0.07%          │ │             0x00007fbf3edd749a:   nopw   0x0(%rax,%rax,1)
                  │ │             0x00007fbf3edd74a0:   cmp    %esi,%edx
                  │ │             0x00007fbf3edd74a2:   je     0x00007fbf3edd7c57           ; ImmutableOopMap {rax=NarrowOop rdx=NarrowOop rbx=Oop rsi=NarrowOop rdi=NarrowOop r8=Oop r9=Oop r10=Oop r13=NarrowOop [56]=Oop [112]=Oop [120]=Oop }
                  │ │                                                                       ;*aload {reexecute=1 rethrow=0 return_oop=0}
                  │ │                                                                       ; - (reexecute) java.util.HashMap$TreeNode::find@3 (line 2021)
                  │ │                                                                       ; - java.util.HashMap$TreeNode::find@149 (line 2036)
                  │ │                                                                       ; - java.util.HashMap$TreeNode::find@149 (line 2036)
   0.06%          │ │             0x00007fbf3edd74a8:   cmpl   $0x102b2c0,0x8(,%rdx,8)      ; implicit exception: dispatches to 0x00007fbf3edd821f
                  │ │                                                                       ;   {metadata(&apos;com/ionutbalosin/jvm/performance/benchmarks/miscellaneous/publicationstatistics/model/Author&apos;)}
   6.82%          │ │             0x00007fbf3edd74b3:   jne    0x00007fbf3edd7cbe           ;*if_acmpeq {reexecute=0 rethrow=0 return_oop=0}
                  │ │                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.model.Author::equals@19 (line 46)
                  │ │                                                                       ; - java.util.AbstractMap::eq@18 (line 584)
                  │ │                                                                       ; - java.util.AbstractMap$SimpleImmutableEntry::equals@22 (line 850)
                  │ │                                                                       ; - java.util.HashMap$TreeNode::find@68 (line 2026)
                  │ │                                                                       ; - java.util.HashMap$TreeNode::find@149 (line 2036)
                  │ │                                                                       ; - java.util.HashMap$TreeNode::find@149 (line 2036)
   0.07%          │ │             0x00007fbf3edd74b9:   mov    0xc(,%rsi,8),%esi            ;*getfield name {reexecute=0 rethrow=0 return_oop=0}
                  │ │                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.model.Author::equals@30 (line 48)
                  │ │                                                                       ; - java.util.AbstractMap::eq@18 (line 584)
                  │ │                                                                       ; - java.util.AbstractMap$SimpleImmutableEntry::equals@22 (line 850)
                  │ │                                                                       ; - java.util.HashMap$TreeNode::find@68 (line 2026)
                  │ │                                                                       ; - java.util.HashMap$TreeNode::find@149 (line 2036)
                  │ │                                                                       ; - java.util.HashMap$TreeNode::find@149 (line 2036)
   0.01%          │ │             0x00007fbf3edd74c0:   mov    0xc(,%rdx,8),%edx            ;*getfield name {reexecute=0 rethrow=0 return_oop=0}
                  │ │                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.model.Author::equals@34 (line 48)
                  │ │                                                                       ; - java.util.AbstractMap::eq@18 (line 584)
                  │ │                                                                       ; - java.util.AbstractMap$SimpleImmutableEntry::equals@22 (line 850)
                  │ │                                                                       ; - java.util.HashMap$TreeNode::find@68 (line 2026)
                  │ │                                                                       ; - java.util.HashMap$TreeNode::find@149 (line 2036)
                  │ │                                                                       ; - java.util.HashMap$TreeNode::find@149 (line 2036)
   0.04%          │ │             0x00007fbf3edd74c7:   cmp    %esi,%edx
                  │ │             0x00007fbf3edd74c9:   je     0x00007fbf3edd7a75           ;*if_acmpeq {reexecute=0 rethrow=0 return_oop=0}
                  │ │                                                                       ; - java.util.Objects::equals@2 (line 64)
                  │ │                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.model.Author::equals@37 (line 48)
                  │ │                                                                       ; - java.util.AbstractMap::eq@18 (line 584)
                  │ │                                                                       ; - java.util.AbstractMap$SimpleImmutableEntry::equals@22 (line 850)
                  │ │                                                                       ; - java.util.HashMap$TreeNode::find@68 (line 2026)
                  │ │                                                                       ; - java.util.HashMap$TreeNode::find@149 (line 2036)
                  │ │                                                                       ; - java.util.HashMap$TreeNode::find@149 (line 2036)
   0.07%          │ │             0x00007fbf3edd74cf:   mov    %r13d,0x2c(%rsp)             ; ImmutableOopMap {rax=NarrowOop rdx=NarrowOop rbx=Oop rsi=NarrowOop rdi=NarrowOop r8=Oop r9=Oop r10=Oop [44]=NarrowOop [56]=Oop [112]=Oop [120]=Oop }
                  │ │                                                                       ;*aload {reexecute=1 rethrow=0 return_oop=0}
                  │ │                                                                       ; - (reexecute) java.util.HashMap$TreeNode::find@3 (line 2021)
                  │ │                                                                       ; - java.util.HashMap$TreeNode::find@149 (line 2036)
                  │ │                                                                       ; - java.util.HashMap$TreeNode::find@149 (line 2036)
   0.01%          │ │             0x00007fbf3edd74d4:   movsbl 0x10(,%rsi,8),%ecx           ; implicit exception: dispatches to 0x00007fbf3edd8242
   0.02%          │ │             0x00007fbf3edd74dc:   mov    0x14(,%rsi,8),%r13d
                  │ │             0x00007fbf3edd74e4:   cmp    %esi,%edx
                  │ │             0x00007fbf3edd74e6:   je     0x00007fbf3edd7b65
   0.09%          │ │             0x00007fbf3edd74ec:   test   %edx,%edx
                  │ │             0x00007fbf3edd74ee:   je     0x00007fbf3edd783b
   0.07%          │ │             0x00007fbf3edd74f4:   nopl   0x0(%rax,%rax,1)
   0.01%          │ │             0x00007fbf3edd74fc:   data16 data16 xchg %ax,%ax
                  │ │             0x00007fbf3edd7500:   cmp    0x10(,%rdx,8),%cl
                  │ │             0x00007fbf3edd7507:   jne    0x00007fbf3edd7849           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                  │ │                                                                       ; - java.lang.String::equals@0 (line 1858)
                  │ │                                                                       ; - java.util.Objects::equals@11 (line 64)
                  │ │                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.model.Author::equals@37 (line 48)
                  │ │                                                                       ; - java.util.AbstractMap::eq@18 (line 584)
                  │ │                                                                       ; - java.util.AbstractMap$SimpleImmutableEntry::equals@22 (line 850)
                  │ │                                                                       ; - java.util.HashMap$TreeNode::find@68 (line 2026)
                  │ │                                                                       ; - java.util.HashMap$TreeNode::find@149 (line 2036)
                  │ │                                                                       ; - java.util.HashMap$TreeNode::find@149 (line 2036)
   1.70%          │ │             0x00007fbf3edd750d:   mov    0x14(,%rdx,8),%esi           ; ImmutableOopMap {rax=NarrowOop rbx=Oop rsi=NarrowOop rdi=NarrowOop r8=Oop r9=Oop r10=Oop r13=NarrowOop [44]=NarrowOop [56]=Oop [112]=Oop [120]=Oop }
                  │ │                                                                       ;*aload {reexecute=1 rethrow=0 return_oop=0}
                  │ │                                                                       ; - (reexecute) java.util.HashMap$TreeNode::find@3 (line 2021)
                  │ │                                                                       ; - java.util.HashMap$TreeNode::find@149 (line 2036)
                  │ │                                                                       ; - java.util.HashMap$TreeNode::find@149 (line 2036)
   0.07%          │ │             0x00007fbf3edd7514:   mov    0xc(,%rsi,8),%ecx            ; implicit exception: dispatches to 0x00007fbf3edd8265
   1.21%          │ │             0x00007fbf3edd751b:   nopl   0x0(%rax,%rax,1)             ; ImmutableOopMap {rax=NarrowOop rbx=Oop rsi=NarrowOop rdi=NarrowOop r8=Oop r9=Oop r10=Oop r13=NarrowOop [44]=NarrowOop [56]=Oop [112]=Oop [120]=Oop }
                  │ │                                                                       ;*aload {reexecute=1 rethrow=0 return_oop=0}
                  │ │                                                                       ; - (reexecute) java.util.HashMap$TreeNode::find@3 (line 2021)
                  │ │                                                                       ; - java.util.HashMap$TreeNode::find@149 (line 2036)
                  │ │                                                                       ; - java.util.HashMap$TreeNode::find@149 (line 2036)
   0.02%          │ │             0x00007fbf3edd7520:   cmp    0xc(,%r13,8),%ecx            ; implicit exception: dispatches to 0x00007fbf3edd8288
                  │ │             0x00007fbf3edd7528:   jne    0x00007fbf3edd7857
   0.10%          │ │             0x00007fbf3edd752e:   test   %ecx,%ecx
                  │ │             0x00007fbf3edd7530:   je     0x00007fbf3edd7b85
   0.07%          │ │             0x00007fbf3edd7536:   mov    %r8,0x40(%rsp)
   0.02%          │ │             0x00007fbf3edd753b:   mov    %r10,0x18(%rsp)
                  │ │             0x00007fbf3edd7540:   mov    %r9,%r10
   0.02%          │ │             0x00007fbf3edd7543:   mov    %ecx,%r9d
   0.05%          │ │             0x00007fbf3edd7546:   shl    $0x3,%rsi
   0.01%          │ │             0x00007fbf3edd754a:   shl    $0x3,%r13
                  │ │             0x00007fbf3edd754e:   mov    $0x10,%rdx
   0.01%          │ │             0x00007fbf3edd7555:   mov    %r13,%rcx
   0.07%          │ │             0x00007fbf3edd7558:   mov    $0x10,%r8                    ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                  │ │                                                                       ; - java.lang.String::equals@0 (line 1858)
                  │ │                                                                       ; - java.util.Objects::equals@11 (line 64)
                  │ │                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.model.Author::equals@37 (line 48)
                  │ │                                                                       ; - java.util.AbstractMap::eq@18 (line 584)
                  │ │                                                                       ; - java.util.AbstractMap$SimpleImmutableEntry::equals@22 (line 850)
                  │ │                                                                       ; - java.util.HashMap$TreeNode::find@68 (line 2026)
                  │ │                                                                       ; - java.util.HashMap$TreeNode::find@149 (line 2036)
                  │ │                                                                       ; - java.util.HashMap$TreeNode::find@149 (line 2036)
   0.01%          │ │             0x00007fbf3edd755f:   mov    %edi,%r11d
   0.00%          │ │             0x00007fbf3edd7562:   mov    %r10,%rbx
   0.03%          │ │             0x00007fbf3edd7565:   mov    %eax,%r13d
   0.09%          │ │             0x00007fbf3edd7568:   call   0x00007fbf3e8ee580           ;   {runtime_call Stub&lt;IntrinsicStubsGen.arrayRegionEqualsS1S1&gt;}
   0.19%          │ │             0x00007fbf3edd756d:   nop
   0.01%          │ │             0x00007fbf3edd756e:   test   %eax,%eax
                  │ │             0x00007fbf3edd7570:   jne    0x00007fbf3edd7ba5           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                  │ │                                                                       ; - java.util.AbstractMap$SimpleImmutableEntry::equals@25 (line 850)
                  │ │                                                                       ; - java.util.HashMap$TreeNode::find@68 (line 2026)
                  │ │                                                                       ; - java.util.HashMap$TreeNode::find@149 (line 2036)
                  │ │                                                                       ; - java.util.HashMap$TreeNode::find@149 (line 2036)
   0.15%          │ │             0x00007fbf3edd7576:   test   %r13d,%r13d
                  │╭│             0x00007fbf3edd7579:   jne    0x00007fbf3edd75d4           ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                  │││                                                                       ; - java.util.HashMap$TreeNode::find@79 (line 2028)
                  │││                                                                       ; - java.util.HashMap$TreeNode::find@149 (line 2036)
                  │││                                                                       ; - java.util.HashMap$TreeNode::find@149 (line 2036)
   0.07%          │││             0x00007fbf3edd757f:   mov    %rbx,%r9                     ;*aload {reexecute=0 rethrow=0 return_oop=0}
                  │││                                                                       ; - java.util.HashMap$TreeNode::find@165 (line 2040)
                  │││                                                                       ; - java.util.HashMap$TreeNode::find@149 (line 2036)
                  │││                                                                       ; - java.util.HashMap$TreeNode::find@149 (line 2036)
   0.04%          │││             0x00007fbf3edd7582:   data16 nopw 0x0(%rax,%rax,1)
   0.01%          │││             0x00007fbf3edd758c:   data16 data16 xchg %ax,%ax
   0.06%          │││↗            0x00007fbf3edd7590:   test   %r9,%r9
                  ││││            0x00007fbf3edd7593:   je     0x00007fbf3edd7877           ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                  ││││                                                                      ; - java.util.HashMap$TreeNode::find@167 (line 2040)
                  ││││                                                                      ; - java.util.HashMap$TreeNode::find@149 (line 2036)
                  ││││                                                                      ; - java.util.HashMap$TreeNode::find@149 (line 2036)
   0.05%          ││││            0x00007fbf3edd7599:   mov    0x458(%r15),%rax             ; ImmutableOopMap {r9=Oop [56]=Oop [112]=Oop [120]=Oop }
                  ││││                                                                      ;*aload {reexecute=1 rethrow=0 return_oop=0}
                  ││││                                                                      ; - (reexecute) java.util.HashMap$TreeNode::find@165 (line 2040)
                  ││││                                                                      ; - java.util.HashMap$TreeNode::find@149 (line 2036)
                  ││││                                                                      ; - java.util.HashMap$TreeNode::find@149 (line 2036)
   0.05%          ││││            0x00007fbf3edd75a0:   test   %eax,(%rax)                  ;   {poll}
   0.09%          ││││            0x00007fbf3edd75a2:   mov    %r9,%r10
   0.02%          ││││            0x00007fbf3edd75a5:   mov    0x78(%rsp),%rbx
   0.01%          ││││            0x00007fbf3edd75aa:   mov    0x84(%rsp),%r11d             ; ImmutableOopMap {rbx=Oop r10=Oop [56]=Oop [112]=Oop [120]=Oop }
                  ││││                                                                      ;*aload {reexecute=1 rethrow=0 return_oop=0}
                  ││││                                                                      ; - (reexecute) java.util.HashMap$TreeNode::find@3 (line 2021)
                  ││││                                                                      ; - java.util.HashMap$TreeNode::find@149 (line 2036)
                  ││││                                                                      ; - java.util.HashMap$TreeNode::find@149 (line 2036)
   0.04%          ↘│││            0x00007fbf3edd75b2:   mov    0xc(%r10),%esi               ; implicit exception: dispatches to 0x00007fbf3edd82ad
   1.84%           │││            0x00007fbf3edd75b6:   mov    0x10(%r10),%r13d             ;*getfield key {reexecute=0 rethrow=0 return_oop=0}
                   │││                                                                      ; - java.util.HashMap$TreeNode::find@51 (line 2026)
                   │││                                                                      ; - java.util.HashMap$TreeNode::find@149 (line 2036)
                   │││                                                                      ; - java.util.HashMap$TreeNode::find@149 (line 2036)
   0.10%           │││            0x00007fbf3edd75ba:   mov    0x30(%r10),%edi              ;*getfield right {reexecute=0 rethrow=0 return_oop=0}
                   │││                                                                      ; - java.util.HashMap$TreeNode::find@12 (line 2021)
                   │││                                                                      ; - java.util.HashMap$TreeNode::find@149 (line 2036)
                   │││                                                                      ; - java.util.HashMap$TreeNode::find@149 (line 2036)
   0.26%           │││            0x00007fbf3edd75be:   mov    0x2c(%r10),%eax              ;*getfield left {reexecute=0 rethrow=0 return_oop=0}
                   │││                                                                      ; - java.util.HashMap$TreeNode::find@5 (line 2021)
                   │││                                                                      ; - java.util.HashMap$TreeNode::find@149 (line 2036)
                   │││                                                                      ; - java.util.HashMap$TreeNode::find@149 (line 2036)
   0.05%           │││            0x00007fbf3edd75c2:   mov    %edi,%r9d
   0.02%           │││            0x00007fbf3edd75c5:   shl    $0x3,%r9                     ;*getfield right {reexecute=0 rethrow=0 return_oop=0}
                   │││                                                                      ; - java.util.HashMap$TreeNode::find@12 (line 2021)
                   │││                                                                      ; - java.util.HashMap$TreeNode::find@149 (line 2036)
                   │││                                                                      ; - java.util.HashMap$TreeNode::find@149 (line 2036)
   0.03%           │││            0x00007fbf3edd75c9:   cmp    %esi,%r11d
                   │╰│            0x00007fbf3edd75cc:   jle    0x00007fbf3edd7440
                   │ ╰            0x00007fbf3edd75d2:   jmp    0x00007fbf3edd7590           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                   │                                                                        ; - java.util.HashMap$TreeNode::find@39 (line 2024)
                   │                                                                        ; - java.util.HashMap$TreeNode::find@149 (line 2036)
                   │                                                                        ; - java.util.HashMap$TreeNode::find@149 (line 2036)
   0.08%           ↘              0x00007fbf3edd75d4:   mov    %r13d,%eax
   0.00%                          0x00007fbf3edd75d7:   shl    $0x3,%rax                    ;*getfield left {reexecute=0 rethrow=0 return_oop=0}
                                                                                            ; - java.util.HashMap$TreeNode::find@5 (line 2021)
                                                                                            ; - java.util.HashMap$TreeNode::find@149 (line 2036)
                                                                                            ; - java.util.HashMap$TreeNode::find@149 (line 2036)
   0.04%                          0x00007fbf3edd75db:   mov    %rax,0x20(%rsp)
   0.09%                          0x00007fbf3edd75e0:   test   %r11d,%r11d
                                  0x00007fbf3edd75e3:   je     0x00007fbf3edd7833           ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                                                            ; - java.util.HashMap$TreeNode::find@91 (line 2030)
                                                                                            ; - java.util.HashMap$TreeNode::find@149 (line 2036)
                                                                                            ; - java.util.HashMap$TreeNode::find@149 (line 2036)
   0.00%                          0x00007fbf3edd75e9:   mov    %rbx,%r9
   0.00%              ╭           0x00007fbf3edd75ec:   jmp    0x00007fbf3edd7755           ;*aload {reexecute=0 rethrow=0 return_oop=0}
                      │                                                                     ; - java.util.HashMap$TreeNode::find@3 (line 2021)
                      │                                                                     ; - java.util.HashMap$TreeNode::find@149 (line 2036)
                      │                                                                     ; - java.util.HashMap$TreeNode::find@149 (line 2036)
                      │                                                                     ; - java.util.HashMap$TreeNode::find@149 (line 2036)
                      │           0x00007fbf3edd75f1:   data16 data16 nopw 0x0(%rax,%rax,1)
                      │           0x00007fbf3edd75fc:   data16 data16 xchg %ax,%ax          ;*aload {reexecute=0 rethrow=0 return_oop=0}
                      │                                                                     ; - java.util.HashMap$TreeNode::find@165 (line 2040)
                      │                                                                     ; - java.util.HashMap$TreeNode::find@149 (line 2036)
                      │                                                                     ; - java.util.HashMap$TreeNode::find@149 (line 2036)
                      │                                                                     ; - java.util.HashMap$TreeNode::find@149 (line 2036)
   0.02%              │   ↗       0x00007fbf3edd7600:   cmp    %r11d,%esi
                      │   │       0x00007fbf3edd7603:   jg     0x00007fbf3edd7817           ;*if_icmple {reexecute=0 rethrow=0 return_oop=0}
                      │   │                                                                 ; - java.util.HashMap$TreeNode::find@26 (line 2022)
                      │   │                                                                 ; - java.util.HashMap$TreeNode::find@149 (line 2036)
                      │   │                                                                 ; - java.util.HashMap$TreeNode::find@149 (line 2036)
                      │   │                                                                 ; - java.util.HashMap$TreeNode::find@149 (line 2036)
   0.02%              │   │       0x00007fbf3edd7609:   mov    %r13d,%ecx
   0.01%              │   │       0x00007fbf3edd760c:   shl    $0x3,%rcx                    ;*getfield key {reexecute=0 rethrow=0 return_oop=0}
                      │   │                                                                 ; - java.util.HashMap$TreeNode::find@51 (line 2026)
                      │   │                                                                 ; - java.util.HashMap$TreeNode::find@149 (line 2036)
                      │   │                                                                 ; - java.util.HashMap$TreeNode::find@149 (line 2036)
                      │   │                                                                 ; - java.util.HashMap$TreeNode::find@149 (line 2036)
   0.01%              │   │       0x00007fbf3edd7610:   cmp    %rbx,%rcx
                      │   │       0x00007fbf3edd7613:   je     0x00007fbf3edd7e42           ;*if_acmpeq {reexecute=0 rethrow=0 return_oop=0}
                      │   │                                                                 ; - java.util.HashMap$TreeNode::find@58 (line 2026)
                      │   │                                                                 ; - java.util.HashMap$TreeNode::find@149 (line 2036)
                      │   │                                                                 ; - java.util.HashMap$TreeNode::find@149 (line 2036)
                      │   │                                                                 ; - java.util.HashMap$TreeNode::find@149 (line 2036)
   0.02%              │   │       0x00007fbf3edd7619:   mov    0xc(%rbx),%esi               ;*getfield key {reexecute=0 rethrow=0 return_oop=0}
                      │   │                                                                 ; - java.util.AbstractMap$SimpleImmutableEntry::equals@13 (line 849)
                      │   │                                                                 ; - java.util.HashMap$TreeNode::find@68 (line 2026)
                      │   │                                                                 ; - java.util.HashMap$TreeNode::find@149 (line 2036)
                      │   │                                                                 ; - java.util.HashMap$TreeNode::find@149 (line 2036)
                      │   │                                                                 ; - java.util.HashMap$TreeNode::find@149 (line 2036)
   0.02%              │   │       0x00007fbf3edd761c:   nopl   0x0(%rax)                    ; ImmutableOopMap {rcx=Oop rbx=Oop rsi=NarrowOop rdi=NarrowOop r8=Oop r9=Oop r10=NarrowOop r13=NarrowOop [32]=Oop [56]=Oop [112]=Oop [120]=Oop }
                      │   │                                                                 ;*aload {reexecute=1 rethrow=0 return_oop=0}
                      │   │                                                                 ; - (reexecute) java.util.HashMap$TreeNode::find@3 (line 2021)
                      │   │                                                                 ; - java.util.HashMap$TreeNode::find@149 (line 2036)
                      │   │                                                                 ; - java.util.HashMap$TreeNode::find@149 (line 2036)
                      │   │                                                                 ; - java.util.HashMap$TreeNode::find@149 (line 2036)
   0.01%              │   │       0x00007fbf3edd7620:   cmpl   $0x102b2c0,0x8(,%rsi,8)      ; implicit exception: dispatches to 0x00007fbf3edd82d0
                      │   │                                                                 ;   {metadata(&apos;com/ionutbalosin/jvm/performance/benchmarks/miscellaneous/publicationstatistics/model/Author&apos;)}
   0.08%              │   │       0x00007fbf3edd762b:   jne    0x00007fbf3edd7e8e           ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                      │   │                                                                 ; - java.util.AbstractMap::eq@18 (line 584)
                      │   │                                                                 ; - java.util.AbstractMap$SimpleImmutableEntry::equals@22 (line 850)
                      │   │                                                                 ; - java.util.HashMap$TreeNode::find@68 (line 2026)
                      │   │                                                                 ; - java.util.HashMap$TreeNode::find@149 (line 2036)
                      │   │                                                                 ; - java.util.HashMap$TreeNode::find@149 (line 2036)
                      │   │                                                                 ; - java.util.HashMap$TreeNode::find@149 (line 2036)
   0.03%              │   │       0x00007fbf3edd7631:   data16 data16 nopw 0x0(%rax,%rax,1)
   0.01%              │   │       0x00007fbf3edd763c:   data16 data16 xchg %ax,%ax          ; ImmutableOopMap {rcx=Oop rbx=Oop rsi=NarrowOop rdi=NarrowOop r8=Oop r9=Oop r10=NarrowOop r13=NarrowOop [32]=Oop [56]=Oop [112]=Oop [120]=Oop }
                      │   │                                                                 ;*aload {reexecute=1 rethrow=0 return_oop=0}
                      │   │                                                                 ; - (reexecute) java.util.HashMap$TreeNode::find@3 (line 2021)
                      │   │                                                                 ; - java.util.HashMap$TreeNode::find@149 (line 2036)
                      │   │                                                                 ; - java.util.HashMap$TreeNode::find@149 (line 2036)
                      │   │                                                                 ; - java.util.HashMap$TreeNode::find@149 (line 2036)
   0.02%              │   │       0x00007fbf3edd7640:   cmpl   $0x17fee8,0x8(,%r13,8)       ; implicit exception: dispatches to 0x00007fbf3edd82f3
                      │   │                                                                 ;   {metadata(&apos;java/util/AbstractMap$SimpleImmutableEntry&apos;)}
   1.96%              │   │       0x00007fbf3edd764c:   jne    0x00007fbf3edd7e56           ;*instanceof {reexecute=0 rethrow=0 return_oop=0}
                      │   │                                                                 ; - java.util.AbstractMap$SimpleImmutableEntry::equals@1 (line 851)
                      │   │                                                                 ; - java.util.HashMap$TreeNode::find@68 (line 2026)
                      │   │                                                                 ; - java.util.HashMap$TreeNode::find@149 (line 2036)
                      │   │                                                                 ; - java.util.HashMap$TreeNode::find@149 (line 2036)
                      │   │                                                                 ; - java.util.HashMap$TreeNode::find@149 (line 2036)
   0.03%              │   │       0x00007fbf3edd7652:   mov    0xc(,%r13,8),%edx            ;*getfield key {reexecute=0 rethrow=0 return_oop=0}
                      │   │                                                                 ; - java.util.AbstractMap$SimpleImmutableEntry::getKey@1 (line 798)
                      │   │                                                                 ; - java.util.AbstractMap$SimpleImmutableEntry::equals@17 (line 850)
                      │   │                                                                 ; - java.util.HashMap$TreeNode::find@68 (line 2026)
                      │   │                                                                 ; - java.util.HashMap$TreeNode::find@149 (line 2036)
                      │   │                                                                 ; - java.util.HashMap$TreeNode::find@149 (line 2036)
                      │   │                                                                 ; - java.util.HashMap$TreeNode::find@149 (line 2036)
   0.03%              │   │       0x00007fbf3edd765a:   nopw   0x0(%rax,%rax,1)
   0.01%              │   │       0x00007fbf3edd7660:   cmp    %esi,%edx
                      │   │       0x00007fbf3edd7662:   je     0x00007fbf3edd7c72           ; ImmutableOopMap {rcx=Oop rdx=NarrowOop rbx=Oop rsi=NarrowOop rdi=NarrowOop r8=Oop r9=Oop r10=NarrowOop r13=NarrowOop [32]=Oop [56]=Oop [112]=Oop [120]=Oop }
                      │   │                                                                 ;*aload {reexecute=1 rethrow=0 return_oop=0}
                      │   │                                                                 ; - (reexecute) java.util.HashMap$TreeNode::find@3 (line 2021)
                      │   │                                                                 ; - java.util.HashMap$TreeNode::find@149 (line 2036)
                      │   │                                                                 ; - java.util.HashMap$TreeNode::find@149 (line 2036)
                      │   │                                                                 ; - java.util.HashMap$TreeNode::find@149 (line 2036)
   0.04%              │   │       0x00007fbf3edd7668:   cmpl   $0x102b2c0,0x8(,%rdx,8)      ; implicit exception: dispatches to 0x00007fbf3edd8316
                      │   │                                                                 ;   {metadata(&apos;com/ionutbalosin/jvm/performance/benchmarks/miscellaneous/publicationstatistics/model/Author&apos;)}
   4.25%              │   │       0x00007fbf3edd7673:   jne    0x00007fbf3edd7e15           ;*if_acmpeq {reexecute=0 rethrow=0 return_oop=0}
                      │   │                                                                 ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.model.Author::equals@19 (line 46)
                      │   │                                                                 ; - java.util.AbstractMap::eq@18 (line 584)
                      │   │                                                                 ; - java.util.AbstractMap$SimpleImmutableEntry::equals@22 (line 850)
                      │   │                                                                 ; - java.util.HashMap$TreeNode::find@68 (line 2026)
                      │   │                                                                 ; - java.util.HashMap$TreeNode::find@149 (line 2036)
                      │   │                                                                 ; - java.util.HashMap$TreeNode::find@149 (line 2036)
                      │   │                                                                 ; - java.util.HashMap$TreeNode::find@149 (line 2036)
   0.08%              │   │       0x00007fbf3edd7679:   mov    0xc(,%rsi,8),%esi            ;*getfield name {reexecute=0 rethrow=0 return_oop=0}
                      │   │                                                                 ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.model.Author::equals@30 (line 48)
                      │   │                                                                 ; - java.util.AbstractMap::eq@18 (line 584)
                      │   │                                                                 ; - java.util.AbstractMap$SimpleImmutableEntry::equals@22 (line 850)
                      │   │                                                                 ; - java.util.HashMap$TreeNode::find@68 (line 2026)
                      │   │                                                                 ; - java.util.HashMap$TreeNode::find@149 (line 2036)
                      │   │                                                                 ; - java.util.HashMap$TreeNode::find@149 (line 2036)
                      │   │                                                                 ; - java.util.HashMap$TreeNode::find@149 (line 2036)
   0.00%              │   │       0x00007fbf3edd7680:   mov    0xc(,%rdx,8),%edx            ;*getfield name {reexecute=0 rethrow=0 return_oop=0}
                      │   │                                                                 ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.model.Author::equals@34 (line 48)
                      │   │                                                                 ; - java.util.AbstractMap::eq@18 (line 584)
                      │   │                                                                 ; - java.util.AbstractMap$SimpleImmutableEntry::equals@22 (line 850)
                      │   │                                                                 ; - java.util.HashMap$TreeNode::find@68 (line 2026)
                      │   │                                                                 ; - java.util.HashMap$TreeNode::find@149 (line 2036)
                      │   │                                                                 ; - java.util.HashMap$TreeNode::find@149 (line 2036)
                      │   │                                                                 ; - java.util.HashMap$TreeNode::find@149 (line 2036)
   0.04%              │   │       0x00007fbf3edd7687:   cmp    %esi,%edx
                      │   │       0x00007fbf3edd7689:   je     0x00007fbf3edd7af6           ;*if_acmpeq {reexecute=0 rethrow=0 return_oop=0}
                      │   │                                                                 ; - java.util.Objects::equals@2 (line 64)
                      │   │                                                                 ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.model.Author::equals@37 (line 48)
                      │   │                                                                 ; - java.util.AbstractMap::eq@18 (line 584)
                      │   │                                                                 ; - java.util.AbstractMap$SimpleImmutableEntry::equals@22 (line 850)
                      │   │                                                                 ; - java.util.HashMap$TreeNode::find@68 (line 2026)
                      │   │                                                                 ; - java.util.HashMap$TreeNode::find@149 (line 2036)
                      │   │                                                                 ; - java.util.HashMap$TreeNode::find@149 (line 2036)
                      │   │                                                                 ; - java.util.HashMap$TreeNode::find@149 (line 2036)
   0.06%              │   │       0x00007fbf3edd768f:   mov    %r13d,0x2c(%rsp)             ; ImmutableOopMap {rcx=Oop rdx=NarrowOop rsi=NarrowOop rdi=NarrowOop r8=Oop r9=Oop r10=NarrowOop [32]=Oop [44]=NarrowOop [56]=Oop [112]=Oop [120]=Oop }
                      │   │                                                                 ;*aload {reexecute=1 rethrow=0 return_oop=0}
                      │   │                                                                 ; - (reexecute) java.util.HashMap$TreeNode::find@3 (line 2021)
                      │   │                                                                 ; - java.util.HashMap$TreeNode::find@149 (line 2036)
                      │   │                                                                 ; - java.util.HashMap$TreeNode::find@149 (line 2036)
                      │   │                                                                 ; - java.util.HashMap$TreeNode::find@149 (line 2036)
   0.01%              │   │       0x00007fbf3edd7694:   movsbl 0x10(,%rsi,8),%r13d          ; implicit exception: dispatches to 0x00007fbf3edd8339
   0.01%              │   │       0x00007fbf3edd769d:   mov    0x14(,%rsi,8),%ebx
                      │   │       0x00007fbf3edd76a4:   cmp    %esi,%edx
                      │   │       0x00007fbf3edd76a6:   je     0x00007fbf3edd7bbe
   0.04%              │   │       0x00007fbf3edd76ac:   test   %edx,%edx
                      │╭  │       0x00007fbf3edd76ae:   je     0x00007fbf3edd77ed
   0.05%              ││  │       0x00007fbf3edd76b4:   nopl   0x0(%rax,%rax,1)
   0.01%              ││  │       0x00007fbf3edd76bc:   data16 data16 xchg %ax,%ax
                      ││  │       0x00007fbf3edd76c0:   cmp    0x10(,%rdx,8),%r13b
                      ││╭ │       0x00007fbf3edd76c8:   jne    0x00007fbf3edd77fb           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                      │││ │                                                                 ; - java.lang.String::equals@0 (line 1858)
                      │││ │                                                                 ; - java.util.Objects::equals@11 (line 64)
                      │││ │                                                                 ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.model.Author::equals@37 (line 48)
                      │││ │                                                                 ; - java.util.AbstractMap::eq@18 (line 584)
                      │││ │                                                                 ; - java.util.AbstractMap$SimpleImmutableEntry::equals@22 (line 850)
                      │││ │                                                                 ; - java.util.HashMap$TreeNode::find@68 (line 2026)
                      │││ │                                                                 ; - java.util.HashMap$TreeNode::find@149 (line 2036)
                      │││ │                                                                 ; - java.util.HashMap$TreeNode::find@149 (line 2036)
                      │││ │                                                                 ; - java.util.HashMap$TreeNode::find@149 (line 2036)
   1.07%              │││ │       0x00007fbf3edd76ce:   mov    0x14(,%rdx,8),%esi           ; ImmutableOopMap {rcx=Oop rbx=NarrowOop rsi=NarrowOop rdi=NarrowOop r8=Oop r9=Oop r10=NarrowOop [32]=Oop [44]=NarrowOop [56]=Oop [112]=Oop [120]=Oop }
                      │││ │                                                                 ;*aload {reexecute=1 rethrow=0 return_oop=0}
                      │││ │                                                                 ; - (reexecute) java.util.HashMap$TreeNode::find@3 (line 2021)
                      │││ │                                                                 ; - java.util.HashMap$TreeNode::find@149 (line 2036)
                      │││ │                                                                 ; - java.util.HashMap$TreeNode::find@149 (line 2036)
                      │││ │                                                                 ; - java.util.HashMap$TreeNode::find@149 (line 2036)
   0.05%              │││ │       0x00007fbf3edd76d5:   mov    0xc(,%rsi,8),%r13d           ; implicit exception: dispatches to 0x00007fbf3edd835c
   0.85%              │││ │       0x00007fbf3edd76dd:   data16 xchg %ax,%ax                 ; ImmutableOopMap {rcx=Oop rbx=NarrowOop rsi=NarrowOop rdi=NarrowOop r8=Oop r9=Oop r10=NarrowOop [32]=Oop [44]=NarrowOop [56]=Oop [112]=Oop [120]=Oop }
                      │││ │                                                                 ;*aload {reexecute=1 rethrow=0 return_oop=0}
                      │││ │                                                                 ; - (reexecute) java.util.HashMap$TreeNode::find@3 (line 2021)
                      │││ │                                                                 ; - java.util.HashMap$TreeNode::find@149 (line 2036)
                      │││ │                                                                 ; - java.util.HashMap$TreeNode::find@149 (line 2036)
                      │││ │                                                                 ; - java.util.HashMap$TreeNode::find@149 (line 2036)
   0.01%              │││ │       0x00007fbf3edd76e0:   cmp    0xc(,%rbx,8),%r13d           ; implicit exception: dispatches to 0x00007fbf3edd837f
                      │││ │       0x00007fbf3edd76e8:   jne    0x00007fbf3edd7809
   0.07%              │││ │       0x00007fbf3edd76ee:   test   %r13d,%r13d
                      │││ │       0x00007fbf3edd76f1:   je     0x00007fbf3edd7be0
   0.05%              │││ │       0x00007fbf3edd76f7:   mov    %rcx,0x40(%rsp)
   0.01%              │││ │       0x00007fbf3edd76fc:   mov    %r9,0x8(%rsp)
   0.00%              │││ │       0x00007fbf3edd7701:   shl    $0x3,%rsi
   0.01%              │││ │       0x00007fbf3edd7705:   shl    $0x3,%rbx
   0.05%              │││ │       0x00007fbf3edd7709:   mov    $0x10,%rdx
   0.01%              │││ │       0x00007fbf3edd7710:   mov    %rbx,%rcx
   0.01%              │││ │       0x00007fbf3edd7713:   mov    %r8,%rbx
   0.01%              │││ │       0x00007fbf3edd7716:   mov    $0x10,%r8
   0.05%              │││ │       0x00007fbf3edd771d:   mov    %r13d,%r9d                   ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                      │││ │                                                                 ; - java.lang.String::equals@0 (line 1858)
                      │││ │                                                                 ; - java.util.Objects::equals@11 (line 64)
                      │││ │                                                                 ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.model.Author::equals@37 (line 48)
                      │││ │                                                                 ; - java.util.AbstractMap::eq@18 (line 584)
                      │││ │                                                                 ; - java.util.AbstractMap$SimpleImmutableEntry::equals@22 (line 850)
                      │││ │                                                                 ; - java.util.HashMap$TreeNode::find@68 (line 2026)
                      │││ │                                                                 ; - java.util.HashMap$TreeNode::find@149 (line 2036)
                      │││ │                                                                 ; - java.util.HashMap$TreeNode::find@149 (line 2036)
                      │││ │                                                                 ; - java.util.HashMap$TreeNode::find@149 (line 2036)
   0.00%              │││ │       0x00007fbf3edd7720:   mov    %r10d,%r11d
   0.00%              │││ │       0x00007fbf3edd7723:   mov    %edi,%r13d
   0.01%              │││ │       0x00007fbf3edd7726:   call   0x00007fbf3e8ee580           ;   {runtime_call Stub&lt;IntrinsicStubsGen.arrayRegionEqualsS1S1&gt;}
   0.08%              │││ │       0x00007fbf3edd772b:   nop
   0.00%              │││ │       0x00007fbf3edd772c:   test   %eax,%eax
                      │││ │       0x00007fbf3edd772e:   jne    0x00007fbf3edd7c05           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                      │││ │                                                                 ; - java.util.AbstractMap$SimpleImmutableEntry::equals@25 (line 850)
                      │││ │                                                                 ; - java.util.HashMap$TreeNode::find@68 (line 2026)
                      │││ │                                                                 ; - java.util.HashMap$TreeNode::find@149 (line 2036)
                      │││ │                                                                 ; - java.util.HashMap$TreeNode::find@149 (line 2036)
                      │││ │                                                                 ; - java.util.HashMap$TreeNode::find@149 (line 2036)
   0.10%              │││ │    ↗  0x00007fbf3edd7734:   test   %r13d,%r13d
                      │││╭│    │  0x00007fbf3edd7737:   jne    0x00007fbf3edd778b           ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                      │││││    │                                                            ; - java.util.HashMap$TreeNode::find@79 (line 2028)
                      │││││    │                                                            ; - java.util.HashMap$TreeNode::find@149 (line 2036)
                      │││││    │                                                            ; - java.util.HashMap$TreeNode::find@149 (line 2036)
                      │││││    │                                                            ; - java.util.HashMap$TreeNode::find@149 (line 2036)
   0.01%              │││││    │  0x00007fbf3edd773d:   mov    %rbx,%r8                     ;*aload {reexecute=0 rethrow=0 return_oop=0}
                      │││││    │                                                            ; - java.util.HashMap$TreeNode::find@165 (line 2040)
                      │││││    │                                                            ; - java.util.HashMap$TreeNode::find@149 (line 2036)
                      │││││    │                                                            ; - java.util.HashMap$TreeNode::find@149 (line 2036)
                      │││││    │                                                            ; - java.util.HashMap$TreeNode::find@149 (line 2036)
   0.04%              │││││↗ ↗↗│  0x00007fbf3edd7740:   test   %r8,%r8
                      ││││││ │││  0x00007fbf3edd7743:   je     0x00007fbf3edd7829           ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                      ││││││ │││                                                            ; - java.util.HashMap$TreeNode::find@167 (line 2040)
                      ││││││ │││                                                            ; - java.util.HashMap$TreeNode::find@149 (line 2036)
                      ││││││ │││                                                            ; - java.util.HashMap$TreeNode::find@149 (line 2036)
                      ││││││ │││                                                            ; - java.util.HashMap$TreeNode::find@149 (line 2036)
   0.02%              ││││││ │││  0x00007fbf3edd7749:   mov    0x458(%r15),%rax             ; ImmutableOopMap {r8=Oop [32]=Oop [56]=Oop [112]=Oop [120]=Oop }
                      ││││││ │││                                                            ;*aload {reexecute=1 rethrow=0 return_oop=0}
                      ││││││ │││                                                            ; - (reexecute) java.util.HashMap$TreeNode::find@165 (line 2040)
                      ││││││ │││                                                            ; - java.util.HashMap$TreeNode::find@149 (line 2036)
                      ││││││ │││                                                            ; - java.util.HashMap$TreeNode::find@149 (line 2036)
                      ││││││ │││                                                            ; - java.util.HashMap$TreeNode::find@149 (line 2036)
   0.02%              ││││││ │││  0x00007fbf3edd7750:   test   %eax,(%rax)                  ;   {poll}
   0.05%              ││││││ │││  0x00007fbf3edd7752:   mov    %r8,%r9                      ;*aload {reexecute=0 rethrow=0 return_oop=0}
                      ││││││ │││                                                            ; - java.util.HashMap$TreeNode::find@3 (line 2021)
                      ││││││ │││                                                            ; - java.util.HashMap$TreeNode::find@149 (line 2036)
                      ││││││ │││                                                            ; - java.util.HashMap$TreeNode::find@149 (line 2036)
                      ││││││ │││                                                            ; - java.util.HashMap$TreeNode::find@149 (line 2036)
   0.01%              ↘│││││ │││  0x00007fbf3edd7755:   mov    0x78(%rsp),%rbx
   0.03%               │││││ │││  0x00007fbf3edd775a:   mov    0x84(%rsp),%r11d             ; ImmutableOopMap {rbx=Oop r9=Oop [32]=Oop [56]=Oop [112]=Oop [120]=Oop }
                       │││││ │││                                                            ;*aload {reexecute=1 rethrow=0 return_oop=0}
                       │││││ │││                                                            ; - (reexecute) java.util.HashMap$TreeNode::find@3 (line 2021)
                       │││││ │││                                                            ; - java.util.HashMap$TreeNode::find@149 (line 2036)
                       │││││ │││                                                            ; - java.util.HashMap$TreeNode::find@149 (line 2036)
                       │││││ │││                                                            ; - java.util.HashMap$TreeNode::find@149 (line 2036)
   0.02%               │││││ │││  0x00007fbf3edd7762:   mov    0xc(%r9),%esi                ; implicit exception: dispatches to 0x00007fbf3edd83a2
   1.22%               │││││ │││  0x00007fbf3edd7766:   mov    0x10(%r9),%r13d              ;*getfield key {reexecute=0 rethrow=0 return_oop=0}
                       │││││ │││                                                            ; - java.util.HashMap$TreeNode::find@51 (line 2026)
                       │││││ │││                                                            ; - java.util.HashMap$TreeNode::find@149 (line 2036)
                       │││││ │││                                                            ; - java.util.HashMap$TreeNode::find@149 (line 2036)
                       │││││ │││                                                            ; - java.util.HashMap$TreeNode::find@149 (line 2036)
   0.05%               │││││ │││  0x00007fbf3edd776a:   mov    0x30(%r9),%r10d              ;*getfield right {reexecute=0 rethrow=0 return_oop=0}
                       │││││ │││                                                            ; - java.util.HashMap$TreeNode::find@12 (line 2021)
                       │││││ │││                                                            ; - java.util.HashMap$TreeNode::find@149 (line 2036)
                       │││││ │││                                                            ; - java.util.HashMap$TreeNode::find@149 (line 2036)
                       │││││ │││                                                            ; - java.util.HashMap$TreeNode::find@149 (line 2036)
   0.18%               │││││ │││  0x00007fbf3edd776e:   mov    0x2c(%r9),%edi               ;*getfield left {reexecute=0 rethrow=0 return_oop=0}
                       │││││ │││                                                            ; - java.util.HashMap$TreeNode::find@5 (line 2021)
                       │││││ │││                                                            ; - java.util.HashMap$TreeNode::find@149 (line 2036)
                       │││││ │││                                                            ; - java.util.HashMap$TreeNode::find@149 (line 2036)
                       │││││ │││                                                            ; - java.util.HashMap$TreeNode::find@149 (line 2036)
   0.04%               │││││ │││  0x00007fbf3edd7772:   mov    %r10d,%r8d
   0.01%               │││││ │││  0x00007fbf3edd7775:   shl    $0x3,%r8                     ;*getfield right {reexecute=0 rethrow=0 return_oop=0}
                       │││││ │││                                                            ; - java.util.HashMap$TreeNode::find@12 (line 2021)
                       │││││ │││                                                            ; - java.util.HashMap$TreeNode::find@149 (line 2036)
                       │││││ │││                                                            ; - java.util.HashMap$TreeNode::find@149 (line 2036)
                       │││││ │││                                                            ; - java.util.HashMap$TreeNode::find@149 (line 2036)
   0.01%               │││││ │││  0x00007fbf3edd7779:   nopl   0x0(%rax)
   0.02%               │││││ │││  0x00007fbf3edd7780:   cmp    %esi,%r11d
                       │││╰│ │││  0x00007fbf3edd7783:   jle    0x00007fbf3edd7600
                       │││ ╰ │││  0x00007fbf3edd7789:   jmp    0x00007fbf3edd7740           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                       │││   │││                                                            ; - java.util.HashMap$TreeNode::find@39 (line 2024)
                       │││   │││                                                            ; - java.util.HashMap$TreeNode::find@149 (line 2036)
                       │││   │││                                                            ; - java.util.HashMap$TreeNode::find@149 (line 2036)
                       │││   │││                                                            ; - java.util.HashMap$TreeNode::find@149 (line 2036)
   0.06%               ││↘   │││  0x00007fbf3edd778b:   mov    %r13d,%edi
   0.00%               ││    │││  0x00007fbf3edd778e:   shl    $0x3,%rdi                    ;*getfield left {reexecute=0 rethrow=0 return_oop=0}
                       ││    │││                                                            ; - java.util.HashMap$TreeNode::find@5 (line 2021)
                       ││    │││                                                            ; - java.util.HashMap$TreeNode::find@149 (line 2036)
                       ││    │││                                                            ; - java.util.HashMap$TreeNode::find@149 (line 2036)
                       ││    │││                                                            ; - java.util.HashMap$TreeNode::find@149 (line 2036)
   0.02%               ││    │││  0x00007fbf3edd7792:   test   %r11d,%r11d
                       ││   ╭│││  0x00007fbf3edd7795:   je     0x00007fbf3edd77e5           ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                       ││   ││││                                                            ; - java.util.HashMap$TreeNode::find@91 (line 2030)
                       ││   ││││                                                            ; - java.util.HashMap$TreeNode::find@149 (line 2036)
                       ││   ││││                                                            ; - java.util.HashMap$TreeNode::find@149 (line 2036)
                       ││   ││││                                                            ; - java.util.HashMap$TreeNode::find@149 (line 2036)
   0.00%               ││   ││││  0x00007fbf3edd779b:   mov    %rdi,0x10(%rsp)
   0.05%               ││   ││││  0x00007fbf3edd77a0:   mov    0x78(%rsp),%r11
   0.00%               ││   ││││  0x00007fbf3edd77a5:   mov    0x84(%rsp),%r10d
                       ││   ││││  0x00007fbf3edd77ad:   mov    %rbx,%rsi
   0.01%               ││   ││││  0x00007fbf3edd77b0:   mov    %r10d,%edx
   0.01%               ││   ││││  0x00007fbf3edd77b3:   mov    %r11,%rcx
                       ││   ││││  0x00007fbf3edd77b6:   mov    $0x0,%r8                     ;*invokevirtual find {reexecute=0 rethrow=0 return_oop=0}
                       ││   ││││                                                            ; - java.util.HashMap$TreeNode::find@149 (line 2036)
                       ││   ││││                                                            ; - java.util.HashMap$TreeNode::find@149 (line 2036)
                       ││   ││││                                                            ; - java.util.HashMap$TreeNode::find@149 (line 2036)
                       ││   ││││                                                            ; - java.util.HashMap$TreeNode::find@149 (line 2036)
                       ││   ││││  0x00007fbf3edd77bd:   xchg   %ax,%ax
   0.01%               ││   ││││  0x00007fbf3edd77bf:   nop
   0.00%               ││   ││││  0x00007fbf3edd77c0:   data16 xchg %ax,%ax
                       ││   ││││  0x00007fbf3edd77c3:   call   0x00007fbf3edd7080           ; ImmutableOopMap {[16]=Oop [32]=Oop [56]=Oop [112]=Oop [120]=Oop }
                       ││   ││││                                                            ;*invokevirtual find {reexecute=0 rethrow=0 return_oop=1}
                       ││   ││││                                                            ; - java.util.HashMap$TreeNode::find@149 (line 2036)
                       ││   ││││                                                            ; - java.util.HashMap$TreeNode::find@149 (line 2036)
                       ││   ││││                                                            ; - java.util.HashMap$TreeNode::find@149 (line 2036)
                       ││   ││││                                                            ; - java.util.HashMap$TreeNode::find@149 (line 2036)
                       ││   ││││                                                            ;   {optimized virtual_call}
   0.01%               ││   ││││  0x00007fbf3edd77c8:   nopl   0x210009b8(%rax,%rax,1)      ;   {other}
   0.01%               ││   ││││  0x00007fbf3edd77d0:   test   %rax,%rax
                       ││   ││││  0x00007fbf3edd77d3:   jne    0x00007fbf3edd7c37           ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                       ││   ││││                                                            ; - java.util.HashMap$TreeNode::find@155 (line 2036)
                       ││   ││││                                                            ; - java.util.HashMap$TreeNode::find@149 (line 2036)
                       ││   ││││                                                            ; - java.util.HashMap$TreeNode::find@149 (line 2036)
                       ││   ││││                                                            ; - java.util.HashMap$TreeNode::find@149 (line 2036)
   0.02%               ││   ││││  0x00007fbf3edd77d9:   mov    0x10(%rsp),%r8
   0.04%               ││   ││││  0x00007fbf3edd77de:   xchg   %ax,%ax
                       ││   │╰││  0x00007fbf3edd77e0:   jmp    0x00007fbf3edd7740
   0.02%               ││   ↘ ││  0x00007fbf3edd77e5:   mov    %rdi,%r8
   0.00%               ││     ╰│  0x00007fbf3edd77e8:   jmp    0x00007fbf3edd7740           ;*aload {reexecute=0 rethrow=0 return_oop=0}
                       ││      │                                                            ; - java.util.HashMap$TreeNode::find@165 (line 2040)
                       ││      │                                                            ; - java.util.HashMap$TreeNode::find@149 (line 2036)
                       ││      │                                                            ; - java.util.HashMap$TreeNode::find@149 (line 2036)
                       ││      │                                                            ; - java.util.HashMap$TreeNode::find@149 (line 2036)
                       ↘│      │  0x00007fbf3edd77ed:   mov    %r8,%rbx
                        │      │  0x00007fbf3edd77f0:   mov    %edi,%r13d
                        │      │  0x00007fbf3edd77f3:   mov    %r10d,%r11d
                        │      ╰  0x00007fbf3edd77f6:   jmp    0x00007fbf3edd7734
                        ↘         0x00007fbf3edd77fb:   mov    %r8,%rbx
                                  0x00007fbf3edd77fe:   mov    %edi,%r13d
....................................................................................................
  64.46%  <total for region 1>

....[Hottest Regions]...............................................................................
  64.46%       jvmci, level 4  java.util.HashMap$TreeNode::find, version 3, compile id 1404 
   6.47%                       <unknown> 
   3.90%       jvmci, level 4  java.util.HashMap::computeIfAbsent, version 5, compile id 1538 
   1.94%       jvmci, level 4  java.util.HashMap::computeIfAbsent, version 5, compile id 1538 
   1.31%                       <unknown> 
   1.26%                       <unknown> 
   1.16%       jvmci, level 4  java.util.HashMap$TreeNode::putTreeVal, version 3, compile id 1434 
   0.94%       jvmci, level 4  java.util.AbstractMap::eq, version 3, compile id 1425 
   0.90%            libjvm.so  G1ParScanThreadState::trim_queue_to_threshold 
   0.86%       jvmci, level 4  java.util.HashMap$KeySpliterator::forEachRemaining, version 5, compile id 1551 
   0.86%            libjvm.so  OopOopIterateBackwardsDispatch<G1ScanEvacuatedObjClosure>::Table::oop_oop_iterate_backwards<InstanceKlass, narrowOop> 
   0.80%       jvmci, level 4  java.util.HashMap$KeySpliterator::forEachRemaining, version 5, compile id 1551 
   0.77%       jvmci, level 4  java.util.HashMap::computeIfAbsent, version 5, compile id 1538 
   0.70%            libjvm.so  G1ParScanThreadState::trim_queue_to_threshold 
   0.66%            libjvm.so  G1ParScanThreadState::trim_queue_to_threshold 
   0.59%       jvmci, level 4  java.util.HashMap$KeySpliterator::forEachRemaining, version 5, compile id 1551 
   0.57%       jvmci, level 4  java.util.HashMap$KeySpliterator::forEachRemaining, version 5, compile id 1551 
   0.50%       jvmci, level 4  java.util.HashMap$TreeNode::find, version 3, compile id 1404 
   0.49%       jvmci, level 4  java.util.HashMap::replaceAll, version 3, compile id 1552 
   0.39%            libjvm.so  G1ParScanThreadState::trim_queue_to_threshold 
  10.46%  <...other 734 warm regions...>
....................................................................................................
 100.00%  <totals>

....[Hottest Methods (after inlining)]..............................................................
  65.66%       jvmci, level 4  java.util.HashMap$TreeNode::find, version 3, compile id 1404 
   9.51%                       <unknown> 
   6.97%       jvmci, level 4  java.util.HashMap::computeIfAbsent, version 5, compile id 1538 
   5.59%       jvmci, level 4  java.util.HashMap$KeySpliterator::forEachRemaining, version 5, compile id 1551 
   2.91%            libjvm.so  G1ParScanThreadState::trim_queue_to_threshold 
   1.83%       jvmci, level 4  java.util.HashMap$TreeNode::putTreeVal, version 3, compile id 1434 
   1.23%            libjvm.so  OopOopIterateBackwardsDispatch<G1ScanEvacuatedObjClosure>::Table::oop_oop_iterate_backwards<InstanceKlass, narrowOop> 
   1.20%               kernel  [unknown] 
   0.94%       jvmci, level 4  java.util.AbstractMap::eq, version 3, compile id 1425 
   0.84%       jvmci, level 4  java.util.HashMap::resize, version 3, compile id 1474 
   0.56%       jvmci, level 4  java.util.HashMap::replaceAll, version 3, compile id 1552 
   0.53%       jvmci, level 4  java.util.HashMap$EntrySpliterator::forEachRemaining, version 3, compile id 1554 
   0.29%       jvmci, level 4  java.util.AbstractMap$SimpleImmutableEntry::hashCode, version 3, compile id 1419 
   0.25%            libjvm.so  G1ScanCardClosure::do_oop_work<narrowOop> 
   0.19%       jvmci, level 4  java.util.HashMap$TreeNode::balanceInsertion, version 3, compile id 1432 
   0.18%           ld-2.31.so  __tls_get_addr 
   0.16%       jvmci, level 4  java.util.HashMap$TreeNode::treeify, version 5, compile id 1457 
   0.13%            libjvm.so  ObjectSynchronizer::FastHashCode 
   0.10%            libjvm.so  OopOopIterateBoundedDispatch<G1ScanCardClosure>::Table::oop_oop_iterate_bounded<ObjArrayKlass, narrowOop> 
   0.08%            libjvm.so  OopOopIterateDispatch<G1ScanCardClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop> 
   0.83%  <...other 168 warm methods...>
....................................................................................................
 100.00%  <totals>

....[Distribution by Source]........................................................................
  83.74%       jvmci, level 4
   9.51%                     
   5.14%            libjvm.so
   1.20%               kernel
   0.18%           ld-2.31.so
   0.11%         libc-2.31.so
   0.06%  libjvmcicompiler.so
   0.03%   libpthread-2.31.so
   0.01%       hsdis-amd64.so
   0.00%     perf-2147669.map
   0.00%          c1, level 3
   0.00%          interpreter
....................................................................................................
 100.00%  <totals>



# JMH version: 1.37
# VM version: JDK 21, Java HotSpot(TM) 64-Bit Server VM, 21+35-jvmci-23.1-b15
# VM invoker: /home/gogu/bench_jdks/graalvm-jdk-21+35.1/bin/java
# VM options: -XX:ThreadPriorityPolicy=1 -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCIProduct -XX:-UnlockExperimentalVMOptions -Xms4g -Xmx4g -XX:+AlwaysPreTouch
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark.most_prolific_pair_of_authors_per_year

# Run progress: 35.71% complete, ETA 00:17:58
# Fork: 1 of 1
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 5033.882 ms/op
# Warmup Iteration   2: 1329.746 ms/op
# Warmup Iteration   3: 751.023 ms/op
# Warmup Iteration   4: 763.673 ms/op
# Warmup Iteration   5: 758.537 ms/op
Iteration   1: 759.730 ms/op
Iteration   2: 762.164 ms/op
Iteration   3: 759.235 ms/op
Iteration   4: 759.596 ms/op
Iteration   5: 764.326 ms/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark.most_prolific_pair_of_authors_per_year":
  761.010 ±(99.9%) 8.417 ms/op [Average]
  (min, avg, max) = (759.235, 761.010, 764.326), stdev = 2.186
  CI (99.9%): [752.593, 769.427] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark.most_prolific_pair_of_authors_per_year:asm":
PrintAssembly processed: 471141 total address lines.
Perf output processed (skipped 64.924 seconds):
 Column 1: cycles (55237 events)

Hottest code regions (>10.00% "cycles" events):
 Event counts are percents of total event count.

....[Hottest Region 1]..............................................................................
jvmci, level 4, java.util.AbstractMap$SimpleImmutableEntry::equals, version 3, compile id 1444 

            JVMCI data     [0x00007f3e4adf2ee0,0x00007f3e4adf2ef8] = 24
           [Disassembly]
           --------------------------------------------------------------------------------
           [Constant Pool (empty)]
           --------------------------------------------------------------------------------
           [Entry Point]
             # {method} {0x00007f3dcf180140} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/util/AbstractMap$SimpleImmutableEntry&apos;
             # this:     rsi:rsi   = &apos;java/util/AbstractMap$SimpleImmutableEntry&apos;
             # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
             #           [sp+0x20]  (sp of caller)
   0.03%     0x00007f3e4adf2340:   mov    0x8(%rsi),%r10d
   0.01%     0x00007f3e4adf2344:   movabs $0x7f3dcf000000,%r12
   0.01%     0x00007f3e4adf234e:   add    %r12,%r10
   0.03%     0x00007f3e4adf2351:   xor    %r12,%r12
             0x00007f3e4adf2354:   cmp    %r10,%rax
             0x00007f3e4adf2357:   jne    0x00007f3e4a764080           ;   {runtime_call ic_miss_stub}
   0.01%     0x00007f3e4adf235d:   data16 xchg %ax,%ax
           [Verified Entry Point]
   0.04%     0x00007f3e4adf2360:   mov    %eax,-0x14000(%rsp)
   0.03%     0x00007f3e4adf2367:   sub    $0x18,%rsp
   0.01%     0x00007f3e4adf236b:   nop
   0.02%     0x00007f3e4adf236c:   cmpl   $0x1,0x20(%r15)
   0.03%     0x00007f3e4adf2374:   jne    0x00007f3e4adf269d
   0.01%     0x00007f3e4adf237a:   mov    %rbp,0x10(%rsp)
   0.00%     0x00007f3e4adf237f:   mov    %rsi,%r11
   0.02%     0x00007f3e4adf2382:   mov    %rdx,%rbx
   0.04%     0x00007f3e4adf2385:   mov    0xc(%r11),%esi               ; ImmutableOopMap {rbx=Oop rsi=NarrowOop r11=Oop }
                                                                       ;*aload_1 {reexecute=1 rethrow=0 return_oop=0}
                                                                       ; - (reexecute) java.util.AbstractMap$SimpleImmutableEntry::equals@0 (line 851)
   0.00%     0x00007f3e4adf2389:   cmpl   $0x102b2b0,0x8(,%rsi,8)      ; implicit exception: dispatches to 0x00007f3e4adf26e9
                                                                       ;   {metadata(&apos;com/ionutbalosin/jvm/performance/benchmarks/miscellaneous/publicationstatistics/model/Author&apos;)}
   0.07%     0x00007f3e4adf2394:   jne    0x00007f3e4adf2633           ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - java.util.AbstractMap::eq@18 (line 584)
                                                                       ; - java.util.AbstractMap$SimpleImmutableEntry::equals@22 (line 850)
   0.04%     0x00007f3e4adf239a:   nopw   0x0(%rax,%rax,1)             ; ImmutableOopMap {rbx=Oop rsi=NarrowOop r11=Oop }
                                                                       ;*aload_1 {reexecute=1 rethrow=0 return_oop=0}
                                                                       ; - (reexecute) java.util.AbstractMap$SimpleImmutableEntry::equals@0 (line 851)
   0.00%     0x00007f3e4adf23a0:   cmpl   $0x17fee8,0x8(%rbx)          ; implicit exception: dispatches to 0x00007f3e4adf270d
                                                                       ;   {metadata(&apos;java/util/AbstractMap$SimpleImmutableEntry&apos;)}
   6.61%     0x00007f3e4adf23a7:   jne    0x00007f3e4adf266a           ;*instanceof {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - java.util.AbstractMap$SimpleImmutableEntry::equals@1 (line 851)
   0.03%     0x00007f3e4adf23ad:   mov    0xc(%rbx),%edx               ;*getfield key {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - java.util.AbstractMap$SimpleImmutableEntry::getKey@1 (line 798)
                                                                       ; - java.util.AbstractMap$SimpleImmutableEntry::equals@17 (line 850)
   0.06%     0x00007f3e4adf23b0:   cmp    %esi,%edx
             0x00007f3e4adf23b2:   je     0x00007f3e4adf25b1           ;*if_acmpne {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.model.Author::equals@2 (line 45)
                                                                       ; - java.util.AbstractMap::eq@18 (line 584)
                                                                       ; - java.util.AbstractMap$SimpleImmutableEntry::equals@22 (line 850)
   0.03%     0x00007f3e4adf23b8:   nopl   0x0(%rax,%rax,1)             ; ImmutableOopMap {rdx=NarrowOop rbx=Oop rsi=NarrowOop r11=Oop }
                                                                       ;*aload_1 {reexecute=1 rethrow=0 return_oop=0}
                                                                       ; - (reexecute) java.util.AbstractMap$SimpleImmutableEntry::equals@0 (line 851)
   0.00%     0x00007f3e4adf23c0:   cmpl   $0x102b2b0,0x8(,%rdx,8)      ; implicit exception: dispatches to 0x00007f3e4adf2730
                                                                       ;   {metadata(&apos;com/ionutbalosin/jvm/performance/benchmarks/miscellaneous/publicationstatistics/model/Author&apos;)}
  10.56%     0x00007f3e4adf23cb:   jne    0x00007f3e4adf265b           ;*if_acmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.model.Author::equals@19 (line 46)
                                                                       ; - java.util.AbstractMap::eq@18 (line 584)
                                                                       ; - java.util.AbstractMap$SimpleImmutableEntry::equals@22 (line 850)
   0.05%     0x00007f3e4adf23d1:   mov    0xc(,%rsi,8),%esi            ;*getfield name {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.model.Author::equals@30 (line 48)
                                                                       ; - java.util.AbstractMap::eq@18 (line 584)
                                                                       ; - java.util.AbstractMap$SimpleImmutableEntry::equals@22 (line 850)
             0x00007f3e4adf23d8:   mov    0xc(,%rdx,8),%edx            ;*getfield name {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.model.Author::equals@34 (line 48)
                                                                       ; - java.util.AbstractMap::eq@18 (line 584)
                                                                       ; - java.util.AbstractMap$SimpleImmutableEntry::equals@22 (line 850)
   0.07%     0x00007f3e4adf23df:   nop
   0.00%     0x00007f3e4adf23e0:   cmp    %esi,%edx
             0x00007f3e4adf23e2:   je     0x00007f3e4adf25cf           ; ImmutableOopMap {rdx=NarrowOop rbx=Oop rsi=NarrowOop r11=Oop }
                                                                       ;*aload_1 {reexecute=1 rethrow=0 return_oop=0}
                                                                       ; - (reexecute) java.util.AbstractMap$SimpleImmutableEntry::equals@0 (line 851)
   0.06%     0x00007f3e4adf23e8:   movsbl 0x10(,%rsi,8),%ecx           ; implicit exception: dispatches to 0x00007f3e4adf2753
   0.00%     0x00007f3e4adf23f0:   mov    0x14(,%rsi,8),%r8d
             0x00007f3e4adf23f8:   cmp    %esi,%edx
             0x00007f3e4adf23fa:   je     0x00007f3e4adf25bb
   0.08%     0x00007f3e4adf2400:   test   %edx,%edx
             0x00007f3e4adf2402:   je     0x00007f3e4adf2591
   0.06%     0x00007f3e4adf2408:   cmp    0x10(,%rdx,8),%cl
             0x00007f3e4adf240f:   jne    0x00007f3e4adf2591           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - java.lang.String::equals@0 (line 1858)
                                                                       ; - java.util.Objects::equals@11 (line 64)
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.model.Author::equals@37 (line 48)
                                                                       ; - java.util.AbstractMap::eq@18 (line 584)
                                                                       ; - java.util.AbstractMap$SimpleImmutableEntry::equals@22 (line 850)
   2.17%     0x00007f3e4adf2415:   mov    0x14(,%rdx,8),%esi           ; ImmutableOopMap {rbx=Oop rsi=NarrowOop r8=NarrowOop r11=Oop }
                                                                       ;*aload_1 {reexecute=1 rethrow=0 return_oop=0}
                                                                       ; - (reexecute) java.util.AbstractMap$SimpleImmutableEntry::equals@0 (line 851)
   0.05%     0x00007f3e4adf241c:   mov    0xc(,%rsi,8),%r9d            ; implicit exception: dispatches to 0x00007f3e4adf2776
                                                                       ; ImmutableOopMap {rbx=Oop rsi=NarrowOop r8=NarrowOop r11=Oop }
                                                                       ;*aload_1 {reexecute=1 rethrow=0 return_oop=0}
                                                                       ; - (reexecute) java.util.AbstractMap$SimpleImmutableEntry::equals@0 (line 851)
   1.49%     0x00007f3e4adf2424:   cmp    0xc(,%r8,8),%r9d             ; implicit exception: dispatches to 0x00007f3e4adf2799
             0x00007f3e4adf242c:   jne    0x00007f3e4adf2591
   0.07%     0x00007f3e4adf2432:   test   %r9d,%r9d
             0x00007f3e4adf2435:   je     0x00007f3e4adf25c5
   0.05%     0x00007f3e4adf243b:   shl    $0x3,%rsi
             0x00007f3e4adf243f:   shl    $0x3,%r8
             0x00007f3e4adf2443:   mov    $0x10,%rdx
   0.01%     0x00007f3e4adf244a:   mov    %r8,%rcx                     ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - java.lang.String::equals@0 (line 1858)
                                                                       ; - java.util.Objects::equals@11 (line 64)
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.model.Author::equals@37 (line 48)
                                                                       ; - java.util.AbstractMap::eq@18 (line 584)
                                                                       ; - java.util.AbstractMap$SimpleImmutableEntry::equals@22 (line 850)
   0.04%     0x00007f3e4adf244d:   mov    $0x10,%r8
             0x00007f3e4adf2454:   call   0x00007f3e4a8ee200           ;   {runtime_call Stub&lt;IntrinsicStubsGen.arrayRegionEqualsS1S1&gt;}
   0.14%     0x00007f3e4adf2459:   nop
   0.00%     0x00007f3e4adf245a:   nopw   0x0(%rax,%rax,1)
   0.01%     0x00007f3e4adf2460:   test   %eax,%eax
          ╭  0x00007f3e4adf2462:   jne    0x00007f3e4adf2491           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - java.util.AbstractMap$SimpleImmutableEntry::equals@25 (line 850)
   0.04%  │  0x00007f3e4adf2468:   mov    $0x0,%eax                    ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - java.util.AbstractMap$SimpleImmutableEntry::equals@49 (line 849)
   0.06%  │  0x00007f3e4adf246d:   mov    0x10(%rsp),%rbp
   0.16%  │  0x00007f3e4adf2472:   add    $0x18,%rsp
          │  0x00007f3e4adf2476:   data16 nopw 0x0(%rax,%rax,1)
   0.05%  │  0x00007f3e4adf2480:   cmp    0x450(%r15),%rsp             ;   {poll_return}
          │  0x00007f3e4adf2487:   ja     0x00007f3e4adf26ad
          │  0x00007f3e4adf248d:   vzeroupper 
   0.07%  │  0x00007f3e4adf2490:   ret    
   0.00%  ↘  0x00007f3e4adf2491:   mov    0x10(%r11),%esi              ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - java.util.AbstractMap$SimpleImmutableEntry::equals@29 (line 850)
   0.00%     0x00007f3e4adf2495:   data16 data16 nopw 0x0(%rax,%rax,1) ; ImmutableOopMap {rbx=Oop rsi=NarrowOop r11=Oop }
                                                                       ;*ireturn {reexecute=1 rethrow=0 return_oop=0}
                                                                       ; - (reexecute) java.util.AbstractMap::eq@21 (line 584)
                                                                       ; - java.util.AbstractMap$SimpleImmutableEntry::equals@22 (line 850)
             0x00007f3e4adf24a0:   cmpl   $0x102b2b0,0x8(,%rsi,8)      ; implicit exception: dispatches to 0x00007f3e4adf27bc
                                                                       ;   {metadata(&apos;com/ionutbalosin/jvm/performance/benchmarks/miscellaneous/publicationstatistics/model/Author&apos;)}
   0.00%     0x00007f3e4adf24ab:   jne    0x00007f3e4adf268b           ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - java.util.AbstractMap::eq@18 (line 584)
                                                                       ; - java.util.AbstractMap$SimpleImmutableEntry::equals@38 (line 851)
   0.00%     0x00007f3e4adf24b1:   mov    0x10(%rbx),%edx              ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - java.util.AbstractMap$SimpleImmutableEntry::getValue@1 (line 807)
                                                                       ; - java.util.AbstractMap$SimpleImmutableEntry::equals@33 (line 851)
   0.01%     0x00007f3e4adf24b4:   cmp    %esi,%edx
             0x00007f3e4adf24b6:   je     0x00007f3e4adf2568           ;*if_acmpne {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.model.Author::equals@2 (line 45)
                                                                       ; - java.util.AbstractMap::eq@18 (line 584)
                                                                       ; - java.util.AbstractMap$SimpleImmutableEntry::equals@38 (line 851)
   0.00%     0x00007f3e4adf24bc:   nopl   0x0(%rax)                    ; ImmutableOopMap {rdx=NarrowOop rbx=Oop rsi=NarrowOop r11=Oop }
                                                                       ;*ireturn {reexecute=1 rethrow=0 return_oop=0}
                                                                       ; - (reexecute) java.util.AbstractMap::eq@21 (line 584)
                                                                       ; - java.util.AbstractMap$SimpleImmutableEntry::equals@22 (line 850)
   0.00%     0x00007f3e4adf24c0:   cmpl   $0x102b2b0,0x8(,%rdx,8)      ; implicit exception: dispatches to 0x00007f3e4adf27df
                                                                       ;   {metadata(&apos;com/ionutbalosin/jvm/performance/benchmarks/miscellaneous/publicationstatistics/model/Author&apos;)}
   0.14%     0x00007f3e4adf24cb:   jne    0x00007f3e4adf2679           ;*if_acmpeq {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.model.Author::equals@19 (line 46)
                                                                       ; - java.util.AbstractMap::eq@18 (line 584)
                                                                       ; - java.util.AbstractMap$SimpleImmutableEntry::equals@38 (line 851)
   0.00%     0x00007f3e4adf24d1:   mov    0xc(,%rsi,8),%esi            ;*getfield name {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.model.Author::equals@30 (line 48)
                                                                       ; - java.util.AbstractMap::eq@18 (line 584)
                                                                       ; - java.util.AbstractMap$SimpleImmutableEntry::equals@38 (line 851)
             0x00007f3e4adf24d8:   mov    0xc(,%rdx,8),%edx            ;*getfield name {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.model.Author::equals@34 (line 48)
                                                                       ; - java.util.AbstractMap::eq@18 (line 584)
                                                                       ; - java.util.AbstractMap$SimpleImmutableEntry::equals@38 (line 851)
....................................................................................................
  22.58%  <total for region 1>

....[Hottest Region 2]..............................................................................
jvmci, level 4, java.util.stream.Collectors$$Lambda.0x00007f3dd003ca88::accept, version 3, compile id 1410 

          [Disassembly]
          --------------------------------------------------------------------------------
          [Constant Pool (empty)]
          --------------------------------------------------------------------------------
          [Entry Point]
            # {method} {0x00007f3dcb31e5b8} &apos;accept&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;)V&apos; in &apos;java/util/stream/Collectors$$Lambda+0x00007f3dd003ca88&apos;
            # this:     rsi:rsi   = &apos;java/util/stream/Collectors$$Lambda+0x00007f3dd003ca88&apos;
            # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
            # parm1:    rcx:rcx   = &apos;java/lang/Object&apos;
            #           [sp+0xa0]  (sp of caller)
   0.03%    0x00007f3e4adfbfc0:   mov    0x8(%rsi),%r10d
   0.03%    0x00007f3e4adfbfc4:   movabs $0x7f3dcf000000,%r12
   0.02%    0x00007f3e4adfbfce:   add    %r12,%r10
   0.02%    0x00007f3e4adfbfd1:   xor    %r12,%r12
   0.01%    0x00007f3e4adfbfd4:   cmp    %r10,%rax
            0x00007f3e4adfbfd7:   jne    0x00007f3e4a764080           ;   {runtime_call ic_miss_stub}
   0.04%    0x00007f3e4adfbfdd:   data16 xchg %ax,%ax
          [Verified Entry Point]
   0.02%    0x00007f3e4adfbfe0:   mov    %eax,-0x14000(%rsp)
   0.03%    0x00007f3e4adfbfe7:   sub    $0x98,%rsp
   0.03%    0x00007f3e4adfbfee:   xchg   %ax,%ax
   0.01%    0x00007f3e4adfbff0:   cmpl   $0x0,0x20(%r15)
   0.03%    0x00007f3e4adfbff8:   jne    0x00007f3e4adfd068
   0.01%    0x00007f3e4adfbffe:   mov    %rbp,0x90(%rsp)
   0.04%    0x00007f3e4adfc006:   mov    %rsi,%r10
   0.01%    0x00007f3e4adfc009:   mov    %rdx,0x50(%rsp)
   0.02%    0x00007f3e4adfc00e:   mov    %rcx,0x48(%rsp)              ; ImmutableOopMap {rcx=Oop rdx=Oop r10=Oop [72]=Oop [80]=Oop }
                                                                      ;*aload_0 {reexecute=1 rethrow=0 return_oop=0}
                                                                      ; - (reexecute) java.util.stream.Collectors$$Lambda/0x00007f3dd003ca88::accept@0
   0.00%    0x00007f3e4adfc013:   cmpl   $0x8e280,0x8(%rdx)           ; implicit exception: dispatches to 0x00007f3e4adfd0a6
                                                                      ;   {metadata(&apos;java/util/HashMap&apos;)}
   0.04%    0x00007f3e4adfc01a:   jne    0x00007f3e4adfceab           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - java.util.stream.Collectors$$Lambda/0x00007f3dd003ca88::accept@13
   0.01%    0x00007f3e4adfc020:   mov    0xc(%r10),%esi               ; ImmutableOopMap {rcx=Oop rdx=Oop r10=Oop [72]=Oop [80]=Oop }
                                                                      ;*aload_0 {reexecute=1 rethrow=0 return_oop=0}
                                                                      ; - (reexecute) java.util.stream.Collectors$$Lambda/0x00007f3dd003ca88::accept@0
   0.02%    0x00007f3e4adfc024:   mov    0x8(,%rsi,8),%r11d           ; implicit exception: dispatches to 0x00007f3e4adfd0cd
   0.04%    0x00007f3e4adfc02c:   mov    0x14(%r10),%r8d              ;*getfield arg$3 {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - java.util.stream.Collectors$$Lambda/0x00007f3dd003ca88::accept@9
   0.02%    0x00007f3e4adfc030:   mov    %r8d,0x44(%rsp)
   0.01%    0x00007f3e4adfc035:   mov    0x10(%r10),%r9d
   0.01%    0x00007f3e4adfc039:   mov    %r9d,0x40(%rsp)
   0.03%    0x00007f3e4adfc03e:   mov    %r9d,%ebx
   0.02%    0x00007f3e4adfc041:   shl    $0x3,%rbx                    ;*getfield arg$2 {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - java.util.stream.Collectors$$Lambda/0x00007f3dd003ca88::accept@5
   0.01%    0x00007f3e4adfc045:   mov    %r8d,%edi
   0.01%    0x00007f3e4adfc048:   shl    $0x3,%rdi
   0.03%    0x00007f3e4adfc04c:   cmp    $0x103bb60,%r11d             ;   {metadata(&apos;java/util/function/Function$$Lambda+0x00007f3dd003bb60&apos;)}
            0x00007f3e4adfc053:   jne    0x00007f3e4adfc6bb           ;*invokeinterface apply {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - java.util.stream.Collectors::lambda$groupingBy$53@3 (line 1105)
                                                                      ; - java.util.stream.Collectors$$Lambda/0x00007f3dd003ca88::accept@17
   0.01%    0x00007f3e4adfc059:   mov    %rdi,0x38(%rsp)
   0.01%    0x00007f3e4adfc05e:   mov    %rbx,0x30(%rsp)              ; ImmutableOopMap {rcx=Oop r10=Oop [48]=Oop [56]=Oop [64]=NarrowOop [68]=NarrowOop [72]=Oop [80]=Oop }
                                                                      ;*aload_0 {reexecute=1 rethrow=0 return_oop=0}
                                                                      ; - (reexecute) java.util.stream.Collectors$$Lambda/0x00007f3dd003ca88::accept@0
   0.01%    0x00007f3e4adfc063:   test   %eax,(%rcx)                  ; implicit exception: dispatches to 0x00007f3e4adfd0f0
   0.03%    0x00007f3e4adfc065:   mov    %rcx,%rsi                    ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - java.util.HashMap::hash@9 (line 338)
                                                                      ; - java.util.HashMap::computeIfAbsent@13 (line 1199)
                                                                      ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                      ; - java.util.stream.Collectors$$Lambda/0x00007f3dd003ca88::accept@17
   0.02%    0x00007f3e4adfc068:   nop
   0.01%    0x00007f3e4adfc069:   movabs $0xffffffffffffffff,%rax
   0.01%    0x00007f3e4adfc073:   call   0x00007f3e4a764680           ; ImmutableOopMap {[48]=Oop [56]=Oop [64]=NarrowOop [68]=NarrowOop [72]=Oop [80]=Oop }
                                                                      ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - java.util.HashMap::hash@9 (line 338)
                                                                      ; - java.util.HashMap::computeIfAbsent@13 (line 1199)
                                                                      ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                      ; - java.util.stream.Collectors$$Lambda/0x00007f3dd003ca88::accept@17
                                                                      ;   {virtual_call}
   0.03%    0x00007f3e4adfc078:   nopl   0x3000368(%rax,%rax,1)       ;   {other}
            0x00007f3e4adfc080:   mov    0x50(%rsp),%rdx
   0.03%    0x00007f3e4adfc085:   mov    0x1c(%rdx),%esi              ;*getfield threshold {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - java.util.HashMap::computeIfAbsent@31 (line 1204)
                                                                      ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                      ; - java.util.stream.Collectors$$Lambda/0x00007f3dd003ca88::accept@17
   0.07%    0x00007f3e4adfc088:   mov    %eax,%r10d
            0x00007f3e4adfc08b:   shr    $0x10,%r10d                  ;*iushr {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - java.util.HashMap::hash@17 (line 338)
                                                                      ; - java.util.HashMap::computeIfAbsent@13 (line 1199)
                                                                      ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                      ; - java.util.stream.Collectors$$Lambda/0x00007f3dd003ca88::accept@17
   0.02%    0x00007f3e4adfc08f:   xor    %eax,%r10d                   ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - java.util.HashMap::hash@18 (line 338)
                                                                      ; - java.util.HashMap::computeIfAbsent@13 (line 1199)
                                                                      ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                      ; - java.util.stream.Collectors$$Lambda/0x00007f3dd003ca88::accept@17
   0.00%    0x00007f3e4adfc092:   cmp    0x14(%rdx),%esi
            0x00007f3e4adfc095:   jl     0x00007f3e4adfca2e           ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - java.util.HashMap::computeIfAbsent@34 (line 1204)
                                                                      ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                      ; - java.util.stream.Collectors$$Lambda/0x00007f3dd003ca88::accept@17
   0.03%    0x00007f3e4adfc09b:   mov    0x24(%rdx),%esi              ;*getfield table {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - java.util.HashMap::computeIfAbsent@38 (line 1204)
                                                                      ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                      ; - java.util.stream.Collectors$$Lambda/0x00007f3dd003ca88::accept@17
   0.01%    0x00007f3e4adfc09e:   xchg   %ax,%ax
   0.02%    0x00007f3e4adfc0a0:   test   %esi,%esi
            0x00007f3e4adfc0a2:   je     0x00007f3e4adfcb7a           ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - java.util.HashMap::computeIfAbsent@44 (line 1204)
                                                                      ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                      ; - java.util.stream.Collectors$$Lambda/0x00007f3dd003ca88::accept@17
   0.02%    0x00007f3e4adfc0a8:   mov    0xc(,%rsi,8),%r11d           ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - java.util.HashMap::computeIfAbsent@49 (line 1204)
                                                                      ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                      ; - java.util.stream.Collectors$$Lambda/0x00007f3dd003ca88::accept@17
   0.41%    0x00007f3e4adfc0b0:   test   %r11d,%r11d
            0x00007f3e4adfc0b3:   je     0x00007f3e4adfcf38           ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - java.util.HashMap::computeIfAbsent@53 (line 1204)
                                                                      ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                      ; - java.util.stream.Collectors$$Lambda/0x00007f3dd003ca88::accept@17
   0.03%    0x00007f3e4adfc0b9:   shl    $0x3,%rsi                    ;*getfield table {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - java.util.HashMap::computeIfAbsent@38 (line 1204)
                                                                      ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                      ; - java.util.stream.Collectors$$Lambda/0x00007f3dd003ca88::accept@17
   0.02%    0x00007f3e4adfc0bd:   mov    0x48(%rsp),%r8               ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - java.util.HashMap::computeIfAbsent@66 (line 1207)
                                                                      ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                      ; - java.util.stream.Collectors$$Lambda/0x00007f3dd003ca88::accept@17
            0x00007f3e4adfc0c2:   mov    %rsi,0x20(%rsp)
   0.01%    0x00007f3e4adfc0c7:   mov    %r10d,0x84(%rsp)
   0.04%    0x00007f3e4adfc0cf:   mov    %r8,0x28(%rsp)
   0.02%    0x00007f3e4adfc0d4:   mov    0xc(%rsi),%r9d               ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - java.util.HashMap::computeIfAbsent@77 (line 1207)
                                                                      ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                      ; - java.util.stream.Collectors$$Lambda/0x00007f3dd003ca88::accept@17
   0.01%    0x00007f3e4adfc0d8:   mov    0x8(%rsi),%ecx               ;*aastore {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - java.util.HashMap::computeIfAbsent@289 (line 1240)
                                                                      ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                      ; - java.util.stream.Collectors$$Lambda/0x00007f3dd003ca88::accept@17
   0.01%    0x00007f3e4adfc0db:   mov    %ecx,0x80(%rsp)
   0.05%    0x00007f3e4adfc0e2:   mov    %r11d,%ebx
   0.02%    0x00007f3e4adfc0e5:   dec    %ebx                         ;*isub {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - java.util.HashMap::computeIfAbsent@71 (line 1207)
                                                                      ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                      ; - java.util.stream.Collectors$$Lambda/0x00007f3dd003ca88::accept@17
            0x00007f3e4adfc0e7:   and    %r10d,%ebx                   ;*iand {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - java.util.HashMap::computeIfAbsent@73 (line 1207)
                                                                      ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                      ; - java.util.stream.Collectors$$Lambda/0x00007f3dd003ca88::accept@17
   0.01%    0x00007f3e4adfc0ea:   mov    %ebx,0x7c(%rsp)
   0.04%    0x00007f3e4adfc0ee:   cmp    %ebx,%r9d
            0x00007f3e4adfc0f1:   jbe    0x00007f3e4adfcfe1           ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - java.util.HashMap::computeIfAbsent@77 (line 1207)
                                                                      ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                      ; - java.util.stream.Collectors$$Lambda/0x00007f3dd003ca88::accept@17
   0.02%    0x00007f3e4adfc0f7:   mov    0x44(%rsp),%r11d
            0x00007f3e4adfc0fc:   nopl   0x0(%rax)
   0.01%    0x00007f3e4adfc100:   test   %r11d,%r11d
            0x00007f3e4adfc103:   je     0x00007f3e4adfc42b
   0.03%    0x00007f3e4adfc109:   mov    0x8(,%r11,8),%r9d
   0.04%    0x00007f3e4adfc111:   movabs $0x7f3dcf000000,%rdi
            0x00007f3e4adfc11b:   lea    (%rdi,%r9,1),%r9
   0.01%    0x00007f3e4adfc11f:   mov    %r9,0x70(%rsp)               ;*invokeinterface accept {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - java.util.stream.Collectors::lambda$groupingBy$53@37 (line 1107)
                                                                      ; - java.util.stream.Collectors$$Lambda/0x00007f3dd003ca88::accept@17
   0.04%    0x00007f3e4adfc124:   mov    0x10(%rsi,%rbx,4),%edi
   6.58%    0x00007f3e4adfc128:   mov    %edi,0x1c(%rsp)
   0.11%    0x00007f3e4adfc12c:   mov    %edi,%eax
            0x00007f3e4adfc12e:   shl    $0x3,%rax                    ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - java.util.HashMap::computeIfAbsent@77 (line 1207)
                                                                      ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                      ; - java.util.stream.Collectors$$Lambda/0x00007f3dd003ca88::accept@17
            0x00007f3e4adfc132:   mov    %rax,0x10(%rsp)
   0.06%    0x00007f3e4adfc137:   movabs $0x7f3dd003c1c8,%rbp         ;   {metadata(&apos;java/util/stream/Collectors$$Lambda+0x00007f3dd003c1c8&apos;)}
            0x00007f3e4adfc141:   test   %edi,%edi
            0x00007f3e4adfc143:   je     0x00007f3e4adfc225
   0.10%    0x00007f3e4adfc149:   cmpl   $0x1a8490,0x8(,%rdi,8)       ;   {metadata(&apos;java/util/HashMap$TreeNode&apos;)}
   9.25%    0x00007f3e4adfc154:   je     0x00007f3e4adfccfb           ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - java.util.HashMap::computeIfAbsent@169 (line 1222)
                                                                      ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                      ; - java.util.stream.Collectors$$Lambda/0x00007f3dd003ca88::accept@17
   0.05%    0x00007f3e4adfc15a:   mov    %rax,%r9
            0x00007f3e4adfc15d:   mov    $0x0,%r11d
            0x00007f3e4adfc163:   jmp    0x00007f3e4adfc1a5           ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - java.util.HashMap::computeIfAbsent@114 (line 1213)
                                                                      ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                      ; - java.util.stream.Collectors$$Lambda/0x00007f3dd003ca88::accept@17
            0x00007f3e4adfc168:   data16 data16 nopw 0x0(%rax,%rax,1)
            0x00007f3e4adfc173:   data16 data16 xchg %ax,%ax
....................................................................................................
  17.94%  <total for region 2>

....[Hottest Region 3]..............................................................................
jvmci, level 4, java.util.HashMap::resize, version 3, compile id 1459 

                                  0x00007f3e4adef060:   cmp    %ebx,%r9d
                                  0x00007f3e4adef063:   jbe    0x00007f3e4adeff68           ;*aastore {reexecute=0 rethrow=0 return_oop=0}
                                                                                            ; - java.util.HashMap::resize@346 (line 748)
                                  0x00007f3e4adef069:   mov    %ebx,0x30(%rsp)
                                  0x00007f3e4adef06d:   mov    %rbp,(%rsp)
                                  0x00007f3e4adef071:   mov    %rdi,0x28(%rsp)
                                  0x00007f3e4adef076:   mov    %r9d,%r10d
                                  0x00007f3e4adef079:   dec    %r10d                        ;*isub {reexecute=0 rethrow=0 return_oop=0}
                                                                                            ; - java.util.HashMap::resize@190 (line 718)
                                  0x00007f3e4adef07c:   mov    %r10d,0x24(%rsp)
   0.00%                          0x00007f3e4adef081:   mov    $0x0,%eax
                                  0x00007f3e4adef086:   data16 nopw 0x0(%rax,%rax,1)        ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                                                            ; - java.util.HashMap::resize@151 (line 713)
   0.05%   ↗   ↗       ↗          0x00007f3e4adef090:   cmp    %eax,%ebx
           │   │       │          0x00007f3e4adef092:   jbe    0x00007f3e4adefd10           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
           │   │       │                                                                    ; - java.util.HashMap::resize@154 (line 713)
   0.02%   │   │       │          0x00007f3e4adef098:   mov    0x10(%r11,%rax,4),%edx       ;*aaload {reexecute=0 rethrow=0 return_oop=0}
           │   │       │                                                                    ; - java.util.HashMap::resize@160 (line 715)
   0.11%   │   │       │          0x00007f3e4adef09d:   mov    %eax,%r14d
   0.03%   │   │       │          0x00007f3e4adef0a0:   inc    %r14d                        ;*iinc {reexecute=0 rethrow=0 return_oop=0}
           │   │       │                                                                    ; - java.util.HashMap::resize@347 (line 713)
   0.03%   │   │       │          0x00007f3e4adef0a3:   test   %edx,%edx
          ╭│   │       │          0x00007f3e4adef0a5:   jne    0x00007f3e4adef0b9           ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
          ││   │       │                                                                    ; - java.util.HashMap::resize@164 (line 715)
   0.09%  ││   │       │          0x00007f3e4adef0ab:   mov    0x458(%r15),%rsi             ; ImmutableOopMap {rbp=Oop r11=Oop r13=Oop [0]=Oop [8]=Oop [16]=Oop }
          ││   │       │                                                                    ;*iload {reexecute=1 rethrow=0 return_oop=0}
          ││   │       │                                                                    ; - (reexecute) java.util.HashMap::resize@151 (line 713)
   0.09%  ││   │       │          0x00007f3e4adef0b2:   test   %eax,(%rsi)                  ;   {poll}
   0.09%  ││   │       │          0x00007f3e4adef0b4:   mov    %r14d,%eax
   0.01%  │╰   │       │          0x00007f3e4adef0b7:   jmp    0x00007f3e4adef090           ;*iload {reexecute=0 rethrow=0 return_oop=0}
          │    │       │                                                                    ; - java.util.HashMap::resize@151 (line 713)
   0.06%  ↘    │       │          0x00007f3e4adef0b9:   nopl   0x0(%rax)
   0.03%       │       │          0x00007f3e4adef0c0:   cmpb   $0x0,0x40(%r15)
   0.13%       │       │          0x00007f3e4adef0c5:   jne    0x00007f3e4adef5cf
   0.04%       │       │          0x00007f3e4adef0cb:   mov    %eax,0x20(%rsp)
   0.01%       │       │          0x00007f3e4adef0cf:   mov    %r12d,0x10(%r11,%rax,4)      ;*aastore {reexecute=0 rethrow=0 return_oop=0}
               │       │                                                                    ; - java.util.HashMap::resize@171 (line 716)
   0.03%       │       │          0x00007f3e4adef0d4:   mov    0xc(,%rdx,8),%esi            ;*getfield hash {reexecute=0 rethrow=0 return_oop=0}
               │       │                                                                    ; - java.util.HashMap::resize@184 (line 718)
   3.38%       │       │          0x00007f3e4adef0db:   mov    0x18(,%rdx,8),%ecx           ;*getfield next {reexecute=0 rethrow=0 return_oop=0}
               │       │                                                                    ; - java.util.HashMap::resize@174 (line 717)
   0.23%       │       │          0x00007f3e4adef0e2:   mov    %edx,%r8d
   0.01%       │       │          0x00007f3e4adef0e5:   shl    $0x3,%r8                     ;*aaload {reexecute=0 rethrow=0 return_oop=0}
               │       │                                                                    ; - java.util.HashMap::resize@160 (line 715)
   0.01%       │       │          0x00007f3e4adef0e9:   test   %ecx,%ecx
            ╭  │       │          0x00007f3e4adef0eb:   jne    0x00007f3e4adef165           ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
            │  │       │                                                                    ; - java.util.HashMap::resize@177 (line 717)
   0.10%    │  │       │          0x00007f3e4adef0f1:   mov    %r10d,%ecx
   0.01%    │  │       │          0x00007f3e4adef0f4:   and    %esi,%ecx                    ;*iand {reexecute=0 rethrow=0 return_oop=0}
            │  │       │                                                                    ; - java.util.HashMap::resize@191 (line 718)
   0.03%    │  │       │          0x00007f3e4adef0f6:   cmp    %ecx,%r9d
            │  │       │          0x00007f3e4adef0f9:   jbe    0x00007f3e4adefffe
   0.02%    │  │       │          0x00007f3e4adef0ff:   nop
   0.02%    │  │       │          0x00007f3e4adef100:   cmpb   $0x0,0x40(%r15)
   0.04%    │  │       │          0x00007f3e4adef105:   jne    0x00007f3e4adef77d
   0.01%    │  │       │          0x00007f3e4adef10b:   mov    %edx,0x10(%rbp,%rcx,4)
   0.05%    │  │       │          0x00007f3e4adef10f:   lea    0x10(%rbp,%rcx,4),%rsi
            │  │       │          0x00007f3e4adef114:   xor    %r8,%rsi
   0.00%    │  │       │          0x00007f3e4adef117:   nopw   0x0(%rax,%rax,1)
   0.01%    │  │       │          0x00007f3e4adef120:   test   $0xffffffffffe00000,%rsi
            │╭ │       │          0x00007f3e4adef127:   je     0x00007f3e4adef14a
   0.02%    ││ │       │          0x00007f3e4adef12d:   test   %r8,%r8
            ││╭│       │          0x00007f3e4adef130:   je     0x00007f3e4adef14a
   0.02%    ││││       │          0x00007f3e4adef136:   lea    0x10(%rbp,%rcx,4),%rsi
   0.01%    ││││       │          0x00007f3e4adef13b:   shr    $0x9,%rsi
   0.03%    ││││       │          0x00007f3e4adef13f:   nop
   0.02%    ││││       │          0x00007f3e4adef140:   cmpb   $0x2,(%rsi,%rdi,1)
   0.06%    ││││       │          0x00007f3e4adef144:   jne    0x00007f3e4adef7b3           ;*aastore {reexecute=0 rethrow=0 return_oop=0}
            ││││       │                                                                    ; - java.util.HashMap::resize@194 (line 718)
   0.02%    │↘↘│       │          0x00007f3e4adef14a:   mov    0x458(%r15),%rsi             ; ImmutableOopMap {rbp=Oop r8=Oop r13=Oop [0]=Oop [8]=Oop [16]=Oop }
            │  │       │                                                                    ;*goto {reexecute=1 rethrow=0 return_oop=0}
            │  │       │                                                                    ; - (reexecute) java.util.HashMap::resize@195 (line 718)
   0.00%    │  │       │          0x00007f3e4adef151:   test   %eax,(%rsi)                  ;   {poll}
   0.02%    │  │       │          0x00007f3e4adef153:   mov    %r14d,%eax
   0.00%    │  │       │          0x00007f3e4adef156:   mov    0x24(%rsp),%r10d
   0.03%    │  │       │          0x00007f3e4adef15b:   mov    0x8(%rsp),%r11
   0.00%    │  ╰       │          0x00007f3e4adef160:   jmp    0x00007f3e4adef090
   0.11%    ↘          │          0x00007f3e4adef165:   cmpl   $0x1a8490,0x8(,%rdx,8)       ;   {metadata(&apos;java/util/HashMap$TreeNode&apos;)}
   0.15%               │          0x00007f3e4adef170:   je     0x00007f3e4adefc7a           ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                       │                                                                    ; - java.util.HashMap::resize@347 (line 713)
   0.02%               │          0x00007f3e4adef176:   test   %esi,%ebx
                ╭      │          0x00007f3e4adef178:   jne    0x00007f3e4adef2d4           ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                │      │                                                                    ; - java.util.HashMap::resize@249 (line 727)
   0.01%        │      │          0x00007f3e4adef17e:   mov    %r8,%rdx
   0.00%        │      │          0x00007f3e4adef181:   mov    $0x0,%r8                     ;*aload {reexecute=0 rethrow=0 return_oop=0}
                │      │                                                                    ; - java.util.HashMap::resize@301 (line 741)
   0.02%        │      │↗         0x00007f3e4adef188:   mov    0x18(,%rcx,8),%esi           ;*getfield next {reexecute=0 rethrow=0 return_oop=0}
                │      ││                                                                   ; - java.util.HashMap::resize@237 (line 726)
   2.67%        │      ││         0x00007f3e4adef18f:   mov    %ecx,%eax
                │      ││         0x00007f3e4adef191:   shl    $0x3,%rax                    ;*getfield next {reexecute=0 rethrow=0 return_oop=0}
                │      ││                                                                   ; - java.util.HashMap::resize@174 (line 717)
   0.00%        │      ││         0x00007f3e4adef195:   data16 data16 nopw 0x0(%rax,%rax,1)
   0.00%        │      ││         0x00007f3e4adef1a0:   test   %ebx,0xc(,%rcx,8)
                │╭     ││         0x00007f3e4adef1a7:   jne    0x00007f3e4adef2e0           ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                ││     ││                                                                   ; - java.util.HashMap::resize@249 (line 727)
   0.12%        ││     ││         0x00007f3e4adef1ad:   test   %rdx,%rdx
                ││     ││         0x00007f3e4adef1b0:   jne    0x00007f3e4adef605           ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                ││     ││                                                                   ; - java.util.HashMap::resize@254 (line 728)
   0.00%        ││     ││         0x00007f3e4adef1b6:   mov    %r14d,0x1c(%rsp)
   0.00%        ││     ││         0x00007f3e4adef1bb:   mov    %r8,%r10
                ││     ││         0x00007f3e4adef1be:   mov    %esi,%r11d
                ││     ││         0x00007f3e4adef1c1:   mov    %rax,%rsi                    ;*aload {reexecute=0 rethrow=0 return_oop=0}
                ││     ││                                                                   ; - java.util.HashMap::resize@301 (line 741)
   0.00%        ││     ││↗        0x00007f3e4adef1c4:   test   %r11d,%r11d
                ││╭    │││        0x00007f3e4adef1c7:   jne    0x00007f3e4adef305           ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                │││    │││                                                                  ; - java.util.HashMap::resize@306 (line 741)
   0.01%        │││    │││        0x00007f3e4adef1cd:   mov    %r10,%r11
   0.01%        │││    │││        0x00007f3e4adef1d0:   mov    %rsi,%r10                    ;*aload {reexecute=0 rethrow=0 return_oop=0}
                │││    │││                                                                  ; - java.util.HashMap::resize@309 (line 742)
   0.02%        │││    │││        0x00007f3e4adef1d3:   test   %r10,%r10
                │││    │││        0x00007f3e4adef1d6:   je     0x00007f3e4adef65d           ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                │││    │││                                                                  ; - java.util.HashMap::resize@311 (line 742)
   0.01%        │││    │││        0x00007f3e4adef1dc:   nopl   0x0(%rax)
   0.00%        │││    │││        0x00007f3e4adef1e0:   cmpb   $0x0,0x40(%r15)
   0.03%        │││    │││        0x00007f3e4adef1e5:   jne    0x00007f3e4adef80f
   0.01%        │││    │││        0x00007f3e4adef1eb:   mov    %r12d,0x18(%r10)             ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                │││    │││                                                                  ; - java.util.HashMap::resize@317 (line 743)
   0.00%        │││    │││        0x00007f3e4adef1ef:   cmpb   $0x0,0x40(%r15)
                │││    │││        0x00007f3e4adef1f4:   jne    0x00007f3e4adef7cf
   0.01%        │││    │││        0x00007f3e4adef1fa:   mov    0x20(%rsp),%r10d
   0.01%        │││    │││        0x00007f3e4adef1ff:   mov    (%rsp),%rbp
   0.00%        │││    │││        0x00007f3e4adef203:   mov    %rax,%rsi
                │││    │││        0x00007f3e4adef206:   shr    $0x3,%rsi
   0.00%        │││    │││        0x00007f3e4adef20a:   mov    %esi,0x10(%rbp,%r10,4)
   0.05%        │││    │││        0x00007f3e4adef20f:   lea    0x10(%rbp,%r10,4),%rsi
                │││    │││        0x00007f3e4adef214:   xor    %rax,%rsi
   0.00%        │││    │││        0x00007f3e4adef217:   nopw   0x0(%rax,%rax,1)
   0.00%        │││    │││        0x00007f3e4adef220:   test   $0xffffffffffe00000,%rsi
                │││╭   │││        0x00007f3e4adef227:   je     0x00007f3e4adef24a
   0.01%        ││││   │││        0x00007f3e4adef22d:   test   %rax,%rax
                ││││╭  │││        0x00007f3e4adef230:   je     0x00007f3e4adef24a
   0.00%        │││││  │││        0x00007f3e4adef236:   lea    0x10(%rbp,%r10,4),%rsi
                │││││  │││        0x00007f3e4adef23b:   shr    $0x9,%rsi
   0.01%        │││││  │││        0x00007f3e4adef23f:   nop
   0.02%        │││││  │││        0x00007f3e4adef240:   cmpb   $0x2,(%rsi,%rdi,1)
   0.01%        │││││  │││        0x00007f3e4adef244:   jne    0x00007f3e4adef845           ;*aastore {reexecute=0 rethrow=0 return_oop=0}
                │││││  │││                                                                  ; - java.util.HashMap::resize@326 (line 744)
   0.02%        │││↘↘  │││        0x00007f3e4adef24a:   test   %r11,%r11
                │││    │││        0x00007f3e4adef24d:   je     0x00007f3e4adef6f2           ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                │││    │││                                                                  ; - java.util.HashMap::resize@329 (line 746)
   0.00%        │││    │││        0x00007f3e4adef253:   cmpb   $0x0,0x40(%r15)
   0.00%        │││    │││        0x00007f3e4adef258:   jne    0x00007f3e4adef859
                │││    │││        0x00007f3e4adef25e:   mov    %r12d,0x18(%r11)             ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                │││    │││                                                                  ; - java.util.HashMap::resize@335 (line 747)
   0.01%        │││    │││        0x00007f3e4adef262:   mov    %r10d,%eax
   0.01%        │││    │││        0x00007f3e4adef265:   add    %ebx,%eax                    ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                │││    │││                                                                  ; - java.util.HashMap::resize@343 (line 748)
                │││    │││        0x00007f3e4adef267:   cmpb   $0x0,0x40(%r15)              ;   {no_reloc}
                │││    │││        0x00007f3e4adef26c:   jne    0x00007f3e4adef88f
   0.00%        │││    │││        0x00007f3e4adef272:   mov    %r8,%rsi
   0.00%        │││    │││        0x00007f3e4adef275:   shr    $0x3,%rsi
                │││    │││        0x00007f3e4adef279:   mov    %esi,0x10(%rbp,%rax,4)
   0.00%        │││    │││        0x00007f3e4adef27d:   lea    0x10(%rbp,%rax,4),%rsi
                │││    │││        0x00007f3e4adef282:   xor    %r8,%rsi
   0.00%        │││    │││        0x00007f3e4adef285:   test   $0xffffffffffe00000,%rsi
                │││  ╭ │││        0x00007f3e4adef28c:   je     0x00007f3e4adef2ae
   0.00%        │││  │ │││        0x00007f3e4adef292:   test   %r8,%r8
                │││  │╭│││        0x00007f3e4adef295:   je     0x00007f3e4adef2ae
                │││  │││││        0x00007f3e4adef29b:   lea    0x10(%rbp,%rax,4),%rsi
   0.01%        │││  │││││        0x00007f3e4adef2a0:   shr    $0x9,%rsi
   0.00%        │││  │││││        0x00007f3e4adef2a4:   cmpb   $0x2,(%rsi,%rdi,1)
   0.00%        │││  │││││        0x00007f3e4adef2a8:   jne    0x00007f3e4adef8ef           ;*aastore {reexecute=0 rethrow=0 return_oop=0}
                │││  │││││                                                                  ; - java.util.HashMap::resize@346 (line 748)
   0.00%        │││  ↘↘│││        0x00007f3e4adef2ae:   mov    0x458(%r15),%rsi             ; ImmutableOopMap {rbp=Oop [0]=Oop [8]=Oop [16]=Oop }
                │││    │││                                                                  ;*iinc {reexecute=1 rethrow=0 return_oop=0}
                │││    │││                                                                  ; - (reexecute) java.util.HashMap::resize@347 (line 713)
   0.01%        │││    │││        0x00007f3e4adef2b5:   test   %eax,(%rsi)                  ;   {poll}
                │││    │││        0x00007f3e4adef2b7:   mov    0x1c(%rsp),%eax
                │││    │││        0x00007f3e4adef2bb:   mov    0x24(%rsp),%r10d
   0.00%        │││    │││        0x00007f3e4adef2c0:   mov    0x34(%rsp),%r9d
                │││    │││        0x00007f3e4adef2c5:   mov    0x8(%rsp),%r11
                │││    │││        0x00007f3e4adef2ca:   mov    0x10(%rsp),%r13
                │││    ╰││        0x00007f3e4adef2cf:   jmp    0x00007f3e4adef090           ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                │││     ││                                                                  ; - java.util.HashMap::resize@347 (line 713)
   0.03%        ↘││     ││        0x00007f3e4adef2d4:   mov    $0x0,%rdx
   0.02%         ││     ╰│        0x00007f3e4adef2db:   jmp    0x00007f3e4adef188           ;*aload {reexecute=0 rethrow=0 return_oop=0}
                 ││      │                                                                  ; - java.util.HashMap::resize@301 (line 741)
   0.12%         ↘│      │        0x00007f3e4adef2e0:   test   %r8,%r8
                  │      │        0x00007f3e4adef2e3:   jne    0x00007f3e4adef718           ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                  │      │                                                                  ; - java.util.HashMap::resize@280 (line 735)
   0.01%          │      │        0x00007f3e4adef2e9:   mov    %rax,%r8
                  │      │        0x00007f3e4adef2ec:   mov    %r14d,0x1c(%rsp)
   0.00%          │      │        0x00007f3e4adef2f1:   mov    %rax,%r10
                  │      │        0x00007f3e4adef2f4:   mov    %rdx,%rax
                  │      │        0x00007f3e4adef2f7:   mov    %esi,%r11d
                  │      │        0x00007f3e4adef2fa:   mov    %rdx,%rsi
   0.00%          │      │        0x00007f3e4adef2fd:   data16 xchg %ax,%ax
                  │      ╰        0x00007f3e4adef300:   jmp    0x00007f3e4adef1c4           ;*aload {reexecute=0 rethrow=0 return_oop=0}
                  │                                                                         ; - java.util.HashMap::resize@301 (line 741)
   0.03%          ↘               0x00007f3e4adef305:   shl    $0x3,%r11                    ;*getfield next {reexecute=0 rethrow=0 return_oop=0}
                                                                                            ; - java.util.HashMap::resize@237 (line 726)
   0.03%                          0x00007f3e4adef309:   mov    %r8,%r9
                                  0x00007f3e4adef30c:   mov    %rsi,%r8
   0.00%                  ╭       0x00007f3e4adef30f:   jmp    0x00007f3e4adef34a           ;*aload {reexecute=0 rethrow=0 return_oop=0}
                          │                                                                 ; - java.util.HashMap::resize@235 (line 726)
                          │       0x00007f3e4adef314:   nopl   0x0(%rax,%rax,1)
                          │       0x00007f3e4adef31c:   data16 data16 xchg %ax,%ax          ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                          │                                                                 ; - java.util.HashMap::resize@249 (line 727)
   0.01%                  │ ↗     0x00007f3e4adef320:   test   %r8,%r8
                          │╭│     0x00007f3e4adef323:   jne    0x00007f3e4adef377           ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                          │││                                                               ; - java.util.HashMap::resize@254 (line 728)
   0.00%                  │││     0x00007f3e4adef329:   mov    %r11,%rsi                    ;*aload {reexecute=0 rethrow=0 return_oop=0}
                          │││                                                               ; - java.util.HashMap::resize@301 (line 741)
   0.00%                  │││ ↗↗  0x00007f3e4adef32c:   test   %ecx,%ecx
                          │││ ││  0x00007f3e4adef32e:   je     0x00007f3e4adef5be           ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                          │││ ││                                                            ; - java.util.HashMap::resize@306 (line 741)
   0.02%                  │││ ││  0x00007f3e4adef334:   shl    $0x3,%rcx                    ;*getfield next {reexecute=0 rethrow=0 return_oop=0}
                          │││ ││                                                            ; - java.util.HashMap::resize@237 (line 726)
   0.02%                  │││ ││  0x00007f3e4adef338:   mov    0x458(%r15),%rax             ; ImmutableOopMap {rcx=Oop rsi=Oop r9=Oop r10=Oop r11=Oop [0]=Oop [8]=Oop [16]=Oop }
                          │││ ││                                                            ;*aload {reexecute=1 rethrow=0 return_oop=0}
                          │││ ││                                                            ; - (reexecute) java.util.HashMap::resize@301 (line 741)
   0.02%                  │││ ││  0x00007f3e4adef33f:   test   %eax,(%rax)                  ;   {poll}
   0.03%                  │││ ││  0x00007f3e4adef341:   mov    %rsi,%r8
                          │││ ││  0x00007f3e4adef344:   mov    %r11,%rax
                          │││ ││  0x00007f3e4adef347:   mov    %rcx,%r11                    ; ImmutableOopMap {rax=Oop r8=Oop r9=Oop r10=Oop r11=Oop [0]=Oop [8]=Oop [16]=Oop }
                          │││ ││                                                            ;*aload {reexecute=1 rethrow=0 return_oop=0}
                          │││ ││                                                            ; - (reexecute) java.util.HashMap::resize@235 (line 726)
   0.01%                  ↘││ ││  0x00007f3e4adef34a:   mov    0xc(%r11),%esi               ; implicit exception: dispatches to 0x00007f3e4adf0047
   2.60%                   ││ ││  0x00007f3e4adef34e:   mov    0x18(%r11),%ecx              ;*getfield next {reexecute=0 rethrow=0 return_oop=0}
                           ││ ││                                                            ; - java.util.HashMap::resize@237 (line 726)
   0.13%                   ││ ││  0x00007f3e4adef352:   test   %esi,%ebx
                           │╰ ││  0x00007f3e4adef354:   je     0x00007f3e4adef320           ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                           │  ││                                                            ; - java.util.HashMap::resize@249 (line 727)
   0.01%                   │  ││  0x00007f3e4adef356:   data16 nopw 0x0(%rax,%rax,1)        ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                           │  ││                                                            ; - java.util.HashMap::resize@268 (line 731)
   0.00%                   │  ││  0x00007f3e4adef360:   test   %r10,%r10
                           │ ╭││  0x00007f3e4adef363:   jne    0x00007f3e4adef3d6           ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                           │ │││                                                            ; - java.util.HashMap::resize@280 (line 735)
   0.01%                   │ │││  0x00007f3e4adef369:   mov    %r11,%r10
                           │ │││  0x00007f3e4adef36c:   mov    %r11,%r9
                           │ │││  0x00007f3e4adef36f:   mov    %r8,%rsi
                           │ │││  0x00007f3e4adef372:   mov    %rax,%r11
                           │ │╰│  0x00007f3e4adef375:   jmp    0x00007f3e4adef32c           ;*aload {reexecute=0 rethrow=0 return_oop=0}
                           │ │ │                                                            ; - java.util.HashMap::resize@301 (line 741)
   0.01%                   ↘ │ │  0x00007f3e4adef377:   nopw   0x0(%rax,%rax,1)
                             │ │  0x00007f3e4adef380:   cmpb   $0x0,0x40(%r15)
   0.01%                     │ │  0x00007f3e4adef385:   jne    0x00007f3e4adef439
   0.00%                     │ │  0x00007f3e4adef38b:   mov    %r11,%rsi
   0.00%                     │ │  0x00007f3e4adef38e:   shr    $0x3,%rsi
                             │ │  0x00007f3e4adef392:   mov    %esi,0x18(%r8)
   0.00%                     │ │  0x00007f3e4adef396:   mov    %r8,%rsi
                             │ │  0x00007f3e4adef399:   xor    %r11,%rsi
   0.02%                     │ │  0x00007f3e4adef39c:   nopl   0x0(%rax)
                             │ │  0x00007f3e4adef3a0:   test   $0xffffffffffe00000,%rsi
                             │ │  0x00007f3e4adef3a7:   je     0x00007f3e4adef46f
   0.00%                     │ │  0x00007f3e4adef3ad:   test   %r11,%r11
                             │ │  0x00007f3e4adef3b0:   je     0x00007f3e4adef47a
                             │ │  0x00007f3e4adef3b6:   shr    $0x9,%r8
   0.01%                     │ │  0x00007f3e4adef3ba:   nopw   0x0(%rax,%rax,1)
                             │ │  0x00007f3e4adef3c0:   cmpb   $0x2,(%r8,%rdi,1)
   0.02%                     │ │  0x00007f3e4adef3c5:   jne    0x00007f3e4adef4cf
   0.01%                     │ │  0x00007f3e4adef3cb:   mov    %r11,%rsi
                             │ │  0x00007f3e4adef3ce:   mov    %rax,%r11
                             │ ╰  0x00007f3e4adef3d1:   jmp    0x00007f3e4adef32c           ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                             │                                                              ; - java.util.HashMap::resize@268 (line 731)
   0.00%                     ↘    0x00007f3e4adef3d6:   data16 nopw 0x0(%rax,%rax,1)
   0.01%                          0x00007f3e4adef3e0:   cmpb   $0x0,0x40(%r15)
   0.00%                          0x00007f3e4adef3e5:   jne    0x00007f3e4adef493           ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                                                            ; - java.util.HashMap::resize@294 (line 738)
   0.00%                          0x00007f3e4adef3eb:   mov    %r11,%rsi
                                  0x00007f3e4adef3ee:   shr    $0x3,%rsi                    ;*putfield next {reexecute=0 rethrow=0 return_oop=0}
                                                                                            ; - java.util.HashMap::resize@268 (line 731)
   0.00%                          0x00007f3e4adef3f2:   mov    %esi,0x18(%r10)
   0.00%                          0x00007f3e4adef3f6:   mov    %r10,%rsi
   0.00%                          0x00007f3e4adef3f9:   xor    %r11,%rsi
                                  0x00007f3e4adef3fc:   nopl   0x0(%rax)
                                  0x00007f3e4adef400:   test   $0xffffffffffe00000,%rsi
                                  0x00007f3e4adef407:   je     0x00007f3e4adef485
                                  0x00007f3e4adef40d:   test   %r11,%r11
                                  0x00007f3e4adef410:   je     0x00007f3e4adef4ea
                                  0x00007f3e4adef416:   shr    $0x9,%r10
                                  0x00007f3e4adef41a:   nopw   0x0(%rax,%rax,1)
   0.00%                          0x00007f3e4adef420:   cmpb   $0x2,(%r10,%rdi,1)
   0.01%                          0x00007f3e4adef425:   jne    0x00007f3e4adef4f8
   0.00%                          0x00007f3e4adef42b:   mov    %r11,%r10
....................................................................................................
  11.57%  <total for region 3>

....[Hottest Regions]...............................................................................
  22.58%      jvmci, level 4  java.util.AbstractMap$SimpleImmutableEntry::equals, version 3, compile id 1444 
  17.94%      jvmci, level 4  java.util.stream.Collectors$$Lambda.0x00007f3dd003ca88::accept, version 3, compile id 1410 
  11.57%      jvmci, level 4  java.util.HashMap::resize, version 3, compile id 1459 
   8.06%      jvmci, level 4  java.util.HashMap::replaceAll, version 5, compile id 1545 
   5.27%      jvmci, level 4  java.util.stream.Collectors$$Lambda.0x00007f3dd003ca88::accept, version 3, compile id 1410 
   4.95%      jvmci, level 4  java.util.HashMap$KeySpliterator::forEachRemaining, version 4, compile id 1634 
   4.43%      jvmci, level 4  java.util.HashMap$EntrySpliterator::forEachRemaining, version 8, compile id 1596 
   1.81%                      <unknown> 
   1.36%      jvmci, level 4  java.util.AbstractMap$SimpleImmutableEntry::hashCode, version 2, compile id 1359 
   1.25%                      <unknown> 
   1.08%      jvmci, level 4  java.util.HashMap$KeySpliterator::forEachRemaining, version 4, compile id 1634 
   1.03%      jvmci, level 4  java.util.HashMap$KeySpliterator::forEachRemaining, version 4, compile id 1634 
   0.98%      jvmci, level 4  java.util.AbstractMap$SimpleImmutableEntry::hashCode, version 2, compile id 1359 
   0.92%      jvmci, level 4  java.util.HashMap$KeySpliterator::forEachRemaining, version 4, compile id 1634 
   0.71%      jvmci, level 4  java.util.HashMap::replaceAll, version 5, compile id 1545 
   0.69%      jvmci, level 4  java.util.HashMap$KeySpliterator::forEachRemaining, version 4, compile id 1634 
   0.62%                      <unknown> 
   0.55%      jvmci, level 4  java.util.HashMap$EntrySpliterator::forEachRemaining, version 8, compile id 1596 
   0.49%      jvmci, level 4  java.util.HashMap$KeySpliterator::forEachRemaining, version 4, compile id 1634 
   0.47%      jvmci, level 4  java.util.HashMap::replaceAll, version 5, compile id 1545 
  13.24%  <...other 1092 warm regions...>
....................................................................................................
 100.00%  <totals>

....[Hottest Methods (after inlining)]..............................................................
  23.27%      jvmci, level 4  java.util.stream.Collectors$$Lambda.0x00007f3dd003ca88::accept, version 3, compile id 1410 
  22.70%      jvmci, level 4  java.util.AbstractMap$SimpleImmutableEntry::equals, version 3, compile id 1444 
  12.68%      jvmci, level 4  java.util.HashMap$KeySpliterator::forEachRemaining, version 4, compile id 1634 
  12.09%      jvmci, level 4  java.util.HashMap::resize, version 3, compile id 1459 
   9.24%      jvmci, level 4  java.util.HashMap::replaceAll, version 5, compile id 1545 
   5.02%      jvmci, level 4  java.util.HashMap$EntrySpliterator::forEachRemaining, version 8, compile id 1596 
   4.99%                      <unknown> 
   2.49%      jvmci, level 4  java.util.AbstractMap$SimpleImmutableEntry::hashCode, version 2, compile id 1359 
   2.46%              kernel  [unknown] 
   1.20%      jvmci, level 4  java.util.HashMap$TreeNode::getTreeNode, version 3, compile id 1653 
   0.71%      jvmci, level 4  java.util.HashMap$TreeNode::treeify, version 5, compile id 1582 
   0.69%           libjvm.so  G1ParScanThreadState::trim_queue_to_threshold 
   0.30%      jvmci, level 4  java.util.HashMap$TreeNode::putTreeVal, version 3, compile id 1652 
   0.25%      jvmci, level 4  java.util.HashMap$TreeNode::split, version 4, compile id 1633 
   0.22%           libjvm.so  OopOopIterateBackwardsDispatch<G1ScanEvacuatedObjClosure>::Table::oop_oop_iterate_backwards<InstanceKlass, narrowOop> 
   0.21%      jvmci, level 4  java.util.HashMap$TreeNode::find, version 3, compile id 1501 
   0.18%           libjvm.so  ObjectSynchronizer::FastHashCode 
   0.18%      jvmci, level 4  java.util.stream.Collectors$$Lambda.0x00007f3dd003cf00::apply, version 5, compile id 1743 
   0.11%          ld-2.31.so  __tls_get_addr 
   0.06%           libjvm.so  CompilerOracle::has_option_value<bool> 
   0.95%  <...other 191 warm methods...>
....................................................................................................
 100.00%  <totals>

....[Distribution by Source]........................................................................
  90.47%      jvmci, level 4
   4.99%                    
   2.46%              kernel
   1.68%           libjvm.so
   0.19%        libc-2.31.so
   0.11%          ld-2.31.so
   0.03%  libpthread-2.31.so
   0.03%      hsdis-amd64.so
   0.02%         interpreter
   0.02%         c1, level 3
   0.00%         c1, level 1
   0.00%    perf-2147741.map
   0.00%    Unknown, level 0
....................................................................................................
 100.00%  <totals>



# JMH version: 1.37
# VM version: JDK 21, Java HotSpot(TM) 64-Bit Server VM, 21+35-jvmci-23.1-b15
# VM invoker: /home/gogu/bench_jdks/graalvm-jdk-21+35.1/bin/java
# VM options: -XX:ThreadPriorityPolicy=1 -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCIProduct -XX:-UnlockExperimentalVMOptions -Xms4g -Xmx4g -XX:+AlwaysPreTouch
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark.number_of_publications_per_author

# Run progress: 42.86% complete, ETA 00:16:02
# Fork: 1 of 1
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 63.003 ms/op
# Warmup Iteration   2: 39.307 ms/op
# Warmup Iteration   3: 39.323 ms/op
# Warmup Iteration   4: 39.250 ms/op
# Warmup Iteration   5: 39.205 ms/op
Iteration   1: 39.156 ms/op
Iteration   2: 38.981 ms/op
Iteration   3: 38.945 ms/op
Iteration   4: 39.137 ms/op
Iteration   5: 39.283 ms/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark.number_of_publications_per_author":
  39.100 ±(99.9%) 0.532 ms/op [Average]
  (min, avg, max) = (38.945, 39.100, 39.283), stdev = 0.138
  CI (99.9%): [38.569, 39.632] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark.number_of_publications_per_author:asm":
PrintAssembly processed: 332049 total address lines.
Perf output processed (skipped 62.805 seconds):
 Column 1: cycles (50736 events)

Hottest code regions (>10.00% "cycles" events):
 Event counts are percents of total event count.

....[Hottest Region 1]..............................................................................
jvmci, level 4, java.util.HashMap$KeySpliterator::forEachRemaining, version 4, compile id 1263 

                   0x00007f3a7edd1d7b:   mov    %r14,0xd0(%rsp)
                   0x00007f3a7edd1d83:   vmovss -0x16b(%rip),%xmm1        # 0x00007f3a7edd1c20
                                                                             ;   {section_word}
                   0x00007f3a7edd1d8b:   movabs $0x7f3a0403c7f0,%rdx         ;   {metadata(&apos;java/util/stream/Collectors$$Lambda+0x00007f3a0403c7f0&apos;)}
                   0x00007f3a7edd1d95:   mov    %rsi,%r11
                   0x00007f3a7edd1d98:   mov    %r9d,%r10d
                   0x00007f3a7edd1d9b:   mov    0x98(%rsp),%rsi
                   0x00007f3a7edd1da3:   nopw   0x0(%rax,%rax,1)
                   0x00007f3a7edd1dac:   data16 data16 xchg %ax,%ax          ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                                             ; - java.util.HashMap$KeySpliterator::forEachRemaining@122 (line 1712)
   0.03%   ↗       0x00007f3a7edd1db0:   mov    %r10d,0xcc(%rsp)
   0.12%   │       0x00007f3a7edd1db8:   mov    %r11,0x78(%rsp)
   0.10%   │       0x00007f3a7edd1dbd:   data16 xchg %ax,%ax
   0.11%   │       0x00007f3a7edd1dc0:   test   %r11,%r11
          ╭│       0x00007f3a7edd1dc3:   jne    0x00007f3a7edd1e05           ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
          ││                                                                 ; - java.util.HashMap$KeySpliterator::forEachRemaining@124 (line 1712)
   0.02%  ││       0x00007f3a7edd1dc9:   cmp    %r10d,%edi
          ││       0x00007f3a7edd1dcc:   jbe    0x00007f3a7edd4716
   0.07%  ││       0x00007f3a7edd1dd2:   mov    0x10(%rbx,%r10,4),%edx
   0.35%  ││       0x00007f3a7edd1dd7:   mov    %edx,%r9d
   0.10%  ││       0x00007f3a7edd1dda:   shl    $0x3,%r9                     ;*aaload {reexecute=0 rethrow=0 return_oop=0}
          ││                                                                 ; - java.util.HashMap$KeySpliterator::forEachRemaining@133 (line 1713)
   0.05%  ││       0x00007f3a7edd1dde:   mov    %r10d,%ecx
   0.04%  ││       0x00007f3a7edd1de1:   inc    %ecx                         ;*iinc {reexecute=0 rethrow=0 return_oop=0}
          ││                                                                 ; - java.util.HashMap$KeySpliterator::forEachRemaining@130 (line 1713)
   0.05%  ││       0x00007f3a7edd1de3:   test   %edx,%edx
          ││       0x00007f3a7edd1de5:   jne    0x00007f3a7edd449c           ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
          ││                                                                 ; - java.util.HashMap$KeySpliterator::forEachRemaining@159 (line 1718)
   0.09%  ││       0x00007f3a7edd1deb:   cmp    %ecx,%r8d
          ││       0x00007f3a7edd1dee:   jle    0x00007f3a7edd44e7           ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
          ││                                                                 ; - java.util.HashMap$KeySpliterator::forEachRemaining@164 (line 1718)
   0.06%  ││       0x00007f3a7edd1df4:   mov    0x458(%r15),%rdx             ; ImmutableOopMap {rbx=Oop rsi=Oop r9=Oop r11=Oop [128]=Oop [136]=Oop [148]=NarrowOop [152]=Oop }
          ││                                                                 ;*aload {reexecute=1 rethrow=0 return_oop=0}
          ││                                                                 ; - (reexecute) java.util.HashMap$KeySpliterator::forEachRemaining@122 (line 1712)
   0.05%  ││       0x00007f3a7edd1dfb:   test   %eax,(%rdx)                  ;   {poll}
   0.09%  ││       0x00007f3a7edd1dfd:   mov    %r9,%r11
   0.06%  ││       0x00007f3a7edd1e00:   mov    %ecx,%r10d
   0.04%  │╰       0x00007f3a7edd1e03:   jmp    0x00007f3a7edd1db0           ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
          │                                                                  ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@1 (line 1696)
          │                                                                  ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
          │                                                                  ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
          │                                                                  ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.01%  ↘        0x00007f3a7edd1e05:   cmpb   $0x0,0x10(%rsi)
   0.06%           0x00007f3a7edd1e09:   jne    0x00007f3a7edd49b0           ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                                             ; - java.util.stream.ReferencePipeline$7$1::accept@25 (line 275)
                                                                             ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.03%           0x00007f3a7edd1e0f:   mov    0xc(%rsi),%r9d               ;*getfield downstream {reexecute=0 rethrow=0 return_oop=0}
                                                                             ; - java.util.stream.ReferencePipeline$7$1::accept@38 (line 276)
                                                                             ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.02%           0x00007f3a7edd1e13:   mov    %r9d,0x74(%rsp)
   0.04%           0x00007f3a7edd1e18:   nopl   0x0(%rax,%rax,1)             ; ImmutableOopMap {rbx=Oop rsi=Oop r9=NarrowOop r11=Oop [116]=NarrowOop [120]=Oop [128]=Oop [136]=Oop [148]=NarrowOop [152]=Oop }
                                                                             ;*aload {reexecute=1 rethrow=0 return_oop=0}
                                                                             ; - (reexecute) java.util.HashMap$KeySpliterator::forEachRemaining@122 (line 1712)
   0.05%           0x00007f3a7edd1e20:   cmpl   $0x256d70,0x8(,%r9,8)        ; implicit exception: dispatches to 0x00007f3a7edd51b3
                                                                             ;   {metadata(&apos;java/util/stream/ReduceOps$3ReducingSink&apos;)}
   0.12%           0x00007f3a7edd1e2c:   jne    0x00007f3a7edd4a26           ;*invokeinterface accept {reexecute=0 rethrow=0 return_oop=0}
                                                                             ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
                                                                             ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
                                                                             ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
                                                                             ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.06%           0x00007f3a7edd1e32:   mov    0x14(%rsi),%ecx              ; ImmutableOopMap {rbx=Oop rsi=Oop r9=NarrowOop r11=Oop [116]=NarrowOop [120]=Oop [128]=Oop [136]=Oop [148]=NarrowOop [152]=Oop }
                                                                             ;*aload {reexecute=1 rethrow=0 return_oop=0}
                                                                             ; - (reexecute) java.util.HashMap$KeySpliterator::forEachRemaining@122 (line 1712)
   0.04%           0x00007f3a7edd1e35:   mov    0x34(,%rcx,8),%ecx           ; implicit exception: dispatches to 0x00007f3a7edd51d6
   0.04%           0x00007f3a7edd1e3c:   nopl   0x0(%rax)                    ; ImmutableOopMap {rbx=Oop rsi=Oop r9=NarrowOop r11=Oop [116]=NarrowOop [120]=Oop [128]=Oop [136]=Oop [148]=NarrowOop [152]=Oop }
                                                                             ;*aload {reexecute=1 rethrow=0 return_oop=0}
                                                                             ; - (reexecute) java.util.HashMap$KeySpliterator::forEachRemaining@122 (line 1712)
   0.01%           0x00007f3a7edd1e40:   cmpl   $0x102bd28,0x8(,%rcx,8)      ; implicit exception: dispatches to 0x00007f3a7edd51f9
                                                                             ;   {metadata(&apos;com/ionutbalosin/jvm/performance/benchmarks/miscellaneous/publicationstatistics/PublicationStatistics$$Lambda+0x00007f3a0402bd28&apos;)}
   0.41%           0x00007f3a7edd1e4b:   jne    0x00007f3a7edd4da0           ;*invokeinterface apply {reexecute=0 rethrow=0 return_oop=0}
                                                                             ; - java.util.stream.ReferencePipeline$7$1::accept@8 (line 273)
                                                                             ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.07%           0x00007f3a7edd1e51:   mov    0x10(%r11),%ecx              ;*getfield key {reexecute=0 rethrow=0 return_oop=0}
                                                                             ; - java.util.HashMap$KeySpliterator::forEachRemaining@142 (line 1715)
   6.88%           0x00007f3a7edd1e55:   data16 data16 nopw 0x0(%rax,%rax,1) ; ImmutableOopMap {rcx=NarrowOop rbx=Oop rsi=Oop r9=NarrowOop r11=Oop [116]=NarrowOop [120]=Oop [128]=Oop [136]=Oop [148]=NarrowOop [152]=Oop }
                                                                             ;*aload {reexecute=1 rethrow=0 return_oop=0}
                                                                             ; - (reexecute) java.util.HashMap$KeySpliterator::forEachRemaining@122 (line 1712)
                   0x00007f3a7edd1e60:   cmpl   $0x102b708,0x8(,%rcx,8)      ; implicit exception: dispatches to 0x00007f3a7edd521c
                                                                             ;   {metadata(&apos;com/ionutbalosin/jvm/performance/benchmarks/miscellaneous/publicationstatistics/model/Publication&apos;)}
   2.08%           0x00007f3a7edd1e6b:   jne    0x00007f3a7edd48d9           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics$$Lambda/0x00007f3a0402bd28::apply@1
                                                                             ; - java.util.stream.ReferencePipeline$7$1::accept@8 (line 273)
                                                                             ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.07%           0x00007f3a7edd1e71:   mov    0x18(,%rcx,8),%ecx           ;*getfield authors {reexecute=0 rethrow=0 return_oop=0}
                                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.model.Publication::getAuthors@1 (line 51)
                                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::lambda$numberOfPublicationsPerAuthor$4@1 (line 97)
                                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics$$Lambda/0x00007f3a0402bd28::apply@4
                                                                             ; - java.util.stream.ReferencePipeline$7$1::accept@8 (line 273)
                                                                             ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   1.21%           0x00007f3a7edd1e78:   mov    %ecx,0x70(%rsp)
   0.11%           0x00007f3a7edd1e7c:   nopl   0x0(%rax)                    ; ImmutableOopMap {rcx=NarrowOop rbx=Oop rsi=Oop r9=NarrowOop r11=Oop [112]=NarrowOop [116]=NarrowOop [120]=Oop [128]=Oop [136]=Oop [148]=NarrowOop [152]=Oop }
                                                                             ;*aload {reexecute=1 rethrow=0 return_oop=0}
                                                                             ; - (reexecute) java.util.HashMap$KeySpliterator::forEachRemaining@122 (line 1712)
                   0x00007f3a7edd1e80:   cmpl   $0xbc3f8,0x8(,%rcx,8)        ; implicit exception: dispatches to 0x00007f3a7edd523f
                                                                             ;   {metadata(&apos;java/util/ArrayList&apos;)}
   6.56%           0x00007f3a7edd1e8b:   jne    0x00007f3a7edd50ff           ;*invokeinterface stream {reexecute=0 rethrow=0 return_oop=0}
                                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::lambda$numberOfPublicationsPerAuthor$4@4 (line 97)
                                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics$$Lambda/0x00007f3a0402bd28::apply@4
                                                                             ; - java.util.stream.ReferencePipeline$7$1::accept@8 (line 273)
                                                                             ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.11%           0x00007f3a7edd1e91:   mov    0x14(,%rcx,8),%edx           ; ImmutableOopMap {rcx=NarrowOop rdx=NarrowOop rbx=Oop rsi=Oop r9=NarrowOop [112]=NarrowOop [116]=NarrowOop [120]=Oop [128]=Oop [136]=Oop [148]=NarrowOop [152]=Oop }
                                                                             ;*aload {reexecute=1 rethrow=0 return_oop=0}
                                                                             ; - (reexecute) java.util.HashMap$KeySpliterator::forEachRemaining@122 (line 1712)
   0.63%           0x00007f3a7edd1e98:   mov    0xc(,%rdx,8),%r10d           ; implicit exception: dispatches to 0x00007f3a7edd5262
   1.68%           0x00007f3a7edd1ea0:   mov    0x10(,%rcx,8),%r11d          ;*getfield size {reexecute=0 rethrow=0 return_oop=0}
                                                                             ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@47 (line 1701)
                                                                             ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
                                                                             ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
                                                                             ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.00%           0x00007f3a7edd1ea8:   mov    %r11d,0xc8(%rsp)
   0.01%           0x00007f3a7edd1eb0:   cmp    %r10d,%r11d
                   0x00007f3a7edd1eb3:   jg     0x00007f3a7edd4cb2           ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                                             ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@78 (line 1705)
                                                                             ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
                                                                             ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
                                                                             ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.10%           0x00007f3a7edd1eb9:   nopl   0x0(%rax)
                   0x00007f3a7edd1ec0:   cmp    $0x1,%r11d
            ╭      0x00007f3a7edd1ec4:   jl     0x00007f3a7edd1ee9
            │      0x00007f3a7edd1eca:   mov    %r11d,%eax
   0.01%    │      0x00007f3a7edd1ecd:   dec    %rax
   0.08%    │      0x00007f3a7edd1ed0:   mov    %r10d,%r11d
            │      0x00007f3a7edd1ed3:   cmp    %rax,%r11
            │      0x00007f3a7edd1ed6:   jbe    0x00007f3a7edd4753
   0.05%    │      0x00007f3a7edd1edc:   nopl   0x0(%rax)
   0.01%    │      0x00007f3a7edd1ee0:   test   %r10d,%r10d
            │      0x00007f3a7edd1ee3:   je     0x00007f3a7edd4fbb           ;*aaload {reexecute=0 rethrow=0 return_oop=0}
            │                                                                ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@89 (line 1707)
            │                                                                ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
            │                                                                ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
            │                                                                ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.06%    ↘      0x00007f3a7edd1ee9:   mov    0xc(,%rcx,8),%r10d           ;*getfield modCount {reexecute=0 rethrow=0 return_oop=0}
                                                                             ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@38 (line 1700)
                                                                             ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
                                                                             ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
                                                                             ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.00%           0x00007f3a7edd1ef1:   mov    %r10d,0xc4(%rsp)
   0.05%           0x00007f3a7edd1ef9:   mov    %ecx,%r11d
                   0x00007f3a7edd1efc:   shl    $0x3,%r11                    ;*getfield authors {reexecute=0 rethrow=0 return_oop=0}
                                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.model.Publication::getAuthors@1 (line 51)
                                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::lambda$numberOfPublicationsPerAuthor$4@1 (line 97)
                                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics$$Lambda/0x00007f3a0402bd28::apply@4
                                                                             ; - java.util.stream.ReferencePipeline$7$1::accept@8 (line 273)
                                                                             ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.04%           0x00007f3a7edd1f00:   mov    %r11,0x68(%rsp)
                   0x00007f3a7edd1f05:   shl    $0x3,%rdx                    ;*getfield elementData {reexecute=0 rethrow=0 return_oop=0}
                                                                             ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@16 (line 1698)
                                                                             ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
                                                                             ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
                                                                             ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.04%           0x00007f3a7edd1f09:   mov    %rdx,0x60(%rsp)
   0.00%           0x00007f3a7edd1f0e:   mov    %r9d,%eax
   0.04%           0x00007f3a7edd1f11:   shl    $0x3,%rax                    ;*getfield downstream {reexecute=0 rethrow=0 return_oop=0}
                                                                             ; - java.util.stream.ReferencePipeline$7$1::accept@38 (line 276)
                                                                             ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.00%           0x00007f3a7edd1f15:   mov    %rax,0x58(%rsp)
   0.04%           0x00007f3a7edd1f1a:   mov    0xc8(%rsp),%r11d
   0.00%           0x00007f3a7edd1f22:   mov    $0x0,%r10d                   ;*iload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                                             ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@81 (line 1706)
                                                                             ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
                                                                             ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
                                                                             ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.06%           0x00007f3a7edd1f28:   nopl   0x0(%rax,%rax,1)
   0.03%        ↗  0x00007f3a7edd1f30:   movabs $0x7f3a0403c7f0,%rsi         ;   {metadata(&apos;java/util/stream/Collectors$$Lambda+0x00007f3a0403c7f0&apos;)}
   0.04%        │  0x00007f3a7edd1f3a:   nopw   0x0(%rax,%rax,1)
   0.43%        │  0x00007f3a7edd1f40:   cmp    %r10d,%r11d
                │  0x00007f3a7edd1f43:   jle    0x00007f3a7edd4415           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                │                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@83 (line 1706)
                │                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
                │                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
                │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.06%        │  0x00007f3a7edd1f49:   mov    0x14(,%r9,8),%r11d           ;*getfield val$accumulator {reexecute=0 rethrow=0 return_oop=0}
                │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@1 (line 169)
                │                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
                │                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
                │                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
                │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.04%        │  0x00007f3a7edd1f51:   test   %r11d,%r11d
                │  0x00007f3a7edd1f54:   je     0x00007f3a7edd23cf
   0.08%        │  0x00007f3a7edd1f5a:   mov    0x8(,%r11,8),%r8d
   0.43%        │  0x00007f3a7edd1f62:   movabs $0x7f3a03000000,%rcx
   0.04%        │  0x00007f3a7edd1f6c:   lea    (%rcx,%r8,1),%r8             ;*invokeinterface accept {reexecute=0 rethrow=0 return_oop=0}
                │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                │                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
                │                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
                │                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
                │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.03%        │  0x00007f3a7edd1f70:   mov    0x10(%rdx,%r10,4),%ecx       ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                │                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@89 (line 1707)
                │                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
                │                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
                │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.75%        │  0x00007f3a7edd1f75:   mov    %ecx,0x54(%rsp)
   0.36%        │  0x00007f3a7edd1f79:   mov    0xc(,%r9,8),%ebx
   0.03%        │  0x00007f3a7edd1f81:   mov    %ebx,%r9d
   0.02%        │  0x00007f3a7edd1f84:   shl    $0x3,%r9                     ;*getfield state {reexecute=0 rethrow=0 return_oop=0}
                │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@5 (line 169)
                │                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
                │                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
                │                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
                │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.04%        │  0x00007f3a7edd1f88:   mov    %r9,0x48(%rsp)
   0.38%        │  0x00007f3a7edd1f8d:   mov    %ecx,%r9d
   0.03%        │  0x00007f3a7edd1f90:   shl    $0x3,%r9                     ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                │                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@89 (line 1707)
                │                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
                │                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
                │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.03%        │  0x00007f3a7edd1f94:   mov    %r9,0x40(%rsp)
   0.05%        │  0x00007f3a7edd1f99:   mov    %r10d,%r9d
   0.41%        │  0x00007f3a7edd1f9c:   inc    %r9d                         ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                │                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@100 (line 1706)
                │                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
                │                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
                │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.02%        │  0x00007f3a7edd1f9f:   mov    %r9d,0xc0(%rsp)
   0.03%        │  0x00007f3a7edd1fa7:   cmp    %r8,%rsi
             ╭  │  0x00007f3a7edd1faa:   jne    0x00007f3a7edd22a7           ;*invokeinterface accept {reexecute=0 rethrow=0 return_oop=0}
             │  │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
             │  │                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
             │  │                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
             │  │                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
             │  │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.04%     │  │  0x00007f3a7edd1fb0:   mov    0xc(,%r11,8),%r8d            ;*getfield arg$1 {reexecute=0 rethrow=0 return_oop=0}
             │  │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f3a0403c7f0::accept@1
             │  │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
             │  │                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
             │  │                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
             │  │                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
             │  │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.36%     │  │  0x00007f3a7edd1fb8:   nopl   0x0(%rax,%rax,1)             ; ImmutableOopMap {rcx=NarrowOop rdx=Oop rbx=NarrowOop r11=NarrowOop [64]=Oop [72]=Oop [84]=NarrowOop [88]=Oop [96]=Oop [104]=Oop [112]=NarrowOop [116]=NarrowOop [120]=Oop [128]=Oop [136]=Oop [148]=NarrowOop [152]=Oop }
             │  │                                                            ;*iload_2 {reexecute=1 rethrow=0 return_oop=0}
             │  │                                                            ; - (reexecute) java.util.ArrayList$ArrayListSpliterator::forEachRemaining@81 (line 1706)
             │  │                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
             │  │                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
             │  │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.04%     │  │  0x00007f3a7edd1fc0:   cmpl   $0x103b8c8,0x8(,%r8,8)       ; implicit exception: dispatches to 0x00007f3a7edd5285
             │  │                                                            ;   {metadata(&apos;java/util/function/Function$$Lambda+0x00007f3a0403b8c8&apos;)}
   0.12%     │  │  0x00007f3a7edd1fcc:   jne    0x00007f3a7edd4ffd           ;*invokeinterface apply {reexecute=0 rethrow=0 return_oop=0}
             │  │                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@3 (line 1105)
             │  │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f3a0403c7f0::accept@17
             │  │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
             │  │                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
             │  │                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
             │  │                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
             │  │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.40%     │  │  0x00007f3a7edd1fd2:   mov    %ebx,0x3c(%rsp)              ;*iload_2 {reexecute=1 rethrow=0 return_oop=0}
             │  │                                                            ; - (reexecute) java.util.ArrayList$ArrayListSpliterator::forEachRemaining@81 (line 1706)
             │  │                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
             │  │                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
             │  │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.04%     │  │  0x00007f3a7edd1fd6:   test   %eax,0x0(,%rcx,8)            ; implicit exception: deoptimizes
             │  │                                                            ; ImmutableOopMap {rdx=Oop rbx=NarrowOop r11=NarrowOop [60]=NarrowOop [64]=Oop [72]=Oop [84]=NarrowOop [88]=Oop [96]=Oop [104]=Oop [112]=NarrowOop [116]=NarrowOop [120]=Oop [128]=Oop [136]=Oop [148]=NarrowOop [152]=Oop }
   8.93%     │  │  0x00007f3a7edd1fdd:   data16 xchg %ax,%ax                 ; ImmutableOopMap {rdx=Oop r11=NarrowOop [60]=NarrowOop [64]=Oop [72]=Oop [84]=NarrowOop [88]=Oop [96]=Oop [104]=Oop [112]=NarrowOop [116]=NarrowOop [120]=Oop [128]=Oop [136]=Oop [148]=NarrowOop [152]=Oop }
             │  │                                                            ;*iload_2 {reexecute=1 rethrow=0 return_oop=0}
             │  │                                                            ; - (reexecute) java.util.ArrayList$ArrayListSpliterator::forEachRemaining@81 (line 1706)
             │  │                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
             │  │                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
             │  │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.35%     │  │  0x00007f3a7edd1fe0:   cmpl   $0x8e280,0x8(,%rbx,8)        ; implicit exception: dispatches to 0x00007f3a7edd52a8
             │  │                                                            ;   {metadata(&apos;java/util/HashMap&apos;)}
   0.01%     │  │  0x00007f3a7edd1feb:   jne    0x00007f3a7edd4d3e           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
             │  │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f3a0403c7f0::accept@13
             │  │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
             │  │                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
             │  │                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
             │  │                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
             │  │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.13%     │  │  0x00007f3a7edd1ff1:   mov    0x40(%rsp),%r9
   0.33%     │  │  0x00007f3a7edd1ff6:   mov    %r10d,0xbc(%rsp)
   0.01%     │  │  0x00007f3a7edd1ffe:   mov    0x14(,%r11,8),%r10d          ;*getfield arg$3 {reexecute=0 rethrow=0 return_oop=0}
             │  │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f3a0403c7f0::accept@9
             │  │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
             │  │                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
             │  │                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
             │  │                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
             │  │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.00%     │  │  0x00007f3a7edd2006:   mov    %r10d,0x38(%rsp)
   0.18%     │  │  0x00007f3a7edd200b:   mov    0x10(,%r11,8),%r11d          ;*getfield arg$2 {reexecute=0 rethrow=0 return_oop=0}
             │  │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f3a0403c7f0::accept@5
             │  │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
             │  │                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
             │  │                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
             │  │                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
             │  │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.36%     │  │  0x00007f3a7edd2013:   mov    %r11d,0x34(%rsp)
   0.00%     │  │  0x00007f3a7edd2018:   mov    %r10d,%r8d
             │  │  0x00007f3a7edd201b:   shl    $0x3,%r8                     ;*getfield arg$3 {reexecute=0 rethrow=0 return_oop=0}
             │  │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f3a0403c7f0::accept@9
             │  │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
             │  │                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
             │  │                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
             │  │                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
             │  │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.13%     │  │  0x00007f3a7edd201f:   mov    %r11d,%r10d
   0.34%     │  │  0x00007f3a7edd2022:   shl    $0x3,%r10                    ;*getfield arg$2 {reexecute=0 rethrow=0 return_oop=0}
             │  │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f3a0403c7f0::accept@5
             │  │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
             │  │                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
             │  │                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
             │  │                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
             │  │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.01%     │  │  0x00007f3a7edd2026:   mov    %r9,%rsi                     ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
             │  │                                                            ; - java.util.HashMap::hash@9 (line 338)
             │  │                                                            ; - java.util.HashMap::computeIfAbsent@13 (line 1199)
             │  │                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
             │  │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f3a0403c7f0::accept@17
             │  │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
             │  │                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
             │  │                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
             │  │                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
             │  │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
             │  │  0x00007f3a7edd2029:   mov    %r8,0x28(%rsp)
   0.15%     │  │  0x00007f3a7edd202e:   mov    %r10,0x20(%rsp)
   0.35%     │  │  0x00007f3a7edd2033:   xchg   %ax,%ax
   0.00%     │  │  0x00007f3a7edd2035:   nop
             │  │  0x00007f3a7edd2036:   data16 xchg %ax,%ax
   0.13%     │  │  0x00007f3a7edd2039:   movabs $0x7f3a0402b2c0,%rax
   0.30%     │  │  0x00007f3a7edd2043:   call   0x00007f3a7740ae60           ; ImmutableOopMap {[32]=Oop [40]=Oop [52]=NarrowOop [56]=NarrowOop [60]=NarrowOop [64]=Oop [72]=Oop [84]=NarrowOop [88]=Oop [96]=Oop [104]=Oop [112]=NarrowOop [116]=NarrowOop [120]=Oop [128]=Oop [136]=Oop [148]=NarrowOop [152]=Oop }
             │  │                                                            ;*invokevirtual hashCode {reexecute=0 rethrow=0 return_oop=0}
             │  │                                                            ; - java.util.HashMap::hash@9 (line 338)
             │  │                                                            ; - java.util.HashMap::computeIfAbsent@13 (line 1199)
             │  │                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
             │  │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f3a0403c7f0::accept@17
             │  │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
             │  │                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
             │  │                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
             │  │                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
             │  │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
             │  │                                                            ;   {virtual_call}
             │  │  0x00007f3a7edd2048:   nopl   0xd000738(%rax,%rax,1)       ;   {other}
             │  │  0x00007f3a7edd2050:   mov    0x3c(%rsp),%ebx
   0.51%     │  │  0x00007f3a7edd2054:   mov    0x24(,%rbx,8),%r10d          ;*getfield table {reexecute=0 rethrow=0 return_oop=0}
             │  │                                                            ; - java.util.HashMap::resize@1 (line 684)
             │  │                                                            ; - java.util.HashMap::computeIfAbsent@57 (line 1206)
             │  │                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
             │  │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f3a0403c7f0::accept@17
             │  │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
             │  │                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
             │  │                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
             │  │                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
             │  │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.01%     │  │  0x00007f3a7edd205c:   mov    0x1c(,%rbx,8),%r11d          ;*getfield threshold {reexecute=0 rethrow=0 return_oop=0}
             │  │                                                            ; - java.util.HashMap::computeIfAbsent@31 (line 1204)
             │  │                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
             │  │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f3a0403c7f0::accept@17
             │  │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
             │  │                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
             │  │                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
             │  │                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
             │  │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
             │  │  0x00007f3a7edd2064:   mov    %r10d,%r8d
   0.45%     │  │  0x00007f3a7edd2067:   shl    $0x3,%r8                     ;*getfield table {reexecute=0 rethrow=0 return_oop=0}
             │  │                                                            ; - java.util.HashMap::resize@1 (line 684)
             │  │                                                            ; - java.util.HashMap::computeIfAbsent@57 (line 1206)
             │  │                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
             │  │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f3a0403c7f0::accept@17
             │  │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
             │  │                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
             │  │                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
             │  │                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
             │  │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
             │  │  0x00007f3a7edd206b:   mov    %r8,0x18(%rsp)
   0.05%     │  │  0x00007f3a7edd2070:   mov    %eax,%esi
             │  │  0x00007f3a7edd2072:   shr    $0x10,%esi                   ;*iushr {reexecute=0 rethrow=0 return_oop=0}
             │  │                                                            ; - java.util.HashMap::hash@17 (line 338)
             │  │                                                            ; - java.util.HashMap::computeIfAbsent@13 (line 1199)
             │  │                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
             │  │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f3a0403c7f0::accept@17
             │  │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
             │  │                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
             │  │                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
             │  │                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
             │  │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.45%     │  │  0x00007f3a7edd2075:   mov    %eax,%ebp
             │  │  0x00007f3a7edd2077:   xor    %esi,%ebp                    ;*ixor {reexecute=0 rethrow=0 return_oop=0}
             │  │                                                            ; - java.util.HashMap::hash@18 (line 338)
             │  │                                                            ; - java.util.HashMap::computeIfAbsent@13 (line 1199)
             │  │                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
             │  │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f3a0403c7f0::accept@17
             │  │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
             │  │                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
             │  │                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
             │  │                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
             │  │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.03%     │  │  0x00007f3a7edd2079:   mov    %ebp,0xb8(%rsp)
   0.00%     │  │  0x00007f3a7edd2080:   cmp    0x14(,%rbx,8),%r11d
             │  │  0x00007f3a7edd2088:   jl     0x00007f3a7edd3126           ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
             │  │                                                            ; - java.util.HashMap::computeIfAbsent@34 (line 1204)
             │  │                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
             │  │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f3a0403c7f0::accept@17
             │  │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
             │  │                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
             │  │                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
             │  │                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
             │  │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.48%     │  │  0x00007f3a7edd208e:   test   %r10d,%r10d
             │  │  0x00007f3a7edd2091:   je     0x00007f3a7edd4046           ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
             │  │                                                            ; - java.util.HashMap::computeIfAbsent@44 (line 1204)
             │  │                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
             │  │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f3a0403c7f0::accept@17
             │  │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
             │  │                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
             │  │                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
             │  │                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
             │  │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.03%     │  │  0x00007f3a7edd2097:   mov    0xc(,%r10,8),%esi            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
             │  │                                                            ; - java.util.HashMap::computeIfAbsent@49 (line 1204)
             │  │                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
             │  │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f3a0403c7f0::accept@17
             │  │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
             │  │                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
             │  │                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
             │  │                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
             │  │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.00%     │  │  0x00007f3a7edd209f:   nop
   0.43%     │  │  0x00007f3a7edd20a0:   test   %esi,%esi
             │  │  0x00007f3a7edd20a2:   je     0x00007f3a7edd49cc           ;*ifne {reexecute=0 rethrow=0 return_oop=0}
             │  │                                                            ; - java.util.HashMap::computeIfAbsent@53 (line 1204)
             │  │                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
             │  │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f3a0403c7f0::accept@17
             │  │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
             │  │                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
             │  │                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
             │  │                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
             │  │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.03%     │  │  0x00007f3a7edd20a8:   mov    %esi,%edx
   0.00%     │  │  0x00007f3a7edd20aa:   dec    %edx                         ;*isub {reexecute=0 rethrow=0 return_oop=0}
             │  │                                                            ; - java.util.HashMap::computeIfAbsent@71 (line 1207)
             │  │                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
             │  │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f3a0403c7f0::accept@17
             │  │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
             │  │                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
             │  │                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
             │  │                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
             │  │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
             │  │  0x00007f3a7edd20ac:   and    %ebp,%edx                    ;*iand {reexecute=0 rethrow=0 return_oop=0}
             │  │                                                            ; - java.util.HashMap::computeIfAbsent@73 (line 1207)
             │  │                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
             │  │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f3a0403c7f0::accept@17
             │  │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
             │  │                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
             │  │                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
             │  │                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
             │  │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.44%     │  │  0x00007f3a7edd20ae:   cmp    %edx,%esi
             │  │  0x00007f3a7edd20b0:   jbe    0x00007f3a7edd4f25
   0.04%     │  │  0x00007f3a7edd20b6:   mov    0x10(%r8,%rdx,4),%ecx        ;*aaload {reexecute=0 rethrow=0 return_oop=0}
             │  │                                                            ; - java.util.HashMap::computeIfAbsent@77 (line 1207)
             │  │                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
             │  │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f3a0403c7f0::accept@17
             │  │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
             │  │                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
             │  │                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
             │  │                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
             │  │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.70%     │  │  0x00007f3a7edd20bb:   mov    0x38(%rsp),%r10d
   0.00%     │  │  0x00007f3a7edd20c0:   mov    %r8,0x18(%rsp)               ; ImmutableOopMap {rcx=NarrowOop rbx=NarrowOop r8=Oop r10=NarrowOop [24]=Oop [32]=Oop [40]=Oop [52]=NarrowOop [56]=NarrowOop [60]=NarrowOop [64]=Oop [72]=Oop [84]=NarrowOop [88]=Oop [96]=Oop [104]=Oop [112]=NarrowOop [116]=NarrowOop [120]=Oop [128]=Oop [136]=Oop [148]=NarrowOop [152]=Oop }
             │  │                                                            ;*aload {reexecute=1 rethrow=0 return_oop=0}
             │  │                                                            ; - (reexecute) java.util.HashMap::computeIfAbsent@66 (line 1207)
             │  │                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
             │  │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f3a0403c7f0::accept@17
             │  │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
             │  │                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
             │  │                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
             │  │                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
             │  │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.34%     │  │  0x00007f3a7edd20c5:   cmpl   $0x103bf30,0x8(,%r10,8)      ; implicit exception: dispatches to 0x00007f3a7edd52cd
             │  │                                                            ;   {metadata(&apos;java/util/stream/Collectors$$Lambda+0x00007f3a0403bf30&apos;)}
   0.09%     │  │  0x00007f3a7edd20d1:   jne    0x00007f3a7edd45f1           ;*invokeinterface accept {reexecute=0 rethrow=0 return_oop=0}
             │  │                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@37 (line 1107)
             │  │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f3a0403c7f0::accept@17
             │  │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
             │  │                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
             │  │                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
             │  │                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
             │  │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
             │  │  0x00007f3a7edd20d7:   mov    0x18(,%rbx,8),%r11d          ;*getfield modCount {reexecute=0 rethrow=0 return_oop=0}
             │  │                                                            ; - java.util.HashMap::computeIfAbsent@195 (line 1227)
             │  │                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
             │  │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f3a0403c7f0::accept@17
             │  │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
             │  │                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
             │  │                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
             │  │                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
             │  │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.36%     │  │  0x00007f3a7edd20df:   mov    %r11d,0xb4(%rsp)
             │  │  0x00007f3a7edd20e7:   mov    %ecx,%r13d
   0.10%     │  │  0x00007f3a7edd20ea:   shl    $0x3,%r13                    ;*aaload {reexecute=0 rethrow=0 return_oop=0}
             │  │                                                            ; - java.util.HashMap::computeIfAbsent@77 (line 1207)
             │  │                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
             │  │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f3a0403c7f0::accept@17
             │  │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
             │  │                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
             │  │                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
             │  │                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
             │  │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.00%     │  │  0x00007f3a7edd20ee:   test   %ecx,%ecx
             │  │  0x00007f3a7edd20f0:   je     0x00007f3a7edd29f1           ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
             │  │                                                            ; - java.util.HashMap::computeIfAbsent@81 (line 1207)
             │  │                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
             │  │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f3a0403c7f0::accept@17
             │  │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
             │  │                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
             │  │                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
             │  │                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
             │  │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.34%     │  │  0x00007f3a7edd20f6:   data16 nopw 0x0(%rax,%rax,1)
             │  │  0x00007f3a7edd2100:   cmpl   $0x1a8490,0x8(,%rcx,8)       ;   {metadata(&apos;java/util/HashMap$TreeNode&apos;)}
   4.81%     │  │  0x00007f3a7edd210b:   je     0x00007f3a7edd476e           ;*aastore {reexecute=0 rethrow=0 return_oop=0}
             │  │                                                            ; - java.util.HashMap::computeIfAbsent@289 (line 1240)
             │  │                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
             │  │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f3a0403c7f0::accept@17
             │  │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
             │  │                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
             │  │                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
             │  │                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
             │  │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.53%     │  │  0x00007f3a7edd2111:   mov    %r13,%rdi
             │  │  0x00007f3a7edd2114:   mov    $0x0,%r14d
             │╭ │  0x00007f3a7edd211a:   jmp    0x00007f3a7edd2144           ;*aload {reexecute=0 rethrow=0 return_oop=0}
             ││ │                                                            ; - java.util.HashMap::computeIfAbsent@114 (line 1213)
             ││ │                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
             ││ │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f3a0403c7f0::accept@17
             ││ │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
             ││ │                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
             ││ │                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
             ││ │                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
             ││ │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
             ││ │  0x00007f3a7edd211f:   nop                                 ;*getfield hash {reexecute=0 rethrow=0 return_oop=0}
             ││ │                                                            ; - java.util.HashMap::computeIfAbsent@116 (line 1213)
             ││ │                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
             ││ │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f3a0403c7f0::accept@17
             ││ │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
             ││ │                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
             ││ │                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
             ││ │                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
             ││ │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   1.21%     ││↗│  0x00007f3a7edd2120:   mov    0x18(%rdi),%esi              ;*getfield next {reexecute=0 rethrow=0 return_oop=0}
             ││││                                                            ; - java.util.HashMap::computeIfAbsent@160 (line 1219)
             ││││                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
             ││││                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f3a0403c7f0::accept@17
             ││││                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
             ││││                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
             ││││                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
             ││││                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
             ││││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   1.63%     ││││  0x00007f3a7edd2123:   mov    %r14d,%r9d
             ││││  0x00007f3a7edd2126:   inc    %r9d                         ;*iinc {reexecute=0 rethrow=0 return_oop=0}
             ││││                                                            ; - java.util.HashMap::computeIfAbsent@155 (line 1218)
             ││││                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
             ││││                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f3a0403c7f0::accept@17
             ││││                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
             ││││                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
             ││││                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
             ││││                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
             ││││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.01%     ││││  0x00007f3a7edd2129:   test   %esi,%esi
             ││││  0x00007f3a7edd212b:   je     0x00007f3a7edd27d0           ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
             ││││                                                            ; - java.util.HashMap::computeIfAbsent@166 (line 1219)
             ││││                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
             ││││                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f3a0403c7f0::accept@17
             ││││                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
             ││││                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
             ││││                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
             ││││                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
             ││││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.16%     ││││  0x00007f3a7edd2131:   mov    0x458(%r15),%rax             ; ImmutableOopMap {rcx=NarrowOop rsi=NarrowOop rdi=Oop r8=Oop r10=NarrowOop r13=Oop [24]=Oop [32]=Oop [40]=Oop [52]=NarrowOop [56]=NarrowOop [60]=NarrowOop [64]=Oop [72]=Oop [84]=NarrowOop [88]=Oop [96]=Oop [104]=Oop [112]=NarrowOop [116]=NarrowOop [120]=Oop [128]=Oop [136]=Oop [148]=NarrowOop [152]=Oop }
             ││││                                                            ;*aload {reexecute=1 rethrow=0 return_oop=0}
             ││││                                                            ; - (reexecute) java.util.HashMap::computeIfAbsent@114 (line 1213)
             ││││                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
             ││││                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f3a0403c7f0::accept@17
             ││││                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
             ││││                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
             ││││                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
             ││││                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
             ││││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.06%     ││││  0x00007f3a7edd2138:   test   %eax,(%rax)                  ;   {poll}
   0.63%     ││││  0x00007f3a7edd213a:   shl    $0x3,%rsi                    ;*getfield next {reexecute=0 rethrow=0 return_oop=0}
             ││││                                                            ; - java.util.HashMap::computeIfAbsent@160 (line 1219)
             ││││                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
             ││││                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f3a0403c7f0::accept@17
             ││││                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
             ││││                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
             ││││                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
             ││││                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
             ││││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.01%     ││││  0x00007f3a7edd213e:   mov    %rsi,%rdi
   0.03%     ││││  0x00007f3a7edd2141:   mov    %r9d,%r14d                   ; ImmutableOopMap {rcx=NarrowOop rdi=Oop r8=Oop r10=NarrowOop r13=Oop [24]=Oop [32]=Oop [40]=Oop [52]=NarrowOop [56]=NarrowOop [60]=NarrowOop [64]=Oop [72]=Oop [84]=NarrowOop [88]=Oop [96]=Oop [104]=Oop [112]=NarrowOop [116]=NarrowOop [120]=Oop [128]=Oop [136]=Oop [148]=NarrowOop [152]=Oop }
             ││││                                                            ;*aload {reexecute=1 rethrow=0 return_oop=0}
             ││││                                                            ; - (reexecute) java.util.HashMap::computeIfAbsent@114 (line 1213)
             ││││                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
             ││││                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f3a0403c7f0::accept@17
             ││││                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
             ││││                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
             ││││                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
             ││││                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
             ││││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.05%     │↘││  0x00007f3a7edd2144:   mov    0xc(%rdi),%esi               ; implicit exception: dispatches to 0x00007f3a7edd52f0
   4.10%     │ ││  0x00007f3a7edd2147:   mov    0x10(%rdi),%r9d              ;*getfield key {reexecute=0 rethrow=0 return_oop=0}
             │ ││                                                            ; - java.util.HashMap::computeIfAbsent@125 (line 1213)
             │ ││                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
             │ ││                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f3a0403c7f0::accept@17
             │ ││                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
             │ ││                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
             │ ││                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
             │ ││                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
             │ ││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.63%     │ ││  0x00007f3a7edd214b:   mov    0x14(%rdi),%eax              ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
             │ ││                                                            ; - java.util.HashMap::computeIfAbsent@176 (line 1222)
             │ ││                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
             │ ││                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f3a0403c7f0::accept@17
             │ ││                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
             │ ││                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
             │ ││                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
             │ ││                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
             │ ││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.41%     │ ││  0x00007f3a7edd214e:   cmp    %ebp,%esi
             │ ╰│  0x00007f3a7edd2150:   jne    0x00007f3a7edd2120           ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
             │  │                                                            ; - java.util.HashMap::computeIfAbsent@120 (line 1213)
             │  │                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
             │  │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f3a0403c7f0::accept@17
             │  │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
             │  │                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
             │  │                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
             │  │                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
             │  │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.45%     │  │  0x00007f3a7edd2152:   cmp    0x54(%rsp),%r9d
             │  │  0x00007f3a7edd2157:   je     0x00007f3a7edd504d           ;*if_acmpeq {reexecute=0 rethrow=0 return_oop=0}
             │  │                                                            ; - java.util.HashMap::computeIfAbsent@132 (line 1213)
             │  │                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
             │  │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f3a0403c7f0::accept@17
             │  │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
             │  │                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
             │  │                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
             │  │                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
             │  │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.71%     │  │  0x00007f3a7edd215d:   mov    0x54(%rsp),%ecx
             │  │  0x00007f3a7edd2161:   cmpl   $0x102b2c0,0x8(,%rcx,8)      ;   {metadata(&apos;com/ionutbalosin/jvm/performance/benchmarks/miscellaneous/publicationstatistics/model/Author&apos;)}
   0.30%     │  │  0x00007f3a7edd216c:   jne    0x00007f3a7edd4cf7           ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
             │  │                                                            ; - java.util.HashMap::computeIfAbsent@142 (line 1214)
             │  │                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
             │  │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f3a0403c7f0::accept@17
             │  │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
             │  │                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
             │  │                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
             │  │                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
             │  │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.38%     │  │  0x00007f3a7edd2172:   cmp    %ecx,%r9d
             │  │  0x00007f3a7edd2175:   je     0x00007f3a7edd4c56           ;*if_acmpne {reexecute=0 rethrow=0 return_oop=0}
             │  │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.model.Author::equals@2 (line 45)
             │  │                                                            ; - java.util.HashMap::computeIfAbsent@142 (line 1214)
             │  │                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
             │  │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f3a0403c7f0::accept@17
             │  │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
             │  │                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
             │  │                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
             │  │                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
             │  │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.00%     │  │  0x00007f3a7edd217b:   nopl   0x0(%rax,%rax,1)             ; ImmutableOopMap {rax=NarrowOop rcx=NarrowOop rdi=Oop r8=Oop r9=NarrowOop r10=NarrowOop r13=Oop [32]=Oop [40]=Oop [64]=Oop [72]=Oop [88]=Oop [96]=Oop [104]=Oop [112]=NarrowOop [116]=NarrowOop [120]=Oop [128]=Oop [136]=Oop [148]=NarrowOop [152]=Oop }
             │  │                                                            ;*aload {reexecute=1 rethrow=0 return_oop=0}
             │  │                                                            ; - (reexecute) java.util.HashMap::computeIfAbsent@114 (line 1213)
             │  │                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
             │  │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f3a0403c7f0::accept@17
             │  │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
             │  │                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
             │  │                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
             │  │                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
             │  │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.07%     │  │  0x00007f3a7edd2180:   cmpl   $0x102b2c0,0x8(,%r9,8)       ; implicit exception: dispatches to 0x00007f3a7edd5313
             │  │                                                            ;   {metadata(&apos;com/ionutbalosin/jvm/performance/benchmarks/miscellaneous/publicationstatistics/model/Author&apos;)}
   6.42%     │  │  0x00007f3a7edd218c:   jne    0x00007f3a7edd4f3c           ;*if_acmpeq {reexecute=0 rethrow=0 return_oop=0}
             │  │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.model.Author::equals@19 (line 46)
             │  │                                                            ; - java.util.HashMap::computeIfAbsent@142 (line 1214)
             │  │                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
             │  │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f3a0403c7f0::accept@17
             │  │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
             │  │                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
             │  │                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
             │  │                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
             │  │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.40%     │  │  0x00007f3a7edd2192:   mov    0xc(,%rcx,8),%esi            ;*getfield name {reexecute=0 rethrow=0 return_oop=0}
             │  │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.model.Author::equals@30 (line 48)
             │  │                                                            ; - java.util.HashMap::computeIfAbsent@142 (line 1214)
             │  │                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
             │  │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f3a0403c7f0::accept@17
             │  │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
             │  │                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
             │  │                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
             │  │                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
             │  │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.00%     │  │  0x00007f3a7edd2199:   mov    0xc(,%r9,8),%ecx             ;*getfield name {reexecute=0 rethrow=0 return_oop=0}
             │  │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.model.Author::equals@34 (line 48)
             │  │                                                            ; - java.util.HashMap::computeIfAbsent@142 (line 1214)
             │  │                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
             │  │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f3a0403c7f0::accept@17
             │  │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
             │  │                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
             │  │                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
             │  │                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
             │  │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.45%     │  │  0x00007f3a7edd21a1:   cmp    %esi,%ecx
             │  │  0x00007f3a7edd21a3:   je     0x00007f3a7edd26c6           ; ImmutableOopMap {rax=NarrowOop rcx=NarrowOop rsi=NarrowOop rdi=Oop r8=Oop r10=NarrowOop r13=Oop [32]=Oop [40]=Oop [64]=Oop [72]=Oop [88]=Oop [96]=Oop [104]=Oop [112]=NarrowOop [116]=NarrowOop [120]=Oop [128]=Oop [136]=Oop [148]=NarrowOop [152]=Oop }
             │  │                                                            ;*aload {reexecute=1 rethrow=0 return_oop=0}
             │  │                                                            ; - (reexecute) java.util.HashMap::computeIfAbsent@114 (line 1213)
             │  │                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
             │  │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f3a0403c7f0::accept@17
             │  │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
             │  │                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
             │  │                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
             │  │                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
             │  │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.43%     │  │  0x00007f3a7edd21a9:   movsbl 0x10(,%rsi,8),%r9d           ; implicit exception: dispatches to 0x00007f3a7edd5336
   0.04%     │  │  0x00007f3a7edd21b2:   mov    0x14(,%rsi,8),%r11d          ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
             │  │                                                            ; - java.lang.String::equals@0 (line 1858)
             │  │                                                            ; - java.util.Objects::equals@11 (line 64)
             │  │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.model.Author::equals@37 (line 48)
             │  │                                                            ; - java.util.HashMap::computeIfAbsent@142 (line 1214)
             │  │                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
             │  │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f3a0403c7f0::accept@17
             │  │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
             │  │                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
             │  │                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
             │  │                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
             │  │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.01%     │  │  0x00007f3a7edd21ba:   nopw   0x0(%rax,%rax,1)
   0.02%     │  │  0x00007f3a7edd21c0:   cmp    %esi,%ecx
             │  │  0x00007f3a7edd21c2:   je     0x00007f3a7edd2665           ; ImmutableOopMap {rax=NarrowOop rcx=NarrowOop rdi=Oop r8=Oop r10=NarrowOop r11=NarrowOop r13=Oop [32]=Oop [40]=Oop [64]=Oop [72]=Oop [88]=Oop [96]=Oop [104]=Oop [112]=NarrowOop [116]=NarrowOop [120]=Oop [128]=Oop [136]=Oop [148]=NarrowOop [152]=Oop }
             │  │                                                            ;*aload {reexecute=1 rethrow=0 return_oop=0}
             │  │                                                            ; - (reexecute) java.util.HashMap::computeIfAbsent@114 (line 1213)
             │  │                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
             │  │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f3a0403c7f0::accept@17
             │  │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
             │  │                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
             │  │                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
             │  │                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
             │  │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.42%     │  │  0x00007f3a7edd21c8:   movsbl 0x10(,%rcx,8),%esi           ; implicit exception: dispatches to 0x00007f3a7edd5359
   3.15%     │  │  0x00007f3a7edd21d0:   mov    0x14(,%rcx,8),%ecx           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
             │  │                                                            ; - java.lang.String::equals@0 (line 1858)
             │  │                                                            ; - java.util.Objects::equals@11 (line 64)
             │  │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.model.Author::equals@37 (line 48)
             │  │                                                            ; - java.util.HashMap::computeIfAbsent@142 (line 1214)
             │  │                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
             │  │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f3a0403c7f0::accept@17
             │  │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
             │  │                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
             │  │                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
             │  │                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
             │  │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.86%     │  │  0x00007f3a7edd21d7:   cmp    %r9b,%sil
             │  │  0x00007f3a7edd21da:   jne    0x00007f3a7edd50a6           ; ImmutableOopMap {rax=NarrowOop rcx=NarrowOop rdi=Oop r8=Oop r10=NarrowOop r11=NarrowOop r13=Oop [32]=Oop [40]=Oop [64]=Oop [72]=Oop [88]=Oop [96]=Oop [104]=Oop [112]=NarrowOop [116]=NarrowOop [120]=Oop [128]=Oop [136]=Oop [148]=NarrowOop [152]=Oop }
             │  │                                                            ;*aload {reexecute=1 rethrow=0 return_oop=0}
             │  │                                                            ; - (reexecute) java.util.HashMap::computeIfAbsent@114 (line 1213)
             │  │                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
             │  │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f3a0403c7f0::accept@17
             │  │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
             │  │                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
             │  │                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
             │  │                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
             │  │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.28%     │  │  0x00007f3a7edd21e0:   mov    0xc(,%rcx,8),%r9d            ; implicit exception: dispatches to 0x00007f3a7edd537c
             │  │                                                            ; ImmutableOopMap {rax=NarrowOop rcx=NarrowOop rdi=Oop r8=Oop r10=NarrowOop r11=NarrowOop r13=Oop [32]=Oop [40]=Oop [64]=Oop [72]=Oop [88]=Oop [96]=Oop [104]=Oop [112]=NarrowOop [116]=NarrowOop [120]=Oop [128]=Oop [136]=Oop [148]=NarrowOop [152]=Oop }
             │  │                                                            ;*aload {reexecute=1 rethrow=0 return_oop=0}
             │  │                                                            ; - (reexecute) java.util.HashMap::computeIfAbsent@114 (line 1213)
             │  │                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
             │  │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f3a0403c7f0::accept@17
             │  │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
             │  │                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
             │  │                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
             │  │                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
             │  │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   3.05%     │  │  0x00007f3a7edd21e8:   cmp    0xc(,%r11,8),%r9d            ; implicit exception: dispatches to 0x00007f3a7edd539f
             │  │  0x00007f3a7edd21f0:   jne    0x00007f3a7edd48f5
   0.48%     │  │  0x00007f3a7edd21f6:   test   %r9d,%r9d
             │  │  0x00007f3a7edd21f9:   je     0x00007f3a7edd2685
   0.34%     │  │  0x00007f3a7edd21ff:   mov    %eax,%ebx
   0.06%     │  │  0x00007f3a7edd2201:   mov    %rdi,0x8(%rsp)
   0.00%     │  │  0x00007f3a7edd2206:   mov    %r14d,0xac(%rsp)
   0.06%     │  │  0x00007f3a7edd220e:   shl    $0x3,%rcx
   0.35%     │  │  0x00007f3a7edd2212:   shl    $0x3,%r11
   0.05%     │  │  0x00007f3a7edd2216:   mov    %rcx,%rsi
             │  │  0x00007f3a7edd2219:   mov    %edx,%eax
   0.05%     │  │  0x00007f3a7edd221b:   mov    $0x10,%rdx
   0.36%     │  │  0x00007f3a7edd2222:   mov    %r11,%rcx
   0.05%     │  │  0x00007f3a7edd2225:   mov    %r8,%r11
             │  │  0x00007f3a7edd2228:   mov    $0x10,%r8                    ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
             │  │                                                            ; - java.lang.String::equals@0 (line 1858)
             │  │                                                            ; - java.util.Objects::equals@11 (line 64)
             │  │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.model.Author::equals@37 (line 48)
             │  │                                                            ; - java.util.HashMap::computeIfAbsent@142 (line 1214)
             │  │                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
             │  │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f3a0403c7f0::accept@17
             │  │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
             │  │                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
             │  │                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
             │  │                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
             │  │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.05%     │  │  0x00007f3a7edd222f:   mov    %eax,%ebp
   0.40%     │  │  0x00007f3a7edd2231:   mov    %r10d,%r14d
   0.05%     │  │  0x00007f3a7edd2234:   call   0x00007f3a7e8edd80           ;   {runtime_call Stub&lt;IntrinsicStubsGen.arrayRegionEqualsS1S1&gt;}
   0.52%     │  │  0x00007f3a7edd2239:   nop
             │  │  0x00007f3a7edd223a:   nopw   0x0(%rax,%rax,1)
             │  │  0x00007f3a7edd2240:   test   %eax,%eax
             │  │  0x00007f3a7edd2242:   je     0x00007f3a7edd4c1a           ; ImmutableOopMap {rbx=NarrowOop r11=Oop r13=Oop r14=NarrowOop [8]=Oop [32]=Oop [40]=Oop [64]=Oop [72]=Oop [88]=Oop [96]=Oop [104]=Oop [112]=NarrowOop [116]=NarrowOop [120]=Oop [128]=Oop [136]=Oop [148]=NarrowOop [152]=Oop }
             │  │                                                            ;*aload {reexecute=1 rethrow=0 return_oop=0}
             │  │                                                            ; - (reexecute) java.util.HashMap::computeIfAbsent@148 (line 1215)
             │  │                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
             │  │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f3a0403c7f0::accept@17
             │  │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
             │  │                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
             │  │                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
             │  │                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
             │  │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.02%     │  │  0x00007f3a7edd2248:   cmpl   $0x2a80,0x8(,%rbx,8)         ; implicit exception: dispatches to 0x00007f3a7edd53c2
             │  │                                                            ;   {metadata({type array long})}
   0.66%     │  │  0x00007f3a7edd2253:   jne    0x00007f3a7edd4b40           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
             │  │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f3a0403bf30::accept@5
             │  │                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@37 (line 1107)
             │  │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f3a0403c7f0::accept@17
             │  │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
             │  │                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
             │  │                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
             │  │                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
             │  │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.03%     │  │  0x00007f3a7edd2259:   mov    0xc(,%r14,8),%esi            ; ImmutableOopMap {rbx=NarrowOop r11=Oop r13=Oop [8]=Oop [32]=Oop [40]=Oop [64]=Oop [72]=Oop [88]=Oop [96]=Oop [104]=Oop [112]=NarrowOop [116]=NarrowOop [120]=Oop [128]=Oop [136]=Oop [148]=NarrowOop [152]=Oop }
             │  │                                                            ;*aload {reexecute=1 rethrow=0 return_oop=0}
             │  │                                                            ; - (reexecute) java.util.HashMap::computeIfAbsent@148 (line 1215)
             │  │                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
             │  │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f3a0403c7f0::accept@17
             │  │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
             │  │                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
             │  │                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
             │  │                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
             │  │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
             │  │  0x00007f3a7edd2261:   cmpl   $0x103bb00,0x8(,%rsi,8)      ; implicit exception: dispatches to 0x00007f3a7edd53e5
             │  │                                                            ;   {metadata(&apos;java/util/stream/Collectors$$Lambda+0x00007f3a0403bb00&apos;)}
   0.54%     │  │  0x00007f3a7edd226c:   jne    0x00007f3a7edd4add           ;*invokeinterface applyAsLong {reexecute=0 rethrow=0 return_oop=0}
             │  │                                                            ; - java.util.stream.Collectors::lambda$summingLong$23@6 (line 662)
             │  │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f3a0403bf30::accept@9
             │  │                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@37 (line 1107)
             │  │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f3a0403c7f0::accept@17
             │  │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
             │  │                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
             │  │                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
             │  │                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
             │  │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.03%     │  │  0x00007f3a7edd2272:   cmpl   $0x0,0xc(,%rbx,8)
   0.51%     │  │  0x00007f3a7edd227a:   je     0x00007f3a7edd4ed5
   0.01%     │  │  0x00007f3a7edd2280:   incq   0x10(,%rbx,8)                ;*lastore {reexecute=0 rethrow=0 return_oop=0}
             │  │                                                            ; - java.util.stream.Collectors::lambda$summingLong$23@12 (line 662)
             │  │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f3a0403bf30::accept@9
             │  │                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@37 (line 1107)
             │  │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f3a0403c7f0::accept@17
             │  │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
             │  │                                                            ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@95 (line 1708)
             │  │                                                            ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
             │  │                                                            ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
             │  │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.47%     │  │  0x00007f3a7edd2288:   mov    0xc0(%rsp),%r10d
   0.02%     │  │  0x00007f3a7edd2290:   mov    0x60(%rsp),%rdx
   0.00%     │  │  0x00007f3a7edd2295:   mov    0xc8(%rsp),%r11d
   0.54%     │  │  0x00007f3a7edd229d:   mov    0x74(%rsp),%r9d
   0.01%     │  ╰  0x00007f3a7edd22a2:   jmp    0x00007f3a7edd1f30           ;*iload_2 {reexecute=0 rethrow=0 return_oop=0}
             │                                                               ; - java.util.ArrayList$ArrayListSpliterator::forEachRemaining@81 (line 1706)
             │                                                               ; - java.util.stream.ReferencePipeline$Head::forEach@12 (line 762)
             │                                                               ; - java.util.stream.ReferencePipeline$7$1::accept@41 (line 276)
             │                                                               ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
             ↘     0x00007f3a7edd22a7:   mov    %r10d,0xbc(%rsp)
                   0x00007f3a7edd22af:   movabs $0x7f3a04069340,%rbp         ;   {metadata(&apos;java/util/stream/Collectors$$Lambda+0x00007f3a04069340&apos;)}
                   0x00007f3a7edd22b9:   nopl   0x0(%rax)
                   0x00007f3a7edd22c0:   cmp    %r8,%rbp
                   0x00007f3a7edd22c3:   jne    0x00007f3a7edd46d3           ; ImmutableOopMap {rcx=NarrowOop rbx=NarrowOop [64]=Oop [72]=Oop [84]=NarrowOop [88]=Oop [96]=Oop [104]=Oop [112]=NarrowOop [116]=NarrowOop [120]=Oop [128]=Oop [136]=Oop [148]=NarrowOop [152]=Oop }
                                                                             ;*iload_2 {reexecute=1 rethrow=0 return_oop=0}
....................................................................................................
  80.60%  <total for region 1>

....[Hottest Regions]...............................................................................
  80.60%      jvmci, level 4  java.util.HashMap$KeySpliterator::forEachRemaining, version 4, compile id 1263 
   7.20%      jvmci, level 4  com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.model.Author::hashCode, version 3, compile id 1234 
   4.47%                      <unknown> 
   2.06%      jvmci, level 4  java.util.HashMap$KeySpliterator::forEachRemaining, version 4, compile id 1263 
   1.47%      jvmci, level 4  com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.model.Author::hashCode, version 3, compile id 1234 
   1.40%                      <unknown> 
   0.71%                      <unknown> 
   0.15%              kernel  [unknown] 
   0.09%              kernel  [unknown] 
   0.07%              kernel  [unknown] 
   0.05%              kernel  [unknown] 
   0.05%              kernel  [unknown] 
   0.05%              kernel  [unknown] 
   0.05%              kernel  [unknown] 
   0.04%              kernel  [unknown] 
   0.04%              kernel  [unknown] 
   0.03%              kernel  [unknown] 
   0.03%              kernel  [unknown] 
   0.02%              kernel  [unknown] 
   0.02%              kernel  [unknown] 
   1.41%  <...other 421 warm regions...>
....................................................................................................
 100.00%  <totals>

....[Hottest Methods (after inlining)]..............................................................
  82.77%      jvmci, level 4  java.util.HashMap$KeySpliterator::forEachRemaining, version 4, compile id 1263 
   8.66%      jvmci, level 4  com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.model.Author::hashCode, version 3, compile id 1234 
   6.71%                      <unknown> 
   1.36%              kernel  [unknown] 
   0.03%      jvmci, level 4  java.util.HashMap::replaceAll, version 5, compile id 1274 
   0.02%        libc-2.31.so  __vfprintf_internal 
   0.02%      jvmci, level 4  java.util.stream.Collectors$$Lambda.0x00007f3a0403bd18::get, version 3, compile id 1269 
   0.02%           libjvm.so  xmlStream::write_text 
   0.02%        libc-2.31.so  _IO_default_xsputn 
   0.02%           libjvm.so  ElfSymbolTable::lookup 
   0.02%           libjvm.so  defaultStream::write 
   0.01%           libjvm.so  G1CardSet::occupied 
   0.01%  libpthread-2.31.so  __libc_write 
   0.01%          ld-2.31.so  __tls_get_addr 
   0.01%           libjvm.so  fileStream::write 
   0.01%        libc-2.31.so  _IO_fflush 
   0.01%           libjvm.so  JVMCIRuntime::new_array_common 
   0.01%        libc-2.31.so  __memset_avx2_erms 
   0.01%      hsdis-amd64.so  print_insn 
   0.01%           libjvm.so  G1ParScanThreadState::trim_queue_to_threshold 
   0.27%  <...other 108 warm methods...>
....................................................................................................
 100.00%  <totals>

....[Distribution by Source]........................................................................
  91.48%      jvmci, level 4
   6.71%                    
   1.36%              kernel
   0.27%           libjvm.so
   0.11%        libc-2.31.so
   0.03%  libpthread-2.31.so
   0.02%         interpreter
   0.01%      hsdis-amd64.so
   0.01%          ld-2.31.so
   0.00%         c1, level 3
....................................................................................................
 100.00%  <totals>



# JMH version: 1.37
# VM version: JDK 21, Java HotSpot(TM) 64-Bit Server VM, 21+35-jvmci-23.1-b15
# VM invoker: /home/gogu/bench_jdks/graalvm-jdk-21+35.1/bin/java
# VM options: -XX:ThreadPriorityPolicy=1 -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCIProduct -XX:-UnlockExperimentalVMOptions -Xms4g -Xmx4g -XX:+AlwaysPreTouch
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark.number_of_publications_per_year

# Run progress: 50.00% complete, ETA 00:13:58
# Fork: 1 of 1
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 7.753 ms/op
# Warmup Iteration   2: 5.047 ms/op
# Warmup Iteration   3: 4.999 ms/op
# Warmup Iteration   4: 5.064 ms/op
# Warmup Iteration   5: 5.016 ms/op
Iteration   1: 4.977 ms/op
Iteration   2: 5.027 ms/op
Iteration   3: 5.026 ms/op
Iteration   4: 5.026 ms/op
Iteration   5: 5.018 ms/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark.number_of_publications_per_year":
  5.015 ±(99.9%) 0.083 ms/op [Average]
  (min, avg, max) = (4.977, 5.015, 5.027), stdev = 0.021
  CI (99.9%): [4.932, 5.097] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark.number_of_publications_per_year:asm":
PrintAssembly processed: 314551 total address lines.
Perf output processed (skipped 62.558 seconds):
 Column 1: cycles (51385 events)

Hottest code regions (>10.00% "cycles" events):
 Event counts are percents of total event count.

....[Hottest Region 1]..............................................................................
jvmci, level 4, java.util.HashMap$KeySpliterator::forEachRemaining, version 4, compile id 1207 

                                                                          ; - java.util.stream.Collectors$$Lambda/0x00007f4edc03c5b8::accept@17
                                                                          ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                          ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
                0x00007f4f56db3530:   mov    %rbp,0xa8(%rsp)
                0x00007f4f56db3538:   vmovss -0x180(%rip),%xmm1        # 0x00007f4f56db33c0
                                                                          ;   {section_word}
                0x00007f4f56db3540:   movabs $0x7f4edc03c5b8,%rbp         ;   {metadata(&apos;java/util/stream/Collectors$$Lambda+0x00007f4edc03c5b8&apos;)}
                0x00007f4f56db354a:   mov    %rsi,%r11
                0x00007f4f56db354d:   mov    %eax,%r10d                   ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - java.util.HashMap$KeySpliterator::forEachRemaining@122 (line 1712)
   0.87%    ↗↗  0x00007f4f56db3550:   mov    %r10d,0xa4(%rsp)
   0.74%    ││  0x00007f4f56db3558:   mov    %r11,0x58(%rsp)
   0.61%    ││  0x00007f4f56db355d:   data16 xchg %ax,%ax
   0.50%    ││  0x00007f4f56db3560:   test   %r11,%r11
          ╭ ││  0x00007f4f56db3563:   jne    0x00007f4f56db3610           ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
          │ ││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@124 (line 1712)
   0.72%  │ ││  0x00007f4f56db3569:   cmp    %r10d,%ecx
          │ ││  0x00007f4f56db356c:   jbe    0x00007f4f56db6117
   0.52%  │ ││  0x00007f4f56db3572:   mov    0x10(%r9,%r10,4),%r11d
   0.62%  │ ││  0x00007f4f56db3577:   shl    $0x3,%r11                    ;*aaload {reexecute=0 rethrow=0 return_oop=0}
          │ ││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@133 (line 1713)
   0.33%  │ ││  0x00007f4f56db357b:   inc    %r10d                        ;*iinc {reexecute=0 rethrow=0 return_oop=0}
          │ ││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@130 (line 1713)
   0.69%  │ ││  0x00007f4f56db357e:   mov    0xa8(%rsp),%rbp
   0.57%  │ ││  0x00007f4f56db3586:   mov    %r14,%rax                    ;*aload {reexecute=0 rethrow=0 return_oop=0}
          │ ││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@157 (line 1718)
   0.42%  │ ││  0x00007f4f56db3589:   test   %r11,%r11
          │╭││  0x00007f4f56db358c:   jne    0x00007f4f56db35d9           ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
          ││││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@159 (line 1718)
   0.75%  ││││  0x00007f4f56db3592:   mov    0xd4(%rsp),%esi
   0.67%  ││││  0x00007f4f56db3599:   nopl   0x0(%rax)
   0.41%  ││││  0x00007f4f56db35a0:   cmp    %r10d,%esi
          ││││  0x00007f4f56db35a3:   jle    0x00007f4f56db5ccf           ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
          ││││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@164 (line 1718)
   0.28%  ││││  0x00007f4f56db35a9:   mov    0x458(%r15),%rdx             ; ImmutableOopMap {rax=Oop r11=Oop [96]=Oop [104]=Oop [116]=NarrowOop [120]=Oop }
          ││││                                                            ;*aload {reexecute=1 rethrow=0 return_oop=0}
          ││││                                                            ; - (reexecute) java.util.HashMap$KeySpliterator::forEachRemaining@157 (line 1718)
   0.69%  ││││  0x00007f4f56db35b0:   test   %eax,(%rdx)                  ;   {poll}
   0.65%  ││││  0x00007f4f56db35b2:   mov    %rax,%r14
   0.45%  ││││  0x00007f4f56db35b5:   vpxor  %xmm0,%xmm0,%xmm0
   0.31%  ││││  0x00007f4f56db35b9:   mov    0x68(%rsp),%r9
   0.62%  ││││  0x00007f4f56db35be:   mov    0xd0(%rsp),%ecx
   0.60%  ││││  0x00007f4f56db35c5:   mov    0x78(%rsp),%rdx
   0.41%  ││││  0x00007f4f56db35ca:   movabs $0x7f4edc03c5b8,%rbp         ;   {metadata(&apos;java/util/stream/Collectors$$Lambda+0x00007f4edc03c5b8&apos;)}
   0.29%  ││╰│  0x00007f4f56db35d4:   jmp    0x00007f4f56db3550           ;*aload {reexecute=0 rethrow=0 return_oop=0}
          ││ │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@122 (line 1712)
   0.61%  │↘ │  0x00007f4f56db35d9:   mov    0xd4(%rsp),%esi
   1.02%  │  │  0x00007f4f56db35e0:   mov    0x458(%r15),%rdx             ; ImmutableOopMap {rax=Oop r11=Oop [96]=Oop [104]=Oop [116]=NarrowOop [120]=Oop }
          │  │                                                            ;*aload {reexecute=1 rethrow=0 return_oop=0}
          │  │                                                            ; - (reexecute) java.util.HashMap$KeySpliterator::forEachRemaining@157 (line 1718)
   0.16%  │  │  0x00007f4f56db35e7:   test   %eax,(%rdx)                  ;   {poll}
   0.58%  │  │  0x00007f4f56db35e9:   mov    %rax,%r14
   0.20%  │  │  0x00007f4f56db35ec:   vpxor  %xmm0,%xmm0,%xmm0
   0.20%  │  │  0x00007f4f56db35f0:   mov    0x68(%rsp),%r9
   0.13%  │  │  0x00007f4f56db35f5:   mov    0xd0(%rsp),%ecx
   0.20%  │  │  0x00007f4f56db35fc:   mov    0x78(%rsp),%rdx
   0.19%  │  │  0x00007f4f56db3601:   movabs $0x7f4edc03c5b8,%rbp         ;   {metadata(&apos;java/util/stream/Collectors$$Lambda+0x00007f4edc03c5b8&apos;)}
   0.18%  │  ╰  0x00007f4f56db360b:   jmp    0x00007f4f56db3550           ;*aload {reexecute=0 rethrow=0 return_oop=0}
          │                                                               ; - java.util.HashMap$KeySpliterator::forEachRemaining@122 (line 1712)
   0.16%  ↘     0x00007f4f56db3610:   mov    0x14(%rdx),%r9d              ;*getfield val$accumulator {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - java.util.stream.ReduceOps$3ReducingSink::accept@1 (line 169)
                                                                          ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.23%        0x00007f4f56db3614:   test   %r9d,%r9d
                0x00007f4f56db3617:   je     0x00007f4f56db3a27
   0.21%        0x00007f4f56db361d:   mov    0x8(,%r9,8),%ecx
   0.61%        0x00007f4f56db3625:   movabs $0x7f4edb000000,%r13
   0.15%        0x00007f4f56db362f:   lea    0x0(%r13,%rcx,1),%rcx        ;*invokeinterface accept {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                          ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.60%        0x00007f4f56db3634:   mov    0x10(%r11),%r13d             ;*getfield key {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - java.util.HashMap$KeySpliterator::forEachRemaining@142 (line 1715)
  29.39%        0x00007f4f56db3638:   mov    0xc(%rdx),%edi
   0.07%        0x00007f4f56db363b:   mov    %edi,0x54(%rsp)
   0.05%        0x00007f4f56db363f:   mov    %edi,%edx
   0.05%        0x00007f4f56db3641:   shl    $0x3,%rdx                    ;*getfield state {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - java.util.stream.ReduceOps$3ReducingSink::accept@5 (line 169)
                                                                          ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.54%        0x00007f4f56db3645:   mov    %rdx,0x48(%rsp)
   0.07%        0x00007f4f56db364a:   mov    %r13d,%edx
   0.03%        0x00007f4f56db364d:   shl    $0x3,%rdx                    ;*getfield key {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - java.util.HashMap$KeySpliterator::forEachRemaining@142 (line 1715)
   0.05%        0x00007f4f56db3651:   mov    %rdx,0x40(%rsp)
   1.20%        0x00007f4f56db3656:   cmp    %rcx,%rbp
                0x00007f4f56db3659:   jne    0x00007f4f56db390d           ;*invokeinterface accept {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                          ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.07%        0x00007f4f56db365f:   mov    0xc(,%r9,8),%ecx             ; ImmutableOopMap {rdi=NarrowOop r9=NarrowOop r11=Oop r13=NarrowOop r14=Oop [64]=Oop [72]=Oop [84]=NarrowOop [88]=Oop [96]=Oop [104]=Oop [116]=NarrowOop [120]=Oop }
                                                                          ;*aload {reexecute=1 rethrow=0 return_oop=0}
                                                                          ; - (reexecute) java.util.HashMap$KeySpliterator::forEachRemaining@122 (line 1712)
   0.04%        0x00007f4f56db3667:   cmpl   $0x102bd28,0x8(,%rcx,8)      ; implicit exception: dispatches to 0x00007f4f56db6733
                                                                          ;   {metadata(&apos;com/ionutbalosin/jvm/performance/benchmarks/miscellaneous/publicationstatistics/PublicationStatistics$$Lambda+0x00007f4edc02bd28&apos;)}
   0.65%        0x00007f4f56db3672:   jne    0x00007f4f56db650b           ;*invokeinterface apply {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - java.util.stream.Collectors::lambda$groupingBy$53@3 (line 1105)
                                                                          ; - java.util.stream.Collectors$$Lambda/0x00007f4edc03c5b8::accept@17
                                                                          ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                          ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.08%        0x00007f4f56db3678:   nopl   0x0(%rax,%rax,1)             ; ImmutableOopMap {rdi=NarrowOop r9=NarrowOop r11=Oop r13=NarrowOop r14=Oop [64]=Oop [72]=Oop [84]=NarrowOop [88]=Oop [96]=Oop [104]=Oop [116]=NarrowOop [120]=Oop }
                                                                          ;*aload {reexecute=1 rethrow=0 return_oop=0}
                                                                          ; - (reexecute) java.util.HashMap$KeySpliterator::forEachRemaining@122 (line 1712)
   0.05%        0x00007f4f56db3680:   cmpl   $0x8e280,0x8(,%rdi,8)        ; implicit exception: dispatches to 0x00007f4f56db6756
                                                                          ;   {metadata(&apos;java/util/HashMap&apos;)}
   0.60%        0x00007f4f56db368b:   jne    0x00007f4f56db6299           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - java.util.stream.Collectors$$Lambda/0x00007f4edc03c5b8::accept@13
                                                                          ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                          ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.07%        0x00007f4f56db3691:   data16 data16 nopw 0x0(%rax,%rax,1)
   0.05%        0x00007f4f56db369c:   data16 data16 xchg %ax,%ax          ; ImmutableOopMap {rdi=NarrowOop r9=NarrowOop r11=Oop r13=NarrowOop r14=Oop [64]=Oop [72]=Oop [84]=NarrowOop [88]=Oop [96]=Oop [104]=Oop [116]=NarrowOop [120]=Oop }
                                                                          ;*aload {reexecute=1 rethrow=0 return_oop=0}
                                                                          ; - (reexecute) java.util.HashMap$KeySpliterator::forEachRemaining@122 (line 1712)
   0.04%        0x00007f4f56db36a0:   cmpl   $0x102b708,0x8(,%r13,8)      ; implicit exception: dispatches to 0x00007f4f56db6779
                                                                          ;   {metadata(&apos;com/ionutbalosin/jvm/performance/benchmarks/miscellaneous/publicationstatistics/model/Publication&apos;)}
  19.15%        0x00007f4f56db36ac:   jne    0x00007f4f56db63ab           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics$$Lambda/0x00007f4edc02bd28::apply@1
                                                                          ; - java.util.stream.Collectors::lambda$groupingBy$53@3 (line 1105)
                                                                          ; - java.util.stream.Collectors$$Lambda/0x00007f4edc03c5b8::accept@17
                                                                          ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                          ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.66%        0x00007f4f56db36b2:   mov    0x14(,%r9,8),%ecx            ;*getfield arg$3 {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - java.util.stream.Collectors$$Lambda/0x00007f4edc03c5b8::accept@9
                                                                          ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                          ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.03%        0x00007f4f56db36ba:   mov    %ecx,0x3c(%rsp)
   0.03%        0x00007f4f56db36be:   mov    0xc(,%r13,8),%r13d           ;*getfield year {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.model.Publication::getYear@1 (line 43)
                                                                          ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics$$Lambda/0x00007f4edc02bd28::apply@4
                                                                          ; - java.util.stream.Collectors::lambda$groupingBy$53@3 (line 1105)
                                                                          ; - java.util.stream.Collectors$$Lambda/0x00007f4edc03c5b8::accept@17
                                                                          ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                          ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.32%        0x00007f4f56db36c6:   mov    %r13d,0xa0(%rsp)
   0.88%        0x00007f4f56db36ce:   mov    0x24(,%rdi,8),%ebp           ;*getfield table {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - java.util.HashMap::resize@1 (line 684)
                                                                          ; - java.util.HashMap::computeIfAbsent@57 (line 1206)
                                                                          ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                          ; - java.util.stream.Collectors$$Lambda/0x00007f4edc03c5b8::accept@17
                                                                          ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                          ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.03%        0x00007f4f56db36d5:   mov    0x1c(,%rdi,8),%edx           ;*getfield threshold {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - java.util.HashMap::computeIfAbsent@31 (line 1204)
                                                                          ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                          ; - java.util.stream.Collectors$$Lambda/0x00007f4edc03c5b8::accept@17
                                                                          ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                          ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.04%        0x00007f4f56db36dc:   mov    0x14(,%rdi,8),%ebx           ;*getfield size {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - java.util.HashMap::computeIfAbsent@27 (line 1204)
                                                                          ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                          ; - java.util.stream.Collectors$$Lambda/0x00007f4edc03c5b8::accept@17
                                                                          ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                          ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.06%        0x00007f4f56db36e3:   mov    0x10(,%r9,8),%r9d
   0.64%        0x00007f4f56db36eb:   mov    %r9d,0x38(%rsp)
   0.02%        0x00007f4f56db36f0:   mov    %r9d,%esi
   0.04%        0x00007f4f56db36f3:   shl    $0x3,%rsi                    ;*getfield arg$2 {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - java.util.stream.Collectors$$Lambda/0x00007f4edc03c5b8::accept@5
                                                                          ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                          ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.06%        0x00007f4f56db36f7:   mov    %rsi,0x30(%rsp)
   0.63%        0x00007f4f56db36fc:   mov    %ebp,%r9d
   0.03%        0x00007f4f56db36ff:   shl    $0x3,%r9                     ;*getfield table {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - java.util.HashMap::resize@1 (line 684)
                                                                          ; - java.util.HashMap::computeIfAbsent@57 (line 1206)
                                                                          ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                          ; - java.util.stream.Collectors$$Lambda/0x00007f4edc03c5b8::accept@17
                                                                          ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                          ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.03%        0x00007f4f56db3703:   mov    %r9,0x28(%rsp)
   0.06%        0x00007f4f56db3708:   mov    %ecx,%eax
   0.65%        0x00007f4f56db370a:   shl    $0x3,%rax                    ;*getfield arg$3 {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - java.util.stream.Collectors$$Lambda/0x00007f4edc03c5b8::accept@9
                                                                          ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                          ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.04%        0x00007f4f56db370e:   mov    %r13d,%edi
   0.04%        0x00007f4f56db3711:   shr    $0x10,%edi                   ;*iushr {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - java.util.HashMap::hash@17 (line 338)
                                                                          ; - java.util.HashMap::computeIfAbsent@13 (line 1199)
                                                                          ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                          ; - java.util.stream.Collectors$$Lambda/0x00007f4edc03c5b8::accept@17
                                                                          ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                          ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.03%        0x00007f4f56db3714:   xor    %r13d,%edi                   ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - java.util.HashMap::hash@18 (line 338)
                                                                          ; - java.util.HashMap::computeIfAbsent@13 (line 1199)
                                                                          ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                          ; - java.util.stream.Collectors$$Lambda/0x00007f4edc03c5b8::accept@17
                                                                          ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                          ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.61%        0x00007f4f56db3717:   mov    %edi,0x9c(%rsp)
   0.02%        0x00007f4f56db371e:   xchg   %ax,%ax
   0.02%        0x00007f4f56db3720:   cmp    %edx,%ebx
                0x00007f4f56db3722:   jg     0x00007f4f56db465b           ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - java.util.HashMap::computeIfAbsent@34 (line 1204)
                                                                          ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                          ; - java.util.stream.Collectors$$Lambda/0x00007f4edc03c5b8::accept@17
                                                                          ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                          ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.05%        0x00007f4f56db3728:   test   %ebp,%ebp
                0x00007f4f56db372a:   je     0x00007f4f56db562d           ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - java.util.HashMap::computeIfAbsent@44 (line 1204)
                                                                          ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                          ; - java.util.stream.Collectors$$Lambda/0x00007f4edc03c5b8::accept@17
                                                                          ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                          ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.63%        0x00007f4f56db3730:   mov    0xc(,%rbp,8),%ebx            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - java.util.HashMap::computeIfAbsent@49 (line 1204)
                                                                          ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                          ; - java.util.stream.Collectors$$Lambda/0x00007f4edc03c5b8::accept@17
                                                                          ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                          ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.05%        0x00007f4f56db3737:   test   %ebx,%ebx
                0x00007f4f56db3739:   je     0x00007f4f56db633f           ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - java.util.HashMap::computeIfAbsent@53 (line 1204)
                                                                          ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                          ; - java.util.stream.Collectors$$Lambda/0x00007f4edc03c5b8::accept@17
                                                                          ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                          ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.03%        0x00007f4f56db373f:   mov    %ebx,%edx
   0.07%        0x00007f4f56db3741:   dec    %edx                         ;*isub {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - java.util.HashMap::computeIfAbsent@71 (line 1207)
                                                                          ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                          ; - java.util.stream.Collectors$$Lambda/0x00007f4edc03c5b8::accept@17
                                                                          ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                          ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.62%        0x00007f4f56db3743:   and    %edi,%edx                    ;*iand {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - java.util.HashMap::computeIfAbsent@73 (line 1207)
                                                                          ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                          ; - java.util.stream.Collectors$$Lambda/0x00007f4edc03c5b8::accept@17
                                                                          ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                          ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.03%        0x00007f4f56db3745:   cmp    %edx,%ebx
                0x00007f4f56db3747:   jbe    0x00007f4f56db6250
   0.03%        0x00007f4f56db374d:   mov    0x10(%r9,%rdx,4),%ebp        ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - java.util.HashMap::computeIfAbsent@77 (line 1207)
                                                                          ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                          ; - java.util.stream.Collectors$$Lambda/0x00007f4edc03c5b8::accept@17
                                                                          ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                          ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.67%        0x00007f4f56db3752:   mov    %edx,0x94(%rsp)
   0.08%        0x00007f4f56db3759:   mov    %r9,0x18(%rsp)
   0.05%        0x00007f4f56db375e:   mov    %ebx,0x90(%rsp)              ; ImmutableOopMap {rax=Oop rcx=NarrowOop rbp=NarrowOop rsi=Oop r11=Oop r14=Oop [24]=Oop [48]=Oop [56]=NarrowOop [60]=NarrowOop [64]=Oop [72]=Oop [84]=NarrowOop [88]=Oop [96]=Oop [104]=Oop [116]=NarrowOop [120]=Oop }
                                                                          ;*aload {reexecute=1 rethrow=0 return_oop=0}
                                                                          ; - (reexecute) java.util.HashMap::computeIfAbsent@66 (line 1207)
                                                                          ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                          ; - java.util.stream.Collectors$$Lambda/0x00007f4edc03c5b8::accept@17
                                                                          ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                          ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.02%        0x00007f4f56db3765:   cmpl   $0x103bcf8,0x8(,%rcx,8)      ; implicit exception: dispatches to 0x00007f4f56db679c
                                                                          ;   {metadata(&apos;java/util/stream/Collectors$$Lambda+0x00007f4edc03bcf8&apos;)}
   0.65%        0x00007f4f56db3770:   jne    0x00007f4f56db61b6           ;*invokeinterface accept {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - java.util.stream.Collectors::lambda$groupingBy$53@37 (line 1107)
                                                                          ; - java.util.stream.Collectors$$Lambda/0x00007f4edc03c5b8::accept@17
                                                                          ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                          ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.04%        0x00007f4f56db3776:   mov    %ebp,%ebx
   0.03%        0x00007f4f56db3778:   shl    $0x3,%rbx                    ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - java.util.HashMap::computeIfAbsent@77 (line 1207)
                                                                          ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                          ; - java.util.stream.Collectors$$Lambda/0x00007f4edc03c5b8::accept@17
                                                                          ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                          ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.60%        0x00007f4f56db377c:   mov    %rbx,0x28(%rsp)
   0.61%        0x00007f4f56db3781:   lea    0x80(%r13),%edx              ;* unwind (locked if synchronized)
                                                                          ; - java.lang.Integer::valueOf@-3
                                                                          ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics$$Lambda/0x00007f4edc02bd28::apply@7
                                                                          ; - java.util.stream.Collectors::lambda$groupingBy$53@3 (line 1105)
                                                                          ; - java.util.stream.Collectors$$Lambda/0x00007f4edc03c5b8::accept@17
                                                                          ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                          ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.03%        0x00007f4f56db3788:   mov    %edx,0x98(%rsp)
   0.04%        0x00007f4f56db378f:   test   %ebp,%ebp
                0x00007f4f56db3791:   je     0x00007f4f56db3e0c           ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - java.util.HashMap::computeIfAbsent@81 (line 1207)
                                                                          ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                          ; - java.util.stream.Collectors$$Lambda/0x00007f4edc03c5b8::accept@17
                                                                          ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                          ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.04%        0x00007f4f56db3797:   nopw   0x0(%rax,%rax,1)
   0.62%        0x00007f4f56db37a0:   cmpl   $0x1a8490,0x8(,%rbp,8)       ;   {metadata(&apos;java/util/HashMap$TreeNode&apos;)}
   2.34%        0x00007f4f56db37ab:   je     0x00007f4f56db6468           ;*aastore {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - java.util.HashMap::computeIfAbsent@289 (line 1240)
                                                                          ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                          ; - java.util.stream.Collectors$$Lambda/0x00007f4edc03c5b8::accept@17
                                                                          ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                          ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.68%        0x00007f4f56db37b1:   mov    %ebp,0xc(%rsp)
   0.03%        0x00007f4f56db37b5:   mov    $0x0,%ebp
   0.04%        0x00007f4f56db37ba:   jmp    0x00007f4f56db37e7           ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - java.util.HashMap::computeIfAbsent@114 (line 1213)
                                                                          ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                          ; - java.util.stream.Collectors$$Lambda/0x00007f4edc03c5b8::accept@17
                                                                          ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                          ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
                0x00007f4f56db37bf:   nop                                 ;*getfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - java.util.HashMap::computeIfAbsent@116 (line 1213)
                                                                          ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                          ; - java.util.stream.Collectors$$Lambda/0x00007f4edc03c5b8::accept@17
                                                                          ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
....................................................................................................
  83.47%  <total for region 1>

....[Hottest Region 2]..............................................................................
jvmci, level 4, java.util.HashMap$KeySpliterator::forEachRemaining, version 4, compile id 1207 

                                                                       ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                       ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
             0x00007f4f56db37e1:   mov    %r10,%rbx
             0x00007f4f56db37e4:   mov    %r8d,%ebp                    ; ImmutableOopMap {rax=Oop rcx=NarrowOop rbx=Oop rsi=Oop r11=Oop r14=Oop [12]=NarrowOop [24]=Oop [40]=Oop [48]=Oop [56]=NarrowOop [60]=NarrowOop [64]=Oop [72]=Oop [84]=NarrowOop [88]=Oop [96]=Oop [104]=Oop [116]=NarrowOop [120]=Oop }
                                                                       ;*aload {reexecute=1 rethrow=0 return_oop=0}
                                                                       ; - (reexecute) java.util.HashMap::computeIfAbsent@114 (line 1213)
                                                                       ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                       ; - java.util.stream.Collectors$$Lambda/0x00007f4edc03c5b8::accept@17
                                                                       ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                       ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.03%     0x00007f4f56db37e7:   mov    0xc(%rbx),%r9d               ; implicit exception: dispatches to 0x00007f4f56db67bf
   0.70%     0x00007f4f56db37eb:   mov    0x10(%rbx),%r8d              ;*getfield key {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - java.util.HashMap::computeIfAbsent@125 (line 1213)
                                                                       ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                       ; - java.util.stream.Collectors$$Lambda/0x00007f4edc03c5b8::accept@17
                                                                       ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                       ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.11%     0x00007f4f56db37ef:   mov    0x14(%rbx),%r10d             ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - java.util.HashMap::computeIfAbsent@176 (line 1222)
                                                                       ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                       ; - java.util.stream.Collectors$$Lambda/0x00007f4edc03c5b8::accept@17
                                                                       ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                       ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.11%     0x00007f4f56db37f3:   cmp    %edi,%r9d
             0x00007f4f56db37f6:   jne    0x00007f4f56db37c0           ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - java.util.HashMap::computeIfAbsent@120 (line 1213)
                                                                       ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                       ; - java.util.stream.Collectors$$Lambda/0x00007f4edc03c5b8::accept@17
                                                                       ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                       ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.04%     0x00007f4f56db37f8:   nopl   0x0(%rax,%rax,1)             ; ImmutableOopMap {rax=Oop rcx=NarrowOop rbx=Oop rsi=Oop r8=NarrowOop r10=NarrowOop r11=Oop r14=Oop [24]=Oop [40]=Oop [48]=Oop [64]=Oop [72]=Oop [88]=Oop [96]=Oop [104]=Oop [116]=NarrowOop [120]=Oop }
                                                                       ;*aload {reexecute=1 rethrow=0 return_oop=0}
                                                                       ; - (reexecute) java.util.HashMap::computeIfAbsent@114 (line 1213)
                                                                       ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                       ; - java.util.stream.Collectors$$Lambda/0x00007f4edc03c5b8::accept@17
                                                                       ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                       ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.58%     0x00007f4f56db3800:   cmpl   $0x25c88,0x8(,%r8,8)         ; implicit exception: dispatches to 0x00007f4f56db67e2
                                                                       ;   {metadata(&apos;java/lang/Integer&apos;)}
   2.41%     0x00007f4f56db380c:   jne    0x00007f4f56db63f1           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - java.lang.Integer::equals@4 (line 1224)
                                                                       ; - java.util.HashMap::computeIfAbsent@142 (line 1214)
                                                                       ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                       ; - java.util.stream.Collectors$$Lambda/0x00007f4edc03c5b8::accept@17
                                                                       ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                       ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.62%     0x00007f4f56db3812:   mov    0xc(,%r8,8),%r9d             ;* unwind (locked if synchronized)
                                                                       ; - java.lang.Integer::intValue@-3
                                                                       ; - java.lang.Integer::equals@15 (line 1225)
                                                                       ; - java.util.HashMap::computeIfAbsent@142 (line 1214)
                                                                       ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                       ; - java.util.stream.Collectors$$Lambda/0x00007f4edc03c5b8::accept@17
                                                                       ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                       ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.16%     0x00007f4f56db381a:   nopw   0x0(%rax,%rax,1)
   0.02%     0x00007f4f56db3820:   cmp    $0x100,%edx
          ╭  0x00007f4f56db3826:   jb     0x00007f4f56db38fa
   0.03%  │  0x00007f4f56db382c:   mov    %rbx,0x10(%rsp)
   0.64%  │  0x00007f4f56db3831:   mov    0x1b8(%r15),%rdx
   0.06%  │  0x00007f4f56db3838:   lea    0x10(%rdx),%rbx
   0.04%  │  0x00007f4f56db383c:   nopl   0x0(%rax)
   0.02%  │  0x00007f4f56db3840:   cmp    0x1c8(%r15),%rbx
          │  0x00007f4f56db3847:   ja     0x00007f4f56db3d95
   0.63%  │  0x00007f4f56db384d:   mov    %rbx,0x1b8(%r15)
   0.07%  │  0x00007f4f56db3854:   prefetchw 0xd0(%rdx)
   0.09%  │  0x00007f4f56db385b:   movq   $0x1,(%rdx)
   0.02%  │  0x00007f4f56db3862:   movl   $0x25c88,0x8(%rdx)           ;   {metadata(&apos;java/lang/Integer&apos;)}
   0.63%  │  0x00007f4f56db3869:   mov    %r13d,0xc(%rdx)
   0.09%  │  0x00007f4f56db386d:   mov    %rdx,%rbx                    ;* unwind (locked if synchronized)
          │                                                            ; - java.lang.Integer::valueOf@-3
          │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics$$Lambda/0x00007f4edc02bd28::apply@7
          │                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@3 (line 1105)
          │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f4edc03c5b8::accept@17
          │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
          │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.04%  │  0x00007f4f56db3870:   shl    $0x3,%r8                     ;*getfield key {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - java.util.HashMap::computeIfAbsent@125 (line 1213)
          │                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
          │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f4edc03c5b8::accept@17
          │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
          │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.02%  │  0x00007f4f56db3874:   cmp    %r8,%rbx
          │  0x00007f4f56db3877:   je     0x00007f4f56db5f42           ;*if_acmpeq {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - java.util.HashMap::computeIfAbsent@132 (line 1213)
          │                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
          │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f4edc03c5b8::accept@17
          │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
          │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.62%  │  0x00007f4f56db387d:   data16 xchg %ax,%ax
   0.06%  │  0x00007f4f56db3880:   cmp    0xc(%rbx),%r9d
          │  0x00007f4f56db3884:   jne    0x00007f4f56db6569           ; ImmutableOopMap {rax=Oop rcx=NarrowOop rbx=Oop rsi=Oop r10=NarrowOop r11=Oop r14=Oop [16]=Oop [24]=Oop [40]=Oop [48]=Oop [64]=Oop [72]=Oop [88]=Oop [96]=Oop [104]=Oop [116]=NarrowOop [120]=Oop }
          │                                                            ;*aload {reexecute=1 rethrow=0 return_oop=0}
          │                                                            ; - (reexecute) java.util.HashMap::computeIfAbsent@148 (line 1215)
          │                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
          │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f4edc03c5b8::accept@17
          │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
          │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.37%  │  0x00007f4f56db388a:   cmpl   $0x2a80,0x8(,%r10,8)         ; implicit exception: dispatches to 0x00007f4f56db6805
          │                                                            ;   {metadata({type array long})}
   0.88%  │  0x00007f4f56db3896:   jne    0x00007f4f56db6076           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f4edc03bcf8::accept@5
          │                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@37 (line 1107)
          │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f4edc03c5b8::accept@17
          │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
          │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.11%  │  0x00007f4f56db389c:   mov    0xc(,%rcx,8),%r8d            ; ImmutableOopMap {rax=Oop rbx=Oop rsi=Oop r10=NarrowOop r11=Oop r14=Oop [16]=Oop [24]=Oop [40]=Oop [48]=Oop [64]=Oop [72]=Oop [88]=Oop [96]=Oop [104]=Oop [116]=NarrowOop [120]=Oop }
          │                                                            ;*aload {reexecute=1 rethrow=0 return_oop=0}
          │                                                            ; - (reexecute) java.util.HashMap::computeIfAbsent@148 (line 1215)
          │                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
          │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f4edc03c5b8::accept@17
          │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
          │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.03%  │  0x00007f4f56db38a4:   cmpl   $0x103b8c8,0x8(,%r8,8)       ; implicit exception: dispatches to 0x00007f4f56db6828
          │                                                            ;   {metadata(&apos;java/util/stream/Collectors$$Lambda+0x00007f4edc03b8c8&apos;)}
   0.60%  │  0x00007f4f56db38b0:   jne    0x00007f4f56db6165           ;*invokeinterface applyAsLong {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - java.util.stream.Collectors::lambda$summingLong$23@6 (line 662)
          │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f4edc03bcf8::accept@9
          │                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@37 (line 1107)
          │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f4edc03c5b8::accept@17
          │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
          │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.11%  │  0x00007f4f56db38b6:   data16 nopw 0x0(%rax,%rax,1)
   0.03%  │  0x00007f4f56db38c0:   cmpl   $0x0,0xc(,%r10,8)
   0.71%  │  0x00007f4f56db38c9:   je     0x00007f4f56db5def
   0.14%  │  0x00007f4f56db38cf:   incq   0x10(,%r10,8)                ;*lastore {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - java.util.stream.Collectors::lambda$summingLong$23@12 (line 662)
          │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f4edc03bcf8::accept@9
          │                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@37 (line 1107)
          │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f4edc03c5b8::accept@17
          │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
          │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.69%  │  0x00007f4f56db38d7:   mov    0x18(%r11),%esi
   0.52%  │  0x00007f4f56db38db:   shl    $0x3,%rsi                    ;*getfield next {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@152 (line 1716)
   0.07%  │  0x00007f4f56db38df:   mov    %rsi,%r11
   0.01%  │  0x00007f4f56db38e2:   mov    0xa4(%rsp),%r10d
   0.53%  │  0x00007f4f56db38ea:   mov    0xa8(%rsp),%rbp
   0.10%  │  0x00007f4f56db38f2:   mov    %r14,%rax
   0.06%  │  0x00007f4f56db38f5:   jmp    0x00007f4f56db3589
          ↘  0x00007f4f56db38fa:   mov    %rbx,0x10(%rsp)
             0x00007f4f56db38ff:   mov    0x10(%r14,%rdx,4),%ebx
             0x00007f4f56db3904:   shl    $0x3,%rbx                    ;* unwind (locked if synchronized)
                                                                       ; - java.lang.Integer::valueOf@-3
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics$$Lambda/0x00007f4edc02bd28::apply@7
                                                                       ; - java.util.stream.Collectors::lambda$groupingBy$53@3 (line 1105)
                                                                       ; - java.util.stream.Collectors$$Lambda/0x00007f4edc03c5b8::accept@17
                                                                       ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                       ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
             0x00007f4f56db3908:   jmp    0x00007f4f56db3870
....................................................................................................
  12.78%  <total for region 2>

....[Hottest Regions]...............................................................................
  83.47%      jvmci, level 4  java.util.HashMap$KeySpliterator::forEachRemaining, version 4, compile id 1207 
  12.78%      jvmci, level 4  java.util.HashMap$KeySpliterator::forEachRemaining, version 4, compile id 1207 
   0.99%              kernel  [unknown] 
   0.21%              kernel  [unknown] 
   0.12%              kernel  [unknown] 
   0.08%              kernel  [unknown] 
   0.08%              kernel  [unknown] 
   0.07%              kernel  [unknown] 
   0.06%              kernel  [unknown] 
   0.06%              kernel  [unknown] 
   0.03%              kernel  [unknown] 
   0.03%              kernel  [unknown] 
   0.03%              kernel  [unknown] 
   0.02%              kernel  [unknown] 
   0.02%              kernel  [unknown] 
   0.02%      jvmci, level 4  java.util.HashMap$KeySpliterator::forEachRemaining, version 4, compile id 1207 
   0.02%              kernel  [unknown] 
   0.02%              kernel  [unknown] 
   0.02%              kernel  [unknown] 
   0.02%              kernel  [unknown] 
   1.85%  <...other 532 warm regions...>
....................................................................................................
 100.00%  <totals>

....[Hottest Methods (after inlining)]..............................................................
  96.33%      jvmci, level 4  java.util.HashMap$KeySpliterator::forEachRemaining, version 4, compile id 1207 
   2.91%              kernel  [unknown] 
   0.19%                      <unknown> 
   0.03%        libc-2.31.so  __vfprintf_internal 
   0.02%      jvmci, level 4  com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::number_of_publications_per_year, version 2, compile id 1286 
   0.02%           libjvm.so  xmlStream::write_text 
   0.02%  libpthread-2.31.so  pthread_cond_timedwait@@GLIBC_2.3.2 
   0.02%        libc-2.31.so  __memset_avx2_unaligned_erms 
   0.02%        libc-2.31.so  clock_gettime@GLIBC_2.2.5 
   0.02%           libjvm.so  StatSamplerTask::task 
   0.02%           libjvm.so  fileStream::write 
   0.01%      jvmci, level 4  java.util.stream.Collectors$$Lambda.0x00007f4edc03bae0::get, version 3, compile id 1233 
   0.01%           libjvm.so  ElfSymbolTable::lookup 
   0.01%        libc-2.31.so  syscall 
   0.01%           libjvm.so  CompilerOracle::has_option_value<bool> 
   0.01%          ld-2.31.so  __tls_get_addr 
   0.01%           libjvm.so  ObjectSynchronizer::is_async_deflation_needed 
   0.01%      hsdis-amd64.so  print_insn 
   0.01%           libjvm.so  HeapRegionManager::par_iterate 
   0.01%           libjvm.so  G1CardSet::reset_table_scanner 
   0.31%  <...other 120 warm methods...>
....................................................................................................
 100.00%  <totals>

....[Distribution by Source]........................................................................
  96.36%      jvmci, level 4
   2.91%              kernel
   0.31%           libjvm.so
   0.19%                    
   0.13%        libc-2.31.so
   0.03%  libpthread-2.31.so
   0.02%      hsdis-amd64.so
   0.02%         interpreter
   0.02%          ld-2.31.so
   0.00%              [vdso]
   0.00%    perf-2147871.map
....................................................................................................
 100.00%  <totals>



# JMH version: 1.37
# VM version: JDK 21, Java HotSpot(TM) 64-Bit Server VM, 21+35-jvmci-23.1-b15
# VM invoker: /home/gogu/bench_jdks/graalvm-jdk-21+35.1/bin/java
# VM options: -XX:ThreadPriorityPolicy=1 -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCIProduct -XX:-UnlockExperimentalVMOptions -Xms4g -Xmx4g -XX:+AlwaysPreTouch
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark.publication_with_the_most_authors

# Run progress: 57.14% complete, ETA 00:11:55
# Fork: 1 of 1
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 14.420 ms/op
# Warmup Iteration   2: 10.923 ms/op
# Warmup Iteration   3: 10.845 ms/op
# Warmup Iteration   4: 11.115 ms/op
# Warmup Iteration   5: 11.118 ms/op
Iteration   1: 10.934 ms/op
Iteration   2: 11.408 ms/op
Iteration   3: 10.900 ms/op
Iteration   4: 10.795 ms/op
Iteration   5: 10.922 ms/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark.publication_with_the_most_authors":
  10.992 ±(99.9%) 0.921 ms/op [Average]
  (min, avg, max) = (10.795, 10.992, 11.408), stdev = 0.239
  CI (99.9%): [10.071, 11.913] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark.publication_with_the_most_authors:asm":
PrintAssembly processed: 303956 total address lines.
Perf output processed (skipped 62.543 seconds):
 Column 1: cycles (51011 events)

Hottest code regions (>10.00% "cycles" events):
 Event counts are percents of total event count.

....[Hottest Region 1]..............................................................................
jvmci, level 4, java.util.HashMap$KeySpliterator::forEachRemaining, version 6, compile id 1208 

                                                                                ; - java.util.stream.ReferencePipeline$2$1::accept@21 (line 179)
                                                                                ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
                      0x00007f60aadc8f48:   mov    %rdi,0x80(%rsp)
                      0x00007f60aadc8f50:   movabs $0x7f603002b708,%rdi         ;   {metadata(&apos;com/ionutbalosin/jvm/performance/benchmarks/miscellaneous/publicationstatistics/model/Publication&apos;)}
                      0x00007f60aadc8f5a:   movabs $0x7f603002bd28,%r14         ;   {metadata(&apos;com/ionutbalosin/jvm/performance/benchmarks/miscellaneous/publicationstatistics/PublicationStatistics$$Lambda+0x00007f603002bd28&apos;)}
                      0x00007f60aadc8f64:   movabs $0x7f602f00e8d8,%r10         ;   {metadata(&apos;java/lang/String&apos;)}
                      0x00007f60aadc8f6e:   movabs $0x7f602f224660,%r11         ;   {metadata(&apos;java/util/stream/FindOps$FindSink$OfRef&apos;)}
                      0x00007f60aadc8f78:   jmp    0x00007f60aadcb007
                      0x00007f60aadc8f7d:   data16 xchg %ax,%ax                 ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                                                ; - java.util.HashMap$KeySpliterator::forEachRemaining@124 (line 1712)
   0.17%   ↗          0x00007f60aadc8f80:   cmp    %ebx,%ecx
           │          0x00007f60aadc8f82:   jbe    0x00007f60aadcae8e
   0.11%   │          0x00007f60aadc8f88:   mov    0x10(%r9,%rbx,4),%r13d
   0.32%   │          0x00007f60aadc8f8d:   shl    $0x3,%r13                    ;*aaload {reexecute=0 rethrow=0 return_oop=0}
           │                                                                    ; - java.util.HashMap$KeySpliterator::forEachRemaining@133 (line 1713)
   0.60%   │          0x00007f60aadc8f91:   inc    %ebx                         ;*iinc {reexecute=0 rethrow=0 return_oop=0}
           │                                                                    ; - java.util.HashMap$KeySpliterator::forEachRemaining@130 (line 1713)
   0.15%   │          0x00007f60aadc8f93:   mov    %r13,%r11
   0.12%   │          0x00007f60aadc8f96:   mov    %ebx,%r10d
           │          0x00007f60aadc8f99:   mov    %rdi,%rbx
   0.68%   │          0x00007f60aadc8f9c:   mov    0x80(%rsp),%r13              ;*aload {reexecute=0 rethrow=0 return_oop=0}
           │                                                                    ; - java.util.HashMap$KeySpliterator::forEachRemaining@157 (line 1718)
   0.20%   │    ↗     0x00007f60aadc8fa4:   test   %r11,%r11
          ╭│    │     0x00007f60aadc8fa7:   jne    0x00007f60aadc920c           ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
          ││    │                                                               ; - java.util.HashMap$KeySpliterator::forEachRemaining@159 (line 1718)
   0.13%  ││    │     0x00007f60aadc8fad:   mov    0xa4(%rsp),%eax
   0.03%  ││    │     0x00007f60aadc8fb4:   cmp    %r10d,%eax
          ││    │     0x00007f60aadc8fb7:   jle    0x00007f60aadcab31           ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
          ││    │                                                               ; - java.util.HashMap$KeySpliterator::forEachRemaining@164 (line 1718)
   0.91%  ││    │↗    0x00007f60aadc8fbd:   mov    0x7c(%rsp),%esi
   0.17%  ││    ││    0x00007f60aadc8fc1:   inc    %esi
   0.10%  ││    ││    0x00007f60aadc8fc3:   cmp    $0x2000,%esi
          ││    ││    0x00007f60aadc8fc9:   jge    0x00007f60aadcaf97
   0.02%  ││    ││    0x00007f60aadc8fcf:   mov    %esi,0x7c(%rsp)
   0.95%  ││    ││    0x00007f60aadc8fd3:   movabs $0x7f603002bd28,%r14         ;   {metadata(&apos;com/ionutbalosin/jvm/performance/benchmarks/miscellaneous/publicationstatistics/PublicationStatistics$$Lambda+0x00007f603002bd28&apos;)}
   0.16%  ││    ││    0x00007f60aadc8fdd:   mov    %rbx,%rdi
   0.11%  ││    ││    0x00007f60aadc8fe0:   movabs $0x7f602f227550,%rbp         ;   {metadata(&apos;java/util/stream/ReferencePipeline$3$1&apos;)}
   0.01%  ││    ││    0x00007f60aadc8fea:   vpxor  %xmm0,%xmm0,%xmm0
   1.07%  ││    ││    0x00007f60aadc8fee:   mov    0x40(%rsp),%r9
   0.19%  ││    ││    0x00007f60aadc8ff3:   mov    0xa0(%rsp),%ecx
   0.12%  ││    ││    0x00007f60aadc8ffa:   mov    0x50(%rsp),%rdx
   0.00%  ││    ││    0x00007f60aadc8fff:   mov    %r11,%r13
   0.99%  ││    ││    0x00007f60aadc9002:   mov    %r10d,%ebx
   0.13%  ││    ││    0x00007f60aadc9005:   movabs $0x7f602f00e8d8,%r10         ;   {metadata(&apos;java/lang/String&apos;)}
   0.13%  ││    ││    0x00007f60aadc900f:   movabs $0x7f602f224660,%r11         ;*aload {reexecute=0 rethrow=0 return_oop=0}
          ││    ││                                                              ; - java.util.HashMap$KeySpliterator::forEachRemaining@122 (line 1712)
          ││    ││                                                              ;   {metadata(&apos;java/util/stream/FindOps$FindSink$OfRef&apos;)}
   0.01%  ││    ││    0x00007f60aadc9019:   nopl   0x0(%rax)
   0.94%  ││    ││    0x00007f60aadc9020:   test   %r13,%r13
          │╰    ││    0x00007f60aadc9023:   je     0x00007f60aadc8f80           ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
          │     ││                                                              ; - java.util.HashMap$KeySpliterator::forEachRemaining@124 (line 1712)
          │     ││    0x00007f60aadc9029:   nopl   0x0(%rax)                    ;*getfield val$predicate {reexecute=0 rethrow=0 return_oop=0}
          │     ││                                                              ; - java.util.stream.ReferencePipeline$2$1::accept@4 (line 178)
          │     ││                                                              ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
          │     ││    0x00007f60aadc9030:   mov    0x10(%rdx),%r9d              ; ImmutableOopMap {rdx=Oop r13=Oop [56]=Oop [64]=Oop [76]=NarrowOop [80]=Oop }
          │     ││                                                              ;*aload {reexecute=1 rethrow=0 return_oop=0}
          │     ││                                                              ; - (reexecute) java.util.HashMap$KeySpliterator::forEachRemaining@122 (line 1712)
   0.00%  │     ││    0x00007f60aadc9034:   mov    0x34(,%r9,8),%r9d            ; implicit exception: dispatches to 0x00007f60aadcb0d3
   0.41%  │     ││    0x00007f60aadc903c:   nopl   0x0(%rax)
          │     ││    0x00007f60aadc9040:   test   %r9d,%r9d
          │ ╭   ││    0x00007f60aadc9043:   je     0x00007f60aadc9225
   0.02%  │ │   ││    0x00007f60aadc9049:   mov    0x8(,%r9,8),%ecx
   0.09%  │ │   ││    0x00007f60aadc9051:   mov    %r9d,0x34(%rsp)
   0.33%  │ │   ││    0x00007f60aadc9056:   movabs $0x7f602f000000,%r9
          │ │   ││    0x00007f60aadc9060:   lea    (%r9,%rcx,1),%rcx            ;*invokeinterface test {reexecute=0 rethrow=0 return_oop=0}
          │ │   ││                                                              ; - java.util.stream.ReferencePipeline$2$1::accept@8 (line 178)
          │ │   ││                                                              ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.02%  │ │   ││ ↗  0x00007f60aadc9064:   mov    0x10(%r13),%r9d
  21.38%  │ │   ││ │  0x00007f60aadc9068:   mov    %r9d,0x30(%rsp)
   0.53%  │ │   ││ │  0x00007f60aadc906d:   test   %r9d,%r9d
          │ │╭  ││ │  0x00007f60aadc9070:   je     0x00007f60aadc9218
          │ ││  ││ │  0x00007f60aadc9076:   mov    0x8(,%r9,8),%r8d
  23.41%  │ ││  ││ │  0x00007f60aadc907e:   movabs $0x7f602f000000,%rsi
          │ ││  ││ │  0x00007f60aadc9088:   lea    (%rsi,%r8,1),%r8
   0.37%  │ ││  ││↗│  0x00007f60aadc908c:   mov    %r9d,%esi
          │ ││  ││││  0x00007f60aadc908f:   shl    $0x3,%rsi                    ;*getfield key {reexecute=0 rethrow=0 return_oop=0}
          │ ││  ││││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@142 (line 1715)
          │ ││  ││││  0x00007f60aadc9093:   cmp    %rcx,%r14
          │ ││  ││││  0x00007f60aadc9096:   jne    0x00007f60aadc9a46           ;*invokeinterface test {reexecute=0 rethrow=0 return_oop=0}
          │ ││  ││││                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@8 (line 178)
          │ ││  ││││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
          │ ││  ││││  0x00007f60aadc909c:   nopl   0x0(%rax)
   0.36%  │ ││  ││││  0x00007f60aadc90a0:   cmp    %r8,%rdi
          │ ││  ││││  0x00007f60aadc90a3:   jne    0x00007f60aadcad59           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
          │ ││  ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics$$Lambda/0x00007f603002bd28::test@1
          │ ││  ││││                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@8 (line 178)
          │ ││  ││││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
          │ ││  ││││  0x00007f60aadc90a9:   cmpl   $0x76c,0xc(,%r9,8)
   0.49%  │ ││  ││││  0x00007f60aadc90b5:   jl     0x00007f60aadcad14           ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
          │ ││  ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::lambda$publicationWithTheMostAuthors$12@7 (line 167)
          │ ││  ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics$$Lambda/0x00007f603002bd28::test@4
          │ ││  ││││                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@8 (line 178)
          │ ││  ││││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.36%  │ ││  ││││  0x00007f60aadc90bb:   mov    0xc(%rdx),%ecx
   0.00%  │ ││  ││││  0x00007f60aadc90be:   mov    %ecx,%edx
          │ ││  ││││  0x00007f60aadc90c0:   shl    $0x3,%rdx                    ;*getfield downstream {reexecute=0 rethrow=0 return_oop=0}
          │ ││  ││││                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@17 (line 179)
          │ ││  ││││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
          │ ││  ││││  0x00007f60aadc90c4:   test   %ecx,%ecx
          │ ││╭ ││││  0x00007f60aadc90c6:   je     0x00007f60aadc9236
   0.33%  │ │││ ││││  0x00007f60aadc90cc:   cmpl   $0x1068380,0x8(,%rcx,8)      ;   {metadata(&apos;java/util/stream/ReduceOps$2ReducingSink&apos;)}
          │ │││ ││││  0x00007f60aadc90d7:   jne    0x00007f60aadc9f05           ;*invokeinterface accept {reexecute=0 rethrow=0 return_oop=0}
          │ │││ ││││                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@21 (line 179)
          │ │││ ││││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
          │ │││ ││││  0x00007f60aadc90dd:   data16 xchg %ax,%ax
   0.32%  │ │││ ││││  0x00007f60aadc90e0:   cmpb   $0x0,0xc(,%rcx,8)
          │ │││ ││││  0x00007f60aadc90e8:   jne    0x00007f60aadc9f25           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
          │ │││ ││││                                                            ; - java.util.stream.ReduceOps$2ReducingSink::accept@4 (line 119)
          │ │││ ││││                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@21 (line 179)
          │ │││ ││││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
          │ │││ ││││  0x00007f60aadc90ee:   mov    0x14(,%rcx,8),%r8d           ;*getfield val$operator {reexecute=0 rethrow=0 return_oop=0}
          │ │││ ││││                                                            ; - java.util.stream.ReduceOps$2ReducingSink::accept@22 (line 123)
          │ │││ ││││                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@21 (line 179)
          │ │││ ││││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.35%  │ │││ ││││  0x00007f60aadc90f6:   data16 nopw 0x0(%rax,%rax,1)        ; ImmutableOopMap {rcx=NarrowOop rdx=Oop rsi=Oop r8=NarrowOop r9=NarrowOop r13=Oop [48]=NarrowOop [56]=Oop [64]=Oop [76]=NarrowOop [80]=Oop }
          │ │││ ││││                                                            ;*aload {reexecute=1 rethrow=0 return_oop=0}
          │ │││ ││││                                                            ; - (reexecute) java.util.HashMap$KeySpliterator::forEachRemaining@122 (line 1712)
          │ │││ ││││  0x00007f60aadc9100:   cmpl   $0x103bb60,0x8(,%r8,8)       ; implicit exception: dispatches to 0x00007f60aadcb0f6
          │ │││ ││││                                                            ;   {metadata(&apos;java/util/function/BinaryOperator$$Lambda+0x00007f603003bb60&apos;)}
          │ │││ ││││  0x00007f60aadc910c:   jne    0x00007f60aadcac5f           ;*invokeinterface apply {reexecute=0 rethrow=0 return_oop=0}
          │ │││ ││││                                                            ; - java.util.stream.ReduceOps$2ReducingSink::accept@30 (line 123)
          │ │││ ││││                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@21 (line 179)
          │ │││ ││││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.37%  │ │││ ││││  0x00007f60aadc9112:   mov    0xc(,%r8,8),%r8d             ;*getfield arg$1 {reexecute=0 rethrow=0 return_oop=0}
          │ │││ ││││                                                            ; - java.util.function.BinaryOperator$$Lambda/0x00007f603003bb60::apply@1
          │ │││ ││││                                                            ; - java.util.stream.ReduceOps$2ReducingSink::accept@30 (line 123)
          │ │││ ││││                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@21 (line 179)
          │ │││ ││││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
          │ │││ ││││  0x00007f60aadc911a:   nopw   0x0(%rax,%rax,1)             ; ImmutableOopMap {rcx=NarrowOop rdx=Oop rsi=Oop r8=NarrowOop r9=NarrowOop r13=Oop [48]=NarrowOop [56]=Oop [64]=Oop [76]=NarrowOop [80]=Oop }
          │ │││ ││││                                                            ;*aload {reexecute=1 rethrow=0 return_oop=0}
          │ │││ ││││                                                            ; - (reexecute) java.util.HashMap$KeySpliterator::forEachRemaining@122 (line 1712)
          │ │││ ││││  0x00007f60aadc9120:   cmpl   $0x103b8c8,0x8(,%r8,8)       ; implicit exception: dispatches to 0x00007f60aadcb119
          │ │││ ││││                                                            ;   {metadata(&apos;java/util/Comparator$$Lambda+0x00007f603003b8c8&apos;)}
   0.32%  │ │││ ││││  0x00007f60aadc912c:   jne    0x00007f60aadcac50           ;*invokeinterface compare {reexecute=0 rethrow=0 return_oop=0}
          │ │││ ││││                                                            ; - java.util.function.BinaryOperator::lambda$maxBy$1@3 (line 74)
          │ │││ ││││                                                            ; - java.util.function.BinaryOperator$$Lambda/0x00007f603003bb60::apply@6
          │ │││ ││││                                                            ; - java.util.stream.ReduceOps$2ReducingSink::accept@30 (line 123)
          │ │││ ││││                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@21 (line 179)
          │ │││ ││││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
          │ │││ ││││  0x00007f60aadc9132:   mov    0xc(,%r8,8),%r8d             ;*getfield arg$1 {reexecute=0 rethrow=0 return_oop=0}
          │ │││ ││││                                                            ; - java.util.Comparator$$Lambda/0x00007f603003b8c8::compare@1
          │ │││ ││││                                                            ; - java.util.function.BinaryOperator::lambda$maxBy$1@3 (line 74)
          │ │││ ││││                                                            ; - java.util.function.BinaryOperator$$Lambda/0x00007f603003bb60::apply@6
          │ │││ ││││                                                            ; - java.util.stream.ReduceOps$2ReducingSink::accept@30 (line 123)
          │ │││ ││││                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@21 (line 179)
          │ │││ ││││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
          │ │││ ││││  0x00007f60aadc913a:   nopw   0x0(%rax,%rax,1)             ; ImmutableOopMap {rcx=NarrowOop rdx=Oop rsi=Oop r9=NarrowOop r13=Oop [48]=NarrowOop [56]=Oop [64]=Oop [76]=NarrowOop [80]=Oop }
          │ │││ ││││                                                            ;*aload {reexecute=1 rethrow=0 return_oop=0}
          │ │││ ││││                                                            ; - (reexecute) java.util.HashMap$KeySpliterator::forEachRemaining@122 (line 1712)
          │ │││ ││││  0x00007f60aadc9140:   cmpl   $0x1084000,0x8(,%r8,8)       ; implicit exception: dispatches to 0x00007f60aadcb13c
          │ │││ ││││                                                            ;   {metadata(&apos;com/ionutbalosin/jvm/performance/benchmarks/miscellaneous/publicationstatistics/PublicationStatistics$$Lambda+0x00007f6030084000&apos;)}
   0.35%  │ │││ ││││  0x00007f60aadc914c:   jne    0x00007f60aadcb02b           ;*invokeinterface apply {reexecute=0 rethrow=0 return_oop=0}
          │ │││ ││││                                                            ; - java.util.Comparator::lambda$comparing$77a9974f$1@2 (line 473)
          │ │││ ││││                                                            ; - java.util.Comparator$$Lambda/0x00007f603003b8c8::compare@6
          │ │││ ││││                                                            ; - java.util.function.BinaryOperator::lambda$maxBy$1@3 (line 74)
          │ │││ ││││                                                            ; - java.util.function.BinaryOperator$$Lambda/0x00007f603003bb60::apply@6
          │ │││ ││││                                                            ; - java.util.stream.ReduceOps$2ReducingSink::accept@30 (line 123)
          │ │││ ││││                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@21 (line 179)
          │ │││ ││││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
          │ │││ ││││  0x00007f60aadc9152:   mov    0x18(,%r9,8),%r8d            ;*getfield authors {reexecute=0 rethrow=0 return_oop=0}
          │ │││ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.model.Publication::getAuthors@1 (line 51)
          │ │││ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::lambda$publicationWithTheMostAuthors$13@1 (line 168)
          │ │││ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics$$Lambda/0x00007f6030084000::apply@4
          │ │││ ││││                                                            ; - java.util.Comparator::lambda$comparing$77a9974f$1@12 (line 473)
          │ │││ ││││                                                            ; - java.util.Comparator$$Lambda/0x00007f603003b8c8::compare@6
          │ │││ ││││                                                            ; - java.util.function.BinaryOperator::lambda$maxBy$1@3 (line 74)
          │ │││ ││││                                                            ; - java.util.function.BinaryOperator$$Lambda/0x00007f603003bb60::apply@6
          │ │││ ││││                                                            ; - java.util.stream.ReduceOps$2ReducingSink::accept@30 (line 123)
          │ │││ ││││                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@21 (line 179)
          │ │││ ││││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   1.30%  │ │││ ││││  0x00007f60aadc915a:   nopw   0x0(%rax,%rax,1)             ; ImmutableOopMap {rcx=NarrowOop rdx=Oop rsi=Oop r8=NarrowOop r13=Oop [48]=NarrowOop [56]=Oop [64]=Oop [76]=NarrowOop [80]=Oop }
          │ │││ ││││                                                            ;*aload {reexecute=1 rethrow=0 return_oop=0}
          │ │││ ││││                                                            ; - (reexecute) java.util.HashMap$KeySpliterator::forEachRemaining@122 (line 1712)
   0.36%  │ │││ ││││  0x00007f60aadc9160:   cmpl   $0xbc3f8,0x8(,%r8,8)         ; implicit exception: dispatches to 0x00007f60aadcb15f
          │ │││ ││││                                                            ;   {metadata(&apos;java/util/ArrayList&apos;)}
  33.10%  │ │││ ││││  0x00007f60aadc916c:   jne    0x00007f60aadcadc4           ;*invokeinterface size {reexecute=0 rethrow=0 return_oop=0}
          │ │││ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::lambda$publicationWithTheMostAuthors$13@4 (line 168)
          │ │││ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics$$Lambda/0x00007f6030084000::apply@4
          │ │││ ││││                                                            ; - java.util.Comparator::lambda$comparing$77a9974f$1@12 (line 473)
          │ │││ ││││                                                            ; - java.util.Comparator$$Lambda/0x00007f603003b8c8::compare@6
          │ │││ ││││                                                            ; - java.util.function.BinaryOperator::lambda$maxBy$1@3 (line 74)
          │ │││ ││││                                                            ; - java.util.function.BinaryOperator$$Lambda/0x00007f603003bb60::apply@6
          │ │││ ││││                                                            ; - java.util.stream.ReduceOps$2ReducingSink::accept@30 (line 123)
          │ │││ ││││                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@21 (line 179)
          │ │││ ││││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.30%  │ │││ ││││  0x00007f60aadc9172:   mov    0x10(,%rcx,8),%ecx           ;*getfield state {reexecute=0 rethrow=0 return_oop=0}
          │ │││ ││││                                                            ; - java.util.stream.ReduceOps$2ReducingSink::accept@26 (line 123)
          │ │││ ││││                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@21 (line 179)
          │ │││ ││││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.06%  │ │││ ││││  0x00007f60aadc9179:   nopl   0x0(%rax)
          │ │││ ││││  0x00007f60aadc9180:   test   %ecx,%ecx
          │ │││ ││││  0x00007f60aadc9182:   je     0x00007f60aadc9415
          │ │││ ││││  0x00007f60aadc9188:   mov    0x8(,%rcx,8),%r14d
   0.25%  │ │││ ││││  0x00007f60aadc9190:   movabs $0x7f602f000000,%rax
   0.05%  │ │││ ││││  0x00007f60aadc919a:   lea    (%rax,%r14,1),%r14
          │ │││ ││││  0x00007f60aadc919e:   xchg   %ax,%ax
          │ │││ ││││  0x00007f60aadc91a0:   test   %ecx,%ecx
          │ │││╭││││  0x00007f60aadc91a2:   je     0x00007f60aadc91b1           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
          │ ││││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics$$Lambda/0x00007f6030084000::apply@1
          │ ││││││││                                                            ; - java.util.Comparator::lambda$comparing$77a9974f$1@2 (line 473)
          │ ││││││││                                                            ; - java.util.Comparator$$Lambda/0x00007f603003b8c8::compare@6
          │ ││││││││                                                            ; - java.util.function.BinaryOperator::lambda$maxBy$1@3 (line 74)
          │ ││││││││                                                            ; - java.util.function.BinaryOperator$$Lambda/0x00007f603003bb60::apply@6
          │ ││││││││                                                            ; - java.util.stream.ReduceOps$2ReducingSink::accept@30 (line 123)
          │ ││││││││                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@21 (line 179)
          │ ││││││││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.25%  │ ││││││││  0x00007f60aadc91a8:   cmp    %r14,%rdi
          │ ││││││││  0x00007f60aadc91ab:   jne    0x00007f60aadcabe5           ; ImmutableOopMap {rdx=Oop rsi=Oop r8=NarrowOop r13=Oop [48]=NarrowOop [56]=Oop [64]=Oop [76]=NarrowOop [80]=Oop }
          │ ││││││││                                                            ;*aload {reexecute=1 rethrow=0 return_oop=0}
          │ ││││││││                                                            ; - (reexecute) java.util.HashMap$KeySpliterator::forEachRemaining@122 (line 1712)
   0.06%  │ │││↘││││  0x00007f60aadc91b1:   mov    0x18(,%rcx,8),%eax           ; implicit exception: dispatches to 0x00007f60aadcb182
          │ │││ ││││  0x00007f60aadc91b8:   nopl   0x0(%rax,%rax,1)             ; ImmutableOopMap {rax=NarrowOop rdx=Oop rsi=Oop r8=NarrowOop r13=Oop [48]=NarrowOop [56]=Oop [64]=Oop [76]=NarrowOop [80]=Oop }
          │ │││ ││││                                                            ;*aload {reexecute=1 rethrow=0 return_oop=0}
          │ │││ ││││                                                            ; - (reexecute) java.util.HashMap$KeySpliterator::forEachRemaining@122 (line 1712)
          │ │││ ││││  0x00007f60aadc91c0:   cmpl   $0xbc3f8,0x8(,%rax,8)        ; implicit exception: dispatches to 0x00007f60aadcb1a5
          │ │││ ││││                                                            ;   {metadata(&apos;java/util/ArrayList&apos;)}
   0.31%  │ │││ ││││  0x00007f60aadc91cb:   jne    0x00007f60aadcac14           ;*invokeinterface size {reexecute=0 rethrow=0 return_oop=0}
          │ │││ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::lambda$publicationWithTheMostAuthors$13@4 (line 168)
          │ │││ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics$$Lambda/0x00007f6030084000::apply@4
          │ │││ ││││                                                            ; - java.util.Comparator::lambda$comparing$77a9974f$1@2 (line 473)
          │ │││ ││││                                                            ; - java.util.Comparator$$Lambda/0x00007f603003b8c8::compare@6
          │ │││ ││││                                                            ; - java.util.function.BinaryOperator::lambda$maxBy$1@3 (line 74)
          │ │││ ││││                                                            ; - java.util.function.BinaryOperator$$Lambda/0x00007f603003bb60::apply@6
          │ │││ ││││                                                            ; - java.util.stream.ReduceOps$2ReducingSink::accept@30 (line 123)
          │ │││ ││││                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@21 (line 179)
          │ │││ ││││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
          │ │││ ││││  0x00007f60aadc91d1:   mov    0x10(,%rax,8),%eax           ;*getfield size {reexecute=0 rethrow=0 return_oop=0}
          │ │││ ││││                                                            ; - java.util.ArrayList::size@1 (line 253)
          │ │││ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::lambda$publicationWithTheMostAuthors$13@4 (line 168)
          │ │││ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics$$Lambda/0x00007f6030084000::apply@4
          │ │││ ││││                                                            ; - java.util.Comparator::lambda$comparing$77a9974f$1@2 (line 473)
          │ │││ ││││                                                            ; - java.util.Comparator$$Lambda/0x00007f603003b8c8::compare@6
          │ │││ ││││                                                            ; - java.util.function.BinaryOperator::lambda$maxBy$1@3 (line 74)
          │ │││ ││││                                                            ; - java.util.function.BinaryOperator$$Lambda/0x00007f603003bb60::apply@6
          │ │││ ││││                                                            ; - java.util.stream.ReduceOps$2ReducingSink::accept@30 (line 123)
          │ │││ ││││                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@21 (line 179)
          │ │││ ││││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
          │ │││ ││││  0x00007f60aadc91d8:   nopl   0x0(%rax,%rax,1)
   0.27%  │ │││ ││││  0x00007f60aadc91e0:   cmp    0x10(,%r8,8),%eax
          │ │││ ││││  0x00007f60aadc91e8:   jl     0x00007f60aadc9d8f           ;*iflt {reexecute=0 rethrow=0 return_oop=0}
          │ │││ ││││                                                            ; - java.util.function.BinaryOperator::lambda$maxBy$1@8 (line 74)
          │ │││ ││││                                                            ; - java.util.function.BinaryOperator$$Lambda/0x00007f603003bb60::apply@6
          │ │││ ││││                                                            ; - java.util.stream.ReduceOps$2ReducingSink::accept@30 (line 123)
          │ │││ ││││                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@21 (line 179)
          │ │││ ││││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   1.27%  │ │││ ││││  0x00007f60aadc91ee:   mov    0x18(%r13),%esi
   0.13%  │ │││ ││││  0x00007f60aadc91f2:   shl    $0x3,%rsi                    ;*getfield next {reexecute=0 rethrow=0 return_oop=0}
          │ │││ ││││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@152 (line 1716)
   0.27%  │ │││ ││││  0x00007f60aadc91f6:   mov    %rsi,%r11
   0.06%  │ │││ ││││  0x00007f60aadc91f9:   mov    %ebx,%r10d
   0.04%  │ │││ ││││  0x00007f60aadc91fc:   mov    %rdi,%rbx
          │ │││ ││││  0x00007f60aadc91ff:   mov    0x80(%rsp),%r13
   0.27%  │ │││ ╰│││  0x00007f60aadc9207:   jmp    0x00007f60aadc8fa4           ;*aload {reexecute=0 rethrow=0 return_oop=0}
          │ │││  │││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@157 (line 1718)
   0.20%  ↘ │││  │││  0x00007f60aadc920c:   mov    0xa4(%rsp),%eax
   0.10%    │││  ╰││  0x00007f60aadc9213:   jmp    0x00007f60aadc8fbd
            │↘│   ││  0x00007f60aadc9218:   mov    $0x0,%r8
            │ │   ││  0x00007f60aadc921f:   nop
            │ │   ╰│  0x00007f60aadc9220:   jmp    0x00007f60aadc908c
            ↘ │    │  0x00007f60aadc9225:   mov    %r9d,0x34(%rsp)
              │    │  0x00007f60aadc922a:   mov    $0x0,%rcx
              │    ╰  0x00007f60aadc9231:   jmp    0x00007f60aadc9064           ;*invokeinterface test {reexecute=0 rethrow=0 return_oop=0}
              │                                                                 ; - java.util.stream.ReferencePipeline$2$1::accept@8 (line 178)
              │                                                                 ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
              ↘       0x00007f60aadc9236:   movl   $0x1,0x74(%rsp)
                      0x00007f60aadc923e:   xchg   %ax,%ax
....................................................................................................
  96.97%  <total for region 1>

....[Hottest Regions]...............................................................................
  96.97%      jvmci, level 4  java.util.HashMap$KeySpliterator::forEachRemaining, version 6, compile id 1208 
   0.44%              kernel  [unknown] 
   0.22%              kernel  [unknown] 
   0.15%              kernel  [unknown] 
   0.11%              kernel  [unknown] 
   0.11%              kernel  [unknown] 
   0.06%              kernel  [unknown] 
   0.04%              kernel  [unknown] 
   0.03%              kernel  [unknown] 
   0.03%              kernel  [unknown] 
   0.03%              kernel  [unknown] 
   0.03%              kernel  [unknown] 
   0.02%           libjvm.so  CompilerOracle::has_option_value<bool> 
   0.02%              kernel  [unknown] 
   0.02%      jvmci, level 4  java.util.HashMap$KeySpliterator::forEachRemaining, version 3, compile id 1195 
   0.02%      jvmci, level 4  java.util.HashMap$KeySpliterator::forEachRemaining, version 6, compile id 1208 
   0.02%           libjvm.so  fileStream::write 
   0.02%              kernel  [unknown] 
   0.02%              kernel  [unknown] 
   0.02%              kernel  [unknown] 
   1.62%  <...other 534 warm regions...>
....................................................................................................
 100.00%  <totals>

....[Hottest Methods (after inlining)]..............................................................
  96.99%      jvmci, level 4  java.util.HashMap$KeySpliterator::forEachRemaining, version 6, compile id 1208 
   2.05%              kernel  [unknown] 
   0.35%                      <unknown> 
   0.05%      jvmci, level 4  java.util.HashMap$KeySpliterator::forEachRemaining, version 3, compile id 1195 
   0.02%      hsdis-amd64.so  print_insn 
   0.02%           libjvm.so  CompilerOracle::has_option_value<bool> 
   0.02%           libjvm.so  fileStream::write 
   0.02%        libc-2.31.so  __vfprintf_internal 
   0.02%           libjvm.so  xmlStream::write_text 
   0.02%           libjvm.so  ElfSymbolTable::lookup 
   0.02%           libjvm.so  defaultStream::write 
   0.02%        libc-2.31.so  __strlen_avx2 
   0.02%  libpthread-2.31.so  __libc_write 
   0.02%        libc-2.31.so  __strchrnul_avx2 
   0.01%        libc-2.31.so  _IO_fwrite 
   0.01%          ld-2.31.so  __tls_get_addr 
   0.01%           libjvm.so  MethodMatcher::matches 
   0.01%        libc-2.31.so  syscall 
   0.01%        libc-2.31.so  clock_gettime@GLIBC_2.2.5 
   0.01%        libc-2.31.so  __strchr_avx2 
   0.30%  <...other 110 warm methods...>
....................................................................................................
 100.00%  <totals>

....[Distribution by Source]........................................................................
  97.05%      jvmci, level 4
   2.05%              kernel
   0.35%                    
   0.28%           libjvm.so
   0.16%        libc-2.31.so
   0.04%      hsdis-amd64.so
   0.03%  libpthread-2.31.so
   0.02%         interpreter
   0.01%          ld-2.31.so
   0.01%         c1, level 3
   0.00%    perf-2147937.map
....................................................................................................
 100.00%  <totals>



# JMH version: 1.37
# VM version: JDK 21, Java HotSpot(TM) 64-Bit Server VM, 21+35-jvmci-23.1-b15
# VM invoker: /home/gogu/bench_jdks/graalvm-jdk-21+35.1/bin/java
# VM options: -XX:ThreadPriorityPolicy=1 -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCIProduct -XX:-UnlockExperimentalVMOptions -Xms4g -Xmx4g -XX:+AlwaysPreTouch
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark.publications_per_author

# Run progress: 64.29% complete, ETA 00:09:54
# Fork: 1 of 1
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 145.115 ms/op
# Warmup Iteration   2: 77.139 ms/op
# Warmup Iteration   3: 78.329 ms/op
# Warmup Iteration   4: 77.646 ms/op
# Warmup Iteration   5: 75.885 ms/op
Iteration   1: 76.084 ms/op
Iteration   2: 76.282 ms/op
Iteration   3: 75.947 ms/op
Iteration   4: 77.050 ms/op
Iteration   5: 76.298 ms/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark.publications_per_author":
  76.332 ±(99.9%) 1.644 ms/op [Average]
  (min, avg, max) = (75.947, 76.332, 77.050), stdev = 0.427
  CI (99.9%): [74.689, 77.976] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark.publications_per_author:asm":
PrintAssembly processed: 352801 total address lines.
Perf output processed (skipped 62.855 seconds):
 Column 1: cycles (64921 events)

Hottest code regions (>10.00% "cycles" events):
 Event counts are percents of total event count.

....[Hottest Region 1]..............................................................................
jvmci, level 4, java.util.stream.Collectors$$Lambda.0x00007fa0f403ca80::accept, version 3, compile id 1330 

 <region is too big to display, has 1623 lines, but threshold is 1000>
....................................................................................................
  46.82%  <total for region 1>

....[Hottest Regions]...............................................................................
  46.82%      jvmci, level 4  java.util.stream.Collectors$$Lambda.0x00007fa0f403ca80::accept, version 3, compile id 1330 
   8.31%      jvmci, level 4  java.util.HashMap$KeySpliterator::forEachRemaining, version 4, compile id 1350 
   5.16%           libjvm.so  OopOopIterateBackwardsDispatch<G1ScanEvacuatedObjClosure>::Table::oop_oop_iterate_backwards<InstanceKlass, narrowOop> 
   3.29%           libjvm.so  G1ScanCardClosure::do_oop_work<narrowOop> 
   3.01%      jvmci, level 4  java.util.HashMap$KeySpliterator::forEachRemaining, version 4, compile id 1350 
   2.90%           libjvm.so  G1ParScanThreadState::trim_queue_to_threshold 
   2.86%      jvmci, level 4  com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.model.Author::hashCode, version 3, compile id 1325 
   2.82%      jvmci, level 4  java.util.HashMap$KeySpliterator::forEachRemaining, version 4, compile id 1350 
   2.33%                      <unknown> 
   1.87%           libjvm.so  G1ParScanThreadState::trim_queue_to_threshold 
   1.71%           libjvm.so  G1ParScanThreadState::trim_queue_to_threshold 
   1.40%           libjvm.so  OopOopIterateBoundedDispatch<G1ConcurrentRefineOopClosure>::Table::oop_oop_iterate_bounded<ObjArrayKlass, narrowOop> 
   1.29%      jvmci, level 4  java.util.HashMap$EntrySpliterator::forEachRemaining, version 8, compile id 1356 
   0.95%           libjvm.so  OopOopIterateBoundedDispatch<G1ScanCardClosure>::Table::oop_oop_iterate_bounded<ObjArrayKlass, narrowOop> 
   0.81%           libjvm.so  OopOopIterateDispatch<G1RootRegionScanClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop> 
   0.77%           libjvm.so  G1ParScanThreadState::trim_queue_to_threshold 
   0.76%           libjvm.so  G1ParScanThreadState::trim_queue_to_threshold 
   0.69%           libjvm.so  G1ParScanThreadState::trim_queue_to_threshold 
   0.68%      jvmci, level 4  java.util.HashMap$KeySpliterator::forEachRemaining, version 4, compile id 1350 
   0.63%      jvmci, level 4  java.util.HashMap$KeySpliterator::forEachRemaining, version 4, compile id 1350 
  10.95%  <...other 707 warm regions...>
....................................................................................................
 100.00%  <totals>

....[Hottest Methods (after inlining)]..............................................................
  47.95%      jvmci, level 4  java.util.stream.Collectors$$Lambda.0x00007fa0f403ca80::accept, version 3, compile id 1330 
  16.90%      jvmci, level 4  java.util.HashMap$KeySpliterator::forEachRemaining, version 4, compile id 1350 
   9.16%           libjvm.so  G1ParScanThreadState::trim_queue_to_threshold 
   5.49%           libjvm.so  OopOopIterateBackwardsDispatch<G1ScanEvacuatedObjClosure>::Table::oop_oop_iterate_backwards<InstanceKlass, narrowOop> 
   4.35%           libjvm.so  G1ScanCardClosure::do_oop_work<narrowOop> 
   3.35%      jvmci, level 4  com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.model.Author::hashCode, version 3, compile id 1325 
   3.31%                      <unknown> 
   1.77%      jvmci, level 4  java.util.HashMap$EntrySpliterator::forEachRemaining, version 8, compile id 1356 
   1.42%           libjvm.so  OopOopIterateBoundedDispatch<G1ConcurrentRefineOopClosure>::Table::oop_oop_iterate_bounded<ObjArrayKlass, narrowOop> 
   1.27%              kernel  [unknown] 
   0.95%           libjvm.so  OopOopIterateBoundedDispatch<G1ScanCardClosure>::Table::oop_oop_iterate_bounded<ObjArrayKlass, narrowOop> 
   0.83%           libjvm.so  OopOopIterateDispatch<G1RootRegionScanClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop> 
   0.58%           libjvm.so  OopOopIterateDispatch<G1RebuildRemSetClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop> 
   0.39%           libjvm.so  OopOopIterateDispatch<G1CMOopClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop> 
   0.27%           libjvm.so  G1RebuildRSAndScrubTask::G1RebuildRSAndScrubRegionClosure::do_heap_region 
   0.14%           libjvm.so  G1CardSet::add_card 
   0.12%           libjvm.so  G1CMTask::do_marking_step 
   0.10%           libjvm.so  G1CMTask::process_grey_task_entry<true> 
   0.10%           libjvm.so  ClassLoaderData::oops_do 
   0.09%        libc-2.31.so  __memset_avx2_erms 
   1.46%  <...other 221 warm methods...>
....................................................................................................
 100.00%  <totals>

....[Distribution by Source]........................................................................
  69.98%      jvmci, level 4
  25.11%           libjvm.so
   3.31%                    
   1.27%              kernel
   0.19%        libc-2.31.so
   0.04%          ld-2.31.so
   0.03%  libpthread-2.31.so
   0.03%              [vdso]
   0.02%      hsdis-amd64.so
   0.01%         c1, level 3
   0.01%         interpreter
   0.00%    perf-2148001.map
   0.00%        libm-2.31.so
....................................................................................................
 100.00%  <totals>



# JMH version: 1.37
# VM version: JDK 21, Java HotSpot(TM) 64-Bit Server VM, 21+35-jvmci-23.1-b15
# VM invoker: /home/gogu/bench_jdks/graalvm-jdk-21+35.1/bin/java
# VM options: -XX:ThreadPriorityPolicy=1 -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCIProduct -XX:-UnlockExperimentalVMOptions -Xms4g -Xmx4g -XX:+AlwaysPreTouch
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark.publications_with_the_most_authors_per_year

# Run progress: 71.43% complete, ETA 00:07:54
# Fork: 1 of 1
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 21.955 ms/op
# Warmup Iteration   2: 8.321 ms/op
# Warmup Iteration   3: 8.509 ms/op
# Warmup Iteration   4: 8.386 ms/op
# Warmup Iteration   5: 8.141 ms/op
Iteration   1: 8.353 ms/op
Iteration   2: 8.376 ms/op
Iteration   3: 8.234 ms/op
Iteration   4: 8.176 ms/op
Iteration   5: 8.197 ms/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark.publications_with_the_most_authors_per_year":
  8.267 ±(99.9%) 0.352 ms/op [Average]
  (min, avg, max) = (8.176, 8.267, 8.376), stdev = 0.091
  CI (99.9%): [7.915, 8.620] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark.publications_with_the_most_authors_per_year:asm":
PrintAssembly processed: 382436 total address lines.
Perf output processed (skipped 62.818 seconds):
 Column 1: cycles (51049 events)

Hottest code regions (>10.00% "cycles" events):
 Event counts are percents of total event count.

....[Hottest Region 1]..............................................................................
jvmci, level 4, java.util.HashMap$KeySpliterator::forEachRemaining, version 4, compile id 1303 

               0x00007f360edd255c:   mov    %r13,0xa0(%rsp)
               0x00007f360edd2564:   movabs $0x7f359402b6f8,%r13         ;   {metadata(&apos;com/ionutbalosin/jvm/performance/benchmarks/miscellaneous/publicationstatistics/model/Publication&apos;)}
               0x00007f360edd256e:   movabs $0x7f359403ccf0,%r13         ;   {metadata(&apos;java/util/stream/Collectors$$Lambda+0x00007f359403ccf0&apos;)}
               0x00007f360edd2578:   movabs $0x7ffed2180,%rdi            ;   {oop(a &apos;java/lang/Integer&apos;[256] {0x00000007ffed2180})}
               0x00007f360edd2582:   mov    %rsi,%r11
               0x00007f360edd2585:   mov    %eax,%r10d
               0x00007f360edd2588:   movabs $0x7f359402b6f8,%rbx         ;   {metadata(&apos;com/ionutbalosin/jvm/performance/benchmarks/miscellaneous/publicationstatistics/model/Publication&apos;)}
               0x00007f360edd2592:   movabs $0x7f3594069340,%r8          ;   {metadata(&apos;java/util/stream/Collectors$$Lambda+0x00007f3594069340&apos;)}
               0x00007f360edd259c:   nopl   0x0(%rax)                    ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - java.util.HashMap$KeySpliterator::forEachRemaining@122 (line 1712)
   0.41%   ↗   0x00007f360edd25a0:   mov    %r10d,0x9c(%rsp)
   0.30%   │   0x00007f360edd25a8:   mov    %r11,0x50(%rsp)
   0.47%   │   0x00007f360edd25ad:   test   %r11,%r11
          ╭│   0x00007f360edd25b0:   jne    0x00007f360edd2637           ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
          ││                                                             ; - java.util.HashMap$KeySpliterator::forEachRemaining@124 (line 1712)
   0.39%  ││   0x00007f360edd25b6:   cmp    %r10d,%ecx
          ││   0x00007f360edd25b9:   jbe    0x00007f360edd57cd
   0.25%  ││   0x00007f360edd25bf:   mov    0x10(%r9,%r10,4),%r11d
   0.36%  ││   0x00007f360edd25c4:   shl    $0x3,%r11                    ;*aaload {reexecute=0 rethrow=0 return_oop=0}
          ││                                                             ; - java.util.HashMap$KeySpliterator::forEachRemaining@133 (line 1713)
   0.39%  ││   0x00007f360edd25c8:   inc    %r10d                        ;*iinc {reexecute=0 rethrow=0 return_oop=0}
          ││                                                             ; - java.util.HashMap$KeySpliterator::forEachRemaining@130 (line 1713)
   0.32%  ││   0x00007f360edd25cb:   mov    0xa0(%rsp),%r9               ;*aload {reexecute=0 rethrow=0 return_oop=0}
          ││                                                             ; - java.util.HashMap$KeySpliterator::forEachRemaining@157 (line 1718)
   0.48%  ││   0x00007f360edd25d3:   test   %r11,%r11
          ││   0x00007f360edd25d6:   jne    0x00007f360edd285a           ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
          ││                                                             ; - java.util.HashMap$KeySpliterator::forEachRemaining@159 (line 1718)
   0.43%  ││   0x00007f360edd25dc:   mov    0xc4(%rsp),%ebp
   0.28%  ││   0x00007f360edd25e3:   cmp    %r10d,%ebp
          ││   0x00007f360edd25e6:   jle    0x00007f360edd554b           ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
          ││                                                             ; - java.util.HashMap$KeySpliterator::forEachRemaining@164 (line 1718)
   0.26%  ││   0x00007f360edd25ec:   mov    0x458(%r15),%rsi             ; ImmutableOopMap {r11=Oop [88]=Oop [96]=Oop [108]=NarrowOop [112]=Oop }
          ││                                                             ;*aload {reexecute=1 rethrow=0 return_oop=0}
          ││                                                             ; - (reexecute) java.util.HashMap$KeySpliterator::forEachRemaining@157 (line 1718)
   0.34%  ││   0x00007f360edd25f3:   test   %eax,(%rsi)                  ;   {poll}
   0.43%  ││   0x00007f360edd25f5:   movabs $0x7f359403ccf0,%r13         ;   {metadata(&apos;java/util/stream/Collectors$$Lambda+0x00007f359403ccf0&apos;)}
   0.24%  ││   0x00007f360edd25ff:   movabs $0x7f359402b6f8,%rbx         ;   {metadata(&apos;com/ionutbalosin/jvm/performance/benchmarks/miscellaneous/publicationstatistics/model/Publication&apos;)}
   0.24%  ││   0x00007f360edd2609:   movabs $0x7ffed2180,%rdi            ;   {oop(a &apos;java/lang/Integer&apos;[256] {0x00000007ffed2180})}
   0.36%  ││   0x00007f360edd2613:   movabs $0x7f3594069340,%r8          ;   {metadata(&apos;java/util/stream/Collectors$$Lambda+0x00007f3594069340&apos;)}
   0.39%  ││   0x00007f360edd261d:   vpxor  %xmm0,%xmm0,%xmm0
   0.26%  ││   0x00007f360edd2621:   mov    0x60(%rsp),%r9
   0.23%  ││   0x00007f360edd2626:   mov    0xc0(%rsp),%ecx
   0.34%  ││   0x00007f360edd262d:   mov    0x70(%rsp),%rdx
   0.36%  │╰   0x00007f360edd2632:   jmp    0x00007f360edd25a0           ;*aload {reexecute=0 rethrow=0 return_oop=0}
          │                                                              ; - java.util.HashMap$KeySpliterator::forEachRemaining@122 (line 1712)
   0.26%  ↘    0x00007f360edd2637:   mov    0x14(%rdx),%r9d              ;*getfield val$accumulator {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - java.util.stream.ReduceOps$3ReducingSink::accept@1 (line 169)
                                                                         ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.01%       0x00007f360edd263b:   nopl   0x0(%rax,%rax,1)
   0.10%       0x00007f360edd2640:   test   %r9d,%r9d
               0x00007f360edd2643:   je     0x00007f360edd2bfb
   0.14%       0x00007f360edd2649:   mov    0x8(,%r9,8),%ecx
   0.44%       0x00007f360edd2651:   movabs $0x7f3593000000,%r14
               0x00007f360edd265b:   lea    (%r14,%rcx,1),%rcx           ;*invokeinterface accept {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                         ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.15%       0x00007f360edd265f:   mov    0x10(%r11),%r14d             ;*getfield key {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - java.util.HashMap$KeySpliterator::forEachRemaining@142 (line 1715)
  21.22%       0x00007f360edd2663:   mov    %r14d,0x4c(%rsp)
   0.53%       0x00007f360edd2668:   mov    0xc(%rdx),%ebp
               0x00007f360edd266b:   mov    %ebp,0x48(%rsp)
   0.04%       0x00007f360edd266f:   mov    %ebp,%edx
   0.05%       0x00007f360edd2671:   shl    $0x3,%rdx                    ;*getfield state {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - java.util.stream.ReduceOps$3ReducingSink::accept@5 (line 169)
                                                                         ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.36%       0x00007f360edd2675:   mov    %rdx,0x40(%rsp)
               0x00007f360edd267a:   mov    %r14d,%edx
   0.05%       0x00007f360edd267d:   shl    $0x3,%rdx                    ;*getfield key {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - java.util.HashMap$KeySpliterator::forEachRemaining@142 (line 1715)
   0.06%       0x00007f360edd2681:   mov    %rdx,0x38(%rsp)
   0.33%       0x00007f360edd2686:   cmp    %rcx,%r13
               0x00007f360edd2689:   jne    0x00007f360edd2af6           ;*invokeinterface accept {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                         ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
               0x00007f360edd268f:   mov    0xc(,%r9,8),%ecx             ;*getfield arg$1 {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - java.util.stream.Collectors$$Lambda/0x00007f359403ccf0::accept@1
                                                                         ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                         ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.03%       0x00007f360edd2697:   nopw   0x0(%rax,%rax,1)             ; ImmutableOopMap {rbp=NarrowOop rdi=Oop r9=NarrowOop r11=Oop r14=NarrowOop [56]=Oop [64]=Oop [72]=NarrowOop [76]=NarrowOop [80]=Oop [88]=Oop [96]=Oop [108]=NarrowOop [112]=Oop }
                                                                         ;*aload {reexecute=1 rethrow=0 return_oop=0}
                                                                         ; - (reexecute) java.util.HashMap$KeySpliterator::forEachRemaining@122 (line 1712)
   0.05%       0x00007f360edd26a0:   cmpl   $0x10848e8,0x8(,%rcx,8)      ; implicit exception: dispatches to 0x00007f360edd5ea3
                                                                         ;   {metadata(&apos;com/ionutbalosin/jvm/performance/benchmarks/miscellaneous/publicationstatistics/PublicationStatistics$$Lambda+0x00007f35940848e8&apos;)}
   0.35%       0x00007f360edd26ab:   jne    0x00007f360edd5da8           ;*invokeinterface apply {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - java.util.stream.Collectors::lambda$groupingBy$53@3 (line 1105)
                                                                         ; - java.util.stream.Collectors$$Lambda/0x00007f359403ccf0::accept@17
                                                                         ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                         ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.05%       0x00007f360edd26b1:   data16 data16 nopw 0x0(%rax,%rax,1)
   0.07%       0x00007f360edd26bc:   data16 data16 xchg %ax,%ax          ; ImmutableOopMap {rbp=NarrowOop rdi=Oop r9=NarrowOop r11=Oop r14=NarrowOop [56]=Oop [64]=Oop [72]=NarrowOop [76]=NarrowOop [80]=Oop [88]=Oop [96]=Oop [108]=NarrowOop [112]=Oop }
                                                                         ;*aload {reexecute=1 rethrow=0 return_oop=0}
                                                                         ; - (reexecute) java.util.HashMap$KeySpliterator::forEachRemaining@122 (line 1712)
   0.39%       0x00007f360edd26c0:   cmpl   $0x8e280,0x8(,%rbp,8)        ; implicit exception: dispatches to 0x00007f360edd5ec6
                                                                         ;   {metadata(&apos;java/util/HashMap&apos;)}
   0.04%       0x00007f360edd26cb:   jne    0x00007f360edd5785           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - java.util.stream.Collectors$$Lambda/0x00007f359403ccf0::accept@13
                                                                         ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                         ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.07%       0x00007f360edd26d1:   test   %r14d,%r14d
               0x00007f360edd26d4:   je     0x00007f360edd2c07
   0.31%       0x00007f360edd26da:   mov    0x8(,%r14,8),%ecx
   8.59%       0x00007f360edd26e2:   movabs $0x7f3593000000,%r13
   0.03%       0x00007f360edd26ec:   lea    0x0(%r13,%rcx,1),%rcx        ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics$$Lambda/0x00007f359402bd18::test@1
                                                                         ; - java.util.stream.Collectors::lambda$filtering$16@2 (line 528)
                                                                         ; - java.util.stream.Collectors$$Lambda/0x00007f359403c8a8::accept@10
                                                                         ; - java.util.stream.Collectors::lambda$groupingBy$53@37 (line 1107)
                                                                         ; - java.util.stream.Collectors$$Lambda/0x00007f359403ccf0::accept@17
                                                                         ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                         ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.63%       0x00007f360edd26f1:   test   %r14d,%r14d
            ╭  0x00007f360edd26f4:   je     0x00007f360edd2709           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
            │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics$$Lambda/0x00007f35940848e8::apply@1
            │                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@3 (line 1105)
            │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f359403ccf0::accept@17
            │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
            │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.10%    │  0x00007f360edd26fa:   nopw   0x0(%rax,%rax,1)
            │  0x00007f360edd2700:   cmp    %rcx,%rbx
            │  0x00007f360edd2703:   jne    0x00007f360edd5d8f           ; ImmutableOopMap {rbp=NarrowOop rdi=Oop r9=NarrowOop r11=Oop r14=NarrowOop [56]=Oop [64]=Oop [72]=NarrowOop [76]=NarrowOop [80]=Oop [88]=Oop [96]=Oop [108]=NarrowOop [112]=Oop }
            │                                                            ;*aload {reexecute=1 rethrow=0 return_oop=0}
            │                                                            ; - (reexecute) java.util.HashMap$KeySpliterator::forEachRemaining@122 (line 1712)
   0.30%    ↘  0x00007f360edd2709:   mov    0xc(,%r14,8),%r8d            ; implicit exception: dispatches to 0x00007f360edd5eed
   0.08%       0x00007f360edd2711:   mov    %r8d,0x98(%rsp)
   0.17%       0x00007f360edd2719:   mov    0x24(,%rbp,8),%r13d          ;*getfield table {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - java.util.HashMap::computeIfAbsent@38 (line 1204)
                                                                         ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                         ; - java.util.stream.Collectors$$Lambda/0x00007f359403ccf0::accept@17
                                                                         ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                         ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
               0x00007f360edd2721:   mov    0x1c(,%rbp,8),%ecx           ;*getfield threshold {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - java.util.HashMap::computeIfAbsent@31 (line 1204)
                                                                         ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                         ; - java.util.stream.Collectors$$Lambda/0x00007f359403ccf0::accept@17
                                                                         ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                         ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.25%       0x00007f360edd2728:   mov    0x14(,%rbp,8),%esi           ;*getfield size {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - java.util.HashMap::computeIfAbsent@27 (line 1204)
                                                                         ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                         ; - java.util.stream.Collectors$$Lambda/0x00007f359403ccf0::accept@17
                                                                         ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                         ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.06%       0x00007f360edd272f:   mov    0x14(,%r9,8),%edx            ;*getfield arg$3 {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - java.util.stream.Collectors$$Lambda/0x00007f359403ccf0::accept@9
                                                                         ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                         ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.15%       0x00007f360edd2737:   mov    0x10(,%r9,8),%r9d
               0x00007f360edd273f:   mov    %r9d,0x34(%rsp)
   0.24%       0x00007f360edd2744:   mov    %r9d,%ebp
   0.06%       0x00007f360edd2747:   shl    $0x3,%rbp                    ;*getfield arg$2 {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - java.util.stream.Collectors$$Lambda/0x00007f359403ccf0::accept@5
                                                                         ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                         ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.18%       0x00007f360edd274b:   mov    %rbp,0x28(%rsp)
               0x00007f360edd2750:   mov    %edx,%ebp
   0.24%       0x00007f360edd2752:   shl    $0x3,%rbp                    ;*getfield arg$3 {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - java.util.stream.Collectors$$Lambda/0x00007f359403ccf0::accept@9
                                                                         ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                         ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.07%       0x00007f360edd2756:   mov    %rbp,0x20(%rsp)
   0.16%       0x00007f360edd275b:   mov    %r13d,%ebp
               0x00007f360edd275e:   shl    $0x3,%rbp                    ;*getfield table {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - java.util.HashMap::resize@1 (line 684)
                                                                         ; - java.util.HashMap::computeIfAbsent@57 (line 1206)
                                                                         ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                         ; - java.util.stream.Collectors$$Lambda/0x00007f359403ccf0::accept@17
                                                                         ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                         ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.20%       0x00007f360edd2762:   mov    %r8d,%r9d
   0.07%       0x00007f360edd2765:   shr    $0x10,%r9d                   ;*iushr {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - java.util.HashMap::hash@17 (line 338)
                                                                         ; - java.util.HashMap::computeIfAbsent@13 (line 1199)
                                                                         ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                         ; - java.util.stream.Collectors$$Lambda/0x00007f359403ccf0::accept@17
                                                                         ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                         ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.17%       0x00007f360edd2769:   xor    %r8d,%r9d                    ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - java.util.HashMap::hash@18 (line 338)
                                                                         ; - java.util.HashMap::computeIfAbsent@13 (line 1199)
                                                                         ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                         ; - java.util.stream.Collectors$$Lambda/0x00007f359403ccf0::accept@17
                                                                         ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                         ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
               0x00007f360edd276c:   mov    %r9d,0x94(%rsp)
   0.22%       0x00007f360edd2774:   cmp    %ecx,%esi
               0x00007f360edd2776:   jg     0x00007f360edd3f98           ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - java.util.HashMap::computeIfAbsent@34 (line 1204)
                                                                         ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                         ; - java.util.stream.Collectors$$Lambda/0x00007f359403ccf0::accept@17
                                                                         ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                         ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.06%       0x00007f360edd277c:   nopl   0x0(%rax)
   0.19%       0x00007f360edd2780:   test   %r13d,%r13d
               0x00007f360edd2783:   je     0x00007f360edd3f98           ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - java.util.HashMap::computeIfAbsent@44 (line 1204)
                                                                         ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                         ; - java.util.stream.Collectors$$Lambda/0x00007f359403ccf0::accept@17
                                                                         ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                         ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
               0x00007f360edd2789:   mov    0xc(,%r13,8),%esi            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - java.util.HashMap::computeIfAbsent@49 (line 1204)
                                                                         ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                         ; - java.util.stream.Collectors$$Lambda/0x00007f359403ccf0::accept@17
                                                                         ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                         ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.22%       0x00007f360edd2791:   test   %esi,%esi
               0x00007f360edd2793:   je     0x00007f360edd5b66           ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - java.util.HashMap::computeIfAbsent@53 (line 1204)
                                                                         ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                         ; - java.util.stream.Collectors$$Lambda/0x00007f359403ccf0::accept@17
                                                                         ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                         ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.05%       0x00007f360edd2799:   mov    %esi,%ecx
   0.18%       0x00007f360edd279b:   dec    %ecx                         ;*isub {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - java.util.HashMap::computeIfAbsent@71 (line 1207)
                                                                         ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                         ; - java.util.stream.Collectors$$Lambda/0x00007f359403ccf0::accept@17
                                                                         ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                         ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
               0x00007f360edd279d:   and    %r9d,%ecx                    ;*iand {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - java.util.HashMap::computeIfAbsent@73 (line 1207)
                                                                         ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                         ; - java.util.stream.Collectors$$Lambda/0x00007f359403ccf0::accept@17
                                                                         ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                         ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.24%       0x00007f360edd27a0:   cmp    %ecx,%esi
               0x00007f360edd27a2:   jbe    0x00007f360edd5a9c
   0.08%       0x00007f360edd27a8:   mov    0x10(%rbp,%rcx,4),%r13d
   0.23%       0x00007f360edd27ad:   mov    %ecx,0x88(%rsp)
               0x00007f360edd27b4:   mov    %rbp,0x8(%rsp)
   0.18%       0x00007f360edd27b9:   mov    %esi,0x84(%rsp)
   0.06%       0x00007f360edd27c0:   mov    %r13d,%ecx
   0.16%       0x00007f360edd27c3:   shl    $0x3,%rcx                    ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - java.util.HashMap::computeIfAbsent@77 (line 1207)
                                                                         ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                         ; - java.util.stream.Collectors$$Lambda/0x00007f359403ccf0::accept@17
                                                                         ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                         ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
                                                                         ;   {no_reloc}
               0x00007f360edd27c7:   mov    %rcx,0x10(%rsp)
   0.38%       0x00007f360edd27cc:   lea    0x80(%r8),%esi               ;* unwind (locked if synchronized)
                                                                         ; - java.lang.Integer::valueOf@-3
                                                                         ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics$$Lambda/0x00007f35940848e8::apply@7
                                                                         ; - java.util.stream.Collectors::lambda$groupingBy$53@3 (line 1105)
                                                                         ; - java.util.stream.Collectors$$Lambda/0x00007f359403ccf0::accept@17
                                                                         ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                         ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.05%       0x00007f360edd27d3:   mov    %esi,0x8c(%rsp)
   0.09%       0x00007f360edd27da:   nopw   0x0(%rax,%rax,1)
               0x00007f360edd27e0:   test   %r13d,%r13d
               0x00007f360edd27e3:   je     0x00007f360edd31c8
   0.30%       0x00007f360edd27e9:   cmpl   $0x1a8490,0x8(,%r13,8)       ;   {metadata(&apos;java/util/HashMap$TreeNode&apos;)}
   1.64%       0x00007f360edd27f5:   je     0x00007f360edd5ca5           ;*aastore {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - java.util.HashMap::computeIfAbsent@289 (line 1240)
                                                                         ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                         ; - java.util.stream.Collectors$$Lambda/0x00007f359403ccf0::accept@17
                                                                         ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                         ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.33%       0x00007f360edd27fb:   mov    %r13d,0x18(%rsp)
   0.02%       0x00007f360edd2800:   mov    $0x0,%r13d
   0.05%       0x00007f360edd2806:   jmp    0x00007f360edd2845           ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - java.util.HashMap::computeIfAbsent@114 (line 1213)
                                                                         ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                         ; - java.util.stream.Collectors$$Lambda/0x00007f359403ccf0::accept@17
                                                                         ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                         ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
               0x00007f360edd280b:   data16 data16 nopw 0x0(%rax,%rax,1)
               0x00007f360edd2816:   data16 data16 xchg %ax,%ax
               0x00007f360edd281a:   nopw   0x0(%rax,%rax,1)             ;*getfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - java.util.HashMap::computeIfAbsent@116 (line 1213)
                                                                         ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
....................................................................................................
  49.12%  <total for region 1>

....[Hottest Region 2]..............................................................................
jvmci, level 4, java.util.HashMap$KeySpliterator::forEachRemaining, version 4, compile id 1303 

                                                                         ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                         ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
               0x00007f360edd283f:   mov    %rax,%rcx
               0x00007f360edd2842:   mov    %r10d,%r13d                  ; ImmutableOopMap {rcx=Oop rdx=NarrowOop rdi=Oop r11=Oop r14=NarrowOop [8]=Oop [16]=Oop [24]=NarrowOop [32]=Oop [40]=Oop [52]=NarrowOop [56]=Oop [64]=Oop [72]=NarrowOop [76]=NarrowOop [80]=Oop [88]=Oop [96]=Oop [108]=NarrowOop [112]=Oop }
                                                                         ;*aload {reexecute=1 rethrow=0 return_oop=0}
                                                                         ; - (reexecute) java.util.HashMap::computeIfAbsent@114 (line 1213)
                                                                         ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                         ; - java.util.stream.Collectors$$Lambda/0x00007f359403ccf0::accept@17
                                                                         ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                         ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.09%       0x00007f360edd2845:   mov    0xc(%rcx),%ebp               ; implicit exception: dispatches to 0x00007f360edd5f10
   0.40%       0x00007f360edd2848:   mov    0x10(%rcx),%eax              ;*getfield key {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - java.util.HashMap::computeIfAbsent@125 (line 1213)
                                                                         ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                         ; - java.util.stream.Collectors$$Lambda/0x00007f359403ccf0::accept@17
                                                                         ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                         ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.08%       0x00007f360edd284b:   mov    0x14(%rcx),%r10d             ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - java.util.HashMap::computeIfAbsent@176 (line 1222)
                                                                         ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                         ; - java.util.stream.Collectors$$Lambda/0x00007f359403ccf0::accept@17
                                                                         ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                         ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.17%       0x00007f360edd284f:   cmp    %r9d,%ebp
          ╭    0x00007f360edd2852:   je     0x00007f360edd28ac
          │    0x00007f360edd2858:   jmp    0x00007f360edd2820           ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
          │                                                              ; - java.util.HashMap::computeIfAbsent@120 (line 1213)
          │                                                              ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
          │                                                              ; - java.util.stream.Collectors$$Lambda/0x00007f359403ccf0::accept@17
          │                                                              ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
          │                                                              ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.34%  │    0x00007f360edd285a:   mov    0xc4(%rsp),%ebp
   0.36%  │    0x00007f360edd2861:   mov    0x458(%r15),%rsi             ; ImmutableOopMap {r11=Oop [88]=Oop [96]=Oop [108]=NarrowOop [112]=Oop }
          │                                                              ;*aload {reexecute=1 rethrow=0 return_oop=0}
          │                                                              ; - (reexecute) java.util.HashMap$KeySpliterator::forEachRemaining@157 (line 1718)
   0.11%  │    0x00007f360edd2868:   test   %eax,(%rsi)                  ;   {poll}
   0.27%  │    0x00007f360edd286a:   movabs $0x7f359403ccf0,%r13         ;   {metadata(&apos;java/util/stream/Collectors$$Lambda+0x00007f359403ccf0&apos;)}
   0.14%  │    0x00007f360edd2874:   movabs $0x7f359402b6f8,%rbx         ;   {metadata(&apos;com/ionutbalosin/jvm/performance/benchmarks/miscellaneous/publicationstatistics/model/Publication&apos;)}
   0.08%  │    0x00007f360edd287e:   movabs $0x7ffed2180,%rdi            ;   {oop(a &apos;java/lang/Integer&apos;[256] {0x00000007ffed2180})}
   0.09%  │    0x00007f360edd2888:   movabs $0x7f3594069340,%r8          ;   {metadata(&apos;java/util/stream/Collectors$$Lambda+0x00007f3594069340&apos;)}
   0.13%  │    0x00007f360edd2892:   vpxor  %xmm0,%xmm0,%xmm0
   0.14%  │    0x00007f360edd2896:   mov    0x60(%rsp),%r9
   0.09%  │    0x00007f360edd289b:   mov    0xc0(%rsp),%ecx
   0.12%  │    0x00007f360edd28a2:   mov    0x70(%rsp),%rdx
   0.10%  │    0x00007f360edd28a7:   jmp    0x00007f360edd25a0           ; ImmutableOopMap {rax=NarrowOop rcx=Oop rdx=NarrowOop rdi=Oop r10=NarrowOop r11=Oop r14=NarrowOop [8]=Oop [16]=Oop [32]=Oop [40]=Oop [56]=Oop [64]=Oop [76]=NarrowOop [80]=Oop [88]=Oop [96]=Oop [108]=NarrowOop [112]=Oop }
          │                                                              ;*aload {reexecute=1 rethrow=0 return_oop=0}
          │                                                              ; - (reexecute) java.util.HashMap::computeIfAbsent@114 (line 1213)
          │                                                              ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
          │                                                              ; - java.util.stream.Collectors$$Lambda/0x00007f359403ccf0::accept@17
          │                                                              ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
          │                                                              ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.09%  ↘    0x00007f360edd28ac:   cmpl   $0x25c88,0x8(,%rax,8)        ; implicit exception: dispatches to 0x00007f360edd5f33
                                                                         ;   {metadata(&apos;java/lang/Integer&apos;)}
   1.75%       0x00007f360edd28b7:   jne    0x00007f360edd5905           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - java.lang.Integer::equals@4 (line 1224)
                                                                         ; - java.util.HashMap::computeIfAbsent@142 (line 1214)
                                                                         ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                         ; - java.util.stream.Collectors$$Lambda/0x00007f359403ccf0::accept@17
                                                                         ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                         ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.35%       0x00007f360edd28bd:   mov    0xc(,%rax,8),%ebp            ;* unwind (locked if synchronized)
                                                                         ; - java.lang.Integer::intValue@-3
                                                                         ; - java.lang.Integer::equals@15 (line 1225)
                                                                         ; - java.util.HashMap::computeIfAbsent@142 (line 1214)
                                                                         ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                         ; - java.util.stream.Collectors$$Lambda/0x00007f359403ccf0::accept@17
                                                                         ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                         ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.18%       0x00007f360edd28c4:   cmp    $0x100,%esi
           ╭   0x00007f360edd28ca:   jb     0x00007f360edd2ae5
   0.01%   │   0x00007f360edd28d0:   mov    %rcx,(%rsp)
   0.03%   │   0x00007f360edd28d4:   mov    0x1b8(%r15),%rsi
   0.32%   │   0x00007f360edd28db:   lea    0x10(%rsi),%rcx
   0.08%   │   0x00007f360edd28df:   nop
   0.00%   │   0x00007f360edd28e0:   cmp    0x1c8(%r15),%rcx
           │   0x00007f360edd28e7:   ja     0x00007f360edd2ebd
   0.02%   │   0x00007f360edd28ed:   mov    %rcx,0x1b8(%r15)
   0.34%   │   0x00007f360edd28f4:   prefetchw 0xd0(%rsi)
   0.11%   │   0x00007f360edd28fb:   movq   $0x1,(%rsi)
   0.00%   │   0x00007f360edd2902:   movl   $0x25c88,0x8(%rsi)           ;   {metadata(&apos;java/lang/Integer&apos;)}
   0.02%   │   0x00007f360edd2909:   mov    %r8d,0xc(%rsi)               ;* unwind (locked if synchronized)
           │                                                             ; - java.lang.Integer::valueOf@-3
           │                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics$$Lambda/0x00007f35940848e8::apply@7
           │                                                             ; - java.util.stream.Collectors::lambda$groupingBy$53@3 (line 1105)
           │                                                             ; - java.util.stream.Collectors$$Lambda/0x00007f359403ccf0::accept@17
           │                                                             ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
           │                                                             ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.33%   │   0x00007f360edd290d:   shl    $0x3,%rax                    ;*getfield key {reexecute=0 rethrow=0 return_oop=0}
           │                                                             ; - java.util.HashMap::computeIfAbsent@125 (line 1213)
           │                                                             ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
           │                                                             ; - java.util.stream.Collectors$$Lambda/0x00007f359403ccf0::accept@17
           │                                                             ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
           │                                                             ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.08%   │   0x00007f360edd2911:   cmp    %rax,%rsi
           │   0x00007f360edd2914:   je     0x00007f360edd5ae6           ;*if_acmpeq {reexecute=0 rethrow=0 return_oop=0}
           │                                                             ; - java.util.HashMap::computeIfAbsent@132 (line 1213)
           │                                                             ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
           │                                                             ; - java.util.stream.Collectors$$Lambda/0x00007f359403ccf0::accept@17
           │                                                             ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
           │                                                             ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.00%   │   0x00007f360edd291a:   nopw   0x0(%rax,%rax,1)
   0.02%   │   0x00007f360edd2920:   cmp    %r8d,%ebp
           │   0x00007f360edd2923:   jne    0x00007f360edd5e05           ;*aload {reexecute=1 rethrow=0 return_oop=0}
           │                                                             ; - (reexecute) java.util.HashMap::computeIfAbsent@148 (line 1215)
           │                                                             ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
           │                                                             ; - java.util.stream.Collectors$$Lambda/0x00007f359403ccf0::accept@17
           │                                                             ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
           │                                                             ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.35%   │   0x00007f360edd2929:   test   %eax,0x0(,%r10,8)            ; implicit exception: deoptimizes
           │                                                             ; ImmutableOopMap {rdx=NarrowOop rsi=Oop r10=NarrowOop r11=Oop r14=NarrowOop [0]=Oop [8]=Oop [16]=Oop [32]=Oop [40]=Oop [56]=Oop [64]=Oop [76]=NarrowOop [80]=Oop [88]=Oop [96]=Oop [108]=NarrowOop [112]=Oop }
   0.38%   │   0x00007f360edd2931:   shl    $0x3,%r10                    ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
           │                                                             ; - java.util.HashMap::computeIfAbsent@176 (line 1222)
           │                                                             ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
           │                                                             ; - java.util.stream.Collectors$$Lambda/0x00007f359403ccf0::accept@17
           │                                                             ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
           │                                                             ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.02%   │   0x00007f360edd2935:   data16 data16 nopw 0x0(%rax,%rax,1) ; ImmutableOopMap {rdx=NarrowOop r10=Oop r11=Oop r14=NarrowOop [32]=Oop [56]=Oop [76]=NarrowOop [80]=Oop [88]=Oop [96]=Oop [108]=NarrowOop [112]=Oop }
           │                                                             ;*astore {reexecute=1 rethrow=0 return_oop=0}
           │                                                             ; - (reexecute) java.util.stream.Collectors::lambda$groupingBy$53@30 (line 1106)
           │                                                             ; - java.util.stream.Collectors$$Lambda/0x00007f359403ccf0::accept@17
           │                                                             ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
           │                                                             ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.32%   │   0x00007f360edd2940:   cmpl   $0x103c8a8,0x8(,%rdx,8)      ; implicit exception: dispatches to 0x00007f360edd5f56
           │                                                             ;   {metadata(&apos;java/util/stream/Collectors$$Lambda+0x00007f359403c8a8&apos;)}
   0.13%   │   0x00007f360edd294b:   jne    0x00007f360edd5719           ;*invokeinterface accept {reexecute=0 rethrow=0 return_oop=0}
           │                                                             ; - java.util.stream.Collectors::lambda$groupingBy$53@37 (line 1107)
           │                                                             ; - java.util.stream.Collectors$$Lambda/0x00007f359403ccf0::accept@17
           │                                                             ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
           │                                                             ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.05%   │   0x00007f360edd2951:   mov    0xc(,%rdx,8),%esi            ;*getfield arg$1 {reexecute=0 rethrow=0 return_oop=0}
           │                                                             ; - java.util.stream.Collectors$$Lambda/0x00007f359403c8a8::accept@1
           │                                                             ; - java.util.stream.Collectors::lambda$groupingBy$53@37 (line 1107)
           │                                                             ; - java.util.stream.Collectors$$Lambda/0x00007f359403ccf0::accept@17
           │                                                             ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
           │                                                             ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.27%   │   0x00007f360edd2958:   nopl   0x0(%rax,%rax,1)             ; ImmutableOopMap {rdx=NarrowOop r10=Oop r11=Oop r14=NarrowOop [32]=Oop [56]=Oop [76]=NarrowOop [80]=Oop [88]=Oop [96]=Oop [108]=NarrowOop [112]=Oop }
           │                                                             ;*astore {reexecute=1 rethrow=0 return_oop=0}
           │                                                             ; - (reexecute) java.util.stream.Collectors::lambda$groupingBy$53@30 (line 1106)
           │                                                             ; - java.util.stream.Collectors$$Lambda/0x00007f359403ccf0::accept@17
           │                                                             ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
           │                                                             ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.09%   │   0x00007f360edd2960:   cmpl   $0x102bd18,0x8(,%rsi,8)      ; implicit exception: dispatches to 0x00007f360edd5f79
           │                                                             ;   {metadata(&apos;com/ionutbalosin/jvm/performance/benchmarks/miscellaneous/publicationstatistics/PublicationStatistics$$Lambda+0x00007f359402bd18&apos;)}
   0.09%   │   0x00007f360edd296b:   jne    0x00007f360edd57b4           ;*invokeinterface test {reexecute=0 rethrow=0 return_oop=0}
           │                                                             ; - java.util.stream.Collectors::lambda$filtering$16@2 (line 528)
           │                                                             ; - java.util.stream.Collectors$$Lambda/0x00007f359403c8a8::accept@10
           │                                                             ; - java.util.stream.Collectors::lambda$groupingBy$53@37 (line 1107)
           │                                                             ; - java.util.stream.Collectors$$Lambda/0x00007f359403ccf0::accept@17
           │                                                             ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
           │                                                             ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.27%   │   0x00007f360edd2971:   data16 data16 nopw 0x0(%rax,%rax,1)
   0.09%   │   0x00007f360edd297c:   data16 data16 xchg %ax,%ax
   0.05%   │   0x00007f360edd2980:   cmpl   $0x76c,0xc(,%r14,8)
   0.33%   │   0x00007f360edd298c:   jl     0x00007f360edd5b4d           ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
           │                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::lambda$publicationsWithTheMostAuthorsPerYear$14@7 (line 179)
           │                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics$$Lambda/0x00007f359402bd18::test@4
           │                                                             ; - java.util.stream.Collectors::lambda$filtering$16@2 (line 528)
           │                                                             ; - java.util.stream.Collectors$$Lambda/0x00007f359403c8a8::accept@10
           │                                                             ; - java.util.stream.Collectors::lambda$groupingBy$53@37 (line 1107)
           │                                                             ; - java.util.stream.Collectors$$Lambda/0x00007f359403ccf0::accept@17
           │                                                             ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
           │                                                             ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.10%   │   0x00007f360edd2992:   mov    0x10(,%rdx,8),%esi           ;*getfield arg$2 {reexecute=0 rethrow=0 return_oop=0}
           │                                                             ; - java.util.stream.Collectors$$Lambda/0x00007f359403c8a8::accept@5
           │                                                             ; - java.util.stream.Collectors::lambda$groupingBy$53@37 (line 1107)
           │                                                             ; - java.util.stream.Collectors$$Lambda/0x00007f359403ccf0::accept@17
           │                                                             ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
           │                                                             ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.06%   │   0x00007f360edd2999:   nopl   0x0(%rax)                    ; ImmutableOopMap {r10=Oop r11=Oop r14=NarrowOop [32]=Oop [56]=Oop [76]=NarrowOop [80]=Oop [88]=Oop [96]=Oop [108]=NarrowOop [112]=Oop }
           │                                                             ;*astore {reexecute=1 rethrow=0 return_oop=0}
           │                                                             ; - (reexecute) java.util.stream.Collectors::lambda$groupingBy$53@30 (line 1106)
           │                                                             ; - java.util.stream.Collectors$$Lambda/0x00007f359403ccf0::accept@17
           │                                                             ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
           │                                                             ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.03%   │   0x00007f360edd29a0:   cmpl   $0x103bfc8,0x8(,%rsi,8)      ; implicit exception: dispatches to 0x00007f360edd5f9c
           │                                                             ;   {metadata(&apos;java/util/stream/Collectors$$Lambda+0x00007f359403bfc8&apos;)}
   0.37%   │   0x00007f360edd29ab:   jne    0x00007f360edd5ce5
   0.05%   │   0x00007f360edd29b1:   cmpl   $0xdeff0,0x8(%r10)           ;   {metadata(&apos;java/util/stream/Collectors$1OptionalBox&apos;)}
   0.04%   │   0x00007f360edd29b9:   jne    0x00007f360edd56b1           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
           │                                                             ; - java.util.stream.Collectors$$Lambda/0x00007f359403bfc8::accept@1
           │                                                             ; - java.util.stream.Collectors::lambda$filtering$16@13 (line 529)
           │                                                             ; - java.util.stream.Collectors$$Lambda/0x00007f359403c8a8::accept@10
           │                                                             ; - java.util.stream.Collectors::lambda$groupingBy$53@37 (line 1107)
           │                                                             ; - java.util.stream.Collectors$$Lambda/0x00007f359403ccf0::accept@17
           │                                                             ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
           │                                                             ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.29%   │   0x00007f360edd29bf:   movsbl 0xc(%r10),%esi               ;*getfield present {reexecute=0 rethrow=0 return_oop=0}
           │                                                             ; - java.util.stream.Collectors$1OptionalBox::accept@1 (line 895)
           │                                                             ; - java.util.stream.Collectors$$Lambda/0x00007f359403bfc8::accept@5
           │                                                             ; - java.util.stream.Collectors::lambda$filtering$16@13 (line 529)
           │                                                             ; - java.util.stream.Collectors$$Lambda/0x00007f359403c8a8::accept@10
           │                                                             ; - java.util.stream.Collectors::lambda$groupingBy$53@37 (line 1107)
           │                                                             ; - java.util.stream.Collectors$$Lambda/0x00007f359403ccf0::accept@17
           │                                                             ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
           │                                                             ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.10%   │   0x00007f360edd29c4:   mov    0x18(%r11),%eax
   0.05%   │   0x00007f360edd29c8:   shl    $0x3,%rax                    ;*getfield next {reexecute=0 rethrow=0 return_oop=0}
           │                                                             ; - java.util.HashMap$KeySpliterator::forEachRemaining@152 (line 1716)
   0.04%   │   0x00007f360edd29cc:   test   %sil,%sil
           │   0x00007f360edd29cf:   je     0x00007f360edd314a           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
           │                                                             ; - java.util.stream.Collectors$1OptionalBox::accept@4 (line 895)
           │                                                             ; - java.util.stream.Collectors$$Lambda/0x00007f359403bfc8::accept@5
           │                                                             ; - java.util.stream.Collectors::lambda$filtering$16@13 (line 529)
           │                                                             ; - java.util.stream.Collectors$$Lambda/0x00007f359403c8a8::accept@10
           │                                                             ; - java.util.stream.Collectors::lambda$groupingBy$53@37 (line 1107)
           │                                                             ; - java.util.stream.Collectors$$Lambda/0x00007f359403ccf0::accept@17
           │                                                             ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
           │                                                             ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.23%   │   0x00007f360edd29d5:   mov    0x14(%r10),%esi              ;*getfield val$op {reexecute=0 rethrow=0 return_oop=0}
           │                                                             ; - java.util.stream.Collectors$1OptionalBox::accept@9 (line 896)
           │                                                             ; - java.util.stream.Collectors$$Lambda/0x00007f359403bfc8::accept@5
           │                                                             ; - java.util.stream.Collectors::lambda$filtering$16@13 (line 529)
           │                                                             ; - java.util.stream.Collectors$$Lambda/0x00007f359403c8a8::accept@10
           │                                                             ; - java.util.stream.Collectors::lambda$groupingBy$53@37 (line 1107)
           │                                                             ; - java.util.stream.Collectors$$Lambda/0x00007f359403ccf0::accept@17
           │                                                             ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
           │                                                             ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.11%   │   0x00007f360edd29d9:   nopl   0x0(%rax)                    ; ImmutableOopMap {rax=Oop rsi=NarrowOop r10=Oop r11=Oop r14=NarrowOop [32]=Oop [56]=Oop [76]=NarrowOop [80]=Oop [88]=Oop [96]=Oop [108]=NarrowOop [112]=Oop }
           │                                                             ;*astore {reexecute=1 rethrow=0 return_oop=0}
           │                                                             ; - (reexecute) java.util.stream.Collectors::lambda$groupingBy$53@30 (line 1106)
           │                                                             ; - java.util.stream.Collectors$$Lambda/0x00007f359403ccf0::accept@17
           │                                                             ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
           │                                                             ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.05%   │   0x00007f360edd29e0:   cmpl   $0x103bb60,0x8(,%rsi,8)      ; implicit exception: dispatches to 0x00007f360edd5fbf
           │                                                             ;   {metadata(&apos;java/util/function/BinaryOperator$$Lambda+0x00007f359403bb60&apos;)}
   0.36%   │   0x00007f360edd29eb:   jne    0x00007f360edd5bbe           ;*invokeinterface apply {reexecute=0 rethrow=0 return_oop=0}
           │                                                             ; - java.util.stream.Collectors$1OptionalBox::accept@17 (line 896)
           │                                                             ; - java.util.stream.Collectors$$Lambda/0x00007f359403bfc8::accept@5
           │                                                             ; - java.util.stream.Collectors::lambda$filtering$16@13 (line 529)
           │                                                             ; - java.util.stream.Collectors$$Lambda/0x00007f359403c8a8::accept@10
           │                                                             ; - java.util.stream.Collectors::lambda$groupingBy$53@37 (line 1107)
           │                                                             ; - java.util.stream.Collectors$$Lambda/0x00007f359403ccf0::accept@17
           │                                                             ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
           │                                                             ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.14%   │   0x00007f360edd29f1:   mov    0xc(,%rsi,8),%esi            ;*getfield arg$1 {reexecute=0 rethrow=0 return_oop=0}
           │                                                             ; - java.util.function.BinaryOperator$$Lambda/0x00007f359403bb60::apply@1
           │                                                             ; - java.util.stream.Collectors$1OptionalBox::accept@17 (line 896)
           │                                                             ; - java.util.stream.Collectors$$Lambda/0x00007f359403bfc8::accept@5
           │                                                             ; - java.util.stream.Collectors::lambda$filtering$16@13 (line 529)
           │                                                             ; - java.util.stream.Collectors$$Lambda/0x00007f359403c8a8::accept@10
           │                                                             ; - java.util.stream.Collectors::lambda$groupingBy$53@37 (line 1107)
           │                                                             ; - java.util.stream.Collectors$$Lambda/0x00007f359403ccf0::accept@17
           │                                                             ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
           │                                                             ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.04%   │   0x00007f360edd29f8:   nopl   0x0(%rax,%rax,1)             ; ImmutableOopMap {rax=Oop rsi=NarrowOop r10=Oop r11=Oop r14=NarrowOop [32]=Oop [56]=Oop [76]=NarrowOop [80]=Oop [88]=Oop [96]=Oop [108]=NarrowOop [112]=Oop }
           │                                                             ;*astore {reexecute=1 rethrow=0 return_oop=0}
           │                                                             ; - (reexecute) java.util.stream.Collectors::lambda$groupingBy$53@30 (line 1106)
           │                                                             ; - java.util.stream.Collectors$$Lambda/0x00007f359403ccf0::accept@17
           │                                                             ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
           │                                                             ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.03%   │   0x00007f360edd2a00:   cmpl   $0x103b8c8,0x8(,%rsi,8)      ; implicit exception: dispatches to 0x00007f360edd5fe2
           │                                                             ;   {metadata(&apos;java/util/Comparator$$Lambda+0x00007f359403b8c8&apos;)}
   0.56%   │   0x00007f360edd2a0b:   jne    0x00007f360edd5768           ;*invokeinterface compare {reexecute=0 rethrow=0 return_oop=0}
           │                                                             ; - java.util.function.BinaryOperator::lambda$maxBy$1@3 (line 74)
           │                                                             ; - java.util.function.BinaryOperator$$Lambda/0x00007f359403bb60::apply@6
           │                                                             ; - java.util.stream.Collectors$1OptionalBox::accept@17 (line 896)
           │                                                             ; - java.util.stream.Collectors$$Lambda/0x00007f359403bfc8::accept@5
           │                                                             ; - java.util.stream.Collectors::lambda$filtering$16@13 (line 529)
           │                                                             ; - java.util.stream.Collectors$$Lambda/0x00007f359403c8a8::accept@10
           │                                                             ; - java.util.stream.Collectors::lambda$groupingBy$53@37 (line 1107)
           │                                                             ; - java.util.stream.Collectors$$Lambda/0x00007f359403ccf0::accept@17
           │                                                             ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
           │                                                             ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.15%   │   0x00007f360edd2a11:   mov    0xc(,%rsi,8),%esi            ;*getfield arg$1 {reexecute=0 rethrow=0 return_oop=0}
           │                                                             ; - java.util.Comparator$$Lambda/0x00007f359403b8c8::compare@1
           │                                                             ; - java.util.function.BinaryOperator::lambda$maxBy$1@3 (line 74)
           │                                                             ; - java.util.function.BinaryOperator$$Lambda/0x00007f359403bb60::apply@6
           │                                                             ; - java.util.stream.Collectors$1OptionalBox::accept@17 (line 896)
           │                                                             ; - java.util.stream.Collectors$$Lambda/0x00007f359403bfc8::accept@5
           │                                                             ; - java.util.stream.Collectors::lambda$filtering$16@13 (line 529)
           │                                                             ; - java.util.stream.Collectors$$Lambda/0x00007f359403c8a8::accept@10
           │                                                             ; - java.util.stream.Collectors::lambda$groupingBy$53@37 (line 1107)
           │                                                             ; - java.util.stream.Collectors$$Lambda/0x00007f359403ccf0::accept@17
           │                                                             ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
           │                                                             ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.03%   │   0x00007f360edd2a18:   nopl   0x0(%rax,%rax,1)             ; ImmutableOopMap {rax=Oop r10=Oop r11=Oop r14=NarrowOop [32]=Oop [56]=Oop [76]=NarrowOop [80]=Oop [88]=Oop [96]=Oop [108]=NarrowOop [112]=Oop }
           │                                                             ;*astore {reexecute=1 rethrow=0 return_oop=0}
           │                                                             ; - (reexecute) java.util.stream.Collectors::lambda$groupingBy$53@30 (line 1106)
           │                                                             ; - java.util.stream.Collectors$$Lambda/0x00007f359403ccf0::accept@17
           │                                                             ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
           │                                                             ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.18%   │   0x00007f360edd2a20:   cmpl   $0x1084000,0x8(,%rsi,8)      ; implicit exception: dispatches to 0x00007f360edd6005
           │                                                             ;   {metadata(&apos;com/ionutbalosin/jvm/performance/benchmarks/miscellaneous/publicationstatistics/PublicationStatistics$$Lambda+0x00007f3594084000&apos;)}
   1.30%   │   0x00007f360edd2a2b:   jne    0x00007f360edd581f           ;*invokeinterface apply {reexecute=0 rethrow=0 return_oop=0}
           │                                                             ; - java.util.Comparator::lambda$comparing$77a9974f$1@2 (line 473)
           │                                                             ; - java.util.Comparator$$Lambda/0x00007f359403b8c8::compare@6
           │                                                             ; - java.util.function.BinaryOperator::lambda$maxBy$1@3 (line 74)
           │                                                             ; - java.util.function.BinaryOperator$$Lambda/0x00007f359403bb60::apply@6
           │                                                             ; - java.util.stream.Collectors$1OptionalBox::accept@17 (line 896)
           │                                                             ; - java.util.stream.Collectors$$Lambda/0x00007f359403bfc8::accept@5
           │                                                             ; - java.util.stream.Collectors::lambda$filtering$16@13 (line 529)
           │                                                             ; - java.util.stream.Collectors$$Lambda/0x00007f359403c8a8::accept@10
           │                                                             ; - java.util.stream.Collectors::lambda$groupingBy$53@37 (line 1107)
           │                                                             ; - java.util.stream.Collectors$$Lambda/0x00007f359403ccf0::accept@17
           │                                                             ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
           │                                                             ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.32%   │   0x00007f360edd2a31:   mov    0x18(,%r14,8),%esi           ;*getfield authors {reexecute=0 rethrow=0 return_oop=0}
           │                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.model.Publication::getAuthors@1 (line 51)
           │                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::lambda$publicationsWithTheMostAuthorsPerYear$15@1 (line 182)
           │                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics$$Lambda/0x00007f3594084000::apply@4
           │                                                             ; - java.util.Comparator::lambda$comparing$77a9974f$1@12 (line 473)
           │                                                             ; - java.util.Comparator$$Lambda/0x00007f359403b8c8::compare@6
           │                                                             ; - java.util.function.BinaryOperator::lambda$maxBy$1@3 (line 74)
           │                                                             ; - java.util.function.BinaryOperator$$Lambda/0x00007f359403bb60::apply@6
           │                                                             ; - java.util.stream.Collectors$1OptionalBox::accept@17 (line 896)
           │                                                             ; - java.util.stream.Collectors$$Lambda/0x00007f359403bfc8::accept@5
           │                                                             ; - java.util.stream.Collectors::lambda$filtering$16@13 (line 529)
           │                                                             ; - java.util.stream.Collectors$$Lambda/0x00007f359403c8a8::accept@10
           │                                                             ; - java.util.stream.Collectors::lambda$groupingBy$53@37 (line 1107)
           │                                                             ; - java.util.stream.Collectors$$Lambda/0x00007f359403ccf0::accept@17
           │                                                             ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
           │                                                             ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   4.21%   │   0x00007f360edd2a39:   nopl   0x0(%rax)                    ; ImmutableOopMap {rax=Oop rsi=NarrowOop r10=Oop r11=Oop [32]=Oop [56]=Oop [76]=NarrowOop [80]=Oop [88]=Oop [96]=Oop [108]=NarrowOop [112]=Oop }
           │                                                             ;*astore {reexecute=1 rethrow=0 return_oop=0}
           │                                                             ; - (reexecute) java.util.stream.Collectors::lambda$groupingBy$53@30 (line 1106)
           │                                                             ; - java.util.stream.Collectors$$Lambda/0x00007f359403ccf0::accept@17
           │                                                             ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
           │                                                             ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.06%   │   0x00007f360edd2a40:   cmpl   $0xbc3f8,0x8(,%rsi,8)        ; implicit exception: dispatches to 0x00007f360edd6028
           │                                                             ;   {metadata(&apos;java/util/ArrayList&apos;)}
  23.44%   │   0x00007f360edd2a4b:   jne    0x00007f360edd5947           ;*invokeinterface size {reexecute=0 rethrow=0 return_oop=0}
           │                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::lambda$publicationsWithTheMostAuthorsPerYear$15@4 (line 182)
           │                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics$$Lambda/0x00007f3594084000::apply@4
           │                                                             ; - java.util.Comparator::lambda$comparing$77a9974f$1@12 (line 473)
           │                                                             ; - java.util.Comparator$$Lambda/0x00007f359403b8c8::compare@6
           │                                                             ; - java.util.function.BinaryOperator::lambda$maxBy$1@3 (line 74)
           │                                                             ; - java.util.function.BinaryOperator$$Lambda/0x00007f359403bb60::apply@6
           │                                                             ; - java.util.stream.Collectors$1OptionalBox::accept@17 (line 896)
           │                                                             ; - java.util.stream.Collectors$$Lambda/0x00007f359403bfc8::accept@5
           │                                                             ; - java.util.stream.Collectors::lambda$filtering$16@13 (line 529)
           │                                                             ; - java.util.stream.Collectors$$Lambda/0x00007f359403c8a8::accept@10
           │                                                             ; - java.util.stream.Collectors::lambda$groupingBy$53@37 (line 1107)
           │                                                             ; - java.util.stream.Collectors$$Lambda/0x00007f359403ccf0::accept@17
           │                                                             ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
           │                                                             ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.30%   │   0x00007f360edd2a51:   mov    0x10(%r10),%edx              ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
           │                                                             ; - java.util.stream.Collectors$1OptionalBox::accept@13 (line 896)
           │                                                             ; - java.util.stream.Collectors$$Lambda/0x00007f359403bfc8::accept@5
           │                                                             ; - java.util.stream.Collectors::lambda$filtering$16@13 (line 529)
           │                                                             ; - java.util.stream.Collectors$$Lambda/0x00007f359403c8a8::accept@10
           │                                                             ; - java.util.stream.Collectors::lambda$groupingBy$53@37 (line 1107)
           │                                                             ; - java.util.stream.Collectors$$Lambda/0x00007f359403ccf0::accept@17
           │                                                             ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
           │                                                             ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.03%   │   0x00007f360edd2a55:   test   %edx,%edx
           │   0x00007f360edd2a57:   je     0x00007f360edd2c13
   0.01%   │   0x00007f360edd2a5d:   mov    0x8(,%rdx,8),%r8d
   0.60%   │   0x00007f360edd2a65:   movabs $0x7f3593000000,%r9
   0.28%   │   0x00007f360edd2a6f:   lea    (%r9,%r8,1),%r8
   0.11%   │   0x00007f360edd2a73:   test   %edx,%edx
           │╭  0x00007f360edd2a75:   je     0x00007f360edd2a89           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
           ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics$$Lambda/0x00007f3594084000::apply@1
           ││                                                            ; - java.util.Comparator::lambda$comparing$77a9974f$1@2 (line 473)
           ││                                                            ; - java.util.Comparator$$Lambda/0x00007f359403b8c8::compare@6
           ││                                                            ; - java.util.function.BinaryOperator::lambda$maxBy$1@3 (line 74)
           ││                                                            ; - java.util.function.BinaryOperator$$Lambda/0x00007f359403bb60::apply@6
           ││                                                            ; - java.util.stream.Collectors$1OptionalBox::accept@17 (line 896)
           ││                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f359403bfc8::accept@5
           ││                                                            ; - java.util.stream.Collectors::lambda$filtering$16@13 (line 529)
           ││                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f359403c8a8::accept@10
           ││                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@37 (line 1107)
           ││                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f359403ccf0::accept@17
           ││                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
           ││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.00%   ││  0x00007f360edd2a7b:   nopl   0x0(%rax,%rax,1)
   0.09%   ││  0x00007f360edd2a80:   cmp    %r8,%rbx
           ││  0x00007f360edd2a83:   jne    0x00007f360edd5ba5           ; ImmutableOopMap {rax=Oop rsi=NarrowOop r10=Oop r11=Oop [32]=Oop [56]=Oop [76]=NarrowOop [80]=Oop [88]=Oop [96]=Oop [108]=NarrowOop [112]=Oop }
           ││                                                            ;*astore {reexecute=1 rethrow=0 return_oop=0}
           ││                                                            ; - (reexecute) java.util.stream.Collectors::lambda$groupingBy$53@30 (line 1106)
           ││                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f359403ccf0::accept@17
           ││                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
           ││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.34%   │↘  0x00007f360edd2a89:   mov    0x18(,%rdx,8),%edx           ; implicit exception: dispatches to 0x00007f360edd604d
   0.24%   │   0x00007f360edd2a90:   data16 data16 nopw 0x0(%rax,%rax,1)
   0.01%   │   0x00007f360edd2a9b:   data16 data16 xchg %ax,%ax
   0.07%   │   0x00007f360edd2a9f:   nop                                 ; ImmutableOopMap {rax=Oop rdx=NarrowOop rsi=NarrowOop r10=Oop r11=Oop [32]=Oop [56]=Oop [76]=NarrowOop [80]=Oop [88]=Oop [96]=Oop [108]=NarrowOop [112]=Oop }
           │                                                             ;*astore {reexecute=1 rethrow=0 return_oop=0}
           │                                                             ; - (reexecute) java.util.stream.Collectors::lambda$groupingBy$53@30 (line 1106)
           │                                                             ; - java.util.stream.Collectors$$Lambda/0x00007f359403ccf0::accept@17
           │                                                             ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
           │                                                             ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.28%   │   0x00007f360edd2aa0:   cmpl   $0xbc3f8,0x8(,%rdx,8)        ; implicit exception: dispatches to 0x00007f360edd6070
           │                                                             ;   {metadata(&apos;java/util/ArrayList&apos;)}
   1.34%   │   0x00007f360edd2aab:   jne    0x00007f360edd5682           ;*invokeinterface size {reexecute=0 rethrow=0 return_oop=0}
           │                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::lambda$publicationsWithTheMostAuthorsPerYear$15@4 (line 182)
           │                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics$$Lambda/0x00007f3594084000::apply@4
           │                                                             ; - java.util.Comparator::lambda$comparing$77a9974f$1@2 (line 473)
           │                                                             ; - java.util.Comparator$$Lambda/0x00007f359403b8c8::compare@6
           │                                                             ; - java.util.function.BinaryOperator::lambda$maxBy$1@3 (line 74)
           │                                                             ; - java.util.function.BinaryOperator$$Lambda/0x00007f359403bb60::apply@6
           │                                                             ; - java.util.stream.Collectors$1OptionalBox::accept@17 (line 896)
           │                                                             ; - java.util.stream.Collectors$$Lambda/0x00007f359403bfc8::accept@5
           │                                                             ; - java.util.stream.Collectors::lambda$filtering$16@13 (line 529)
           │                                                             ; - java.util.stream.Collectors$$Lambda/0x00007f359403c8a8::accept@10
           │                                                             ; - java.util.stream.Collectors::lambda$groupingBy$53@37 (line 1107)
           │                                                             ; - java.util.stream.Collectors$$Lambda/0x00007f359403ccf0::accept@17
           │                                                             ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
           │                                                             ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.19%   │   0x00007f360edd2ab1:   mov    0x10(,%rdx,8),%edx           ;*getfield size {reexecute=0 rethrow=0 return_oop=0}
           │                                                             ; - java.util.ArrayList::size@1 (line 253)
           │                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::lambda$publicationsWithTheMostAuthorsPerYear$15@4 (line 182)
           │                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics$$Lambda/0x00007f3594084000::apply@4
           │                                                             ; - java.util.Comparator::lambda$comparing$77a9974f$1@2 (line 473)
           │                                                             ; - java.util.Comparator$$Lambda/0x00007f359403b8c8::compare@6
           │                                                             ; - java.util.function.BinaryOperator::lambda$maxBy$1@3 (line 74)
           │                                                             ; - java.util.function.BinaryOperator$$Lambda/0x00007f359403bb60::apply@6
           │                                                             ; - java.util.stream.Collectors$1OptionalBox::accept@17 (line 896)
           │                                                             ; - java.util.stream.Collectors$$Lambda/0x00007f359403bfc8::accept@5
           │                                                             ; - java.util.stream.Collectors::lambda$filtering$16@13 (line 529)
           │                                                             ; - java.util.stream.Collectors$$Lambda/0x00007f359403c8a8::accept@10
           │                                                             ; - java.util.stream.Collectors::lambda$groupingBy$53@37 (line 1107)
           │                                                             ; - java.util.stream.Collectors$$Lambda/0x00007f359403ccf0::accept@17
           │                                                             ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
           │                                                             ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.62%   │   0x00007f360edd2ab8:   nopl   0x0(%rax,%rax,1)
   0.03%   │   0x00007f360edd2ac0:   cmp    0x10(,%rsi,8),%edx
           │   0x00007f360edd2ac7:   jl     0x00007f360edd340a           ;*iflt {reexecute=0 rethrow=0 return_oop=0}
           │                                                             ; - java.util.function.BinaryOperator::lambda$maxBy$1@8 (line 74)
           │                                                             ; - java.util.function.BinaryOperator$$Lambda/0x00007f359403bb60::apply@6
           │                                                             ; - java.util.stream.Collectors$1OptionalBox::accept@17 (line 896)
           │                                                             ; - java.util.stream.Collectors$$Lambda/0x00007f359403bfc8::accept@5
           │                                                             ; - java.util.stream.Collectors::lambda$filtering$16@13 (line 529)
           │                                                             ; - java.util.stream.Collectors$$Lambda/0x00007f359403c8a8::accept@10
           │                                                             ; - java.util.stream.Collectors::lambda$groupingBy$53@37 (line 1107)
           │                                                             ; - java.util.stream.Collectors$$Lambda/0x00007f359403ccf0::accept@17
           │                                                             ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
           │                                                             ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   1.96%   │   0x00007f360edd2acd:   mov    %rax,%r11
   0.25%   │   0x00007f360edd2ad0:   mov    0x9c(%rsp),%r10d
   0.03%   │   0x00007f360edd2ad8:   mov    0xa0(%rsp),%r9
           │   0x00007f360edd2ae0:   jmp    0x00007f360edd25d3
           ↘   0x00007f360edd2ae5:   mov    %rcx,(%rsp)
               0x00007f360edd2ae9:   mov    0x10(%rdi,%rsi,4),%esi
               0x00007f360edd2aed:   shl    $0x3,%rsi
               0x00007f360edd2af1:   jmp    0x00007f360edd290d           ;* unwind (locked if synchronized)
                                                                         ; - java.lang.Integer::valueOf@-3
                                                                         ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics$$Lambda/0x00007f35940848e8::apply@7
                                                                         ; - java.util.stream.Collectors::lambda$groupingBy$53@3 (line 1105)
                                                                         ; - java.util.stream.Collectors$$Lambda/0x00007f359403ccf0::accept@17
                                                                         ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
....................................................................................................
  47.98%  <total for region 2>

....[Hottest Regions]...............................................................................
  49.12%      jvmci, level 4  java.util.HashMap$KeySpliterator::forEachRemaining, version 4, compile id 1303 
  47.98%      jvmci, level 4  java.util.HashMap$KeySpliterator::forEachRemaining, version 4, compile id 1303 
   0.70%              kernel  [unknown] 
   0.10%              kernel  [unknown] 
   0.07%              kernel  [unknown] 
   0.07%              kernel  [unknown] 
   0.06%              kernel  [unknown] 
   0.06%              kernel  [unknown] 
   0.05%              kernel  [unknown] 
   0.04%              kernel  [unknown] 
   0.03%           libjvm.so  G1CardSet::occupied 
   0.03%              kernel  [unknown] 
   0.03%              kernel  [unknown] 
   0.02%      jvmci, level 4  java.util.HashMap$KeySpliterator::forEachRemaining, version 4, compile id 1303 
   0.02%              kernel  [unknown] 
   0.02%              kernel  [unknown] 
   0.02%              kernel  [unknown] 
   0.02%              kernel  [unknown] 
   0.02%              kernel  [unknown] 
   0.02%              kernel  [unknown] 
   1.50%  <...other 475 warm regions...>
....................................................................................................
  99.99%  <totals>

....[Hottest Methods (after inlining)]..............................................................
  97.17%      jvmci, level 4  java.util.HashMap$KeySpliterator::forEachRemaining, version 4, compile id 1303 
   2.01%              kernel  [unknown] 
   0.15%                      <unknown> 
   0.04%      jvmci, level 4  java.util.stream.Collectors::lambda$flatMapping$15, version 3, compile id 1370 
   0.03%           libjvm.so  G1CardSet::occupied 
   0.03%      jvmci, level 4  java.util.HashMap::replaceAll, version 6, compile id 1395 
   0.03%      jvmci, level 4  java.util.stream.Collectors$$Lambda.0x00007f359403e340::accept, version 3, compile id 1366 
   0.03%      jvmci, level 4  java.util.HashMap$EntrySpliterator::forEachRemaining, version 5, compile id 1394 
   0.02%  libpthread-2.31.so  pthread_cond_timedwait@@GLIBC_2.3.2 
   0.02%           libjvm.so  xmlStream::write_text 
   0.02%        libc-2.31.so  __vfprintf_internal 
   0.02%           libjvm.so  CompilerOracle::has_option_value<bool> 
   0.02%      jvmci, level 4  java.util.HashMap::resize, version 2, compile id 1379 
   0.01%           libjvm.so  fileStream::write 
   0.01%        libc-2.31.so  __memmove_avx_unaligned_erms 
   0.01%        libc-2.31.so  _IO_fwrite 
   0.01%        libc-2.31.so  clock_gettime@GLIBC_2.2.5 
   0.01%           libjvm.so  StatSamplerTask::task 
   0.01%           libjvm.so  G1ConcurrentRefine::RemSetSamplingClosure::do_heap_region 
   0.01%           libjvm.so  ElfSymbolTable::lookup 
   0.34%  <...other 121 warm methods...>
....................................................................................................
  99.99%  <totals>

....[Distribution by Source]........................................................................
  97.34%      jvmci, level 4
   2.01%              kernel
   0.29%           libjvm.so
   0.15%                    
   0.12%        libc-2.31.so
   0.04%  libpthread-2.31.so
   0.02%         interpreter
   0.01%      hsdis-amd64.so
   0.01%          ld-2.31.so
   0.00%         c1, level 3
   0.00%    perf-2148069.map
....................................................................................................
  99.99%  <totals>



# JMH version: 1.37
# VM version: JDK 21, Java HotSpot(TM) 64-Bit Server VM, 21+35-jvmci-23.1-b15
# VM invoker: /home/gogu/bench_jdks/graalvm-jdk-21+35.1/bin/java
# VM options: -XX:ThreadPriorityPolicy=1 -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCIProduct -XX:-UnlockExperimentalVMOptions -Xms4g -Xmx4g -XX:+AlwaysPreTouch
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark.publications_years_statistics

# Run progress: 78.57% complete, ETA 00:05:55
# Fork: 1 of 1
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 9.253 ms/op
# Warmup Iteration   2: 7.582 ms/op
# Warmup Iteration   3: 7.582 ms/op
# Warmup Iteration   4: 7.691 ms/op
# Warmup Iteration   5: 4.485 ms/op
Iteration   1: 3.662 ms/op
Iteration   2: 3.611 ms/op
Iteration   3: 3.635 ms/op
Iteration   4: 3.618 ms/op
Iteration   5: 3.663 ms/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark.publications_years_statistics":
  3.638 ±(99.9%) 0.094 ms/op [Average]
  (min, avg, max) = (3.611, 3.638, 3.663), stdev = 0.024
  CI (99.9%): [3.544, 3.732] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark.publications_years_statistics:asm":
PrintAssembly processed: 296053 total address lines.
Perf output processed (skipped 62.466 seconds):
 Column 1: cycles (50712 events)

Hottest code regions (>10.00% "cycles" events):
 Event counts are percents of total event count.

....[Hottest Region 1]..............................................................................
jvmci, level 4, com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::publications_years_statistics, version 2, compile id 1246 

                            0x00007fa08ade9ea3:   jbe    0x00007fa08adea4b1
                            0x00007fa08ade9ea9:   mov    0x10(%rsi,%r9,4),%ecx        ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                                                      ; - java.util.HashMap$KeySpliterator::forEachRemaining@133 (line 1713)
                                                                                      ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
                                                                                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                                                                                      ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
                                                                                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                                                                                      ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
                                                                                      ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::publicationsYearsStatistics@24 (line 158)
                                                                                      ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::publications_years_statistics@3 (line 166)
   0.86%                    0x00007fa08ade9eae:   inc    %r9d                         ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                                                      ; - java.util.HashMap$KeySpliterator::forEachRemaining@130 (line 1713)
                                                                                      ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
                                                                                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                                                                                      ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
                                                                                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                                                                                      ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
                                                                                      ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::publicationsYearsStatistics@24 (line 158)
                                                                                      ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::publications_years_statistics@3 (line 166)
   0.12%              ↗     0x00007fa08ade9eb1:   test   %ecx,%ecx
          ╭           │     0x00007fa08ade9eb3:   je     0x00007fa08ade9f5e           ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
          │           │                                                               ; - java.util.HashMap$KeySpliterator::forEachRemaining@159 (line 1718)
          │           │                                                               ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
          │           │                                                               ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
          │           │                                                               ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
          │           │                                                               ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
          │           │                                                               ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
          │           │                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::publicationsYearsStatistics@24 (line 158)
          │           │                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::publications_years_statistics@3 (line 166)
   0.73%  │       ↗   │     0x00007fa08ade9eb9:   nopl   0x0(%rax)                    ;   {no_reloc}
   0.03%  │       │   │     0x00007fa08ade9ec0:   test   %ecx,%ecx
          │╭      │   │     0x00007fa08ade9ec2:   jne    0x00007fa08ade9ff1           ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
          ││      │   │                                                               ; - java.util.HashMap$KeySpliterator::forEachRemaining@124 (line 1712)
          ││      │   │                                                               ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
          ││      │   │                                                               ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
          ││      │   │                                                               ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
          ││      │   │                                                               ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
          ││      │   │                                                               ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
          ││      │   │                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::publicationsYearsStatistics@24 (line 158)
          ││      │   │                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::publications_years_statistics@3 (line 166)
   0.01%  ││      │   │     0x00007fa08ade9ec8:   cmp    %r9d,%r11d
          ││      │   │     0x00007fa08ade9ecb:   jbe    0x00007fa08adea47b
   0.00%  ││      │   │     0x00007fa08ade9ed1:   mov    0x10(%rsi,%r9,4),%r10d       ;*aaload {reexecute=0 rethrow=0 return_oop=0}
          ││      │   │                                                               ; - java.util.HashMap$KeySpliterator::forEachRemaining@133 (line 1713)
          ││      │   │                                                               ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
          ││      │   │                                                               ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
          ││      │   │                                                               ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
          ││      │   │                                                               ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
          ││      │   │                                                               ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
          ││      │   │                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::publicationsYearsStatistics@24 (line 158)
          ││      │   │                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::publications_years_statistics@3 (line 166)
   0.77%  ││      │   │     0x00007fa08ade9ed6:   inc    %r9d                         ;*iinc {reexecute=0 rethrow=0 return_oop=0}
          ││      │   │                                                               ; - java.util.HashMap$KeySpliterator::forEachRemaining@130 (line 1713)
          ││      │   │                                                               ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
          ││      │   │                                                               ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
          ││      │   │                                                               ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
          ││      │   │                                                               ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
          ││      │   │                                                               ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
          ││      │   │                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::publicationsYearsStatistics@24 (line 158)
          ││      │   │                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::publications_years_statistics@3 (line 166)
   0.10%  ││      │   │↗    0x00007fa08ade9ed9:   nopl   0x0(%rax)
   0.03%  ││      │   ││    0x00007fa08ade9ee0:   test   %r10d,%r10d
          ││╭     │   ││    0x00007fa08ade9ee3:   je     0x00007fa08ade9f6e           ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
          │││     │   ││                                                              ; - java.util.HashMap$KeySpliterator::forEachRemaining@159 (line 1718)
          │││     │   ││                                                              ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
          │││     │   ││                                                              ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
          │││     │   ││                                                              ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
          │││     │   ││                                                              ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
          │││     │   ││                                                              ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
          │││     │   ││                                                              ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::publicationsYearsStatistics@24 (line 158)
          │││     │   ││                                                              ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::publications_years_statistics@3 (line 166)
   0.72%  │││     │↗  ││    0x00007fa08ade9ee9:   test   %r10d,%r10d
          │││╭    ││  ││    0x00007fa08ade9eec:   jne    0x00007fa08adea058           ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
          ││││    ││  ││                                                              ; - java.util.HashMap$KeySpliterator::forEachRemaining@124 (line 1712)
          ││││    ││  ││                                                              ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
          ││││    ││  ││                                                              ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
          ││││    ││  ││                                                              ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
          ││││    ││  ││                                                              ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
          ││││    ││  ││                                                              ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
          ││││    ││  ││                                                              ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::publicationsYearsStatistics@24 (line 158)
          ││││    ││  ││                                                              ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::publications_years_statistics@3 (line 166)
   0.01%  ││││    ││  ││    0x00007fa08ade9ef2:   cmp    %r9d,%r11d
          ││││    ││  ││    0x00007fa08ade9ef5:   jbe    0x00007fa08adea3f6
   0.00%  ││││    ││  ││    0x00007fa08ade9efb:   mov    0x10(%rsi,%r9,4),%r10d       ;*aaload {reexecute=0 rethrow=0 return_oop=0}
          ││││    ││  ││                                                              ; - java.util.HashMap$KeySpliterator::forEachRemaining@133 (line 1713)
          ││││    ││  ││                                                              ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
          ││││    ││  ││                                                              ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
          ││││    ││  ││                                                              ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
          ││││    ││  ││                                                              ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
          ││││    ││  ││                                                              ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
          ││││    ││  ││                                                              ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::publicationsYearsStatistics@24 (line 158)
          ││││    ││  ││                                                              ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::publications_years_statistics@3 (line 166)
   0.11%  ││││    ││  ││    0x00007fa08ade9f00:   inc    %r9d                         ;*iinc {reexecute=0 rethrow=0 return_oop=0}
          ││││    ││  ││                                                              ; - java.util.HashMap$KeySpliterator::forEachRemaining@130 (line 1713)
          ││││    ││  ││                                                              ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
          ││││    ││  ││                                                              ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
          ││││    ││  ││                                                              ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
          ││││    ││  ││                                                              ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
          ││││    ││  ││                                                              ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
          ││││    ││  ││                                                              ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::publicationsYearsStatistics@24 (line 158)
          ││││    ││  ││                                                              ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::publications_years_statistics@3 (line 166)
   0.84%  ││││    ││  ││↗   0x00007fa08ade9f03:   test   %r10d,%r10d
          ││││╭   ││  │││   0x00007fa08ade9f06:   je     0x00007fa08ade9f7c           ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
          │││││   ││  │││                                                             ; - java.util.HashMap$KeySpliterator::forEachRemaining@159 (line 1718)
          │││││   ││  │││                                                             ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
          │││││   ││  │││                                                             ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
          │││││   ││  │││                                                             ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
          │││││   ││  │││                                                             ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
          │││││   ││  │││                                                             ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
          │││││   ││  │││                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::publicationsYearsStatistics@24 (line 158)
          │││││   ││  │││                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::publications_years_statistics@3 (line 166)
   0.74%  │││││   ││↗ │││   0x00007fa08ade9f0c:   test   %r10d,%r10d
          │││││╭  │││ │││   0x00007fa08ade9f0f:   jne    0x00007fa08adea0b0           ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
          ││││││  │││ │││                                                             ; - java.util.HashMap$KeySpliterator::forEachRemaining@124 (line 1712)
          ││││││  │││ │││                                                             ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
          ││││││  │││ │││                                                             ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
          ││││││  │││ │││                                                             ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
          ││││││  │││ │││                                                             ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
          ││││││  │││ │││                                                             ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
          ││││││  │││ │││                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::publicationsYearsStatistics@24 (line 158)
          ││││││  │││ │││                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::publications_years_statistics@3 (line 166)
   0.01%  ││││││  │││ │││   0x00007fa08ade9f15:   cmp    %r9d,%r11d
          ││││││  │││ │││   0x00007fa08ade9f18:   jbe    0x00007fa08adea4d6
   0.01%  ││││││  │││ │││   0x00007fa08ade9f1e:   mov    0x10(%rsi,%r9,4),%r10d       ;*aaload {reexecute=0 rethrow=0 return_oop=0}
          ││││││  │││ │││                                                             ; - java.util.HashMap$KeySpliterator::forEachRemaining@133 (line 1713)
          ││││││  │││ │││                                                             ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
          ││││││  │││ │││                                                             ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
          ││││││  │││ │││                                                             ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
          ││││││  │││ │││                                                             ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
          ││││││  │││ │││                                                             ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
          ││││││  │││ │││                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::publicationsYearsStatistics@24 (line 158)
          ││││││  │││ │││                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::publications_years_statistics@3 (line 166)
   0.11%  ││││││  │││ │││   0x00007fa08ade9f23:   inc    %r9d                         ;*iinc {reexecute=0 rethrow=0 return_oop=0}
          ││││││  │││ │││                                                             ; - java.util.HashMap$KeySpliterator::forEachRemaining@130 (line 1713)
          ││││││  │││ │││                                                             ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
          ││││││  │││ │││                                                             ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
          ││││││  │││ │││                                                             ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
          ││││││  │││ │││                                                             ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
          ││││││  │││ │││                                                             ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
          ││││││  │││ │││                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::publicationsYearsStatistics@24 (line 158)
          ││││││  │││ │││                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::publications_years_statistics@3 (line 166)
   0.77%  ││││││  │││ │││↗  0x00007fa08ade9f26:   test   %r10d,%r10d
          ││││││╭ │││ ││││  0x00007fa08ade9f29:   je     0x00007fa08ade9f8a           ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
          │││││││ │││ ││││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@159 (line 1718)
          │││││││ │││ ││││                                                            ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
          │││││││ │││ ││││                                                            ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
          │││││││ │││ ││││                                                            ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
          │││││││ │││ ││││                                                            ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
          │││││││ │││ ││││                                                            ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
          │││││││ │││ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::publicationsYearsStatistics@24 (line 158)
          │││││││ │││ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::publications_years_statistics@3 (line 166)
   0.79%  │││││││ │││↗││││  0x00007fa08ade9f2f:   shl    $0x3,%r10                    ;*aload {reexecute=0 rethrow=0 return_oop=0}
          │││││││ ││││││││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@157 (line 1718)
          │││││││ ││││││││                                                            ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
          │││││││ ││││││││                                                            ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
          │││││││ ││││││││                                                            ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
          │││││││ ││││││││                                                            ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
          │││││││ ││││││││                                                            ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
          │││││││ ││││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::publicationsYearsStatistics@24 (line 158)
          │││││││ ││││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::publications_years_statistics@3 (line 166)
   0.08%  │││││││ ││││││││  0x00007fa08ade9f33:   lea    0x4(%r14),%r14d
   0.02%  │││││││ ││││││││  0x00007fa08ade9f37:   nopw   0x0(%rax,%rax,1)
   0.23%  │││││││ ││││││││  0x00007fa08ade9f40:   cmp    $0x1ffc,%r14d
          │││││││ ││││││││  0x00007fa08ade9f47:   jge    0x00007fa08adea11e
   0.66%  │││││││ ││││││││  0x00007fa08ade9f4d:   mov    %r10,%rcx
   0.03%  │││││││ ││││││││  0x00007fa08ade9f50:   test   %rcx,%rcx
          │││││││ ││││││││  0x00007fa08ade9f53:   je     0x00007fa08ade9ea0
   0.02%  │││││││╭││││││││  0x00007fa08ade9f59:   jmp    0x00007fa08ade9fa0           ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
          ││││││││││││││││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@124 (line 1712)
          ││││││││││││││││                                                            ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
          ││││││││││││││││                                                            ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
          ││││││││││││││││                                                            ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
          ││││││││││││││││                                                            ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
          ││││││││││││││││                                                            ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
          ││││││││││││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::publicationsYearsStatistics@24 (line 158)
          ││││││││││││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::publications_years_statistics@3 (line 166)
   0.23%  ↘│││││││││││││││  0x00007fa08ade9f5e:   xchg   %ax,%ax
   0.00%   │││││││││││││││  0x00007fa08ade9f60:   cmp    %r9d,%r11d
           │││││││╰│││││││  0x00007fa08ade9f63:   jg     0x00007fa08ade9eb9
           │││││││ │││││││  0x00007fa08ade9f69:   jmp    0x00007fa08adea265
   0.18%   │↘│││││ │││││││  0x00007fa08ade9f6e:   cmp    %r9d,%r11d
           │ │││││ ╰││││││  0x00007fa08ade9f71:   jg     0x00007fa08ade9ee9
           │ │││││  ││││││  0x00007fa08ade9f77:   jmp    0x00007fa08adea265
   0.20%   │ │↘│││  ││││││  0x00007fa08ade9f7c:   nopl   0x0(%rax)
   0.00%   │ │ │││  ││││││  0x00007fa08ade9f80:   cmp    %r9d,%r11d
           │ │ │││  ╰│││││  0x00007fa08ade9f83:   jg     0x00007fa08ade9f0c
           │ │ │││   │││││  0x00007fa08ade9f85:   jmp    0x00007fa08adea265
   0.22%   │ │ │↘│   │││││  0x00007fa08ade9f8a:   cmp    %r9d,%r11d
           │ │ │ │   ╰││││  0x00007fa08ade9f8d:   jg     0x00007fa08ade9f2f
           │ │ │ │    ││││  0x00007fa08ade9f8f:   jmp    0x00007fa08adea265           ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
           │ │ │ │    ││││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@164 (line 1718)
           │ │ │ │    ││││                                                            ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
           │ │ │ │    ││││                                                            ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
           │ │ │ │    ││││                                                            ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
           │ │ │ │    ││││                                                            ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
           │ │ │ │    ││││                                                            ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
           │ │ │ │    ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::publicationsYearsStatistics@24 (line 158)
           │ │ │ │    ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::publications_years_statistics@3 (line 166)
           │ │ │ │    ││││  0x00007fa08ade9f94:   nopl   0x0(%rax,%rax,1)
           │ │ │ │    ││││  0x00007fa08ade9f9c:   data16 data16 xchg %ax,%ax          ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
           │ │ │ │    ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::lambda$publicationsYearsStatistics$11@7 (line 157)
           │ │ │ │    ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics$$Lambda/0x00007fa01002bd28::test@4
           │ │ │ │    ││││                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@8 (line 178)
           │ │ │ │    ││││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
           │ │ │ │    ││││                                                            ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
           │ │ │ │    ││││                                                            ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
           │ │ │ │    ││││                                                            ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
           │ │ │ │    ││││                                                            ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
           │ │ │ │    ││││                                                            ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
           │ │ │ │    ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::publicationsYearsStatistics@24 (line 158)
           │ │ │ │    ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::publications_years_statistics@3 (line 166)
   0.22%   │ │ │ ↘    ││││  0x00007fa08ade9fa0:   mov    0x10(%rcx),%r10d             ; ImmutableOopMap {rcx=Oop rsi=Oop r8=Oop r10=NarrowOop }
           │ │ │      ││││                                                            ;*aload {reexecute=1 rethrow=0 return_oop=0}
           │ │ │      ││││                                                            ; - (reexecute) java.util.HashMap$KeySpliterator::forEachRemaining@122 (line 1712)
           │ │ │      ││││                                                            ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
           │ │ │      ││││                                                            ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
           │ │ │      ││││                                                            ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
           │ │ │      ││││                                                            ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
           │ │ │      ││││                                                            ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
           │ │ │      ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::publicationsYearsStatistics@24 (line 158)
           │ │ │      ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::publications_years_statistics@3 (line 166)
   8.29%   │ │ │      ││││  0x00007fa08ade9fa4:   cmpl   $0x102b708,0x8(,%r10,8)      ; implicit exception: dispatches to 0x00007fa08adea574
           │ │ │      ││││                                                            ;   {metadata(&apos;com/ionutbalosin/jvm/performance/benchmarks/miscellaneous/publicationstatistics/model/Publication&apos;)}
  12.70%   │ │ │      ││││  0x00007fa08ade9fb0:   jne    0x00007fa08adea404           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
           │ │ │      ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics$$Lambda/0x00007fa01002bd28::test@1
           │ │ │      ││││                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@8 (line 178)
           │ │ │      ││││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
           │ │ │      ││││                                                            ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
           │ │ │      ││││                                                            ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
           │ │ │      ││││                                                            ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
           │ │ │      ││││                                                            ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
           │ │ │      ││││                                                            ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
           │ │ │      ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::publicationsYearsStatistics@24 (line 158)
           │ │ │      ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::publications_years_statistics@3 (line 166)
   0.26%   │ │ │      ││││  0x00007fa08ade9fb6:   mov    0xc(,%r10,8),%r10d           ;*getfield year {reexecute=0 rethrow=0 return_oop=0}
           │ │ │      ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.model.Publication::getYear@1 (line 43)
           │ │ │      ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::lambda$publicationsYearsStatistics$11@1 (line 157)
           │ │ │      ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics$$Lambda/0x00007fa01002bd28::test@4
           │ │ │      ││││                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@8 (line 178)
           │ │ │      ││││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
           │ │ │      ││││                                                            ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
           │ │ │      ││││                                                            ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
           │ │ │      ││││                                                            ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
           │ │ │      ││││                                                            ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
           │ │ │      ││││                                                            ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
           │ │ │      ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::publicationsYearsStatistics@24 (line 158)
           │ │ │      ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::publications_years_statistics@3 (line 166)
   0.16%   │ │ │      ││││  0x00007fa08ade9fbe:   xchg   %ax,%ax
           │ │ │      ││││  0x00007fa08ade9fc0:   cmp    $0x76c,%r10d
           │ │ │      ││││  0x00007fa08ade9fc7:   jl     0x00007fa08adea48d           ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
           │ │ │      ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::lambda$publicationsYearsStatistics$11@7 (line 157)
           │ │ │      ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics$$Lambda/0x00007fa01002bd28::test@4
           │ │ │      ││││                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@8 (line 178)
           │ │ │      ││││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
           │ │ │      ││││                                                            ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
           │ │ │      ││││                                                            ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
           │ │ │      ││││                                                            ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
           │ │ │      ││││                                                            ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
           │ │ │      ││││                                                            ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
           │ │ │      ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::publicationsYearsStatistics@24 (line 158)
           │ │ │      ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::publications_years_statistics@3 (line 166)
   0.13%   │ │ │      ││││  0x00007fa08ade9fcd:   mov    0x18(%rcx),%ecx              ;*getfield next {reexecute=0 rethrow=0 return_oop=0}
           │ │ │      ││││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@152 (line 1716)
           │ │ │      ││││                                                            ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
           │ │ │      ││││                                                            ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
           │ │ │      ││││                                                            ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
           │ │ │      ││││                                                            ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
           │ │ │      ││││                                                            ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
           │ │ │      ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::publicationsYearsStatistics@24 (line 158)
           │ │ │      ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::publications_years_statistics@3 (line 166)
   0.43%   │ │ │      ││││  0x00007fa08ade9fd0:   cmp    %r10d,%eax
           │ │ │      ││││  0x00007fa08ade9fd3:   cmovg  %r10d,%eax                   ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
           │ │ │      ││││                                                            ; - java.lang.Math::min@2 (line 2115)
           │ │ │      ││││                                                            ; - java.util.IntSummaryStatistics::accept@27 (line 132)
           │ │ │      ││││                                                            ; - java.util.stream.Collectors::lambda$summarizingInt$70@8 (line 1821)
           │ │ │      ││││                                                            ; - java.util.stream.Collectors$$Lambda/0x00007fa01003bae0::accept@9
           │ │ │      ││││                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
           │ │ │      ││││                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@21 (line 179)
           │ │ │      ││││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
           │ │ │      ││││                                                            ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
           │ │ │      ││││                                                            ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
           │ │ │      ││││                                                            ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
           │ │ │      ││││                                                            ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
           │ │ │      ││││                                                            ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
           │ │ │      ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::publicationsYearsStatistics@24 (line 158)
           │ │ │      ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::publications_years_statistics@3 (line 166)
   0.13%   │ │ │      ││││  0x00007fa08ade9fd7:   mov    %r10d,%edi
   0.01%   │ │ │      ││││  0x00007fa08ade9fda:   add    %rdi,%rbp                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
           │ │ │      ││││                                                            ; - java.util.IntSummaryStatistics::accept@17 (line 131)
           │ │ │      ││││                                                            ; - java.util.stream.Collectors::lambda$summarizingInt$70@8 (line 1821)
           │ │ │      ││││                                                            ; - java.util.stream.Collectors$$Lambda/0x00007fa01003bae0::accept@9
           │ │ │      ││││                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
           │ │ │      ││││                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@21 (line 179)
           │ │ │      ││││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
           │ │ │      ││││                                                            ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
           │ │ │      ││││                                                            ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
           │ │ │      ││││                                                            ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
           │ │ │      ││││                                                            ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
           │ │ │      ││││                                                            ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
           │ │ │      ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::publicationsYearsStatistics@24 (line 158)
           │ │ │      ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::publications_years_statistics@3 (line 166)
   0.12%   │ │ │      ││││  0x00007fa08ade9fdd:   cmp    %ebx,%r10d
           │ │ │      ││││  0x00007fa08ade9fe0:   cmovg  %r10d,%ebx                   ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
           │ │ │      ││││                                                            ; - java.lang.Math::max@2 (line 2020)
           │ │ │      ││││                                                            ; - java.util.IntSummaryStatistics::accept@39 (line 133)
           │ │ │      ││││                                                            ; - java.util.stream.Collectors::lambda$summarizingInt$70@8 (line 1821)
           │ │ │      ││││                                                            ; - java.util.stream.Collectors$$Lambda/0x00007fa01003bae0::accept@9
           │ │ │      ││││                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
           │ │ │      ││││                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@21 (line 179)
           │ │ │      ││││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
           │ │ │      ││││                                                            ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
           │ │ │      ││││                                                            ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
           │ │ │      ││││                                                            ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
           │ │ │      ││││                                                            ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
           │ │ │      ││││                                                            ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
           │ │ │      ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::publicationsYearsStatistics@24 (line 158)
           │ │ │      ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::publications_years_statistics@3 (line 166)
   0.12%   │ │ │      ││││  0x00007fa08ade9fe4:   inc    %rdx                         ;*ladd {reexecute=0 rethrow=0 return_oop=0}
           │ │ │      ││││                                                            ; - java.util.IntSummaryStatistics::accept@6 (line 130)
           │ │ │      ││││                                                            ; - java.util.stream.Collectors::lambda$summarizingInt$70@8 (line 1821)
           │ │ │      ││││                                                            ; - java.util.stream.Collectors$$Lambda/0x00007fa01003bae0::accept@9
           │ │ │      ││││                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
           │ │ │      ││││                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@21 (line 179)
           │ │ │      ││││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
           │ │ │      ││││                                                            ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
           │ │ │      ││││                                                            ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
           │ │ │      ││││                                                            ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
           │ │ │      ││││                                                            ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
           │ │ │      ││││                                                            ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
           │ │ │      ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::publicationsYearsStatistics@24 (line 158)
           │ │ │      ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::publications_years_statistics@3 (line 166)
   0.00%   │ │ │      ││││  0x00007fa08ade9fe7:   mov    %ebx,%r13d
   0.14%   │ │ │      ││││  0x00007fa08ade9fea:   mov    %eax,%edi
           │ │ │      ╰│││  0x00007fa08ade9fec:   jmp    0x00007fa08ade9eb1           ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
           │ │ │       │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::lambda$publicationsYearsStatistics$11@7 (line 157)
           │ │ │       │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics$$Lambda/0x00007fa01002bd28::test@4
           │ │ │       │││                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@8 (line 178)
           │ │ │       │││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
           │ │ │       │││                                                            ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
           │ │ │       │││                                                            ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
           │ │ │       │││                                                            ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
           │ │ │       │││                                                            ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
           │ │ │       │││                                                            ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
           │ │ │       │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::publicationsYearsStatistics@24 (line 158)
           │ │ │       │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::publications_years_statistics@3 (line 166)
   0.24%   ↘ │ │       │││  0x00007fa08ade9ff1:   mov    0x10(,%rcx,8),%r10d          ;*getfield key {reexecute=0 rethrow=0 return_oop=0}
             │ │       │││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@142 (line 1715)
             │ │       │││                                                            ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
             │ │       │││                                                            ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
             │ │       │││                                                            ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
             │ │       │││                                                            ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
             │ │       │││                                                            ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
             │ │       │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::publicationsYearsStatistics@24 (line 158)
             │ │       │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::publications_years_statistics@3 (line 166)
   8.20%     │ │       │││  0x00007fa08ade9ff9:   nopl   0x0(%rax)                    ; ImmutableOopMap {rcx=NarrowOop rsi=Oop r8=Oop r10=NarrowOop }
             │ │       │││                                                            ;*aload {reexecute=1 rethrow=0 return_oop=0}
             │ │       │││                                                            ; - (reexecute) java.util.HashMap$KeySpliterator::forEachRemaining@122 (line 1712)
             │ │       │││                                                            ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
             │ │       │││                                                            ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
             │ │       │││                                                            ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
             │ │       │││                                                            ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
             │ │       │││                                                            ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
             │ │       │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::publicationsYearsStatistics@24 (line 158)
             │ │       │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::publications_years_statistics@3 (line 166)
   0.00%     │ │       │││  0x00007fa08adea000:   cmpl   $0x102b708,0x8(,%r10,8)      ; implicit exception: dispatches to 0x00007fa08adea597
             │ │       │││                                                            ;   {metadata(&apos;com/ionutbalosin/jvm/performance/benchmarks/miscellaneous/publicationstatistics/model/Publication&apos;)}
  12.60%     │ │       │││  0x00007fa08adea00c:   jne    0x00007fa08adea3ce           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
             │ │       │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics$$Lambda/0x00007fa01002bd28::test@1
             │ │       │││                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@8 (line 178)
             │ │       │││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
             │ │       │││                                                            ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
             │ │       │││                                                            ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
             │ │       │││                                                            ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
             │ │       │││                                                            ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
             │ │       │││                                                            ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
             │ │       │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::publicationsYearsStatistics@24 (line 158)
             │ │       │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::publications_years_statistics@3 (line 166)
   0.20%     │ │       │││  0x00007fa08adea012:   mov    0xc(,%r10,8),%r10d           ;*getfield year {reexecute=0 rethrow=0 return_oop=0}
             │ │       │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.model.Publication::getYear@1 (line 43)
             │ │       │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::lambda$publicationsYearsStatistics$11@1 (line 157)
             │ │       │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics$$Lambda/0x00007fa01002bd28::test@4
             │ │       │││                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@8 (line 178)
             │ │       │││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
             │ │       │││                                                            ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
             │ │       │││                                                            ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
             │ │       │││                                                            ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
             │ │       │││                                                            ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
             │ │       │││                                                            ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
             │ │       │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::publicationsYearsStatistics@24 (line 158)
             │ │       │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::publications_years_statistics@3 (line 166)
   0.15%     │ │       │││  0x00007fa08adea01a:   nopw   0x0(%rax,%rax,1)
   0.01%     │ │       │││  0x00007fa08adea020:   cmp    $0x76c,%r10d
             │ │       │││  0x00007fa08adea027:   jl     0x00007fa08adea469           ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
             │ │       │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::lambda$publicationsYearsStatistics$11@7 (line 157)
             │ │       │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics$$Lambda/0x00007fa01002bd28::test@4
             │ │       │││                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@8 (line 178)
             │ │       │││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
             │ │       │││                                                            ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
             │ │       │││                                                            ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
             │ │       │││                                                            ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
             │ │       │││                                                            ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
             │ │       │││                                                            ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
             │ │       │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::publicationsYearsStatistics@24 (line 158)
             │ │       │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::publications_years_statistics@3 (line 166)
   0.21%     │ │       │││  0x00007fa08adea02d:   mov    0x18(,%rcx,8),%ecx           ;*getfield next {reexecute=0 rethrow=0 return_oop=0}
             │ │       │││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@152 (line 1716)
             │ │       │││                                                            ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
             │ │       │││                                                            ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
             │ │       │││                                                            ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
             │ │       │││                                                            ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
             │ │       │││                                                            ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
             │ │       │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::publicationsYearsStatistics@24 (line 158)
             │ │       │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::publications_years_statistics@3 (line 166)
   0.34%     │ │       │││  0x00007fa08adea034:   cmp    %r10d,%eax
   0.00%     │ │       │││  0x00007fa08adea037:   cmovg  %r10d,%eax                   ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
             │ │       │││                                                            ; - java.lang.Math::min@2 (line 2115)
             │ │       │││                                                            ; - java.util.IntSummaryStatistics::accept@27 (line 132)
             │ │       │││                                                            ; - java.util.stream.Collectors::lambda$summarizingInt$70@8 (line 1821)
             │ │       │││                                                            ; - java.util.stream.Collectors$$Lambda/0x00007fa01003bae0::accept@9
             │ │       │││                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
             │ │       │││                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@21 (line 179)
             │ │       │││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
             │ │       │││                                                            ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
             │ │       │││                                                            ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
             │ │       │││                                                            ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
             │ │       │││                                                            ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
             │ │       │││                                                            ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
             │ │       │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::publicationsYearsStatistics@24 (line 158)
             │ │       │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::publications_years_statistics@3 (line 166)
   0.14%     │ │       │││  0x00007fa08adea03b:   mov    %r10d,%edi
   0.12%     │ │       │││  0x00007fa08adea03e:   add    %rdi,%rbp                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
             │ │       │││                                                            ; - java.util.IntSummaryStatistics::accept@17 (line 131)
             │ │       │││                                                            ; - java.util.stream.Collectors::lambda$summarizingInt$70@8 (line 1821)
             │ │       │││                                                            ; - java.util.stream.Collectors$$Lambda/0x00007fa01003bae0::accept@9
             │ │       │││                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
             │ │       │││                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@21 (line 179)
             │ │       │││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
             │ │       │││                                                            ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
             │ │       │││                                                            ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
             │ │       │││                                                            ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
             │ │       │││                                                            ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
             │ │       │││                                                            ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
             │ │       │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::publicationsYearsStatistics@24 (line 158)
             │ │       │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::publications_years_statistics@3 (line 166)
   0.03%     │ │       │││  0x00007fa08adea041:   cmp    %ebx,%r10d
             │ │       │││  0x00007fa08adea044:   cmovg  %r10d,%ebx                   ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
             │ │       │││                                                            ; - java.lang.Math::max@2 (line 2020)
             │ │       │││                                                            ; - java.util.IntSummaryStatistics::accept@39 (line 133)
             │ │       │││                                                            ; - java.util.stream.Collectors::lambda$summarizingInt$70@8 (line 1821)
             │ │       │││                                                            ; - java.util.stream.Collectors$$Lambda/0x00007fa01003bae0::accept@9
             │ │       │││                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
             │ │       │││                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@21 (line 179)
             │ │       │││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
             │ │       │││                                                            ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
             │ │       │││                                                            ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
             │ │       │││                                                            ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
             │ │       │││                                                            ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
             │ │       │││                                                            ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
             │ │       │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::publicationsYearsStatistics@24 (line 158)
             │ │       │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::publications_years_statistics@3 (line 166)
   0.10%     │ │       │││  0x00007fa08adea048:   inc    %rdx                         ;*ladd {reexecute=0 rethrow=0 return_oop=0}
             │ │       │││                                                            ; - java.util.IntSummaryStatistics::accept@6 (line 130)
             │ │       │││                                                            ; - java.util.stream.Collectors::lambda$summarizingInt$70@8 (line 1821)
             │ │       │││                                                            ; - java.util.stream.Collectors$$Lambda/0x00007fa01003bae0::accept@9
             │ │       │││                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
             │ │       │││                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@21 (line 179)
             │ │       │││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
             │ │       │││                                                            ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
             │ │       │││                                                            ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
             │ │       │││                                                            ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
             │ │       │││                                                            ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
             │ │       │││                                                            ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
             │ │       │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::publicationsYearsStatistics@24 (line 158)
             │ │       │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::publications_years_statistics@3 (line 166)
   0.11%     │ │       │││  0x00007fa08adea04b:   mov    %ebx,%r13d
   0.05%     │ │       │││  0x00007fa08adea04e:   mov    %eax,%edi
             │ │       │││  0x00007fa08adea050:   mov    %ecx,%r10d
   0.13%     │ │       ╰││  0x00007fa08adea053:   jmp    0x00007fa08ade9ed9           ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
             │ │        ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::lambda$publicationsYearsStatistics$11@7 (line 157)
             │ │        ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics$$Lambda/0x00007fa01002bd28::test@4
             │ │        ││                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@8 (line 178)
             │ │        ││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
             │ │        ││                                                            ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
             │ │        ││                                                            ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
             │ │        ││                                                            ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
             │ │        ││                                                            ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
             │ │        ││                                                            ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
             │ │        ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::publicationsYearsStatistics@24 (line 158)
             │ │        ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::publications_years_statistics@3 (line 166)
   0.30%     ↘ │        ││  0x00007fa08adea058:   mov    0x10(,%r10,8),%ecx           ; ImmutableOopMap {rcx=NarrowOop rsi=Oop r8=Oop r10=NarrowOop }
               │        ││                                                            ;*aload {reexecute=1 rethrow=0 return_oop=0}
               │        ││                                                            ; - (reexecute) java.util.HashMap$KeySpliterator::forEachRemaining@122 (line 1712)
               │        ││                                                            ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
               │        ││                                                            ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
               │        ││                                                            ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
               │        ││                                                            ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
               │        ││                                                            ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
               │        ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::publicationsYearsStatistics@24 (line 158)
               │        ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::publications_years_statistics@3 (line 166)
   8.08%       │        ││  0x00007fa08adea060:   cmpl   $0x102b708,0x8(,%rcx,8)      ; implicit exception: dispatches to 0x00007fa08adea5ba
               │        ││                                                            ;   {metadata(&apos;com/ionutbalosin/jvm/performance/benchmarks/miscellaneous/publicationstatistics/model/Publication&apos;)}
  11.99%       │        ││  0x00007fa08adea06b:   jne    0x00007fa08adea3a7           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
               │        ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics$$Lambda/0x00007fa01002bd28::test@1
               │        ││                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@8 (line 178)
               │        ││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
               │        ││                                                            ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
               │        ││                                                            ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
               │        ││                                                            ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
               │        ││                                                            ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
               │        ││                                                            ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
               │        ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::publicationsYearsStatistics@24 (line 158)
               │        ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::publications_years_statistics@3 (line 166)
   0.26%       │        ││  0x00007fa08adea071:   mov    0xc(,%rcx,8),%ecx            ;*getfield year {reexecute=0 rethrow=0 return_oop=0}
               │        ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.model.Publication::getYear@1 (line 43)
               │        ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::lambda$publicationsYearsStatistics$11@1 (line 157)
               │        ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics$$Lambda/0x00007fa01002bd28::test@4
               │        ││                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@8 (line 178)
               │        ││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
               │        ││                                                            ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
               │        ││                                                            ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
               │        ││                                                            ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
               │        ││                                                            ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
               │        ││                                                            ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
               │        ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::publicationsYearsStatistics@24 (line 158)
               │        ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::publications_years_statistics@3 (line 166)
   0.17%       │        ││  0x00007fa08adea078:   nopl   0x0(%rax,%rax,1)
   0.00%       │        ││  0x00007fa08adea080:   cmp    $0x76c,%ecx
               │        ││  0x00007fa08adea086:   jl     0x00007fa08adea4c5           ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
               │        ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::lambda$publicationsYearsStatistics$11@7 (line 157)
               │        ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics$$Lambda/0x00007fa01002bd28::test@4
               │        ││                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@8 (line 178)
               │        ││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
               │        ││                                                            ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
               │        ││                                                            ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
               │        ││                                                            ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
               │        ││                                                            ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
               │        ││                                                            ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
               │        ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::publicationsYearsStatistics@24 (line 158)
               │        ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::publications_years_statistics@3 (line 166)
   0.12%       │        ││  0x00007fa08adea08c:   mov    0x18(,%r10,8),%r10d          ;*getfield next {reexecute=0 rethrow=0 return_oop=0}
               │        ││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@152 (line 1716)
               │        ││                                                            ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
               │        ││                                                            ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
               │        ││                                                            ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
               │        ││                                                            ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
               │        ││                                                            ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
               │        ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::publicationsYearsStatistics@24 (line 158)
               │        ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::publications_years_statistics@3 (line 166)
   0.42%       │        ││  0x00007fa08adea094:   cmp    %ecx,%eax
               │        ││  0x00007fa08adea096:   cmovg  %ecx,%eax                    ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
               │        ││                                                            ; - java.lang.Math::min@2 (line 2115)
               │        ││                                                            ; - java.util.IntSummaryStatistics::accept@27 (line 132)
               │        ││                                                            ; - java.util.stream.Collectors::lambda$summarizingInt$70@8 (line 1821)
               │        ││                                                            ; - java.util.stream.Collectors$$Lambda/0x00007fa01003bae0::accept@9
               │        ││                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
               │        ││                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@21 (line 179)
               │        ││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
               │        ││                                                            ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
               │        ││                                                            ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
               │        ││                                                            ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
               │        ││                                                            ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
               │        ││                                                            ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
               │        ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::publicationsYearsStatistics@24 (line 158)
               │        ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::publications_years_statistics@3 (line 166)
   0.12%       │        ││  0x00007fa08adea099:   mov    %ecx,%edi
   0.00%       │        ││  0x00007fa08adea09b:   add    %rdi,%rbp                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
               │        ││                                                            ; - java.util.IntSummaryStatistics::accept@17 (line 131)
               │        ││                                                            ; - java.util.stream.Collectors::lambda$summarizingInt$70@8 (line 1821)
               │        ││                                                            ; - java.util.stream.Collectors$$Lambda/0x00007fa01003bae0::accept@9
               │        ││                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
               │        ││                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@21 (line 179)
               │        ││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
               │        ││                                                            ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
               │        ││                                                            ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
               │        ││                                                            ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
               │        ││                                                            ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
               │        ││                                                            ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
               │        ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::publicationsYearsStatistics@24 (line 158)
               │        ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::publications_years_statistics@3 (line 166)
   0.13%       │        ││  0x00007fa08adea09e:   cmp    %ebx,%ecx
               │        ││  0x00007fa08adea0a0:   cmovg  %ecx,%ebx                    ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
               │        ││                                                            ; - java.lang.Math::max@2 (line 2020)
               │        ││                                                            ; - java.util.IntSummaryStatistics::accept@39 (line 133)
               │        ││                                                            ; - java.util.stream.Collectors::lambda$summarizingInt$70@8 (line 1821)
               │        ││                                                            ; - java.util.stream.Collectors$$Lambda/0x00007fa01003bae0::accept@9
               │        ││                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
               │        ││                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@21 (line 179)
               │        ││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
               │        ││                                                            ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
               │        ││                                                            ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
               │        ││                                                            ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
               │        ││                                                            ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
               │        ││                                                            ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
               │        ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::publicationsYearsStatistics@24 (line 158)
               │        ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::publications_years_statistics@3 (line 166)
   0.11%       │        ││  0x00007fa08adea0a3:   inc    %rdx                         ;*ladd {reexecute=0 rethrow=0 return_oop=0}
               │        ││                                                            ; - java.util.IntSummaryStatistics::accept@6 (line 130)
               │        ││                                                            ; - java.util.stream.Collectors::lambda$summarizingInt$70@8 (line 1821)
               │        ││                                                            ; - java.util.stream.Collectors$$Lambda/0x00007fa01003bae0::accept@9
               │        ││                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
               │        ││                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@21 (line 179)
               │        ││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
               │        ││                                                            ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
               │        ││                                                            ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
               │        ││                                                            ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
               │        ││                                                            ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
               │        ││                                                            ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
               │        ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::publicationsYearsStatistics@24 (line 158)
               │        ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::publications_years_statistics@3 (line 166)
   0.00%       │        ││  0x00007fa08adea0a6:   mov    %ebx,%r13d
   0.18%       │        ││  0x00007fa08adea0a9:   mov    %eax,%edi
               │        ╰│  0x00007fa08adea0ab:   jmp    0x00007fa08ade9f03           ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
               │         │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::lambda$publicationsYearsStatistics$11@7 (line 157)
               │         │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics$$Lambda/0x00007fa01002bd28::test@4
               │         │                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@8 (line 178)
               │         │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
               │         │                                                            ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
               │         │                                                            ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
               │         │                                                            ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
               │         │                                                            ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
               │         │                                                            ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
               │         │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::publicationsYearsStatistics@24 (line 158)
               │         │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::publications_years_statistics@3 (line 166)
   0.09%       ↘         │  0x00007fa08adea0b0:   mov    0x10(,%r10,8),%ecx           ;*getfield key {reexecute=0 rethrow=0 return_oop=0}
                         │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@142 (line 1715)
                         │                                                            ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
                         │                                                            ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                         │                                                            ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
                         │                                                            ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                         │                                                            ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
                         │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::publicationsYearsStatistics@24 (line 158)
                         │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::publications_years_statistics@3 (line 166)
   8.01%                 │  0x00007fa08adea0b8:   nopl   0x0(%rax,%rax,1)             ; ImmutableOopMap {rcx=NarrowOop rsi=Oop r8=Oop r10=NarrowOop }
                         │                                                            ;*aload {reexecute=1 rethrow=0 return_oop=0}
                         │                                                            ; - (reexecute) java.util.HashMap$KeySpliterator::forEachRemaining@122 (line 1712)
                         │                                                            ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
                         │                                                            ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                         │                                                            ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
                         │                                                            ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                         │                                                            ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
                         │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::publicationsYearsStatistics@24 (line 158)
                         │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::publications_years_statistics@3 (line 166)
   0.15%                 │  0x00007fa08adea0c0:   cmpl   $0x102b708,0x8(,%rcx,8)      ; implicit exception: dispatches to 0x00007fa08adea5dd
                         │                                                            ;   {metadata(&apos;com/ionutbalosin/jvm/performance/benchmarks/miscellaneous/publicationstatistics/model/Publication&apos;)}
  12.33%                 │  0x00007fa08adea0cb:   jne    0x00007fa08adea430           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                         │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics$$Lambda/0x00007fa01002bd28::test@1
                         │                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@8 (line 178)
                         │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
                         │                                                            ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
                         │                                                            ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                         │                                                            ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
                         │                                                            ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                         │                                                            ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
                         │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::publicationsYearsStatistics@24 (line 158)
                         │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::publications_years_statistics@3 (line 166)
   0.14%                 │  0x00007fa08adea0d1:   mov    0xc(,%rcx,8),%ecx            ;*getfield year {reexecute=0 rethrow=0 return_oop=0}
                         │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.model.Publication::getYear@1 (line 43)
                         │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::lambda$publicationsYearsStatistics$11@1 (line 157)
                         │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics$$Lambda/0x00007fa01002bd28::test@4
                         │                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@8 (line 178)
                         │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
                         │                                                            ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
                         │                                                            ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                         │                                                            ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
                         │                                                            ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                         │                                                            ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
                         │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::publicationsYearsStatistics@24 (line 158)
                         │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::publications_years_statistics@3 (line 166)
   0.26%                 │  0x00007fa08adea0d8:   nopl   0x0(%rax,%rax,1)
                         │  0x00007fa08adea0e0:   cmp    $0x76c,%ecx
                         │  0x00007fa08adea0e6:   jl     0x00007fa08adea2dd           ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                         │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::lambda$publicationsYearsStatistics$11@7 (line 157)
                         │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics$$Lambda/0x00007fa01002bd28::test@4
                         │                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@8 (line 178)
                         │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
                         │                                                            ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
                         │                                                            ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                         │                                                            ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
                         │                                                            ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                         │                                                            ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
                         │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::publicationsYearsStatistics@24 (line 158)
                         │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::publications_years_statistics@3 (line 166)
   0.11%                 │  0x00007fa08adea0ec:   mov    0x18(,%r10,8),%r10d          ;*getfield next {reexecute=0 rethrow=0 return_oop=0}
                         │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@152 (line 1716)
                         │                                                            ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
                         │                                                            ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                         │                                                            ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
                         │                                                            ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                         │                                                            ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
                         │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::publicationsYearsStatistics@24 (line 158)
                         │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::publications_years_statistics@3 (line 166)
   0.35%                 │  0x00007fa08adea0f4:   cmp    %ecx,%eax
   0.09%                 │  0x00007fa08adea0f6:   cmovg  %ecx,%eax                    ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                         │                                                            ; - java.lang.Math::min@2 (line 2115)
                         │                                                            ; - java.util.IntSummaryStatistics::accept@27 (line 132)
                         │                                                            ; - java.util.stream.Collectors::lambda$summarizingInt$70@8 (line 1821)
                         │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007fa01003bae0::accept@9
                         │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                         │                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@21 (line 179)
                         │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
                         │                                                            ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
                         │                                                            ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                         │                                                            ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
                         │                                                            ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                         │                                                            ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
                         │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::publicationsYearsStatistics@24 (line 158)
                         │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::publications_years_statistics@3 (line 166)
   0.11%                 │  0x00007fa08adea0f9:   mov    %ecx,%edi
   0.01%                 │  0x00007fa08adea0fb:   add    %rdi,%rbp                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                         │                                                            ; - java.util.IntSummaryStatistics::accept@17 (line 131)
                         │                                                            ; - java.util.stream.Collectors::lambda$summarizingInt$70@8 (line 1821)
                         │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007fa01003bae0::accept@9
                         │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                         │                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@21 (line 179)
                         │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
                         │                                                            ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
                         │                                                            ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                         │                                                            ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
                         │                                                            ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                         │                                                            ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
                         │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::publicationsYearsStatistics@24 (line 158)
                         │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::publications_years_statistics@3 (line 166)
   0.04%                 │  0x00007fa08adea0fe:   cmp    %ebx,%ecx
   0.12%                 │  0x00007fa08adea100:   cmovg  %ecx,%ebx                    ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
                         │                                                            ; - java.lang.Math::max@2 (line 2020)
                         │                                                            ; - java.util.IntSummaryStatistics::accept@39 (line 133)
                         │                                                            ; - java.util.stream.Collectors::lambda$summarizingInt$70@8 (line 1821)
                         │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007fa01003bae0::accept@9
                         │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                         │                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@21 (line 179)
                         │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
                         │                                                            ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
                         │                                                            ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                         │                                                            ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
                         │                                                            ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                         │                                                            ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
                         │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::publicationsYearsStatistics@24 (line 158)
                         │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::publications_years_statistics@3 (line 166)
   0.11%                 │  0x00007fa08adea103:   inc    %rdx                         ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                         │                                                            ; - java.util.IntSummaryStatistics::accept@6 (line 130)
                         │                                                            ; - java.util.stream.Collectors::lambda$summarizingInt$70@8 (line 1821)
                         │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007fa01003bae0::accept@9
                         │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                         │                                                            ; - java.util.stream.ReferencePipeline$2$1::accept@21 (line 179)
                         │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
                         │                                                            ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
                         │                                                            ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                         │                                                            ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
                         │                                                            ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                         │                                                            ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
                         │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::publicationsYearsStatistics@24 (line 158)
                         │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::publications_years_statistics@3 (line 166)
   0.01%                 │  0x00007fa08adea106:   mov    %ebx,%r13d
   0.03%                 │  0x00007fa08adea109:   mov    %eax,%edi
   0.11%                 ╰  0x00007fa08adea10b:   jmp    0x00007fa08ade9f26           ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
                                                                                      ; - java.util.HashMap$KeySpliterator::forEachRemaining@159 (line 1718)
                                                                                      ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
                                                                                      ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                                                                                      ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
                                                                                      ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                                                                                      ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
                                                                                      ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::publicationsYearsStatistics@24 (line 158)
                                                                                      ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::publications_years_statistics@3 (line 166)
   0.00%                    0x00007fa08adea110:   cmp    %r9d,%r11d
                            0x00007fa08adea113:   jg     0x00007fa08ade9e79
                            0x00007fa08adea119:   jmp    0x00007fa08adea265           ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
....................................................................................................
  97.93%  <total for region 1>

....[Hottest Regions]...............................................................................
  97.93%      jvmci, level 4  com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::publications_years_statistics, version 2, compile id 1246 
   0.44%              kernel  [unknown] 
   0.09%              kernel  [unknown] 
   0.07%              kernel  [unknown] 
   0.06%              kernel  [unknown] 
   0.06%              kernel  [unknown] 
   0.03%              kernel  [unknown] 
   0.03%              kernel  [unknown] 
   0.03%      jvmci, level 4  com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::publications_years_statistics, version 2, compile id 1246 
   0.03%              kernel  [unknown] 
   0.03%              kernel  [unknown] 
   0.03%              kernel  [unknown] 
   0.02%      jvmci, level 4  com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::publications_years_statistics, version 2, compile id 1246 
   0.02%              kernel  [unknown] 
   0.02%              kernel  [unknown] 
   0.02%              kernel  [unknown] 
   0.02%           libjvm.so  ElfSymbolTable::lookup 
   0.02%              kernel  [unknown] 
   0.02%              kernel  [unknown] 
   0.01%              kernel  [unknown] 
   1.03%  <...other 314 warm regions...>
....................................................................................................
 100.00%  <totals>

....[Hottest Methods (after inlining)]..............................................................
  98.01%      jvmci, level 4  com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::publications_years_statistics, version 2, compile id 1246 
   1.58%              kernel  [unknown] 
   0.08%                      <unknown> 
   0.02%           libjvm.so  ElfSymbolTable::lookup 
   0.01%          ld-2.31.so  __tls_get_addr 
   0.01%        libc-2.31.so  __vfprintf_internal 
   0.01%        libc-2.31.so  _IO_default_xsputn 
   0.01%        libc-2.31.so  clock_gettime@GLIBC_2.2.5 
   0.01%           libjvm.so  CompilerOracle::has_option_value<bool> 
   0.01%  libpthread-2.31.so  __pthread_disable_asynccancel 
   0.01%           libjvm.so  defaultStream::write 
   0.01%        libc-2.31.so  syscall 
   0.01%  libpthread-2.31.so  pthread_cond_timedwait@@GLIBC_2.3.2 
   0.01%  libpthread-2.31.so  __libc_write 
   0.01%        libc-2.31.so  __strchr_avx2 
   0.01%        libc-2.31.so  _IO_fwrite 
   0.01%           libjvm.so  RelocIterator::initialize 
   0.01%           libjvm.so  StatSamplerTask::task 
   0.01%        libc-2.31.so  _IO_no_init 
   0.01%           libjvm.so  fileStream::write 
   0.17%  <...other 70 warm methods...>
....................................................................................................
 100.00%  <totals>

....[Distribution by Source]........................................................................
  98.02%      jvmci, level 4
   1.58%              kernel
   0.13%           libjvm.so
   0.11%        libc-2.31.so
   0.08%                    
   0.04%  libpthread-2.31.so
   0.02%         interpreter
   0.01%          ld-2.31.so
   0.00%    perf-2148136.map
   0.00%        runtime stub
   0.00%         c1, level 3
   0.00%      libz.so.1.2.11
....................................................................................................
 100.00%  <totals>



# JMH version: 1.37
# VM version: JDK 21, Java HotSpot(TM) 64-Bit Server VM, 21+35-jvmci-23.1-b15
# VM invoker: /home/gogu/bench_jdks/graalvm-jdk-21+35.1/bin/java
# VM options: -XX:ThreadPriorityPolicy=1 -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCIProduct -XX:-UnlockExperimentalVMOptions -Xms4g -Xmx4g -XX:+AlwaysPreTouch
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark.year_with_the_most_publications

# Run progress: 85.71% complete, ETA 00:03:56
# Fork: 1 of 1
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 7.248 ms/op
# Warmup Iteration   2: 4.872 ms/op
# Warmup Iteration   3: 4.917 ms/op
# Warmup Iteration   4: 4.541 ms/op
# Warmup Iteration   5: 4.504 ms/op
Iteration   1: 4.522 ms/op
Iteration   2: 4.521 ms/op
Iteration   3: 4.525 ms/op
Iteration   4: 4.520 ms/op
Iteration   5: 4.491 ms/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark.year_with_the_most_publications":
  4.516 ±(99.9%) 0.054 ms/op [Average]
  (min, avg, max) = (4.491, 4.516, 4.525), stdev = 0.014
  CI (99.9%): [4.461, 4.570] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark.year_with_the_most_publications:asm":
PrintAssembly processed: 321533 total address lines.
Perf output processed (skipped 62.431 seconds):
 Column 1: cycles (50594 events)

Hottest code regions (>10.00% "cycles" events):
 Event counts are percents of total event count.

....[Hottest Region 1]..............................................................................
jvmci, level 4, com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::year_with_the_most_publications, version 2, compile id 1342 

              0x00007fae26df8db9:   mov    $0x0,%r14d
              0x00007fae26df8dbf:   nop                                 ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - java.util.HashMap$KeySpliterator::forEachRemaining@122 (line 1712)
                                                                        ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
                                                                        ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                                                                        ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
                                                                        ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                                                                        ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
                                                                        ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearWithTheMostPublications@20 (line 63)
                                                                        ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::year_with_the_most_publications@3 (line 100)
   1.08%   ↗  0x00007fae26df8dc0:   mov    %rsi,0x40(%rsp)
   0.38%   │  0x00007fae26df8dc5:   test   %rdi,%rdi
          ╭│  0x00007fae26df8dc8:   jne    0x00007fae26df8e28           ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
          ││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@124 (line 1712)
          ││                                                            ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
          ││                                                            ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
          ││                                                            ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
          ││                                                            ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
          ││                                                            ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
          ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearWithTheMostPublications@20 (line 63)
          ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::year_with_the_most_publications@3 (line 100)
   1.05%  ││  0x00007fae26df8dce:   cmp    %r14d,%r11d
          ││  0x00007fae26df8dd1:   jbe    0x00007fae26dfb34f
   0.19%  ││  0x00007fae26df8dd7:   mov    0x10(%r8,%r14,4),%r10d
   0.97%  ││  0x00007fae26df8ddc:   mov    %r10d,%r9d
   0.23%  ││  0x00007fae26df8ddf:   shl    $0x3,%r9                     ;*aaload {reexecute=0 rethrow=0 return_oop=0}
          ││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@133 (line 1713)
          ││                                                            ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
          ││                                                            ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
          ││                                                            ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
          ││                                                            ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
          ││                                                            ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
          ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearWithTheMostPublications@20 (line 63)
          ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::year_with_the_most_publications@3 (line 100)
   1.05%  ││  0x00007fae26df8de3:   mov    %r14d,%r11d
   0.17%  ││  0x00007fae26df8de6:   inc    %r11d                        ;*iinc {reexecute=0 rethrow=0 return_oop=0}
          ││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@130 (line 1713)
          ││                                                            ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
          ││                                                            ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
          ││                                                            ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
          ││                                                            ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
          ││                                                            ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
          ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearWithTheMostPublications@20 (line 63)
          ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::year_with_the_most_publications@3 (line 100)
   0.71%  ││  0x00007fae26df8de9:   test   %r10d,%r10d
          ││  0x00007fae26df8dec:   jne    0x00007fae26df9065           ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
          ││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@159 (line 1718)
          ││                                                            ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
          ││                                                            ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
          ││                                                            ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
          ││                                                            ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
          ││                                                            ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
          ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearWithTheMostPublications@20 (line 63)
          ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::year_with_the_most_publications@3 (line 100)
   0.25%  ││  0x00007fae26df8df2:   mov    %eax,%r10d
   0.85%  ││  0x00007fae26df8df5:   mov    %rsi,%r8
   0.14%  ││  0x00007fae26df8df8:   mov    %r11d,%esi
   0.97%  ││  0x00007fae26df8dfb:   mov    0x98(%rsp),%r11d
   0.23%  ││  0x00007fae26df8e03:   cmp    %esi,%r11d
          ││  0x00007fae26df8e06:   jle    0x00007fae26dfa8b2           ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
          ││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@164 (line 1718)
          ││                                                            ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
          ││                                                            ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
          ││                                                            ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
          ││                                                            ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
          ││                                                            ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
          ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearWithTheMostPublications@20 (line 63)
          ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::year_with_the_most_publications@3 (line 100)
   0.77%  ││  0x00007fae26df8e0c:   mov    0x458(%r15),%rax             ; ImmutableOopMap {rbp=Oop r8=Oop r9=Oop [72]=Oop [80]=Oop }
          ││                                                            ;*aload {reexecute=1 rethrow=0 return_oop=0}
          ││                                                            ; - (reexecute) java.util.HashMap$KeySpliterator::forEachRemaining@157 (line 1718)
          ││                                                            ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
          ││                                                            ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
          ││                                                            ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
          ││                                                            ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
          ││                                                            ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
          ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearWithTheMostPublications@20 (line 63)
          ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::year_with_the_most_publications@3 (line 100)
   0.26%  ││  0x00007fae26df8e13:   test   %eax,(%rax)                  ;   {poll}
   1.26%  ││  0x00007fae26df8e15:   mov    %r10d,%eax
   0.18%  ││  0x00007fae26df8e18:   mov    %r9,%rdi
   0.72%  ││  0x00007fae26df8e1b:   mov    %esi,%r14d
   0.25%  ││  0x00007fae26df8e1e:   mov    %r8,%rsi
   1.04%  ││  0x00007fae26df8e21:   mov    0x50(%rsp),%r8
   0.16%  │╰  0x00007fae26df8e26:   jmp    0x00007fae26df8dc0           ;*aload {reexecute=0 rethrow=0 return_oop=0}
          │                                                             ; - java.util.HashMap$KeySpliterator::forEachRemaining@122 (line 1712)
          │                                                             ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
          │                                                             ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
          │                                                             ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
          │                                                             ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
          │                                                             ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
          │                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearWithTheMostPublications@20 (line 63)
          │                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::year_with_the_most_publications@3 (line 100)
   0.76%  ↘   0x00007fae26df8e28:   mov    0x10(%rdi),%r10d             ; ImmutableOopMap {rbp=Oop rsi=Oop rdi=Oop r8=Oop r10=NarrowOop [64]=Oop [72]=Oop [80]=Oop }
                                                                        ;*aload {reexecute=1 rethrow=0 return_oop=0}
                                                                        ; - (reexecute) java.util.HashMap$KeySpliterator::forEachRemaining@122 (line 1712)
                                                                        ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
                                                                        ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                                                                        ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
                                                                        ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                                                                        ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
                                                                        ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearWithTheMostPublications@20 (line 63)
                                                                        ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::year_with_the_most_publications@3 (line 100)
  33.44%      0x00007fae26df8e2c:   cmpl   $0x102b708,0x8(,%r10,8)      ; implicit exception: dispatches to 0x00007fae26dfba97
                                                                        ;   {metadata(&apos;com/ionutbalosin/jvm/performance/benchmarks/miscellaneous/publicationstatistics/model/Publication&apos;)}
  20.98%      0x00007fae26df8e38:   jne    0x00007fae26dfb852           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics$$Lambda/0x00007fadac02bd28::apply@1
                                                                        ; - java.util.stream.Collectors::lambda$groupingBy$53@3 (line 1105)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x00007fadac03c5b8::accept@17
                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                        ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
                                                                        ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
                                                                        ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                                                                        ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
                                                                        ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                                                                        ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
                                                                        ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearWithTheMostPublications@20 (line 63)
                                                                        ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::year_with_the_most_publications@3 (line 100)
   0.85%      0x00007fae26df8e3e:   mov    %edx,0x84(%rsp)
              0x00007fae26df8e45:   mov    0xc(,%r10,8),%r11d           ;*getfield year {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.model.Publication::getYear@1 (line 43)
                                                                        ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics$$Lambda/0x00007fadac02bd28::apply@4
                                                                        ; - java.util.stream.Collectors::lambda$groupingBy$53@3 (line 1105)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x00007fadac03c5b8::accept@17
                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                        ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
                                                                        ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
                                                                        ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                                                                        ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
                                                                        ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                                                                        ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
                                                                        ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearWithTheMostPublications@20 (line 63)
                                                                        ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::year_with_the_most_publications@3 (line 100)
   0.22%      0x00007fae26df8e4d:   shl    $0x3,%r10                    ;*getfield key {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - java.util.HashMap$KeySpliterator::forEachRemaining@142 (line 1715)
                                                                        ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
                                                                        ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                                                                        ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
                                                                        ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                                                                        ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
                                                                        ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearWithTheMostPublications@20 (line 63)
                                                                        ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::year_with_the_most_publications@3 (line 100)
   0.00%      0x00007fae26df8e51:   mov    %r11d,%r9d
   0.75%      0x00007fae26df8e54:   shr    $0x10,%r9d                   ;*iushr {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - java.util.HashMap::hash@17 (line 338)
                                                                        ; - java.util.HashMap::computeIfAbsent@13 (line 1199)
                                                                        ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x00007fadac03c5b8::accept@17
                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                        ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
                                                                        ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
                                                                        ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                                                                        ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
                                                                        ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                                                                        ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
                                                                        ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearWithTheMostPublications@20 (line 63)
                                                                        ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::year_with_the_most_publications@3 (line 100)
   0.15%      0x00007fae26df8e58:   xor    %r11d,%r9d                   ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - java.util.HashMap::hash@18 (line 338)
                                                                        ; - java.util.HashMap::computeIfAbsent@13 (line 1199)
                                                                        ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x00007fadac03c5b8::accept@17
                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                        ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
                                                                        ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
                                                                        ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                                                                        ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
                                                                        ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                                                                        ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
                                                                        ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearWithTheMostPublications@20 (line 63)
                                                                        ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::year_with_the_most_publications@3 (line 100)
   0.17%      0x00007fae26df8e5b:   nopl   0x0(%rax,%rax,1)
   0.01%      0x00007fae26df8e60:   cmp    %eax,%ecx
              0x00007fae26df8e62:   jg     0x00007fae26df9519           ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - java.util.HashMap::computeIfAbsent@34 (line 1204)
                                                                        ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x00007fadac03c5b8::accept@17
                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                        ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
                                                                        ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
                                                                        ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                                                                        ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
                                                                        ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                                                                        ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
                                                                        ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearWithTheMostPublications@20 (line 63)
                                                                        ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::year_with_the_most_publications@3 (line 100)
   0.62%      0x00007fae26df8e68:   test   %rsi,%rsi
              0x00007fae26df8e6b:   je     0x00007fae26dfa077           ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - java.util.HashMap::computeIfAbsent@44 (line 1204)
                                                                        ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x00007fadac03c5b8::accept@17
                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                        ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
                                                                        ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
                                                                        ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                                                                        ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
                                                                        ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                                                                        ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
                                                                        ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearWithTheMostPublications@20 (line 63)
                                                                        ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::year_with_the_most_publications@3 (line 100)
              0x00007fae26df8e71:   mov    %r10,0x30(%rsp)
   0.17%      0x00007fae26df8e76:   mov    0xc(%rsi),%r10d              ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - java.util.HashMap::computeIfAbsent@49 (line 1204)
                                                                        ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x00007fadac03c5b8::accept@17
                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                        ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
                                                                        ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
                                                                        ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                                                                        ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
                                                                        ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                                                                        ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
                                                                        ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearWithTheMostPublications@20 (line 63)
                                                                        ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::year_with_the_most_publications@3 (line 100)
              0x00007fae26df8e7a:   nopw   0x0(%rax,%rax,1)
   0.60%      0x00007fae26df8e80:   test   %r10d,%r10d
              0x00007fae26df8e83:   je     0x00007fae26dfb74d           ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - java.util.HashMap::computeIfAbsent@53 (line 1204)
                                                                        ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x00007fadac03c5b8::accept@17
                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                        ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
                                                                        ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
                                                                        ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                                                                        ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
                                                                        ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                                                                        ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
                                                                        ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearWithTheMostPublications@20 (line 63)
                                                                        ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::year_with_the_most_publications@3 (line 100)
              0x00007fae26df8e89:   mov    %r14d,0x88(%rsp)
   0.18%      0x00007fae26df8e91:   mov    %r10d,%r14d
   0.01%      0x00007fae26df8e94:   dec    %r14d                        ;*isub {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - java.util.HashMap::computeIfAbsent@71 (line 1207)
                                                                        ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x00007fadac03c5b8::accept@17
                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                        ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
                                                                        ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
                                                                        ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                                                                        ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
                                                                        ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                                                                        ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
                                                                        ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearWithTheMostPublications@20 (line 63)
                                                                        ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::year_with_the_most_publications@3 (line 100)
   0.67%      0x00007fae26df8e97:   and    %r9d,%r14d                   ;*iand {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - java.util.HashMap::computeIfAbsent@73 (line 1207)
                                                                        ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x00007fadac03c5b8::accept@17
                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                        ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
                                                                        ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
                                                                        ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                                                                        ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
                                                                        ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                                                                        ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
                                                                        ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearWithTheMostPublications@20 (line 63)
                                                                        ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::year_with_the_most_publications@3 (line 100)
              0x00007fae26df8e9a:   nopw   0x0(%rax,%rax,1)
   0.18%      0x00007fae26df8ea0:   cmp    %r14d,%r10d
              0x00007fae26df8ea3:   jbe    0x00007fae26dfb900
   0.00%      0x00007fae26df8ea9:   mov    0x10(%rsi,%r14,4),%r8d       ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - java.util.HashMap::computeIfAbsent@77 (line 1207)
                                                                        ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x00007fadac03c5b8::accept@17
                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                        ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
                                                                        ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
                                                                        ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                                                                        ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
                                                                        ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                                                                        ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
                                                                        ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearWithTheMostPublications@20 (line 63)
                                                                        ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::year_with_the_most_publications@3 (line 100)
   1.77%      0x00007fae26df8eae:   mov    %eax,0x74(%rsp)
              0x00007fae26df8eb2:   mov    %r14d,0x70(%rsp)
   0.00%      0x00007fae26df8eb7:   mov    %rsi,0x28(%rsp)
   0.01%      0x00007fae26df8ebc:   mov    %r10d,0x6c(%rsp)
   0.85%      0x00007fae26df8ec1:   mov    0x18(%rdi),%r10d
   0.42%      0x00007fae26df8ec5:   mov    %rdi,0x38(%rsp)
              0x00007fae26df8eca:   mov    %r10d,%edi
   0.00%      0x00007fae26df8ecd:   shl    $0x3,%rdi                    ;*getfield next {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - java.util.HashMap$KeySpliterator::forEachRemaining@152 (line 1716)
                                                                        ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
                                                                        ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                                                                        ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
                                                                        ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                                                                        ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
                                                                        ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearWithTheMostPublications@20 (line 63)
                                                                        ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::year_with_the_most_publications@3 (line 100)
   0.87%      0x00007fae26df8ed1:   mov    %rdi,0x20(%rsp)
   0.05%      0x00007fae26df8ed6:   mov    %ecx,%edi
              0x00007fae26df8ed8:   inc    %edi                         ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - java.util.HashMap::computeIfAbsent@318 (line 1245)
                                                                        ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x00007fadac03c5b8::accept@17
                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                        ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
                                                                        ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
                                                                        ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                                                                        ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
                                                                        ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                                                                        ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
                                                                        ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearWithTheMostPublications@20 (line 63)
                                                                        ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::year_with_the_most_publications@3 (line 100)
   0.01%      0x00007fae26df8eda:   mov    %edi,0x78(%rsp)
   0.75%      0x00007fae26df8ede:   mov    %edx,%edi
   0.02%      0x00007fae26df8ee0:   inc    %edi                         ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - java.util.HashMap::computeIfAbsent@308 (line 1244)
                                                                        ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x00007fadac03c5b8::accept@17
                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                        ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
                                                                        ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
                                                                        ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                                                                        ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
                                                                        ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                                                                        ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
                                                                        ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearWithTheMostPublications@20 (line 63)
                                                                        ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::year_with_the_most_publications@3 (line 100)
   0.00%      0x00007fae26df8ee2:   mov    %edi,0x5c(%rsp)
   0.00%      0x00007fae26df8ee6:   lea    0x80(%r11),%edi              ;* unwind (locked if synchronized)
                                                                        ; - java.lang.Integer::valueOf@-3
                                                                        ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics$$Lambda/0x00007fadac02bd28::apply@7
                                                                        ; - java.util.stream.Collectors::lambda$groupingBy$53@3 (line 1105)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x00007fadac03c5b8::accept@17
                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                        ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
                                                                        ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
                                                                        ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                                                                        ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
                                                                        ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                                                                        ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
                                                                        ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearWithTheMostPublications@20 (line 63)
                                                                        ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::year_with_the_most_publications@3 (line 100)
   0.82%      0x00007fae26df8eed:   test   %r8d,%r8d
              0x00007fae26df8ef0:   je     0x00007fae26df911d           ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - java.util.HashMap::computeIfAbsent@81 (line 1207)
                                                                        ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x00007fadac03c5b8::accept@17
                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                        ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
                                                                        ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
                                                                        ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                                                                        ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
                                                                        ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                                                                        ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
                                                                        ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearWithTheMostPublications@20 (line 63)
                                                                        ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::year_with_the_most_publications@3 (line 100)
   0.02%      0x00007fae26df8ef6:   data16 nopw 0x0(%rax,%rax,1)
              0x00007fae26df8f00:   cmpl   $0x1a8490,0x8(,%r8,8)        ;   {metadata(&apos;java/util/HashMap$TreeNode&apos;)}
   2.56%      0x00007fae26df8f0c:   je     0x00007fae26dfb886           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - java.util.HashMap::computeIfAbsent@89 (line 1208)
                                                                        ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x00007fadac03c5b8::accept@17
                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                        ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
                                                                        ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
                                                                        ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                                                                        ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
                                                                        ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                                                                        ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
                                                                        ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearWithTheMostPublications@20 (line 63)
                                                                        ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::year_with_the_most_publications@3 (line 100)
   0.62%      0x00007fae26df8f12:   mov    %r8d,0x1c(%rsp)
              0x00007fae26df8f17:   mov    %r10d,0x18(%rsp)
   0.00%      0x00007fae26df8f1c:   mov    %r8d,%esi
   0.19%      0x00007fae26df8f1f:   shl    $0x3,%rsi                    ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - java.util.HashMap::computeIfAbsent@77 (line 1207)
                                                                        ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x00007fadac03c5b8::accept@17
                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                        ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
                                                                        ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
                                                                        ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                                                                        ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
                                                                        ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                                                                        ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
                                                                        ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearWithTheMostPublications@20 (line 63)
                                                                        ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::year_with_the_most_publications@3 (line 100)
   0.61%      0x00007fae26df8f23:   mov    %rsi,0x10(%rsp)
              0x00007fae26df8f28:   mov    %rsi,%r14
   0.00%      0x00007fae26df8f2b:   mov    $0x0,%r8d
   0.18%      0x00007fae26df8f31:   jmp    0x00007fae26df8f65           ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - java.util.HashMap::computeIfAbsent@114 (line 1213)
                                                                        ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x00007fadac03c5b8::accept@17
                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                        ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
                                                                        ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
                                                                        ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                                                                        ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
                                                                        ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                                                                        ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
                                                                        ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearWithTheMostPublications@20 (line 63)
                                                                        ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::year_with_the_most_publications@3 (line 100)
              0x00007fae26df8f36:   data16 nopw 0x0(%rax,%rax,1)        ;*getfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - java.util.HashMap::computeIfAbsent@116 (line 1213)
                                                                        ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x00007fadac03c5b8::accept@17
                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                        ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
                                                                        ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
                                                                        ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                                                                        ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
                                                                        ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                                                                        ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
                                                                        ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearWithTheMostPublications@20 (line 63)
....................................................................................................
  82.43%  <total for region 1>

....[Hottest Region 2]..............................................................................
jvmci, level 4, com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::year_with_the_most_publications, version 2, compile id 1342 

                                                                         ; - java.util.stream.Collectors$$Lambda/0x00007fadac03c5b8::accept@17
                                                                         ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                         ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
                                                                         ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
                                                                         ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                                                                         ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
                                                                         ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                                                                         ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
                                                                         ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearWithTheMostPublications@20 (line 63)
                                                                         ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::year_with_the_most_publications@3 (line 100)
   0.65%       0x00007fae26df8f65:   mov    0xc(%r14),%r10d              ; implicit exception: dispatches to 0x00007fae26dfbaba
   0.04%       0x00007fae26df8f69:   mov    0x10(%r14),%esi              ;*getfield key {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - java.util.HashMap::computeIfAbsent@125 (line 1213)
                                                                         ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                         ; - java.util.stream.Collectors$$Lambda/0x00007fadac03c5b8::accept@17
                                                                         ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                         ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
                                                                         ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
                                                                         ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                                                                         ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
                                                                         ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                                                                         ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
                                                                         ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearWithTheMostPublications@20 (line 63)
                                                                         ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::year_with_the_most_publications@3 (line 100)
   0.10%       0x00007fae26df8f6d:   mov    0x14(%r14),%eax              ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - java.util.HashMap::computeIfAbsent@176 (line 1222)
                                                                         ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                         ; - java.util.stream.Collectors$$Lambda/0x00007fadac03c5b8::accept@17
                                                                         ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                         ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
                                                                         ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
                                                                         ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                                                                         ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
                                                                         ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                                                                         ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
                                                                         ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearWithTheMostPublications@20 (line 63)
                                                                         ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::year_with_the_most_publications@3 (line 100)
   0.27%       0x00007fae26df8f71:   cmp    %r9d,%r10d
               0x00007fae26df8f74:   jne    0x00007fae26df8f40           ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - java.util.HashMap::computeIfAbsent@120 (line 1213)
                                                                         ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                         ; - java.util.stream.Collectors$$Lambda/0x00007fadac03c5b8::accept@17
                                                                         ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                         ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
                                                                         ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
                                                                         ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                                                                         ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
                                                                         ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                                                                         ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
                                                                         ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearWithTheMostPublications@20 (line 63)
                                                                         ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::year_with_the_most_publications@3 (line 100)
   0.65%       0x00007fae26df8f76:   data16 nopw 0x0(%rax,%rax,1)        ; ImmutableOopMap {rax=NarrowOop rbp=Oop rsi=NarrowOop r14=Oop [16]=Oop [24]=NarrowOop [32]=Oop [40]=Oop [48]=Oop [56]=Oop [72]=Oop [80]=Oop }
                                                                         ;*aload {reexecute=1 rethrow=0 return_oop=0}
                                                                         ; - (reexecute) java.util.HashMap::computeIfAbsent@114 (line 1213)
                                                                         ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                         ; - java.util.stream.Collectors$$Lambda/0x00007fadac03c5b8::accept@17
                                                                         ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                         ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
                                                                         ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
                                                                         ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                                                                         ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
                                                                         ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                                                                         ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
                                                                         ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearWithTheMostPublications@20 (line 63)
                                                                         ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::year_with_the_most_publications@3 (line 100)
               0x00007fae26df8f80:   cmpl   $0x25c88,0x8(,%rsi,8)        ; implicit exception: dispatches to 0x00007fae26dfbadd
                                                                         ;   {metadata(&apos;java/lang/Integer&apos;)}
   2.06%       0x00007fae26df8f8b:   jne    0x00007fae26dfb1d8           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - java.lang.Integer::equals@4 (line 1224)
                                                                         ; - java.util.HashMap::computeIfAbsent@142 (line 1214)
                                                                         ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                         ; - java.util.stream.Collectors$$Lambda/0x00007fadac03c5b8::accept@17
                                                                         ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                         ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
                                                                         ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
                                                                         ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                                                                         ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
                                                                         ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                                                                         ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
                                                                         ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearWithTheMostPublications@20 (line 63)
                                                                         ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::year_with_the_most_publications@3 (line 100)
   0.68%       0x00007fae26df8f91:   mov    0xc(,%rsi,8),%r10d           ;* unwind (locked if synchronized)
                                                                         ; - java.lang.Integer::intValue@-3
                                                                         ; - java.lang.Integer::equals@15 (line 1225)
                                                                         ; - java.util.HashMap::computeIfAbsent@142 (line 1214)
                                                                         ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                         ; - java.util.stream.Collectors$$Lambda/0x00007fadac03c5b8::accept@17
                                                                         ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                         ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
                                                                         ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
                                                                         ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                                                                         ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
                                                                         ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                                                                         ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
                                                                         ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearWithTheMostPublications@20 (line 63)
                                                                         ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::year_with_the_most_publications@3 (line 100)
   0.05%       0x00007fae26df8f99:   nopl   0x0(%rax)
   0.00%       0x00007fae26df8fa0:   cmp    $0x100,%edi
          ╭    0x00007fae26df8fa6:   jb     0x00007fae26df9093
   0.18%  │    0x00007fae26df8fac:   mov    %r8d,0x6c(%rsp)
   0.62%  │    0x00007fae26df8fb1:   mov    0x1b8(%r15),%rdi
   0.01%  │    0x00007fae26df8fb8:   lea    0x10(%rdi),%r8
   0.00%  │    0x00007fae26df8fbc:   nopl   0x0(%rax)
   0.14%  │    0x00007fae26df8fc0:   cmp    0x1c8(%r15),%r8
          │    0x00007fae26df8fc7:   ja     0x00007fae26df90d8
   0.66%  │    0x00007fae26df8fcd:   mov    %r8,0x1b8(%r15)
   0.02%  │    0x00007fae26df8fd4:   prefetchw 0xd0(%rdi)
   0.04%  │    0x00007fae26df8fdb:   movq   $0x1,(%rdi)
   0.17%  │    0x00007fae26df8fe2:   movl   $0x25c88,0x8(%rdi)           ;   {metadata(&apos;java/lang/Integer&apos;)}
   0.66%  │    0x00007fae26df8fe9:   mov    %r11d,0xc(%rdi)              ;* unwind (locked if synchronized)
          │                                                              ; - java.lang.Integer::valueOf@-3
          │                                                              ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics$$Lambda/0x00007fadac02bd28::apply@7
          │                                                              ; - java.util.stream.Collectors::lambda$groupingBy$53@3 (line 1105)
          │                                                              ; - java.util.stream.Collectors$$Lambda/0x00007fadac03c5b8::accept@17
          │                                                              ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
          │                                                              ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
          │                                                              ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
          │                                                              ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
          │                                                              ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
          │                                                              ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
          │                                                              ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
          │                                                              ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearWithTheMostPublications@20 (line 63)
          │                                                              ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::year_with_the_most_publications@3 (line 100)
   0.00%  │ ↗  0x00007fae26df8fed:   shl    $0x3,%rsi                    ;*getfield key {reexecute=0 rethrow=0 return_oop=0}
          │ │                                                            ; - java.util.HashMap::computeIfAbsent@125 (line 1213)
          │ │                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
          │ │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007fadac03c5b8::accept@17
          │ │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
          │ │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
          │ │                                                            ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
          │ │                                                            ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
          │ │                                                            ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
          │ │                                                            ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
          │ │                                                            ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
          │ │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearWithTheMostPublications@20 (line 63)
          │ │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::year_with_the_most_publications@3 (line 100)
   0.01%  │ │  0x00007fae26df8ff1:   cmp    %rsi,%rdi
          │ │  0x00007fae26df8ff4:   je     0x00007fae26dfb4ac           ;*if_acmpeq {reexecute=0 rethrow=0 return_oop=0}
          │ │                                                            ; - java.util.HashMap::computeIfAbsent@132 (line 1213)
          │ │                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
          │ │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007fadac03c5b8::accept@17
          │ │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
          │ │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
          │ │                                                            ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
          │ │                                                            ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
          │ │                                                            ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
          │ │                                                            ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
          │ │                                                            ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
          │ │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearWithTheMostPublications@20 (line 63)
          │ │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::year_with_the_most_publications@3 (line 100)
   0.19%  │ │  0x00007fae26df8ffa:   nopw   0x0(%rax,%rax,1)
   0.72%  │ │  0x00007fae26df9000:   cmp    0xc(%rdi),%r10d
          │ │  0x00007fae26df9004:   jne    0x00007fae26dfb91b           ; ImmutableOopMap {rax=NarrowOop rbp=Oop rdi=Oop r14=Oop [16]=Oop [24]=NarrowOop [32]=Oop [40]=Oop [48]=Oop [56]=Oop [72]=Oop [80]=Oop }
          │ │                                                            ;*aload {reexecute=1 rethrow=0 return_oop=0}
          │ │                                                            ; - (reexecute) java.util.HashMap::computeIfAbsent@148 (line 1215)
          │ │                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
          │ │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007fadac03c5b8::accept@17
          │ │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
          │ │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
          │ │                                                            ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
          │ │                                                            ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
          │ │                                                            ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
          │ │                                                            ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
          │ │                                                            ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
          │ │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearWithTheMostPublications@20 (line 63)
          │ │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::year_with_the_most_publications@3 (line 100)
   0.35%  │ │  0x00007fae26df900a:   cmpl   $0x2a80,0x8(,%rax,8)         ; implicit exception: dispatches to 0x00007fae26dfbb00
          │ │                                                            ;   {metadata({type array long})}
   0.34%  │ │  0x00007fae26df9015:   jne    0x00007fae26dfb8b0           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
          │ │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007fadac03bcf8::accept@5
          │ │                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@37 (line 1107)
          │ │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007fadac03c5b8::accept@17
          │ │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
          │ │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
          │ │                                                            ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
          │ │                                                            ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
          │ │                                                            ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
          │ │                                                            ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
          │ │                                                            ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
          │ │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearWithTheMostPublications@20 (line 63)
          │ │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::year_with_the_most_publications@3 (line 100)
   0.66%  │ │  0x00007fae26df901b:   nopl   0x0(%rax,%rax,1)
   0.02%  │ │  0x00007fae26df9020:   cmpl   $0x0,0xc(,%rax,8)
   0.27%  │ │  0x00007fae26df9028:   je     0x00007fae26dfb640
   0.68%  │ │  0x00007fae26df902e:   mov    0x18(%rsp),%r8d
   0.03%  │ │  0x00007fae26df9033:   incq   0x10(,%rax,8)                ;*lastore {reexecute=0 rethrow=0 return_oop=0}
          │ │                                                            ; - java.util.stream.Collectors::lambda$summingLong$23@12 (line 662)
          │ │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007fadac03bcf8::accept@9
          │ │                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@37 (line 1107)
          │ │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007fadac03c5b8::accept@17
          │ │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
          │ │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
          │ │                                                            ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
          │ │                                                            ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
          │ │                                                            ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
          │ │                                                            ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
          │ │                                                            ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
          │ │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearWithTheMostPublications@20 (line 63)
          │ │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::year_with_the_most_publications@3 (line 100)
   0.87%  │ │  0x00007fae26df903b:   nopl   0x0(%rax,%rax,1)
   0.01%  │ │  0x00007fae26df9040:   test   %r8d,%r8d
          │╭│  0x00007fae26df9043:   jne    0x00007fae26df90a5           ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
          │││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@159 (line 1718)
          │││                                                            ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
          │││                                                            ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
          │││                                                            ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
          │││                                                            ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
          │││                                                            ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
          │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearWithTheMostPublications@20 (line 63)
          │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::year_with_the_most_publications@3 (line 100)
          │││  0x00007fae26df9049:   mov    0x28(%rsp),%r8
   0.14%  │││  0x00007fae26df904e:   mov    0x74(%rsp),%r10d
   0.49%  │││  0x00007fae26df9053:   mov    0x88(%rsp),%esi
   0.02%  │││  0x00007fae26df905a:   mov    0x20(%rsp),%r9
   0.01%  │││  0x00007fae26df905f:   nop
   0.17%  │││  0x00007fae26df9060:   jmp    0x00007fae26df8dfb
   0.41%  │││  0x00007fae26df9065:   mov    %rdi,0x38(%rsp)
   1.27%  │││  0x00007fae26df906a:   mov    %r14d,0x88(%rsp)
   0.32%  │││  0x00007fae26df9072:   mov    0x458(%r15),%rdi             ; ImmutableOopMap {rbp=Oop rsi=Oop r9=Oop [56]=Oop [72]=Oop [80]=Oop }
          │││                                                            ;*aload {reexecute=1 rethrow=0 return_oop=0}
          │││                                                            ; - (reexecute) java.util.HashMap$KeySpliterator::forEachRemaining@122 (line 1712)
          │││                                                            ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
          │││                                                            ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
          │││                                                            ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
          │││                                                            ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
          │││                                                            ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
          │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearWithTheMostPublications@20 (line 63)
          │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::year_with_the_most_publications@3 (line 100)
   0.20%  │││  0x00007fae26df9079:   test   %eax,(%rdi)                  ;   {poll}
   0.15%  │││  0x00007fae26df907b:   mov    %r9,%rdi
   0.29%  │││  0x00007fae26df907e:   mov    %r11d,%r14d
   0.08%  │││  0x00007fae26df9081:   mov    0x50(%rsp),%r8
   0.20%  │││  0x00007fae26df9086:   mov    0x98(%rsp),%r11d
   0.11%  │││  0x00007fae26df908e:   jmp    0x00007fae26df8dc0
          ↘││  0x00007fae26df9093:   mov    %r8d,0x6c(%rsp)
           ││  0x00007fae26df9098:   mov    0x10(%rbp,%rdi,4),%edi
           ││  0x00007fae26df909c:   shl    $0x3,%rdi
           │╰  0x00007fae26df90a0:   jmp    0x00007fae26df8fed           ;* unwind (locked if synchronized)
           │                                                             ; - java.lang.Integer::valueOf@-3
           │                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics$$Lambda/0x00007fadac02bd28::apply@7
           │                                                             ; - java.util.stream.Collectors::lambda$groupingBy$53@3 (line 1105)
           │                                                             ; - java.util.stream.Collectors$$Lambda/0x00007fadac03c5b8::accept@17
           │                                                             ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
           │                                                             ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
           │                                                             ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
           │                                                             ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
           │                                                             ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
           │                                                             ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
           │                                                             ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
           │                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearWithTheMostPublications@20 (line 63)
           │                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::year_with_the_most_publications@3 (line 100)
   0.02%   ↘   0x00007fae26df90a5:   mov    0x74(%rsp),%esi
   0.15%       0x00007fae26df90a9:   mov    0x98(%rsp),%r11d
   0.10%       0x00007fae26df90b1:   mov    0x458(%r15),%rax             ; ImmutableOopMap {rbp=Oop [32]=Oop [40]=Oop [56]=Oop [72]=Oop [80]=Oop }
                                                                         ;*return {reexecute=1 rethrow=0 return_oop=0}
                                                                         ; - (reexecute) java.util.stream.Collectors::lambda$summingLong$23@13 (line 662)
                                                                         ; - java.util.stream.Collectors$$Lambda/0x00007fadac03bcf8::accept@9
                                                                         ; - java.util.stream.Collectors::lambda$groupingBy$53@37 (line 1107)
                                                                         ; - java.util.stream.Collectors$$Lambda/0x00007fadac03c5b8::accept@17
                                                                         ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                         ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
                                                                         ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
                                                                         ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                                                                         ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
                                                                         ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
                                                                         ; - java.util.stream.ReferencePipeline::collect@86 (line 682)
                                                                         ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::yearWithTheMostPublications@20 (line 63)
                                                                         ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::year_with_the_most_publications@3 (line 100)
   0.01%       0x00007fae26df90b8:   test   %eax,(%rax)                  ;   {poll}
   0.15%       0x00007fae26df90ba:   mov    %esi,%eax
   0.02%       0x00007fae26df90bc:   mov    0x20(%rsp),%rdi
   0.06%       0x00007fae26df90c1:   mov    0x88(%rsp),%r14d
   0.00%       0x00007fae26df90c9:   mov    0x50(%rsp),%r8
   0.04%       0x00007fae26df90ce:   mov    0x28(%rsp),%rsi
   0.03%       0x00007fae26df90d3:   jmp    0x00007fae26df8dc0           ;* unwind (locked if synchronized)
                                                                         ; - java.lang.Integer::valueOf@-3
                                                                         ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics$$Lambda/0x00007fadac02bd28::apply@7
                                                                         ; - java.util.stream.Collectors::lambda$groupingBy$53@3 (line 1105)
                                                                         ; - java.util.stream.Collectors$$Lambda/0x00007fadac03c5b8::accept@17
                                                                         ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                         ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
                                                                         ; - java.util.stream.AbstractPipeline::copyInto@32 (line 509)
                                                                         ; - java.util.stream.AbstractPipeline::wrapAndCopyInto@13 (line 499)
                                                                         ; - java.util.stream.ReduceOps$ReduceOp::evaluateSequential@6 (line 921)
                                                                         ; - java.util.stream.AbstractPipeline::evaluate@88 (line 234)
....................................................................................................
  15.57%  <total for region 2>

....[Hottest Regions]...............................................................................
  82.43%      jvmci, level 4  com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::year_with_the_most_publications, version 2, compile id 1342 
  15.57%      jvmci, level 4  com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::year_with_the_most_publications, version 2, compile id 1342 
   0.12%              kernel  [unknown] 
   0.09%              kernel  [unknown] 
   0.07%              kernel  [unknown] 
   0.06%              kernel  [unknown] 
   0.05%              kernel  [unknown] 
   0.04%              kernel  [unknown] 
   0.04%              kernel  [unknown] 
   0.04%              kernel  [unknown] 
   0.03%              kernel  [unknown] 
   0.03%              kernel  [unknown] 
   0.02%              kernel  [unknown] 
   0.02%              kernel  [unknown] 
   0.02%      jvmci, level 4  com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::year_with_the_most_publications, version 2, compile id 1342 
   0.02%      jvmci, level 4  com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::year_with_the_most_publications, version 2, compile id 1342 
   0.02%      jvmci, level 4  com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::year_with_the_most_publications, version 2, compile id 1342 
   0.02%              kernel  [unknown] 
   0.02%              kernel  [unknown] 
   0.02%           libjvm.so  CompilerOracle::has_option_value<bool> 
   1.29%  <...other 419 warm regions...>
....................................................................................................
 100.00%  <totals>

....[Hottest Methods (after inlining)]..............................................................
  98.14%      jvmci, level 4  com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark::year_with_the_most_publications, version 2, compile id 1342 
   1.30%              kernel  [unknown] 
   0.13%                      <unknown> 
   0.02%        libc-2.31.so  __vfprintf_internal 
   0.02%           libjvm.so  CompilerOracle::has_option_value<bool> 
   0.02%          ld-2.31.so  __tls_get_addr 
   0.01%           libjvm.so  ElfSymbolTable::lookup 
   0.01%           libjvm.so  xmlStream::write_text 
   0.01%           libjvm.so  defaultStream::write 
   0.01%        libc-2.31.so  __vsnprintf_internal 
   0.01%      hsdis-amd64.so  print_insn 
   0.01%           libjvm.so  G1CardSet::occupied 
   0.01%        libc-2.31.so  __memset_avx2_erms 
   0.01%        libc-2.31.so  __strchr_avx2 
   0.01%           libjvm.so  PerfLongVariant::sample 
   0.01%           libjvm.so  os::current_thread_id 
   0.01%           libjvm.so  G1ConcurrentRefine::RemSetSamplingClosure::do_heap_region 
   0.01%        libc-2.31.so  _IO_fwrite 
   0.01%        libc-2.31.so  syscall 
   0.01%           libjvm.so  ObjAllocator::initialize 
   0.27%  <...other 108 warm methods...>
....................................................................................................
 100.00%  <totals>

....[Distribution by Source]........................................................................
  98.14%      jvmci, level 4
   1.30%              kernel
   0.27%           libjvm.so
   0.13%                    
   0.09%        libc-2.31.so
   0.02%  libpthread-2.31.so
   0.02%         interpreter
   0.02%          ld-2.31.so
   0.01%      hsdis-amd64.so
   0.00%    perf-2148207.map
....................................................................................................
 100.00%  <totals>



# JMH version: 1.37
# VM version: JDK 21, Java HotSpot(TM) 64-Bit Server VM, 21+35-jvmci-23.1-b15
# VM invoker: /home/gogu/bench_jdks/graalvm-jdk-21+35.1/bin/java
# VM options: -XX:ThreadPriorityPolicy=1 -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCIProduct -XX:-UnlockExperimentalVMOptions -Xms4g -Xmx4g -XX:+AlwaysPreTouch
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark.years_with_the_most_publications

# Run progress: 92.86% complete, ETA 00:01:57
# Fork: 1 of 1
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 15.391 ms/op
# Warmup Iteration   2: 5.456 ms/op
# Warmup Iteration   3: 5.319 ms/op
# Warmup Iteration   4: 5.371 ms/op
# Warmup Iteration   5: 5.380 ms/op
Iteration   1: 5.288 ms/op
Iteration   2: 5.267 ms/op
Iteration   3: 5.227 ms/op
Iteration   4: 5.195 ms/op
Iteration   5: 5.320 ms/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark.years_with_the_most_publications":
  5.260 ±(99.9%) 0.190 ms/op [Average]
  (min, avg, max) = (5.195, 5.260, 5.320), stdev = 0.049
  CI (99.9%): [5.069, 5.450] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatisticsBenchmark.years_with_the_most_publications:asm":
PrintAssembly processed: 359221 total address lines.
Perf output processed (skipped 62.532 seconds):
 Column 1: cycles (51000 events)

Hottest code regions (>10.00% "cycles" events):
 Event counts are percents of total event count.

....[Hottest Region 1]..............................................................................
jvmci, level 4, java.util.HashMap$KeySpliterator::forEachRemaining, version 4, compile id 1252 

                                                                        ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x00007f37ac03c5b8::accept@17
                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                        ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
              0x00007f3826dc1212:   mov    %rdi,0xb0(%rsp)
              0x00007f3826dc121a:   movabs $0x7f37ac03c5b8,%rdi         ;   {metadata(&apos;java/util/stream/Collectors$$Lambda+0x00007f37ac03c5b8&apos;)}
              0x00007f3826dc1224:   mov    %rsi,%r11
              0x00007f3826dc1227:   mov    %eax,%r10d                   ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - java.util.HashMap$KeySpliterator::forEachRemaining@122 (line 1712)
              0x00007f3826dc122a:   nopw   0x0(%rax,%rax,1)
   1.36%   ↗  0x00007f3826dc1230:   movabs $0x7f37ac03bcf8,%r8          ;   {metadata(&apos;java/util/stream/Collectors$$Lambda+0x00007f37ac03bcf8&apos;)}
   0.25%   │  0x00007f3826dc123a:   mov    %r10d,0xac(%rsp)
   0.75%   │  0x00007f3826dc1242:   test   %r11,%r11
          ╭│  0x00007f3826dc1245:   jne    0x00007f3826dc12b6           ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
          ││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@124 (line 1712)
   0.12%  ││  0x00007f3826dc124b:   cmp    %r10d,%ebx
          ││  0x00007f3826dc124e:   jbe    0x00007f3826dc50b8
   1.27%  ││  0x00007f3826dc1254:   mov    0x10(%rcx,%r10,4),%r11d
   0.46%  ││  0x00007f3826dc1259:   shl    $0x3,%r11                    ;*aaload {reexecute=0 rethrow=0 return_oop=0}
          ││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@133 (line 1713)
   0.30%  ││  0x00007f3826dc125d:   inc    %r10d                        ;*iinc {reexecute=0 rethrow=0 return_oop=0}
          ││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@130 (line 1713)
   0.16%  ││  0x00007f3826dc1260:   mov    0xb0(%rsp),%rdi              ;*aload {reexecute=0 rethrow=0 return_oop=0}
          ││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@157 (line 1718)
   1.72%  ││  0x00007f3826dc1268:   test   %r11,%r11
          ││  0x00007f3826dc126b:   jne    0x00007f3826dc14fd           ;*ifnonnull {reexecute=0 rethrow=0 return_oop=0}
          ││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@159 (line 1718)
   0.35%  ││  0x00007f3826dc1271:   mov    0xd0(%rsp),%r8d
   0.47%  ││  0x00007f3826dc1279:   nopl   0x0(%rax)
   0.13%  ││  0x00007f3826dc1280:   cmp    %r10d,%r8d
          ││  0x00007f3826dc1283:   jle    0x00007f3826dc4a9a           ;*if_icmplt {reexecute=0 rethrow=0 return_oop=0}
          ││                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@164 (line 1718)
   1.29%  ││  0x00007f3826dc1289:   mov    0x458(%r15),%rsi             ; ImmutableOopMap {rbp=Oop r11=Oop [96]=Oop [104]=Oop [116]=NarrowOop [120]=Oop }
          ││                                                            ;*aload {reexecute=1 rethrow=0 return_oop=0}
          ││                                                            ; - (reexecute) java.util.HashMap$KeySpliterator::forEachRemaining@157 (line 1718)
   0.25%  ││  0x00007f3826dc1290:   test   %eax,(%rsi)                  ;   {poll}
   0.51%  ││  0x00007f3826dc1292:   vpxor  %xmm0,%xmm0,%xmm0
   0.12%  ││  0x00007f3826dc1296:   mov    0x68(%rsp),%rcx
   1.25%  ││  0x00007f3826dc129b:   mov    0xcc(%rsp),%ebx
   0.19%  ││  0x00007f3826dc12a2:   mov    0x78(%rsp),%rdx
   0.29%  ││  0x00007f3826dc12a7:   movabs $0x7f37ac03c5b8,%rdi         ;   {metadata(&apos;java/util/stream/Collectors$$Lambda+0x00007f37ac03c5b8&apos;)}
   0.14%  │╰  0x00007f3826dc12b1:   jmp    0x00007f3826dc1230           ;*aload {reexecute=0 rethrow=0 return_oop=0}
          │                                                             ; - java.util.HashMap$KeySpliterator::forEachRemaining@122 (line 1712)
   0.19%  ↘   0x00007f3826dc12b6:   mov    0x14(%rdx),%ecx              ;*getfield val$accumulator {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@1 (line 169)
                                                                        ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.01%      0x00007f3826dc12b9:   nopl   0x0(%rax)
   0.01%      0x00007f3826dc12c0:   test   %ecx,%ecx
              0x00007f3826dc12c2:   je     0x00007f3826dc17a5
   0.48%      0x00007f3826dc12c8:   mov    0x8(,%rcx,8),%ebx
   0.66%      0x00007f3826dc12cf:   movabs $0x7f37ab000000,%r13
              0x00007f3826dc12d9:   lea    0x0(%r13,%rbx,1),%rbx        ;*invokeinterface accept {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                        ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.64%      0x00007f3826dc12de:   mov    %r11,0x58(%rsp)
   0.33%      0x00007f3826dc12e3:   mov    0x10(%r11),%r13d             ;*getfield key {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - java.util.HashMap$KeySpliterator::forEachRemaining@142 (line 1715)
  30.52%      0x00007f3826dc12e7:   mov    %r13d,0x54(%rsp)
   1.12%      0x00007f3826dc12ec:   mov    0xc(%rdx),%r9d
   0.02%      0x00007f3826dc12f0:   mov    %r9d,0x50(%rsp)
   0.14%      0x00007f3826dc12f5:   mov    %r9d,%edx
   0.04%      0x00007f3826dc12f8:   shl    $0x3,%rdx                    ;*getfield state {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@5 (line 169)
                                                                        ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.55%      0x00007f3826dc12fc:   mov    %rdx,0x48(%rsp)
   0.03%      0x00007f3826dc1301:   mov    %r13d,%edx
   0.13%      0x00007f3826dc1304:   shl    $0x3,%rdx                    ;*getfield key {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - java.util.HashMap$KeySpliterator::forEachRemaining@142 (line 1715)
   0.05%      0x00007f3826dc1308:   mov    %rdx,0x40(%rsp)
   0.57%      0x00007f3826dc130d:   cmp    %rbx,%rdi
              0x00007f3826dc1310:   jne    0x00007f3826dc166c           ;*invokeinterface accept {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                        ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.01%      0x00007f3826dc1316:   mov    0xc(,%rcx,8),%ebx            ;*getfield arg$1 {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - java.util.stream.Collectors$$Lambda/0x00007f37ac03c5b8::accept@1
                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                        ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.11%      0x00007f3826dc131d:   data16 xchg %ax,%ax                 ; ImmutableOopMap {rcx=NarrowOop rbp=Oop r9=NarrowOop r11=Oop r13=NarrowOop [64]=Oop [72]=Oop [80]=NarrowOop [84]=NarrowOop [88]=Oop [96]=Oop [104]=Oop [116]=NarrowOop [120]=Oop }
                                                                        ;*aload {reexecute=1 rethrow=0 return_oop=0}
                                                                        ; - (reexecute) java.util.HashMap$KeySpliterator::forEachRemaining@122 (line 1712)
   0.03%      0x00007f3826dc1320:   cmpl   $0x102bd28,0x8(,%rbx,8)      ; implicit exception: dispatches to 0x00007f3826dc5575
                                                                        ;   {metadata(&apos;com/ionutbalosin/jvm/performance/benchmarks/miscellaneous/publicationstatistics/PublicationStatistics$$Lambda+0x00007f37ac02bd28&apos;)}
   0.56%      0x00007f3826dc132b:   jne    0x00007f3826dc4eb1           ;*invokeinterface apply {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - java.util.stream.Collectors::lambda$groupingBy$53@3 (line 1105)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x00007f37ac03c5b8::accept@17
                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                        ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.11%      0x00007f3826dc1331:   data16 data16 nopw 0x0(%rax,%rax,1)
   0.05%      0x00007f3826dc133c:   data16 data16 xchg %ax,%ax          ; ImmutableOopMap {rcx=NarrowOop rbp=Oop r9=NarrowOop r11=Oop r13=NarrowOop [64]=Oop [72]=Oop [80]=NarrowOop [84]=NarrowOop [88]=Oop [96]=Oop [104]=Oop [116]=NarrowOop [120]=Oop }
                                                                        ;*aload {reexecute=1 rethrow=0 return_oop=0}
                                                                        ; - (reexecute) java.util.HashMap$KeySpliterator::forEachRemaining@122 (line 1712)
   0.53%      0x00007f3826dc1340:   cmpl   $0x8e280,0x8(,%r9,8)         ; implicit exception: dispatches to 0x00007f3826dc5598
                                                                        ;   {metadata(&apos;java/util/HashMap&apos;)}
   0.15%      0x00007f3826dc134c:   jne    0x00007f3826dc50f1           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - java.util.stream.Collectors$$Lambda/0x00007f37ac03c5b8::accept@13
                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                        ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.04%      0x00007f3826dc1352:   data16 nopw 0x0(%rax,%rax,1)
   0.51%      0x00007f3826dc135c:   data16 data16 xchg %ax,%ax          ; ImmutableOopMap {rcx=NarrowOop rbp=Oop r9=NarrowOop r11=Oop r13=NarrowOop [64]=Oop [72]=Oop [80]=NarrowOop [84]=NarrowOop [88]=Oop [96]=Oop [104]=Oop [116]=NarrowOop [120]=Oop }
                                                                        ;*aload {reexecute=1 rethrow=0 return_oop=0}
                                                                        ; - (reexecute) java.util.HashMap$KeySpliterator::forEachRemaining@122 (line 1712)
   0.03%      0x00007f3826dc1360:   cmpl   $0x102b708,0x8(,%r13,8)      ; implicit exception: dispatches to 0x00007f3826dc55bb
                                                                        ;   {metadata(&apos;com/ionutbalosin/jvm/performance/benchmarks/miscellaneous/publicationstatistics/model/Publication&apos;)}
  18.61%      0x00007f3826dc136c:   jne    0x00007f3826dc534e           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics$$Lambda/0x00007f37ac02bd28::apply@1
                                                                        ; - java.util.stream.Collectors::lambda$groupingBy$53@3 (line 1105)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x00007f37ac03c5b8::accept@17
                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                        ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.58%      0x00007f3826dc1372:   mov    0x14(,%rcx,8),%ebx           ;*getfield arg$3 {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - java.util.stream.Collectors$$Lambda/0x00007f37ac03c5b8::accept@9
                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                        ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.02%      0x00007f3826dc1379:   mov    %ebx,0x3c(%rsp)
   0.13%      0x00007f3826dc137d:   mov    0xc(,%r13,8),%edi            ;*getfield year {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.model.Publication::getYear@1 (line 43)
                                                                        ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics$$Lambda/0x00007f37ac02bd28::apply@4
                                                                        ; - java.util.stream.Collectors::lambda$groupingBy$53@3 (line 1105)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x00007f37ac03c5b8::accept@17
                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                        ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.35%      0x00007f3826dc1385:   mov    %edi,0xa8(%rsp)
   0.76%      0x00007f3826dc138c:   mov    0x10(,%rcx,8),%ecx           ;*getfield arg$2 {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - java.util.stream.Collectors$$Lambda/0x00007f37ac03c5b8::accept@5
                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                        ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.02%      0x00007f3826dc1393:   mov    %ecx,0x38(%rsp)
   0.12%      0x00007f3826dc1397:   mov    0x24(,%r9,8),%edx            ;*getfield table {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - java.util.HashMap::resize@1 (line 684)
                                                                        ; - java.util.HashMap::computeIfAbsent@57 (line 1206)
                                                                        ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x00007f37ac03c5b8::accept@17
                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                        ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.03%      0x00007f3826dc139f:   mov    0x1c(,%r9,8),%r13d           ;*getfield threshold {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - java.util.HashMap::computeIfAbsent@31 (line 1204)
                                                                        ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x00007f37ac03c5b8::accept@17
                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                        ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.56%      0x00007f3826dc13a7:   mov    %edx,%esi
   0.02%      0x00007f3826dc13a9:   shl    $0x3,%rsi                    ;*getfield table {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - java.util.HashMap::resize@1 (line 684)
                                                                        ; - java.util.HashMap::computeIfAbsent@57 (line 1206)
                                                                        ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x00007f37ac03c5b8::accept@17
                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                        ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.10%      0x00007f3826dc13ad:   mov    %rsi,0x30(%rsp)
   0.02%      0x00007f3826dc13b2:   mov    %ebx,%eax
   0.53%      0x00007f3826dc13b4:   shl    $0x3,%rax                    ;*getfield arg$3 {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - java.util.stream.Collectors$$Lambda/0x00007f37ac03c5b8::accept@9
                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                        ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.02%      0x00007f3826dc13b8:   mov    %rax,0x28(%rsp)
   0.09%      0x00007f3826dc13bd:   mov    %edi,%r10d
   0.04%      0x00007f3826dc13c0:   shr    $0x10,%r10d                  ;*iushr {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - java.util.HashMap::hash@17 (line 338)
                                                                        ; - java.util.HashMap::computeIfAbsent@13 (line 1199)
                                                                        ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x00007f37ac03c5b8::accept@17
                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                        ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.58%      0x00007f3826dc13c4:   xor    %edi,%r10d                   ;*ixor {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - java.util.HashMap::hash@18 (line 338)
                                                                        ; - java.util.HashMap::computeIfAbsent@13 (line 1199)
                                                                        ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x00007f37ac03c5b8::accept@17
                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                        ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.03%      0x00007f3826dc13c7:   mov    %r10d,0xa4(%rsp)
   0.09%      0x00007f3826dc13cf:   mov    %ecx,%eax
   0.02%      0x00007f3826dc13d1:   shl    $0x3,%rax                    ;*getfield arg$2 {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - java.util.stream.Collectors$$Lambda/0x00007f37ac03c5b8::accept@5
                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                        ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.59%      0x00007f3826dc13d5:   mov    %rax,0x20(%rsp)
   0.02%      0x00007f3826dc13da:   nopw   0x0(%rax,%rax,1)
   0.14%      0x00007f3826dc13e0:   cmp    0x14(,%r9,8),%r13d
              0x00007f3826dc13e8:   jl     0x00007f3826dc2938           ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - java.util.HashMap::computeIfAbsent@34 (line 1204)
                                                                        ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x00007f37ac03c5b8::accept@17
                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                        ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.63%      0x00007f3826dc13ee:   test   %edx,%edx
              0x00007f3826dc13f0:   je     0x00007f3826dc38a9           ;*ifnull {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - java.util.HashMap::computeIfAbsent@44 (line 1204)
                                                                        ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x00007f37ac03c5b8::accept@17
                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                        ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.02%      0x00007f3826dc13f6:   mov    0xc(,%rdx,8),%edx            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - java.util.HashMap::computeIfAbsent@49 (line 1204)
                                                                        ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x00007f37ac03c5b8::accept@17
                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                        ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.08%      0x00007f3826dc13fd:   data16 xchg %ax,%ax
   0.03%      0x00007f3826dc1400:   test   %edx,%edx
              0x00007f3826dc1402:   je     0x00007f3826dc5053           ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - java.util.HashMap::computeIfAbsent@53 (line 1204)
                                                                        ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x00007f37ac03c5b8::accept@17
                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                        ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.56%      0x00007f3826dc1408:   mov    %edx,%r13d
   0.03%      0x00007f3826dc140b:   dec    %r13d                        ;*isub {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - java.util.HashMap::computeIfAbsent@71 (line 1207)
                                                                        ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x00007f37ac03c5b8::accept@17
                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                        ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.12%      0x00007f3826dc140e:   and    %r10d,%r13d                  ;*iand {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - java.util.HashMap::computeIfAbsent@73 (line 1207)
                                                                        ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x00007f37ac03c5b8::accept@17
                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                        ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.03%      0x00007f3826dc1411:   cmp    %r13d,%edx
              0x00007f3826dc1414:   jbe    0x00007f3826dc4c50
   0.59%      0x00007f3826dc141a:   mov    0x10(%rsi,%r13,4),%ecx       ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - java.util.HashMap::computeIfAbsent@77 (line 1207)
                                                                        ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x00007f37ac03c5b8::accept@17
                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                        ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.43%      0x00007f3826dc141f:   mov    %r13d,0x9c(%rsp)
   0.09%      0x00007f3826dc1427:   mov    %rsi,0x10(%rsp)
   0.04%      0x00007f3826dc142c:   mov    %edx,0x98(%rsp)
   0.39%      0x00007f3826dc1433:   test   %ebx,%ebx
              0x00007f3826dc1435:   je     0x00007f3826dc17b1
   0.14%      0x00007f3826dc143b:   mov    0x8(,%rbx,8),%edx
   0.13%      0x00007f3826dc1442:   movabs $0x7f37ab000000,%r13
   0.02%      0x00007f3826dc144c:   lea    0x0(%r13,%rdx,1),%rdx        ;*invokeinterface accept {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - java.util.stream.Collectors::lambda$groupingBy$53@37 (line 1107)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x00007f37ac03c5b8::accept@17
                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                        ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.44%      0x00007f3826dc1451:   mov    0x18(,%r9,8),%r13d           ;*getfield modCount {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - java.util.HashMap::computeIfAbsent@195 (line 1227)
                                                                        ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x00007f37ac03c5b8::accept@17
                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                        ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.13%      0x00007f3826dc1459:   mov    %r13d,0xa0(%rsp)
   0.08%      0x00007f3826dc1461:   mov    %ecx,%r13d
   0.02%      0x00007f3826dc1464:   shl    $0x3,%r13                    ;*aaload {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - java.util.HashMap::computeIfAbsent@77 (line 1207)
                                                                        ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x00007f37ac03c5b8::accept@17
                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                        ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
                                                                        ;   {no_reloc}
   0.41%      0x00007f3826dc1468:   mov    %r13,0x30(%rsp)
   0.17%      0x00007f3826dc146d:   lea    0x80(%rdi),%r14d             ;* unwind (locked if synchronized)
                                                                        ; - java.lang.Integer::valueOf@-3
                                                                        ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics$$Lambda/0x00007f37ac02bd28::apply@7
                                                                        ; - java.util.stream.Collectors::lambda$groupingBy$53@3 (line 1105)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x00007f37ac03c5b8::accept@17
                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                        ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.10%      0x00007f3826dc1474:   mov    %r14d,0x8c(%rsp)
   0.04%      0x00007f3826dc147c:   nopl   0x0(%rax)
   0.51%      0x00007f3826dc1480:   test   %ecx,%ecx
              0x00007f3826dc1482:   je     0x00007f3826dc1d0a
   0.12%      0x00007f3826dc1488:   cmpl   $0x1a8490,0x8(,%rcx,8)       ;   {metadata(&apos;java/util/HashMap$TreeNode&apos;)}
   1.55%      0x00007f3826dc1493:   je     0x00007f3826dc528b           ;*aastore {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - java.util.HashMap::computeIfAbsent@289 (line 1240)
                                                                        ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x00007f37ac03c5b8::accept@17
                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                        ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.56%      0x00007f3826dc1499:   mov    %ecx,0x1c(%rsp)
   0.02%      0x00007f3826dc149d:   mov    $0x0,%ecx
   0.07%      0x00007f3826dc14a2:   jmp    0x00007f3826dc14e6           ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - java.util.HashMap::computeIfAbsent@114 (line 1213)
                                                                        ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x00007f37ac03c5b8::accept@17
                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                        ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
              0x00007f3826dc14a7:   data16 data16 nopw 0x0(%rax,%rax,1)
              0x00007f3826dc14b2:   data16 data16 xchg %ax,%ax
              0x00007f3826dc14b6:   data16 nopw 0x0(%rax,%rax,1)        ;*getfield hash {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - java.util.HashMap::computeIfAbsent@116 (line 1213)
                                                                        ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x00007f37ac03c5b8::accept@17
                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                        ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.00%      0x00007f3826dc14c0:   mov    0x18(%r13),%esi              ;*getfield next {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - java.util.HashMap::computeIfAbsent@160 (line 1219)
                                                                        ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x00007f37ac03c5b8::accept@17
                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                        ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
....................................................................................................
  80.03%  <total for region 1>

....[Hottest Region 2]..............................................................................
jvmci, level 4, java.util.HashMap$KeySpliterator::forEachRemaining, version 4, compile id 1252 

                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                        ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
              0x00007f3826dc14e0:   mov    %rsi,%r13
              0x00007f3826dc14e3:   mov    %r11d,%ecx                   ; ImmutableOopMap {rax=Oop rbx=NarrowOop rbp=Oop r13=Oop [16]=Oop [28]=NarrowOop [32]=Oop [40]=Oop [48]=Oop [56]=NarrowOop [60]=NarrowOop [64]=Oop [72]=Oop [80]=NarrowOop [84]=NarrowOop [88]=Oop [96]=Oop [104]=Oop [116]=NarrowOop [120]=Oop }
                                                                        ;*aload {reexecute=1 rethrow=0 return_oop=0}
                                                                        ; - (reexecute) java.util.HashMap::computeIfAbsent@114 (line 1213)
                                                                        ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x00007f37ac03c5b8::accept@17
                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                        ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.02%      0x00007f3826dc14e6:   mov    0xc(%r13),%r9d               ; implicit exception: dispatches to 0x00007f3826dc55de
   0.69%      0x00007f3826dc14ea:   mov    0x10(%r13),%r11d             ;*getfield key {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - java.util.HashMap::computeIfAbsent@125 (line 1213)
                                                                        ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x00007f37ac03c5b8::accept@17
                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                        ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.05%      0x00007f3826dc14ee:   mov    0x14(%r13),%esi              ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - java.util.HashMap::computeIfAbsent@176 (line 1222)
                                                                        ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x00007f37ac03c5b8::accept@17
                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                        ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.21%      0x00007f3826dc14f2:   cmp    %r10d,%r9d
          ╭   0x00007f3826dc14f5:   je     0x00007f3826dc1532
          │   0x00007f3826dc14fb:   jmp    0x00007f3826dc14c0           ;*if_icmpne {reexecute=0 rethrow=0 return_oop=0}
          │                                                             ; - java.util.HashMap::computeIfAbsent@120 (line 1213)
          │                                                             ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
          │                                                             ; - java.util.stream.Collectors$$Lambda/0x00007f37ac03c5b8::accept@17
          │                                                             ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
          │                                                             ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.80%  │   0x00007f3826dc14fd:   mov    0xd0(%rsp),%r8d
   1.02%  │   0x00007f3826dc1505:   mov    0x458(%r15),%rsi             ; ImmutableOopMap {rbp=Oop r11=Oop [96]=Oop [104]=Oop [116]=NarrowOop [120]=Oop }
          │                                                             ;*aload {reexecute=1 rethrow=0 return_oop=0}
          │                                                             ; - (reexecute) java.util.HashMap$KeySpliterator::forEachRemaining@157 (line 1718)
   0.18%  │   0x00007f3826dc150c:   test   %eax,(%rsi)                  ;   {poll}
   1.07%  │   0x00007f3826dc150e:   vpxor  %xmm0,%xmm0,%xmm0
   0.13%  │   0x00007f3826dc1512:   mov    0x68(%rsp),%rcx
   0.03%  │   0x00007f3826dc1517:   mov    0xcc(%rsp),%ebx
   0.04%  │   0x00007f3826dc151e:   mov    0x78(%rsp),%rdx
   0.45%  │   0x00007f3826dc1523:   movabs $0x7f37ac03c5b8,%rdi         ;   {metadata(&apos;java/util/stream/Collectors$$Lambda+0x00007f37ac03c5b8&apos;)}
   0.13%  │   0x00007f3826dc152d:   jmp    0x00007f3826dc1230           ;*aload {reexecute=0 rethrow=0 return_oop=0}
          │                                                             ; - java.util.HashMap$KeySpliterator::forEachRemaining@122 (line 1712)
   0.05%  ↘   0x00007f3826dc1532:   data16 nopw 0x0(%rax,%rax,1)
   0.51%      0x00007f3826dc153c:   data16 data16 xchg %ax,%ax          ; ImmutableOopMap {rax=Oop rbx=NarrowOop rbp=Oop rsi=NarrowOop r11=NarrowOop r13=Oop [16]=Oop [32]=Oop [40]=Oop [48]=Oop [64]=Oop [72]=Oop [84]=NarrowOop [88]=Oop [96]=Oop [104]=Oop [116]=NarrowOop [120]=Oop }
                                                                        ;*aload {reexecute=1 rethrow=0 return_oop=0}
                                                                        ; - (reexecute) java.util.HashMap::computeIfAbsent@114 (line 1213)
                                                                        ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x00007f37ac03c5b8::accept@17
                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                        ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.02%      0x00007f3826dc1540:   cmpl   $0x25c88,0x8(,%r11,8)        ; implicit exception: dispatches to 0x00007f3826dc5601
                                                                        ;   {metadata(&apos;java/lang/Integer&apos;)}
   2.21%      0x00007f3826dc154c:   jne    0x00007f3826dc4f13           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - java.lang.Integer::equals@4 (line 1224)
                                                                        ; - java.util.HashMap::computeIfAbsent@142 (line 1214)
                                                                        ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x00007f37ac03c5b8::accept@17
                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                        ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.62%      0x00007f3826dc1552:   mov    0xc(,%r11,8),%r9d            ;* unwind (locked if synchronized)
                                                                        ; - java.lang.Integer::intValue@-3
                                                                        ; - java.lang.Integer::equals@15 (line 1225)
                                                                        ; - java.util.HashMap::computeIfAbsent@142 (line 1214)
                                                                        ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x00007f37ac03c5b8::accept@17
                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                        ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.11%      0x00007f3826dc155a:   nopw   0x0(%rax,%rax,1)
   0.07%      0x00007f3826dc1560:   cmp    $0x100,%r14d
           ╭  0x00007f3826dc1567:   jb     0x00007f3826dc1657
   0.03%   │  0x00007f3826dc156d:   mov    %ecx,0x98(%rsp)
   0.64%   │  0x00007f3826dc1574:   mov    0x1b8(%r15),%r14
   0.03%   │  0x00007f3826dc157b:   lea    0x10(%r14),%rcx
   0.09%   │  0x00007f3826dc157f:   nop
   0.03%   │  0x00007f3826dc1580:   cmp    0x1c8(%r15),%rcx
           │  0x00007f3826dc1587:   ja     0x00007f3826dc1a68
   0.60%   │  0x00007f3826dc158d:   mov    %rcx,0x1b8(%r15)
   0.03%   │  0x00007f3826dc1594:   prefetchw 0xd0(%r14)
   0.09%   │  0x00007f3826dc159c:   movq   $0x1,(%r14)
   0.03%   │  0x00007f3826dc15a3:   movl   $0x25c88,0x8(%r14)           ;   {metadata(&apos;java/lang/Integer&apos;)}
   0.52%   │  0x00007f3826dc15ab:   mov    %edi,0xc(%r14)
   0.04%   │  0x00007f3826dc15af:   mov    %r14,%rcx                    ;* unwind (locked if synchronized)
           │                                                            ; - java.lang.Integer::valueOf@-3
           │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics$$Lambda/0x00007f37ac02bd28::apply@7
           │                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@3 (line 1105)
           │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f37ac03c5b8::accept@17
           │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
           │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.10%   │  0x00007f3826dc15b2:   shl    $0x3,%r11                    ;*getfield key {reexecute=0 rethrow=0 return_oop=0}
           │                                                            ; - java.util.HashMap::computeIfAbsent@125 (line 1213)
           │                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
           │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f37ac03c5b8::accept@17
           │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
           │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.02%   │  0x00007f3826dc15b6:   cmp    %r11,%rcx
           │  0x00007f3826dc15b9:   je     0x00007f3826dc506f           ;*if_acmpeq {reexecute=0 rethrow=0 return_oop=0}
           │                                                            ; - java.util.HashMap::computeIfAbsent@132 (line 1213)
           │                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
           │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f37ac03c5b8::accept@17
           │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
           │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.58%   │  0x00007f3826dc15bf:   nop
   0.03%   │  0x00007f3826dc15c0:   cmp    0xc(%rcx),%r9d
           │  0x00007f3826dc15c4:   jne    0x00007f3826dc51d1           ;*aload {reexecute=1 rethrow=0 return_oop=0}
           │                                                            ; - (reexecute) java.util.HashMap::computeIfAbsent@148 (line 1215)
           │                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
           │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f37ac03c5b8::accept@17
           │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
           │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.35%   │  0x00007f3826dc15ca:   test   %eax,0x0(,%rsi,8)            ; implicit exception: deoptimizes
           │                                                            ; ImmutableOopMap {rax=Oop rcx=Oop rbx=NarrowOop rbp=Oop rsi=NarrowOop r13=Oop [16]=Oop [32]=Oop [40]=Oop [48]=Oop [64]=Oop [72]=Oop [84]=NarrowOop [88]=Oop [96]=Oop [104]=Oop [116]=NarrowOop [120]=Oop }
   0.80%   │  0x00007f3826dc15d1:   cmp    %rdx,%r8
           │  0x00007f3826dc15d4:   jne    0x00007f3826dc23c5           ;*invokeinterface accept {reexecute=0 rethrow=0 return_oop=0}
           │                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@37 (line 1107)
           │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f37ac03c5b8::accept@17
           │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
           │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.02%   │  0x00007f3826dc15da:   nopw   0x0(%rax,%rax,1)
   0.10%   │  0x00007f3826dc15e0:   cmpl   $0x2a80,0x8(,%rsi,8)         ;   {metadata({type array long})}
   0.75%   │  0x00007f3826dc15eb:   jne    0x00007f3826dc4d16           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
           │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f37ac03bcf8::accept@5
           │                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@37 (line 1107)
           │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f37ac03c5b8::accept@17
           │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
           │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.07%   │  0x00007f3826dc15f1:   mov    0xc(,%rbx,8),%r11d           ;*getfield arg$1 {reexecute=0 rethrow=0 return_oop=0}
           │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f37ac03bcf8::accept@1
           │                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@37 (line 1107)
           │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f37ac03c5b8::accept@17
           │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
           │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.11%   │  0x00007f3826dc15f9:   nopl   0x0(%rax)                    ; ImmutableOopMap {rax=Oop rcx=Oop rbp=Oop rsi=NarrowOop r13=Oop [16]=Oop [32]=Oop [40]=Oop [48]=Oop [64]=Oop [72]=Oop [88]=Oop [96]=Oop [104]=Oop [116]=NarrowOop [120]=Oop }
           │                                                            ;*aload {reexecute=1 rethrow=0 return_oop=0}
           │                                                            ; - (reexecute) java.util.HashMap::computeIfAbsent@148 (line 1215)
           │                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@25 (line 1106)
           │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f37ac03c5b8::accept@17
           │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
           │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.03%   │  0x00007f3826dc1600:   cmpl   $0x103b8c8,0x8(,%r11,8)      ; implicit exception: dispatches to 0x00007f3826dc5624
           │                                                            ;   {metadata(&apos;java/util/stream/Collectors$$Lambda+0x00007f37ac03b8c8&apos;)}
   0.63%   │  0x00007f3826dc160c:   jne    0x00007f3826dc4e50           ;*invokeinterface applyAsLong {reexecute=0 rethrow=0 return_oop=0}
           │                                                            ; - java.util.stream.Collectors::lambda$summingLong$23@6 (line 662)
           │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f37ac03bcf8::accept@9
           │                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@37 (line 1107)
           │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f37ac03c5b8::accept@17
           │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
           │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.06%   │  0x00007f3826dc1612:   cmpl   $0x0,0xc(,%rsi,8)
   0.58%   │  0x00007f3826dc161a:   je     0x00007f3826dc4df8
   0.06%   │  0x00007f3826dc1620:   mov    0x58(%rsp),%r11
   0.13%   │  0x00007f3826dc1625:   incq   0x10(,%rsi,8)                ;*lastore {reexecute=0 rethrow=0 return_oop=0}
           │                                                            ; - java.util.stream.Collectors::lambda$summingLong$23@12 (line 662)
           │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f37ac03bcf8::accept@9
           │                                                            ; - java.util.stream.Collectors::lambda$groupingBy$53@37 (line 1107)
           │                                                            ; - java.util.stream.Collectors$$Lambda/0x00007f37ac03c5b8::accept@17
           │                                                            ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
           │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
   0.65%   │  0x00007f3826dc162d:   mov    0x18(%r11),%esi
   0.40%   │  0x00007f3826dc1631:   shl    $0x3,%rsi                    ;*getfield next {reexecute=0 rethrow=0 return_oop=0}
           │                                                            ; - java.util.HashMap$KeySpliterator::forEachRemaining@152 (line 1716)
   0.06%   │  0x00007f3826dc1635:   mov    %rsi,%r11
   0.51%   │  0x00007f3826dc1638:   mov    0xac(%rsp),%r10d
   0.08%   │  0x00007f3826dc1640:   mov    0xb0(%rsp),%rdi
   0.08%   │  0x00007f3826dc1648:   movabs $0x7f37ac0689a8,%r14         ;   {metadata(&apos;java/util/stream/Collectors$$Lambda+0x00007f37ac0689a8&apos;)}
   0.05%   │  0x00007f3826dc1652:   jmp    0x00007f3826dc1268
           ↘  0x00007f3826dc1657:   mov    %ecx,0x98(%rsp)
              0x00007f3826dc165e:   mov    0x10(%rbp,%r14,4),%ecx
              0x00007f3826dc1663:   shl    $0x3,%rcx
              0x00007f3826dc1667:   jmp    0x00007f3826dc15b2           ;* unwind (locked if synchronized)
                                                                        ; - java.lang.Integer::valueOf@-3
                                                                        ; - com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics$$Lambda/0x00007f37ac02bd28::apply@7
                                                                        ; - java.util.stream.Collectors::lambda$groupingBy$53@3 (line 1105)
                                                                        ; - java.util.stream.Collectors$$Lambda/0x00007f37ac03c5b8::accept@17
                                                                        ; - java.util.stream.ReduceOps$3ReducingSink::accept@9 (line 169)
                                                                        ; - java.util.HashMap$KeySpliterator::forEachRemaining@145 (line 1715)
....................................................................................................
  16.82%  <total for region 2>

....[Hottest Regions]...............................................................................
  80.03%      jvmci, level 4  java.util.HashMap$KeySpliterator::forEachRemaining, version 4, compile id 1252 
  16.82%      jvmci, level 4  java.util.HashMap$KeySpliterator::forEachRemaining, version 4, compile id 1252 
   0.59%              kernel  [unknown] 
   0.22%              kernel  [unknown] 
   0.09%              kernel  [unknown] 
   0.09%              kernel  [unknown] 
   0.07%              kernel  [unknown] 
   0.05%              kernel  [unknown] 
   0.05%              kernel  [unknown] 
   0.05%              kernel  [unknown] 
   0.04%      jvmci, level 4  java.lang.Long::hashCode, version 2, compile id 1308 
   0.04%              kernel  [unknown] 
   0.04%              kernel  [unknown] 
   0.03%          ld-2.31.so  __tls_get_addr 
   0.03%      jvmci, level 4  com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::lambda$yearsWithTheMostPublications$3, version 3, compile id 1324 
   0.03%              kernel  [unknown] 
   0.02%              kernel  [unknown] 
   0.02%              kernel  [unknown] 
   0.02%              kernel  [unknown] 
   0.02%      jvmci, level 4  java.util.HashMap$KeySpliterator::forEachRemaining, version 4, compile id 1252 
   1.66%  <...other 469 warm regions...>
....................................................................................................
 100.00%  <totals>

....[Hottest Methods (after inlining)]..............................................................
  96.95%      jvmci, level 4  java.util.HashMap$KeySpliterator::forEachRemaining, version 4, compile id 1252 
   2.09%              kernel  [unknown] 
   0.11%                      <unknown> 
   0.09%      jvmci, level 4  java.util.HashMap$EntrySpliterator::forEachRemaining, version 8, compile id 1359 
   0.06%      jvmci, level 4  java.util.HashMap::computeIfAbsent, version 3, compile id 1204 
   0.05%      jvmci, level 4  com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::lambda$yearsWithTheMostPublications$3, version 3, compile id 1324 
   0.04%      jvmci, level 4  java.util.ArrayList::add, version 2, compile id 1360 
   0.04%      jvmci, level 4  java.lang.Long::hashCode, version 2, compile id 1308 
   0.04%      jvmci, level 4  java.util.HashMap::putIfAbsent, version 2, compile id 1318 
   0.03%          ld-2.31.so  __tls_get_addr 
   0.02%      jvmci, level 4  java.util.stream.Collectors$$Lambda.0x00007f37ac068790::get, version 2, compile id 1144 
   0.02%    perf-2148273.map  [unknown] 
   0.02%      jvmci, level 4  java.util.HashMap::resize, version 2, compile id 1309 
   0.01%        libc-2.31.so  _IO_fwrite 
   0.01%      jvmci, level 4  com.ionutbalosin.jvm.performance.benchmarks.miscellaneous.publicationstatistics.PublicationStatistics::numberOfPublicationsPerYear, version 2, compile id 1429 
   0.01%        libc-2.31.so  clock_gettime@GLIBC_2.2.5 
   0.01%           libjvm.so  StatSamplerTask::task 
   0.01%              [vdso]  __vdso_clock_gettime 
   0.01%        libc-2.31.so  __vfprintf_internal 
   0.01%         interpreter  return entry points  
   0.36%  <...other 124 warm methods...>
....................................................................................................
 100.00%  <totals>

....[Distribution by Source]........................................................................
  97.38%      jvmci, level 4
   2.09%              kernel
   0.21%           libjvm.so
   0.11%                    
   0.09%        libc-2.31.so
   0.03%  libpthread-2.31.so
   0.03%          ld-2.31.so
   0.03%         interpreter
   0.02%    perf-2148273.map
   0.01%              [vdso]
   0.01%      hsdis-amd64.so
   0.00%         c1, level 1
   0.00%         c1, level 3
....................................................................................................
 100.00%  <totals>



# Run complete. Total time: 00:27:28

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                                                                       Mode  Cnt     Score     Error  Units
PublicationStatisticsBenchmark.author_with_the_most_publications                avgt    5    40.034 ±   0.493  ms/op
PublicationStatisticsBenchmark.author_with_the_most_publications:asm            avgt            NaN              ---
PublicationStatisticsBenchmark.authors_with_no_duplicate_collaborations         avgt    5    62.015 ±   1.878  ms/op
PublicationStatisticsBenchmark.authors_with_no_duplicate_collaborations:asm     avgt            NaN              ---
PublicationStatisticsBenchmark.first_publication_year                           avgt    5     5.070 ±   0.629  ms/op
PublicationStatisticsBenchmark.first_publication_year:asm                       avgt            NaN              ---
PublicationStatisticsBenchmark.last_publication_year                            avgt    5     4.141 ±   4.938  ms/op
PublicationStatisticsBenchmark.last_publication_year:asm                        avgt            NaN              ---
PublicationStatisticsBenchmark.most_prolific_pair_of_authors                    avgt    5  5426.606 ± 509.047  ms/op
PublicationStatisticsBenchmark.most_prolific_pair_of_authors:asm                avgt            NaN              ---
PublicationStatisticsBenchmark.most_prolific_pair_of_authors_per_year           avgt    5   761.010 ±   8.417  ms/op
PublicationStatisticsBenchmark.most_prolific_pair_of_authors_per_year:asm       avgt            NaN              ---
PublicationStatisticsBenchmark.number_of_publications_per_author                avgt    5    39.100 ±   0.532  ms/op
PublicationStatisticsBenchmark.number_of_publications_per_author:asm            avgt            NaN              ---
PublicationStatisticsBenchmark.number_of_publications_per_year                  avgt    5     5.015 ±   0.083  ms/op
PublicationStatisticsBenchmark.number_of_publications_per_year:asm              avgt            NaN              ---
PublicationStatisticsBenchmark.publication_with_the_most_authors                avgt    5    10.992 ±   0.921  ms/op
PublicationStatisticsBenchmark.publication_with_the_most_authors:asm            avgt            NaN              ---
PublicationStatisticsBenchmark.publications_per_author                          avgt    5    76.332 ±   1.644  ms/op
PublicationStatisticsBenchmark.publications_per_author:asm                      avgt            NaN              ---
PublicationStatisticsBenchmark.publications_with_the_most_authors_per_year      avgt    5     8.267 ±   0.352  ms/op
PublicationStatisticsBenchmark.publications_with_the_most_authors_per_year:asm  avgt            NaN              ---
PublicationStatisticsBenchmark.publications_years_statistics                    avgt    5     3.638 ±   0.094  ms/op
PublicationStatisticsBenchmark.publications_years_statistics:asm                avgt            NaN              ---
PublicationStatisticsBenchmark.year_with_the_most_publications                  avgt    5     4.516 ±   0.054  ms/op
PublicationStatisticsBenchmark.year_with_the_most_publications:asm              avgt            NaN              ---
PublicationStatisticsBenchmark.years_with_the_most_publications                 avgt    5     5.260 ±   0.190  ms/op
PublicationStatisticsBenchmark.years_with_the_most_publications:asm             avgt            NaN              ---

# JMH version: 1.37
# VM version: JDK 21, OpenJDK 64-Bit Server VM, 21+35-2513
# VM invoker: /home/gogu/bench_jdks/jdk-21/bin/java
# VM options: -Xms4g -Xmx4g -XX:+AlwaysPreTouch --add-modules=jdk.incubator.vector
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark.sortVector
# Parameters: (arraySize = 64, vectorSize = 64)

# Run progress: 0.00% complete, ETA 00:20:00
# Fork: 1 of 1
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 23.220 us/op
# Warmup Iteration   2: 17.049 us/op
# Warmup Iteration   3: 16.965 us/op
# Warmup Iteration   4: 16.936 us/op
# Warmup Iteration   5: 16.950 us/op
Iteration   1: 16.957 us/op
Iteration   2: 16.957 us/op
Iteration   3: 16.963 us/op
Iteration   4: 16.939 us/op
Iteration   5: 16.945 us/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark.sortVector":
  16.952 ±(99.9%) 0.038 us/op [Average]
  (min, avg, max) = (16.939, 16.952, 16.963), stdev = 0.010
  CI (99.9%): [16.914, 16.990] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark.sortVector:asm":
PrintAssembly processed: 189164 total address lines.
Perf output processed (skipped 56.860 seconds):
 Column 1: cycles (51322 events)

Hottest code regions (>10.00% "cycles" events):
 Event counts are percents of total event count.

....[Hottest Region 1]..............................................................................
c2, level 4, com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector, version 2, compile id 935 

                     0x00007f7a4066548c:   nopl   0x50005fc(%rax,%rax,1)       ;   {other}
                     0x00007f7a40665494:   mov    0x8(%rax),%r10d              ; implicit exception: dispatches to 0x00007f7a40666788
                     0x00007f7a40665498:   nopl   0x0(%rax,%rax,1)
                     0x00007f7a406654a0:   cmp    $0x103c620,%r10d             ;   {metadata(&apos;jdk/incubator/vector/Int64Vector&apos;)}
                     0x00007f7a406654a7:   jne    0x00007f7a40665ff8
                     0x00007f7a406654ad:   mov    0x18(%rsp),%rbx              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                               ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
                     0x00007f7a406654b2:   mov    0x18(%rbx),%r10d             ;*getfield input {reexecute=0 rethrow=0 return_oop=0}
                                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@42 (line 77)
   0.01%             0x00007f7a406654b6:   data16 nopw 0x0(%rax,%rax,1)
                     0x00007f7a406654c0:   mov    0xc(%r12,%r10,8),%r11d       ; implicit exception: dispatches to 0x00007f7a4066679c
   0.02%             0x00007f7a406654c5:   test   %r11d,%r11d                  ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                               ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
          ╭          0x00007f7a406654c8:   jbe    0x00007f7a40665d25
   0.01%  │          0x00007f7a406654ce:   mov    %rax,%r11
          │          0x00007f7a406654d1:   xor    %r8d,%r8d
          │╭         0x00007f7a406654d4:   jmp    0x00007f7a40665ba3
          ││         0x00007f7a406654d9:   nopl   0x0(%rax)
   0.00%  ││     ↗   0x00007f7a406654e0:   mov    %r9d,%r11d                   ;*invokevirtual lane {reexecute=0 rethrow=0 return_oop=0}
          ││     │                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@79 (line 80)
   0.00%  ││     │↗  0x00007f7a406654e3:   vmovq  %xmm0,0x78(%rsp)
   0.06%  ││     ││  0x00007f7a406654e9:   mov    %r10d,0x70(%rsp)
   0.07%  ││     ││  0x00007f7a406654ee:   mov    %ebx,0x2c(%rsp)
   0.01%  ││     ││  0x00007f7a406654f2:   mov    %r9d,0x28(%rsp)
   0.00%  ││     ││  0x00007f7a406654f7:   mov    %rax,0x18(%rsp)
   0.06%  ││     ││  0x00007f7a406654fc:   mov    0x60(%rsp),%r10
   0.08%  ││     ││  0x00007f7a40665501:   mov    0x2c(%r10),%r9d              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.03%  ││     ││  0x00007f7a40665505:   mov    0xc(%r10),%ecx               ;*getfield laneCount {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@8 (line 3847)
          ││     ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3857)
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 611)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@87 (line 81)
   0.01%  ││     ││  0x00007f7a40665509:   movslq %r11d,%r8                    ;*i2l {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::toBits@1 (line 500)
          ││     ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@2 (line 3857)
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 611)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@87 (line 81)
   0.05%  ││     ││  0x00007f7a4066550c:   mov    %r9,%rsi
   0.05%  ││     ││  0x00007f7a4066550f:   shl    $0x3,%rsi
   0.02%  ││     ││  0x00007f7a40665513:   movabs $0x7ffe7f600,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffe7f600} = int)}
   0.01%  ││     ││  0x00007f7a4066551d:   xor    %r9d,%r9d
   0.07%  ││     ││  0x00007f7a40665520:   mov    %r10,%rdi
   0.06%  ││     ││  0x00007f7a40665523:   movabs $0x7ff18df30,%r10            ;   {oop(a &apos;jdk/incubator/vector/IntVector$IntSpecies$$Lambda+0x00007f79c40c6c60&apos;{0x00000007ff18df30})}
   0.01%  ││     ││  0x00007f7a4066552d:   mov    %r10,(%rsp)                  ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.00%  ││     ││  0x00007f7a40665531:   xchg   %ax,%ax
   0.05%  ││     ││  0x00007f7a40665533:   call   0x00007f7a4064b260           ; ImmutableOopMap {[24]=Oop [32]=Oop [56]=Oop [64]=Oop [80]=Oop [88]=Oop [96]=Oop }
          ││     ││                                                            ;*invokestatic fromBitsCoerced {reexecute=0 rethrow=0 return_oop=1}
          ││     ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@19 (line 3848)
          ││     ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3857)
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 611)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@87 (line 81)
          ││     ││                                                            ;   {static_call}
   0.01%  ││     ││  0x00007f7a40665538:   nopl   0x60006a8(%rax,%rax,1)       ;   {other}
   0.01%  ││     ││  0x00007f7a40665540:   mov    0x8(%rax),%r11d              ; implicit exception: dispatches to 0x00007f7a406663b4
   0.17%  ││     ││  0x00007f7a40665544:   cmp    $0x103c620,%r11d             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
          ││     ││                                                            ;   {metadata(&apos;jdk/incubator/vector/Int64Vector&apos;)}
          ││     ││  0x00007f7a4066554b:   jne    0x00007f7a40666064           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@22 (line 3848)
          ││     ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3857)
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 611)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@87 (line 81)
   0.01%  ││     ││  0x00007f7a40665551:   mov    %rax,0x80(%rsp)
   0.86%  ││     ││  0x00007f7a40665559:   mov    $0x3,%esi
   0.01%  ││     ││  0x00007f7a4066555e:   movabs $0x7ff15d890,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ff15d890} = &apos;jdk/incubator/vector/Int64Vector&apos;)}
   0.00%  ││     ││  0x00007f7a40665568:   movabs $0x7ff15da10,%rcx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ff15da10} = &apos;jdk/incubator/vector/Int64Vector$Int64Mask&apos;)}
   0.01%  ││     ││  0x00007f7a40665572:   movabs $0x7ffe7f600,%r8             ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffe7f600} = int)}
   0.13%  ││     ││  0x00007f7a4066557c:   mov    $0x2,%r9d
   0.02%  ││     ││  0x00007f7a40665582:   mov    0x18(%rsp),%rdi
   0.00%  ││     ││  0x00007f7a40665587:   mov    %rax,(%rsp)
   0.00%  ││     ││  0x00007f7a4066558b:   xor    %r10d,%r10d
   0.17%  ││     ││  0x00007f7a4066558e:   mov    %r10,0x8(%rsp)
   0.01%  ││     ││  0x00007f7a40665593:   movabs $0x7ff1f64c0,%r10            ;   {oop(a &apos;jdk/incubator/vector/IntVector$$Lambda+0x00007f79c40caf28&apos;{0x00000007ff1f64c0})}
          ││     ││  0x00007f7a4066559d:   mov    %r10,0x10(%rsp)              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.00%  ││     ││  0x00007f7a406655a2:   nop
   0.12%  ││     ││  0x00007f7a406655a3:   call   0x00007f7a4064ce60           ; ImmutableOopMap {[24]=Oop [32]=Oop [56]=Oop [64]=Oop [80]=Oop [88]=Oop [96]=Oop [128]=Oop }
          ││     ││                                                            ;*invokestatic compare {reexecute=0 rethrow=0 return_oop=1}
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::compareTemplate@42 (line 2029)
          ││     ││                                                            ; - jdk.incubator.vector.Int64Vector::compare@5 (line 384)
          ││     ││                                                            ; - jdk.incubator.vector.Int64Vector::compare@3 (line 41)
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::lt@5 (line 1933)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@96 (line 82)
          ││     ││                                                            ;   {static_call}
   0.02%  ││     ││  0x00007f7a406655a8:   nopl   0x7000718(%rax,%rax,1)       ;   {other}
   0.03%  ││     ││  0x00007f7a406655b0:   mov    0x8(%rax),%r11d              ; implicit exception: dispatches to 0x00007f7a406663ec
   0.06%  ││     ││  0x00007f7a406655b4:   nopl   0x0(%rax,%rax,1)
   0.02%  ││     ││  0x00007f7a406655bc:   data16 data16 xchg %ax,%ax
   0.02%  ││     ││  0x00007f7a406655c0:   cmp    $0x103d288,%r11d             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
          ││     ││                                                            ;   {metadata(&apos;jdk/incubator/vector/Int64Vector$Int64Mask&apos;)}
          ││     ││  0x00007f7a406655c7:   jne    0x00007f7a406660a8
   0.03%  ││     ││  0x00007f7a406655cd:   mov    %rax,%r9                     ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::compareTemplate@45 (line 2029)
          ││     ││                                                            ; - jdk.incubator.vector.Int64Vector::compare@5 (line 384)
          ││     ││                                                            ; - jdk.incubator.vector.Int64Vector::compare@3 (line 41)
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::lt@5 (line 1933)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@96 (line 82)
   0.08%  ││     ││  0x00007f7a406655d0:   mov    $0x14,%esi
   0.01%  ││     ││  0x00007f7a406655d5:   movabs $0x7ff15da10,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ff15da10} = &apos;jdk/incubator/vector/Int64Vector$Int64Mask&apos;)}
   0.01%  ││     ││  0x00007f7a406655df:   movabs $0x7ffe7f600,%rcx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffe7f600} = int)}
   0.03%  ││     ││  0x00007f7a406655e9:   mov    $0x2,%r8d
   0.07%  ││     ││  0x00007f7a406655ef:   movabs $0x7fee02c38,%rdi            ;   {oop(a &apos;jdk/incubator/vector/Int64Vector$Int64Mask$$Lambda+0x00007f79c40cb748&apos;{0x00000007fee02c38})}
   0.03%  ││     ││  0x00007f7a406655f9:   xchg   %ax,%ax
   0.01%  ││     ││  0x00007f7a406655fb:   call   0x00007f7a406525c0           ; ImmutableOopMap {[24]=Oop [32]=Oop [56]=Oop [64]=Oop [80]=Oop [88]=Oop [96]=Oop [128]=Oop }
          ││     ││                                                            ;*invokestatic maskReductionCoerced {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                            ; - jdk.incubator.vector.Int64Vector$Int64Mask::trueCount@16 (line 715)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@99 (line 82)
          ││     ││                                                            ;   {static_call}
   0.08%  ││     ││  0x00007f7a40665600:   nopl   0x8000770(%rax,%rax,1)       ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
          ││     ││                                                            ;   {other}
   0.10%  ││     ││  0x00007f7a40665608:   mov    %eax,%ebp                    ;*l2i {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                            ; - jdk.incubator.vector.Int64Vector$Int64Mask::trueCount@19 (line 715)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@99 (line 82)
          ││     ││  0x00007f7a4066560a:   xor    %esi,%esi
   0.00%  ││     ││  0x00007f7a4066560c:   movabs $0x7ff15d890,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ff15d890} = &apos;jdk/incubator/vector/Int64Vector&apos;)}
   0.04%  ││     ││  0x00007f7a40665616:   movabs $0x7ff15da10,%rcx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ff15da10} = &apos;jdk/incubator/vector/Int64Vector$Int64Mask&apos;)}
   0.14%  ││     ││  0x00007f7a40665620:   movabs $0x7ffe7f600,%r8             ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffe7f600} = int)}
   0.00%  ││     ││  0x00007f7a4066562a:   mov    $0x2,%r9d
   0.01%  ││     ││  0x00007f7a40665630:   mov    0x18(%rsp),%rdi
   0.79%  ││     ││  0x00007f7a40665635:   mov    0x80(%rsp),%r10
          ││     ││  0x00007f7a4066563d:   mov    %r10,(%rsp)
   0.30%  ││     ││  0x00007f7a40665641:   xor    %r10d,%r10d
   0.01%  ││     ││  0x00007f7a40665644:   mov    %r10,0x8(%rsp)
   0.05%  ││     ││  0x00007f7a40665649:   movabs $0x7ff1f64c0,%r10            ;   {oop(a &apos;jdk/incubator/vector/IntVector$$Lambda+0x00007f79c40caf28&apos;{0x00000007ff1f64c0})}
          ││     ││  0x00007f7a40665653:   mov    %r10,0x10(%rsp)              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.35%  ││     ││  0x00007f7a40665658:   data16 xchg %ax,%ax
   0.00%  ││     ││  0x00007f7a4066565b:   call   0x00007f7a4064ce60           ; ImmutableOopMap {[24]=Oop [32]=Oop [56]=Oop [64]=Oop [80]=Oop [88]=Oop [96]=Oop [128]=Oop }
          ││     ││                                                            ;*invokestatic compare {reexecute=0 rethrow=0 return_oop=1}
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::compareTemplate@42 (line 2029)
          ││     ││                                                            ; - jdk.incubator.vector.Int64Vector::compare@5 (line 384)
          ││     ││                                                            ; - jdk.incubator.vector.Int64Vector::compare@3 (line 41)
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::eq@5 (line 1905)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@108 (line 83)
          ││     ││                                                            ;   {static_call}
   0.06%  ││     ││  0x00007f7a40665660:   nopl   0x90007d0(%rax,%rax,1)       ;   {other}
   0.01%  ││     ││  0x00007f7a40665668:   mov    0x8(%rax),%r11d              ; implicit exception: dispatches to 0x00007f7a4066642c
   0.06%  ││     ││  0x00007f7a4066566c:   cmp    $0x103d288,%r11d             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
          ││     ││                                                            ;   {metadata(&apos;jdk/incubator/vector/Int64Vector$Int64Mask&apos;)}
          ││     ││  0x00007f7a40665673:   jne    0x00007f7a406660f8
   0.00%  ││     ││  0x00007f7a40665679:   mov    %rax,%r9                     ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::compareTemplate@45 (line 2029)
          ││     ││                                                            ; - jdk.incubator.vector.Int64Vector::compare@5 (line 384)
          ││     ││                                                            ; - jdk.incubator.vector.Int64Vector::compare@3 (line 41)
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::eq@5 (line 1905)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@108 (line 83)
   0.07%  ││     ││  0x00007f7a4066567c:   mov    $0x14,%esi
   0.03%  ││     ││  0x00007f7a40665681:   movabs $0x7ff15da10,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ff15da10} = &apos;jdk/incubator/vector/Int64Vector$Int64Mask&apos;)}
   0.04%  ││     ││  0x00007f7a4066568b:   movabs $0x7ffe7f600,%rcx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffe7f600} = int)}
   0.01%  ││     ││  0x00007f7a40665695:   mov    $0x2,%r8d
   0.06%  ││     ││  0x00007f7a4066569b:   movabs $0x7fee02c38,%rdi            ;   {oop(a &apos;jdk/incubator/vector/Int64Vector$Int64Mask$$Lambda+0x00007f79c40cb748&apos;{0x00000007fee02c38})}
   0.01%  ││     ││  0x00007f7a406656a5:   xchg   %ax,%ax
   0.03%  ││     ││  0x00007f7a406656a7:   call   0x00007f7a406525c0           ; ImmutableOopMap {[24]=Oop [32]=Oop [56]=Oop [64]=Oop [80]=Oop [88]=Oop [96]=Oop [128]=Oop }
          ││     ││                                                            ;*invokestatic maskReductionCoerced {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                            ; - jdk.incubator.vector.Int64Vector$Int64Mask::trueCount@16 (line 715)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@111 (line 83)
          ││     ││                                                            ;   {static_call}
   0.29%  ││     ││  0x00007f7a406656ac:   nopl   0xa00081c(%rax,%rax,1)       ;   {other}
   0.04%  ││     ││  0x00007f7a406656b4:   mov    0x60(%rsp),%r10
   0.64%  ││     ││  0x00007f7a406656b9:   mov    0x2c(%r10),%r11d             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.58%  ││     ││  0x00007f7a406656bd:   mov    0xc(%r10),%ecx               ;*getfield laneCount {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@8 (line 3847)
          ││     ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@6 (line 3863)
          ││     ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@2 (line 3804)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@124 (line 86)
          ││     ││  0x00007f7a406656c1:   mov    %eax,%r8d
   0.00%  ││     ││  0x00007f7a406656c4:   add    %ebp,%r8d
          ││     ││  0x00007f7a406656c7:   mov    %r11,%rsi
   0.14%  ││     ││  0x00007f7a406656ca:   shl    $0x3,%rsi                    ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
          ││     ││  0x00007f7a406656ce:   movslq %r8d,%r8                     ;*i2l {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@123 (line 84)
          ││     ││  0x00007f7a406656d1:   movabs $0x7ffe7f600,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffe7f600} = int)}
          ││     ││  0x00007f7a406656db:   xor    %r9d,%r9d
   0.14%  ││     ││  0x00007f7a406656de:   mov    %r10,%rdi
          ││     ││  0x00007f7a406656e1:   movabs $0x7ff18df30,%r10            ;   {oop(a &apos;jdk/incubator/vector/IntVector$IntSpecies$$Lambda+0x00007f79c40c6c60&apos;{0x00000007ff18df30})}
   0.00%  ││     ││  0x00007f7a406656eb:   mov    %r10,(%rsp)
   0.00%  ││     ││  0x00007f7a406656ef:   mov    0x58(%rsp),%r10
   0.14%  ││     ││  0x00007f7a406656f4:   mov    %r10,0x30(%rsp)              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.27%  ││     ││  0x00007f7a406656f9:   xchg   %ax,%ax
          ││     ││  0x00007f7a406656fb:   call   0x00007f7a4064b260           ; ImmutableOopMap {[24]=Oop [32]=Oop [48]=Oop [56]=Oop [64]=Oop [80]=Oop [88]=Oop [96]=Oop [128]=Oop }
          ││     ││                                                            ;*invokestatic fromBitsCoerced {reexecute=0 rethrow=0 return_oop=1}
          ││     ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@19 (line 3848)
          ││     ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@6 (line 3863)
          ││     ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@2 (line 3804)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@124 (line 86)
          ││     ││                                                            ;   {static_call}
   0.03%  ││     ││  0x00007f7a40665700:   nopl   0xb000870(%rax,%rax,1)       ;   {other}
   0.00%  ││     ││  0x00007f7a40665708:   mov    0x8(%rax),%r10d              ; implicit exception: dispatches to 0x00007f7a40666468
   0.09%  ││     ││  0x00007f7a4066570c:   cmp    $0x103c620,%r10d             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
          ││     ││                                                            ;   {metadata(&apos;jdk/incubator/vector/Int64Vector&apos;)}
          ││     ││  0x00007f7a40665713:   jne    0x00007f7a40666144           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@22 (line 3848)
          ││     ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@6 (line 3863)
          ││     ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@2 (line 3804)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@124 (line 86)
   0.07%  ││     ││  0x00007f7a40665719:   mov    $0x3,%esi
   0.03%  ││     ││  0x00007f7a4066571e:   movabs $0x7ff15d890,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ff15d890} = &apos;jdk/incubator/vector/Int64Vector&apos;)}
   0.00%  ││     ││  0x00007f7a40665728:   movabs $0x7ff15da10,%rcx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ff15da10} = &apos;jdk/incubator/vector/Int64Vector$Int64Mask&apos;)}
   0.07%  ││     ││  0x00007f7a40665732:   movabs $0x7ffe7f600,%r8             ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffe7f600} = int)}
   0.08%  ││     ││  0x00007f7a4066573c:   mov    $0x2,%r9d
   0.05%  ││     ││  0x00007f7a40665742:   mov    0x30(%rsp),%rdi
   0.47%  ││     ││  0x00007f7a40665747:   mov    %rax,(%rsp)
   0.69%  ││     ││  0x00007f7a4066574b:   xor    %r10d,%r10d
          ││     ││  0x00007f7a4066574e:   mov    %r10,0x8(%rsp)
   0.03%  ││     ││  0x00007f7a40665753:   movabs $0x7ff1f64c0,%r10            ;   {oop(a &apos;jdk/incubator/vector/IntVector$$Lambda+0x00007f79c40caf28&apos;{0x00000007ff1f64c0})}
   0.00%  ││     ││  0x00007f7a4066575d:   mov    %r10,0x10(%rsp)              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.13%  ││     ││  0x00007f7a40665762:   nop
          ││     ││  0x00007f7a40665763:   call   0x00007f7a4064ce60           ; ImmutableOopMap {[24]=Oop [32]=Oop [48]=Oop [56]=Oop [64]=Oop [80]=Oop [88]=Oop [96]=Oop [128]=Oop }
          ││     ││                                                            ;*invokestatic compare {reexecute=0 rethrow=0 return_oop=1}
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::compareTemplate@42 (line 2029)
          ││     ││                                                            ; - jdk.incubator.vector.Int64Vector::compare@5 (line 384)
          ││     ││                                                            ; - jdk.incubator.vector.Int64Vector::compare@3 (line 41)
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::lt@5 (line 1933)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@129 (line 86)
          ││     ││                                                            ;   {static_call}
   0.03%  ││     ││  0x00007f7a40665768:   nopl   0xc0008d8(%rax,%rax,1)       ;   {other}
   0.01%  ││     ││  0x00007f7a40665770:   mov    0x8(%rax),%r10d              ; implicit exception: dispatches to 0x00007f7a406664a4
   0.11%  ││     ││  0x00007f7a40665774:   nopl   0x0(%rax,%rax,1)
   0.01%  ││     ││  0x00007f7a4066577c:   data16 data16 xchg %ax,%ax
   0.01%  ││     ││  0x00007f7a40665780:   cmp    $0x103d288,%r10d             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
          ││     ││                                                            ;   {metadata(&apos;jdk/incubator/vector/Int64Vector$Int64Mask&apos;)}
          ││     ││  0x00007f7a40665787:   jne    0x00007f7a40666184           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::compareTemplate@45 (line 2029)
          ││     ││                                                            ; - jdk.incubator.vector.Int64Vector::compare@5 (line 384)
          ││     ││                                                            ; - jdk.incubator.vector.Int64Vector::compare@3 (line 41)
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::lt@5 (line 1933)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@129 (line 86)
   0.02%  ││     ││  0x00007f7a4066578d:   mov    %rax,0x88(%rsp)
   0.10%  ││     ││  0x00007f7a40665795:   mov    0x60(%rsp),%r10              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.01%  ││     ││  0x00007f7a4066579a:   mov    0xc(%r10),%ecx               ;*getfield laneCount {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@8 (line 3847)
          ││     ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@6 (line 3863)
          ││     ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@2 (line 3804)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@137 (line 87)
   0.04%  ││     ││  0x00007f7a4066579e:   mov    0x2c(%r10),%r11d             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.14%  ││     ││  0x00007f7a406657a2:   movslq %ebp,%r8                     ;*i2l {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@136 (line 86)
   0.00%  ││     ││  0x00007f7a406657a5:   mov    %r11,%rsi
   0.01%  ││     ││  0x00007f7a406657a8:   shl    $0x3,%rsi
   0.02%  ││     ││  0x00007f7a406657ac:   movabs $0x7ffe7f600,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffe7f600} = int)}
   0.12%  ││     ││  0x00007f7a406657b6:   xor    %r9d,%r9d
   0.00%  ││     ││  0x00007f7a406657b9:   mov    %r10,%rdi
   0.01%  ││     ││  0x00007f7a406657bc:   movabs $0x7ff18df30,%r10            ;   {oop(a &apos;jdk/incubator/vector/IntVector$IntSpecies$$Lambda+0x00007f79c40c6c60&apos;{0x00000007ff18df30})}
   0.03%  ││     ││  0x00007f7a406657c6:   mov    %r10,(%rsp)                  ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.10%  ││     ││  0x00007f7a406657ca:   nop
   0.01%  ││     ││  0x00007f7a406657cb:   call   0x00007f7a4064b260           ; ImmutableOopMap {[24]=Oop [32]=Oop [48]=Oop [56]=Oop [64]=Oop [80]=Oop [88]=Oop [96]=Oop [128]=Oop [136]=Oop }
          ││     ││                                                            ;*invokestatic fromBitsCoerced {reexecute=0 rethrow=0 return_oop=1}
          ││     ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@19 (line 3848)
          ││     ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@6 (line 3863)
          ││     ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@2 (line 3804)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@137 (line 87)
          ││     ││                                                            ;   {static_call}
   0.02%  ││     ││  0x00007f7a406657d0:   nopl   0xd000940(%rax,%rax,1)       ;   {other}
   0.00%  ││     ││  0x00007f7a406657d8:   nopl   0x0(%rax,%rax,1)
   0.10%  ││     ││  0x00007f7a406657e0:   mov    0x8(%rax),%r11d              ; implicit exception: dispatches to 0x00007f7a406664e0
   0.03%  ││     ││  0x00007f7a406657e4:   cmp    $0x103c620,%r11d             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
          ││     ││                                                            ;   {metadata(&apos;jdk/incubator/vector/Int64Vector&apos;)}
          ││     ││  0x00007f7a406657eb:   jne    0x00007f7a406661d0           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@22 (line 3848)
          ││     ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@6 (line 3863)
          ││     ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@2 (line 3804)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@137 (line 87)
   0.01%  ││     ││  0x00007f7a406657f1:   mov    $0x3,%esi
   0.00%  ││     ││  0x00007f7a406657f6:   movabs $0x7ff15d890,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ff15d890} = &apos;jdk/incubator/vector/Int64Vector&apos;)}
   0.10%  ││     ││  0x00007f7a40665800:   movabs $0x7ff15da10,%rcx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ff15da10} = &apos;jdk/incubator/vector/Int64Vector$Int64Mask&apos;)}
   0.01%  ││     ││  0x00007f7a4066580a:   movabs $0x7ffe7f600,%r8             ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffe7f600} = int)}
   0.02%  ││     ││  0x00007f7a40665814:   mov    $0x2,%r9d
   0.01%  ││     ││  0x00007f7a4066581a:   mov    0x30(%rsp),%rdi
   0.35%  ││     ││  0x00007f7a4066581f:   mov    %rax,(%rsp)
   0.15%  ││     ││  0x00007f7a40665823:   xor    %r10d,%r10d
   0.01%  ││     ││  0x00007f7a40665826:   mov    %r10,0x8(%rsp)
   0.22%  ││     ││  0x00007f7a4066582b:   movabs $0x7ff1f64c0,%r10            ;   {oop(a &apos;jdk/incubator/vector/IntVector$$Lambda+0x00007f79c40caf28&apos;{0x00000007ff1f64c0})}
   0.01%  ││     ││  0x00007f7a40665835:   mov    %r10,0x10(%rsp)              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.31%  ││     ││  0x00007f7a4066583a:   nop
   0.00%  ││     ││  0x00007f7a4066583b:   call   0x00007f7a4064ce60           ; ImmutableOopMap {[24]=Oop [32]=Oop [48]=Oop [56]=Oop [64]=Oop [80]=Oop [88]=Oop [96]=Oop [128]=Oop [136]=Oop }
          ││     ││                                                            ;*invokestatic compare {reexecute=0 rethrow=0 return_oop=1}
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::compareTemplate@42 (line 2029)
          ││     ││                                                            ; - jdk.incubator.vector.Int64Vector::compare@5 (line 384)
          ││     ││                                                            ; - jdk.incubator.vector.Int64Vector::compare@3 (line 41)
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::lt@5 (line 1933)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@142 (line 87)
          ││     ││                                                            ;   {static_call}
   0.04%  ││     ││  0x00007f7a40665840:   nopl   0xe0009b0(%rax,%rax,1)       ;   {other}
   0.02%  ││     ││  0x00007f7a40665848:   mov    0x8(%rax),%r11d              ; implicit exception: dispatches to 0x00007f7a4066652c
   0.08%  ││     ││  0x00007f7a4066584c:   cmp    $0x103d288,%r11d             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
          ││     ││                                                            ;   {metadata(&apos;jdk/incubator/vector/Int64Vector$Int64Mask&apos;)}
          ││     ││  0x00007f7a40665853:   jne    0x00007f7a40666220           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::compareTemplate@45 (line 2029)
          ││     ││                                                            ; - jdk.incubator.vector.Int64Vector::compare@5 (line 384)
          ││     ││                                                            ; - jdk.incubator.vector.Int64Vector::compare@3 (line 41)
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::lt@5 (line 1933)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@142 (line 87)
   0.01%  ││     ││  0x00007f7a40665859:   mov    %rax,0x90(%rsp)
   0.06%  ││     ││  0x00007f7a40665861:   movabs $0x7ff15da10,%rsi            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ff15da10} = &apos;jdk/incubator/vector/Int64Vector$Int64Mask&apos;)}
   0.09%  ││     ││  0x00007f7a4066586b:   movabs $0x7ffe7f600,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffe7f600} = int)}
   0.00%  ││     ││  0x00007f7a40665875:   mov    $0x2,%ecx
   0.04%  ││     ││  0x00007f7a4066587a:   mov    $0xffffffffffffffff,%r8
   0.03%  ││     ││  0x00007f7a40665881:   xor    %r9d,%r9d
   0.09%  ││     ││  0x00007f7a40665884:   xor    %edi,%edi
   0.01%  ││     ││  0x00007f7a40665886:   movabs $0x7fee059c8,%r10            ;   {oop(a &apos;jdk/incubator/vector/Int64Vector$Int64Mask$$Lambda+0x00007f79c40cb960&apos;{0x00000007fee059c8})}
   0.02%  ││     ││  0x00007f7a40665890:   mov    %r10,(%rsp)                  ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.03%  ││     ││  0x00007f7a40665894:   data16 xchg %ax,%ax
   0.07%  ││     ││  0x00007f7a40665897:   call   0x00007f7a4064b260           ; ImmutableOopMap {[24]=Oop [32]=Oop [48]=Oop [56]=Oop [64]=Oop [80]=Oop [88]=Oop [96]=Oop [128]=Oop [136]=Oop [144]=Oop }
          ││     ││                                                            ;*invokestatic fromBitsCoerced {reexecute=0 rethrow=0 return_oop=1}
          ││     ││                                                            ; - jdk.incubator.vector.Int64Vector$Int64Mask::maskAll@25 (line 764)
          ││     ││                                                            ; - jdk.incubator.vector.Int64Vector$Int64Mask::not@2 (line 666)
          ││     ││                                                            ; - jdk.incubator.vector.Int64Vector$Int64Mask::not@1 (line 553)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@145 (line 87)
          ││     ││                                                            ;   {static_call}
   0.58%  ││     ││  0x00007f7a4066589c:   nopl   0xf000a0c(%rax,%rax,1)       ;   {other}
   0.00%  ││     ││  0x00007f7a406658a4:   mov    0x8(%rax),%r11d              ; implicit exception: dispatches to 0x00007f7a40666578
   0.00%  ││     ││  0x00007f7a406658a8:   cmp    $0x103d288,%r11d             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
          ││     ││                                                            ;   {metadata(&apos;jdk/incubator/vector/Int64Vector$Int64Mask&apos;)}
          ││     ││  0x00007f7a406658af:   jne    0x00007f7a40666278           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                            ; - jdk.incubator.vector.Int64Vector$Int64Mask::maskAll@28 (line 764)
          ││     ││                                                            ; - jdk.incubator.vector.Int64Vector$Int64Mask::not@2 (line 666)
          ││     ││                                                            ; - jdk.incubator.vector.Int64Vector$Int64Mask::not@1 (line 553)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@145 (line 87)
   0.00%  ││     ││  0x00007f7a406658b5:   mov    $0xc,%esi
   0.14%  ││     ││  0x00007f7a406658ba:   movabs $0x7ff15da10,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ff15da10} = &apos;jdk/incubator/vector/Int64Vector$Int64Mask&apos;)}
   0.01%  ││     ││  0x00007f7a406658c4:   xor    %ecx,%ecx
   0.00%  ││     ││  0x00007f7a406658c6:   movabs $0x7ffe7f600,%r8             ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffe7f600} = int)}
   0.01%  ││     ││  0x00007f7a406658d0:   mov    $0x2,%r9d
   0.22%  ││     ││  0x00007f7a406658d6:   mov    0x90(%rsp),%rdi
   0.01%  ││     ││  0x00007f7a406658de:   mov    %rax,(%rsp)
   0.21%  ││     ││  0x00007f7a406658e2:   xor    %r10d,%r10d
   0.03%  ││     ││  0x00007f7a406658e5:   mov    %r10,0x8(%rsp)
   0.07%  ││     ││  0x00007f7a406658ea:   movabs $0x7fee09b80,%r10            ;   {oop(a &apos;jdk/incubator/vector/Int64Vector$Int64Mask$$Lambda+0x00007f79c40cbd70&apos;{0x00000007fee09b80})}
   0.00%  ││     ││  0x00007f7a406658f4:   mov    %r10,0x10(%rsp)              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.30%  ││     ││  0x00007f7a406658f9:   xchg   %ax,%ax
   0.02%  ││     ││  0x00007f7a406658fb:   call   0x00007f7a40652280           ; ImmutableOopMap {[24]=Oop [32]=Oop [48]=Oop [56]=Oop [64]=Oop [80]=Oop [88]=Oop [96]=Oop [128]=Oop [136]=Oop }
          ││     ││                                                            ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=1}
          ││     ││                                                            ; - jdk.incubator.vector.Int64Vector$Int64Mask::xor@29 (line 705)
          ││     ││                                                            ; - jdk.incubator.vector.Int64Vector$Int64Mask::not@5 (line 666)
          ││     ││                                                            ; - jdk.incubator.vector.Int64Vector$Int64Mask::not@1 (line 553)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@145 (line 87)
          ││     ││                                                            ;   {static_call}
   0.08%  ││     ││  0x00007f7a40665900:   nopl   0x10000a70(%rax,%rax,1)      ;   {other}
          ││     ││  0x00007f7a40665908:   mov    0x8(%rax),%r11d              ; implicit exception: dispatches to 0x00007f7a406665cc
   0.39%  ││     ││  0x00007f7a4066590c:   cmp    $0x103d288,%r11d             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
          ││     ││                                                            ;   {metadata(&apos;jdk/incubator/vector/Int64Vector$Int64Mask&apos;)}
          ││     ││  0x00007f7a40665913:   jne    0x00007f7a406662d0           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                            ; - jdk.incubator.vector.Int64Vector$Int64Mask::xor@32 (line 705)
          ││     ││                                                            ; - jdk.incubator.vector.Int64Vector$Int64Mask::not@5 (line 666)
          ││     ││                                                            ; - jdk.incubator.vector.Int64Vector$Int64Mask::not@1 (line 553)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@145 (line 87)
   0.16%  ││     ││  0x00007f7a40665919:   mov    $0xa,%esi
   0.00%  ││     ││  0x00007f7a4066591e:   movabs $0x7ff15da10,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ff15da10} = &apos;jdk/incubator/vector/Int64Vector$Int64Mask&apos;)}
          ││     ││  0x00007f7a40665928:   xor    %ecx,%ecx
          ││     ││  0x00007f7a4066592a:   movabs $0x7ffe7f600,%r8             ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffe7f600} = int)}
   0.30%  ││     ││  0x00007f7a40665934:   mov    $0x2,%r9d
   0.00%  ││     ││  0x00007f7a4066593a:   mov    0x88(%rsp),%rdi
   0.71%  ││     ││  0x00007f7a40665942:   mov    %rax,(%rsp)
   0.12%  ││     ││  0x00007f7a40665946:   xor    %r10d,%r10d
          ││     ││  0x00007f7a40665949:   mov    %r10,0x8(%rsp)
   0.62%  ││     ││  0x00007f7a4066594e:   movabs $0x7fee0efd0,%r10            ;   {oop(a &apos;jdk/incubator/vector/Int64Vector$Int64Mask$$Lambda+0x00007f79c40cc398&apos;{0x00000007fee0efd0})}
          ││     ││  0x00007f7a40665958:   mov    %r10,0x10(%rsp)              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.15%  ││     ││  0x00007f7a4066595d:   xchg   %ax,%ax
          ││     ││  0x00007f7a4066595f:   call   0x00007f7a40652280           ; ImmutableOopMap {[24]=Oop [32]=Oop [48]=Oop [56]=Oop [64]=Oop [80]=Oop [88]=Oop [96]=Oop [128]=Oop }
          ││     ││                                                            ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=1}
          ││     ││                                                            ; - jdk.incubator.vector.Int64Vector$Int64Mask::and@29 (line 685)
          ││     ││                                                            ; - jdk.incubator.vector.Int64Vector$Int64Mask::and@2 (line 553)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@148 (line 87)
          ││     ││                                                            ;   {static_call}
   0.11%  ││     ││  0x00007f7a40665964:   nopl   0x11000ad4(%rax,%rax,1)      ;   {other}
   0.00%  ││     ││  0x00007f7a4066596c:   mov    0x8(%rax),%r11d              ; implicit exception: dispatches to 0x00007f7a40666618
   0.20%  ││     ││  0x00007f7a40665970:   cmp    $0x103d288,%r11d             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
          ││     ││                                                            ;   {metadata(&apos;jdk/incubator/vector/Int64Vector$Int64Mask&apos;)}
          ││     ││  0x00007f7a40665977:   jne    0x00007f7a40666328           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                            ; - jdk.incubator.vector.Int64Vector$Int64Mask::and@32 (line 685)
          ││     ││                                                            ; - jdk.incubator.vector.Int64Vector$Int64Mask::and@2 (line 553)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@148 (line 87)
   0.07%  ││     ││  0x00007f7a4066597d:   movabs $0x7ff15d890,%rsi            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ff15d890} = &apos;jdk/incubator/vector/Int64Vector&apos;)}
   0.05%  ││     ││  0x00007f7a40665987:   movabs $0x7ff15da10,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ff15da10} = &apos;jdk/incubator/vector/Int64Vector$Int64Mask&apos;)}
          ││     ││  0x00007f7a40665991:   movabs $0x7ffe7f600,%rcx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffe7f600} = int)}
   0.02%  ││     ││  0x00007f7a4066599b:   mov    $0x2,%r8d
   0.11%  ││     ││  0x00007f7a406659a1:   mov    0x50(%rsp),%r9
   0.51%  ││     ││  0x00007f7a406659a6:   mov    0x80(%rsp),%rdi
   0.02%  ││     ││  0x00007f7a406659ae:   mov    %rax,(%rsp)
   0.13%  ││     ││  0x00007f7a406659b2:   movabs $0x7fee14b90,%r10            ;   {oop(a &apos;jdk/incubator/vector/IntVector$$Lambda+0x00007f79c40cc9c0&apos;{0x00000007fee14b90})}
   0.00%  ││     ││  0x00007f7a406659bc:   mov    %r10,0x8(%rsp)               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.12%  ││     ││  0x00007f7a406659c1:   xchg   %ax,%ax
          ││     ││  0x00007f7a406659c3:   call   0x00007f7a4065bf80           ; ImmutableOopMap {[24]=Oop [32]=Oop [48]=Oop [56]=Oop [64]=Oop [88]=Oop [96]=Oop }
          ││     ││                                                            ;*invokestatic blend {reexecute=0 rethrow=0 return_oop=1}
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::blendTemplate@26 (line 2182)
          ││     ││                                                            ; - jdk.incubator.vector.Int64Vector::blend@11 (line 410)
          ││     ││                                                            ; - jdk.incubator.vector.Int64Vector::blend@3 (line 41)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@158 (line 88)
          ││     ││                                                            ;   {static_call}
   0.00%  ││     ││  0x00007f7a406659c8:   nopl   0x12000b38(%rax,%rax,1)      ;   {other}
          ││     ││  0x00007f7a406659d0:   mov    0x8(%rax),%r11d              ; implicit exception: dispatches to 0x00007f7a40666658
   0.35%  ││     ││  0x00007f7a406659d4:   nopl   0x0(%rax,%rax,1)
   0.01%  ││     ││  0x00007f7a406659dc:   data16 data16 xchg %ax,%ax
   0.01%  ││     ││  0x00007f7a406659e0:   cmp    $0x103c620,%r11d             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
          ││     ││                                                            ;   {metadata(&apos;jdk/incubator/vector/Int64Vector&apos;)}
          ││     ││  0x00007f7a406659e7:   jne    0x00007f7a40666378           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::blendTemplate@29 (line 2182)
          ││     ││                                                            ; - jdk.incubator.vector.Int64Vector::blend@11 (line 410)
          ││     ││                                                            ; - jdk.incubator.vector.Int64Vector::blend@3 (line 41)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@158 (line 88)
   0.11%  ││     ││  0x00007f7a406659ed:   mov    %rax,0x50(%rsp)
   1.15%  ││     ││  0x00007f7a406659f2:   mov    0x1b8(%r15),%r11
          ││     ││  0x00007f7a406659f9:   mov    %r11,%r10
          ││     ││  0x00007f7a406659fc:   add    $0x18,%r10
          ││     ││  0x00007f7a40665a00:   cmp    0x1c8(%r15),%r10
          ││╭    ││  0x00007f7a40665a07:   jae    0x00007f7a40665d3b
   0.14%  │││    ││  0x00007f7a40665a0d:   mov    %r10,0x1b8(%r15)
   0.01%  │││    ││  0x00007f7a40665a14:   prefetchw 0xc0(%r10)
   0.01%  │││    ││  0x00007f7a40665a1c:   movq   $0x1,(%r11)
          │││    ││  0x00007f7a40665a23:   prefetchw 0x100(%r10)
   0.11%  │││    ││  0x00007f7a40665a2b:   movl   $0x26a0,0x8(%r11)            ;   {metadata({type array int})}
   0.27%  │││    ││  0x00007f7a40665a33:   prefetchw 0x140(%r10)
   0.00%  │││    ││  0x00007f7a40665a3b:   movl   $0x2,0xc(%r11)
   0.06%  │││    ││  0x00007f7a40665a43:   prefetchw 0x180(%r10)
   0.04%  │││    ││  0x00007f7a40665a4b:   mov    %r12,0x10(%r11)
   0.09%  │││    ││  0x00007f7a40665a4f:   mov    %r11,0x30(%rsp)
          │││    ││  0x00007f7a40665a54:   mov    0x38(%rsp),%r10
   0.08%  │││    ││  0x00007f7a40665a59:   mov    0xc(%r10),%r11d              ;*goto {reexecute=0 rethrow=0 return_oop=0}
          │││    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@174 (line 79)
   0.02%  │││    ││  0x00007f7a40665a5d:   mov    0x1b8(%r15),%rax
   0.08%  │││    ││  0x00007f7a40665a64:   vmovq  0x10(%r12,%r11,8),%xmm0
   0.53%  │││    ││  0x00007f7a40665a6b:   mov    %rax,%r10
          │││    ││  0x00007f7a40665a6e:   add    $0x10,%r10
   0.00%  │││    ││  0x00007f7a40665a72:   mov    0x40(%rsp),%r11
          │││    ││  0x00007f7a40665a77:   mov    0xc(%r11),%r8d
   0.21%  │││    ││  0x00007f7a40665a7b:   vmovq  0x10(%r12,%r8,8),%xmm1       ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││    ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          │││    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.24%  │││    ││  0x00007f7a40665a82:   vpaddd %xmm1,%xmm0,%xmm0            ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
          │││    ││                                                            ; - jdk.incubator.vector.IntVector::lanewiseTemplate@154 (line 784)
          │││    ││                                                            ; - jdk.incubator.vector.Int64Vector::lanewise@3 (line 285)
          │││    ││                                                            ; - jdk.incubator.vector.Int64Vector::lanewise@3 (line 41)
          │││    ││                                                            ; - jdk.incubator.vector.IntVector::add@5 (line 1352)
          │││    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@166 (line 89)
   0.39%  │││    ││  0x00007f7a40665a86:   mov    0x30(%rsp),%r11
          │││    ││  0x00007f7a40665a8b:   vmovq  %xmm0,0x10(%r11)
   0.13%  │││    ││  0x00007f7a40665a91:   cmp    0x1c8(%r15),%r10
          │││    ││  0x00007f7a40665a98:   jae    0x00007f7a40665d65           ;*goto {reexecute=0 rethrow=0 return_oop=0}
          │││    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@174 (line 79)
          │││    ││  0x00007f7a40665a9e:   mov    %r10,0x1b8(%r15)
   0.03%  │││    ││  0x00007f7a40665aa5:   prefetchw 0xc0(%r10)
          │││    ││  0x00007f7a40665aad:   movq   $0x1,(%rax)
   0.10%  │││    ││  0x00007f7a40665ab4:   movl   $0x103c620,0x8(%rax)         ;   {metadata(&apos;jdk/incubator/vector/Int64Vector&apos;)}
          │││    ││  0x00007f7a40665abb:   mov    0x60(%rsp),%r10              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││    ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          │││    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.04%  │││    ││  0x00007f7a40665ac0:   mov    0xc(%r10),%r11d              ;*getfield laneCount {reexecute=0 rethrow=0 return_oop=0}
          │││    ││                                                            ; - jdk.incubator.vector.AbstractSpecies::length@1 (line 117)
          │││    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@67 (line 79)
          │││    ││  0x00007f7a40665ac4:   mov    0x70(%rsp),%ecx              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││    ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          │││    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.12%  │││    ││  0x00007f7a40665ac8:   inc    %ecx
   0.00%  │││    ││  0x00007f7a40665aca:   mov    0x30(%rsp),%r10
   0.04%  │││    ││  0x00007f7a40665acf:   mov    %r10,%r8
          │││    ││  0x00007f7a40665ad2:   shr    $0x3,%r8
   0.10%  │││    ││  0x00007f7a40665ad6:   mov    %r8d,0xc(%rax)               ;*goto {reexecute=0 rethrow=0 return_oop=0}
          │││    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@174 (line 79)
   0.00%  │││    ││  0x00007f7a40665ada:   mov    0x458(%r15),%r10             ; ImmutableOopMap {rax=Oop [24]=Oop [32]=Oop [64]=Oop [80]=Oop [88]=Oop [96]=Oop }
          │││    ││                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
          │││    ││                                                            ; - (reexecute) com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@174 (line 79)
   0.04%  │││    ││  0x00007f7a40665ae1:   test   %eax,(%r10)                  ;   {poll}
   0.01%  │││    ││  0x00007f7a40665ae4:   cmp    %r11d,%ecx                   ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││    ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          │││    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
          │││╭   ││  0x00007f7a40665ae7:   jge    0x00007f7a40665b0f
   0.05%  ││││   ││  0x00007f7a40665ae9:   mov    %rax,0x38(%rsp)
          ││││   ││  0x00007f7a40665aee:   vmovq  0x78(%rsp),%xmm0
   0.02%  ││││   ││  0x00007f7a40665af4:   mov    0x18(%rsp),%rax
   0.01%  ││││   ││  0x00007f7a40665af9:   mov    0x28(%rsp),%r9d
   0.04%  ││││   ││  0x00007f7a40665afe:   mov    0x2c(%rsp),%ebx
          ││││   ││  0x00007f7a40665b02:   mov    %ecx,%r10d
   0.02%  ││││╭  ││  0x00007f7a40665b05:   jmp    0x00007f7a40665cf9
          │││││ ↗││  0x00007f7a40665b0a:   mov    0x38(%rsp),%rax              ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
          │││││ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@72 (line 79)
   0.05%  │││↘│ │││  0x00007f7a40665b0f:   mov    0x20(%rsp),%rbx              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││ │ │││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          │││ │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
          │││ │ │││  0x00007f7a40665b14:   mov    0x1c(%rbx),%r11d             ;*getfield result {reexecute=0 rethrow=0 return_oop=0}
          │││ │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@179 (line 91)
   0.02%  │││ │ │││  0x00007f7a40665b18:   nopl   0x0(%rax,%rax,1)
   0.00%  │││ │ │││  0x00007f7a40665b20:   mov    0xc(%r12,%r11,8),%ebp        ; implicit exception: dispatches to 0x00007f7a40666698
   0.05%  │││ │ │││  0x00007f7a40665b25:   dec    %ebp
   0.00%  │││ │ │││  0x00007f7a40665b27:   test   %ebp,%ebp
          │││ │ │││  0x00007f7a40665b29:   jl     0x00007f7a40665f3c
   0.04%  │││ │ │││  0x00007f7a40665b2f:   mov    0x4c(%rsp),%r10d
   0.00%  │││ │ │││  0x00007f7a40665b34:   cmp    %ebp,%r10d
          │││ │ │││  0x00007f7a40665b37:   jae    0x00007f7a40665e30
   0.04%  │││ │ │││  0x00007f7a40665b3d:   mov    %r11d,%r8d
          │││ │ │││  0x00007f7a40665b40:   mov    %rbx,%r11
   0.03%  │││ │ │││  0x00007f7a40665b43:   mov    0x60(%rsp),%r9               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││ │ │││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          │││ │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
          │││ │ │││  0x00007f7a40665b48:   add    0xc(%r9),%r10d
   0.04%  │││ │ │││  0x00007f7a40665b4c:   mov    %r10d,%r9d                   ;*goto {reexecute=0 rethrow=0 return_oop=0}
          │││ │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@174 (line 79)
   0.00%  │││ │ │││  0x00007f7a40665b4f:   mov    0x458(%r15),%rcx             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││ │ │││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          │││ │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.01%  │││ │ │││  0x00007f7a40665b56:   mov    0x18(%rbx),%r10d             ;*getfield input {reexecute=0 rethrow=0 return_oop=0}
          │││ │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@42 (line 77)
          │││ │ │││  0x00007f7a40665b5a:   mov    0x50(%rsp),%rbx
   0.03%  │││ │ │││  0x00007f7a40665b5f:   mov    0xc(%rbx),%edi
   0.00%  │││ │ │││  0x00007f7a40665b62:   vmovq  0x10(%r12,%rdi,8),%xmm0
   0.06%  │││ │ │││  0x00007f7a40665b69:   shl    $0x3,%r8
   0.00%  │││ │ │││  0x00007f7a40665b6d:   mov    0x68(%rsp),%rbx
   0.02%  │││ │ │││  0x00007f7a40665b72:   vmovq  %xmm0,0x10(%r8,%rbx,1)       ; ImmutableOopMap {r10=NarrowOop r11=Oop rax=Oop [64]=Oop [80]=Oop [88]=Oop [96]=Oop }
          │││ │ │││                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
          │││ │ │││                                                            ; - (reexecute) com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@198 (line 77)
   0.13%  │││ │ │││  0x00007f7a40665b79:   test   %eax,(%rcx)                  ;   {poll}
   0.01%  │││ │ │││  0x00007f7a40665b7b:   nopl   0x0(%rax,%rax,1)
          │││ │ │││  0x00007f7a40665b80:   mov    0xc(%r12,%r10,8),%r8d        ; implicit exception: dispatches to 0x00007f7a406666ac
   0.00%  │││ │ │││  0x00007f7a40665b85:   cmp    %r8d,%r9d
          │││ │╭│││  0x00007f7a40665b88:   jge    0x00007f7a40665d25
   0.06%  │││ │││││  0x00007f7a40665b8e:   mov    %rax,0x38(%rsp)
   0.01%  │││ │││││  0x00007f7a40665b93:   mov    %r11,%rbx
          │││ │││││  0x00007f7a40665b96:   mov    0x60(%rsp),%rbp
   0.00%  │││ │││││  0x00007f7a40665b9b:   mov    0x40(%rsp),%r11
   0.06%  │││ │││││  0x00007f7a40665ba0:   mov    %r9d,%r8d
   0.01%  │↘│ │││││  0x00007f7a40665ba3:   mov    0xc(%r12,%r10,8),%r9d        ; implicit exception: dispatches to 0x00007f7a40666684
          │ │ │││││                                                            ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ │ │││││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          │ │ │││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.00%  │ │ │││││  0x00007f7a40665ba8:   mov    0xc(%rbp),%ecx               ;*getfield laneCount {reexecute=0 rethrow=0 return_oop=0}
          │ │ │││││                                                            ; - jdk.incubator.vector.AbstractSpecies::length@1 (line 117)
          │ │ │││││                                                            ; - jdk.incubator.vector.IntVector::fromArray@2 (line 2953)
          │ │ │││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@56 (line 78)
   0.00%  │ │ │││││  0x00007f7a40665bab:   sub    %ecx,%r9d
   0.08%  │ │ │││││  0x00007f7a40665bae:   inc    %r9d
          │ │ │││││  0x00007f7a40665bb1:   test   %r9d,%r9d
          │ │ │││││  0x00007f7a40665bb4:   jl     0x00007f7a40665efc
          │ │ │││││  0x00007f7a40665bba:   nopw   0x0(%rax,%rax,1)
   0.01%  │ │ │││││  0x00007f7a40665bc0:   cmp    %r9d,%r8d
          │ │ │││││  0x00007f7a40665bc3:   jae    0x00007f7a40665def
   0.07%  │ │ │││││  0x00007f7a40665bc9:   mov    %ecx,0x1c(%rsp)
   0.01%  │ │ │││││  0x00007f7a40665bcd:   mov    %r11,0x40(%rsp)
          │ │ │││││  0x00007f7a40665bd2:   mov    %rbx,0x20(%rsp)              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ │ │││││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          │ │ │││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.00%  │ │ │││││  0x00007f7a40665bd7:   mov    0x44(%rbp),%r11d             ;*getfield dummyVector {reexecute=0 rethrow=0 return_oop=0}
          │ │ │││││                                                            ; - jdk.incubator.vector.AbstractSpecies::dummyVector@1 (line 308)
          │ │ │││││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::dummyVector@1 (line 3918)
          │ │ │││││                                                            ; - jdk.incubator.vector.IntVector::fromArray@19 (line 2955)
          │ │ │││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@56 (line 78)
   0.08%  │ │ │││││  0x00007f7a40665bdb:   mov    %rbp,0x60(%rsp)
   0.00%  │ │ │││││  0x00007f7a40665be0:   mov    %r8d,0x48(%rsp)              ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
          │ │ │││││                                                            ; - java.util.Objects::checkIndex@3 (line 385)
          │ │ │││││                                                            ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 61)
          │ │ │││││                                                            ; - jdk.incubator.vector.IntVector::fromArray@9 (line 2953)
          │ │ │││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@56 (line 78)
   0.00%  │ │ │││││  0x00007f7a40665be5:   mov    %r8d,0x4c(%rsp)
   0.00%  │ │ │││││  0x00007f7a40665bea:   mov    0x8(%r12,%r11,8),%r8d        ; implicit exception: dispatches to 0x00007f7a406666c0
   0.07%  │ │ │││││  0x00007f7a40665bef:   cmp    $0x103c620,%r8d              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ │ │││││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          │ │ │││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
          │ │ │││││                                                            ;   {metadata(&apos;jdk/incubator/vector/Int64Vector&apos;)}
          │ │ │││││  0x00007f7a40665bf6:   jne    0x00007f7a4066601c           ;*goto {reexecute=0 rethrow=0 return_oop=0}
          │ │ │││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@174 (line 79)
   0.00%  │ │ │││││  0x00007f7a40665bfc:   mov    0x1b8(%r15),%r8
          │ │ │││││  0x00007f7a40665c03:   mov    %r8,%r11
   0.01%  │ │ │││││  0x00007f7a40665c06:   add    $0x18,%r11
   0.05%  │ │ │││││  0x00007f7a40665c0a:   shl    $0x3,%r10
   0.01%  │ │ │││││  0x00007f7a40665c0e:   mov    %r10,0x28(%rsp)              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ │ │││││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          │ │ │││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
          │ │ │││││  0x00007f7a40665c13:   movslq 0x4c(%rsp),%r10              ;*i2l {reexecute=0 rethrow=0 return_oop=0}
          │ │ │││││                                                            ; - jdk.incubator.vector.IntVector::arrayAddress@4 (line 3691)
          │ │ │││││                                                            ; - jdk.incubator.vector.IntVector::fromArray0Template@20 (line 3444)
          │ │ │││││                                                            ; - jdk.incubator.vector.Int64Vector::fromArray0@3 (line 848)
          │ │ │││││                                                            ; - jdk.incubator.vector.IntVector::fromArray@24 (line 2955)
          │ │ │││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@56 (line 78)
   0.04%  │ │ │││││  0x00007f7a40665c18:   mov    %r10,0x30(%rsp)              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ │ │││││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          │ │ │││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.06%  │ │ │││││  0x00007f7a40665c1d:   shl    $0x2,%r10
   0.01%  │ │ │││││  0x00007f7a40665c21:   mov    %r10,0x68(%rsp)
   0.00%  │ │ │││││  0x00007f7a40665c26:   lea    0x10(%r10),%rbp
          │ │ │││││  0x00007f7a40665c2a:   cmp    0x1c8(%r15),%r11
          │ │ │││││  0x00007f7a40665c31:   jae    0x00007f7a40665d9a           ;*goto {reexecute=0 rethrow=0 return_oop=0}
          │ │ │││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@174 (line 79)
   0.06%  │ │ │││││  0x00007f7a40665c37:   mov    %r11,0x1b8(%r15)
   0.01%  │ │ │││││  0x00007f7a40665c3e:   prefetchw 0xc0(%r11)
          │ │ │││││  0x00007f7a40665c46:   movq   $0x1,(%r8)
   0.01%  │ │ │││││  0x00007f7a40665c4d:   prefetchw 0x100(%r11)
   0.07%  │ │ │││││  0x00007f7a40665c55:   movl   $0x26a0,0x8(%r8)             ;   {metadata({type array int})}
   0.01%  │ │ │││││  0x00007f7a40665c5d:   prefetchw 0x140(%r11)
   0.00%  │ │ │││││  0x00007f7a40665c65:   movl   $0x2,0xc(%r8)
   0.01%  │ │ │││││  0x00007f7a40665c6d:   prefetchw 0x180(%r11)
   0.06%  │ │ │││││  0x00007f7a40665c75:   mov    %r12,0x10(%r8)
   0.01%  │ │ │││││  0x00007f7a40665c79:   mov    %r8,0x70(%rsp)
   0.00%  │ │ │││││  0x00007f7a40665c7e:   mov    0x28(%rsp),%r10
   0.01%  │ │ │││││  0x00007f7a40665c83:   mov    0x68(%rsp),%r11              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ │ │││││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          │ │ │││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.05%  │ │ │││││  0x00007f7a40665c88:   vmovq  0x10(%r10,%r11,1),%xmm0      ;*invokestatic load {reexecute=0 rethrow=0 return_oop=0}
          │ │ │││││                                                            ; - jdk.incubator.vector.IntVector::fromArray0Template@32 (line 3442)
          │ │ │││││                                                            ; - jdk.incubator.vector.Int64Vector::fromArray0@3 (line 848)
          │ │ │││││                                                            ; - jdk.incubator.vector.IntVector::fromArray@24 (line 2955)
          │ │ │││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@56 (line 78)
   0.26%  │ │ │││││  0x00007f7a40665c8f:   vmovq  %xmm0,0x10(%r8)
   0.11%  │ │ │││││  0x00007f7a40665c95:   mov    0x1b8(%r15),%rax
   0.00%  │ │ │││││  0x00007f7a40665c9c:   mov    %rax,%r10
          │ │ │││││  0x00007f7a40665c9f:   add    $0x10,%r10
          │ │ │││││  0x00007f7a40665ca3:   cmp    0x1c8(%r15),%r10
          │ │ │││││  0x00007f7a40665caa:   jae    0x00007f7a40665dc5           ;*goto {reexecute=0 rethrow=0 return_oop=0}
          │ │ │││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@174 (line 79)
   0.08%  │ │ │││││  0x00007f7a40665cb0:   mov    %r10,0x1b8(%r15)
   0.00%  │ │ │││││  0x00007f7a40665cb7:   prefetchw 0xc0(%r10)
   0.00%  │ │ │││││  0x00007f7a40665cbf:   movq   $0x1,(%rax)
   0.04%  │ │ │││││  0x00007f7a40665cc6:   movl   $0x103c620,0x8(%rax)         ;   {metadata(&apos;jdk/incubator/vector/Int64Vector&apos;)}
   0.09%  │ │ │││││  0x00007f7a40665ccd:   mov    0x70(%rsp),%r10
   0.00%  │ │ │││││  0x00007f7a40665cd2:   mov    %r10,%r11
   0.00%  │ │ │││││  0x00007f7a40665cd5:   shr    $0x3,%r11
   0.02%  │ │ │││││  0x00007f7a40665cd9:   mov    %r11d,0xc(%rax)
   0.05%  │ │ │││││  0x00007f7a40665cdd:   mov    0x1c(%rsp),%r11d
   0.00%  │ │ │││││  0x00007f7a40665ce2:   test   %r11d,%r11d
          │ │ ││╰││  0x00007f7a40665ce5:   jle    0x00007f7a40665b0a           ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ │ ││ ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          │ │ ││ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.00%  │ │ ││ ││  0x00007f7a40665ceb:   vmovd  %xmm0,%r9d                   ;*invokestatic extract {reexecute=0 rethrow=0 return_oop=0}
          │ │ ││ ││                                                            ; - jdk.incubator.vector.Int64Vector::laneHelper@16 (line 521)
          │ │ ││ ││                                                            ; - jdk.incubator.vector.Int64Vector::lane@30 (line 514)
          │ │ ││ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@79 (line 80)
   0.00%  │ │ ││ ││  0x00007f7a40665cf0:   vpextrd $0x1,%xmm0,%ebx             ;*invokestatic extract {reexecute=0 rethrow=0 return_oop=0}
          │ │ ││ ││                                                            ; - jdk.incubator.vector.Int64Vector::laneHelper@16 (line 521)
          │ │ ││ ││                                                            ; - jdk.incubator.vector.Int64Vector::lane@36 (line 515)
          │ │ ││ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@79 (line 80)
   0.05%  │ │ ││ ││  0x00007f7a40665cf6:   xor    %r10d,%r10d
   0.00%  │ │ ↘│ ││  0x00007f7a40665cf9:   test   %r10d,%r10d
   0.07%  │ │  │ ││  0x00007f7a40665cfc:   nopl   0x0(%rax)
   0.05%  │ │  │ ╰│  0x00007f7a40665d00:   je     0x00007f7a406654e0
   0.02%  │ │  │  │  0x00007f7a40665d06:   test   %r10d,%r10d
          │ │  │  │  0x00007f7a40665d09:   jl     0x00007f7a40665e5c
   0.01%  │ │  │  │  0x00007f7a40665d0f:   cmp    $0x1,%r10d                   ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ │  │  │                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          │ │  │  │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
          │ │  │  │  0x00007f7a40665d13:   jne    0x00007f7a40665eac
   0.07%  │ │  │  │  0x00007f7a40665d19:   mov    %ebx,%r11d
   0.00%  │ │  │  │  0x00007f7a40665d1c:   nopl   0x0(%rax)
   0.00%  │ │  │  ╰  0x00007f7a40665d20:   jmp    0x00007f7a406654e3           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
          │ │  │                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@46 (line 77)
   0.03%  ↘ │  ↘     0x00007f7a40665d25:   add    $0xb0,%rsp
   0.02%    │        0x00007f7a40665d2c:   pop    %rbp
   0.02%    │        0x00007f7a40665d2d:   cmp    0x450(%r15),%rsp             ;   {poll_return}
            │        0x00007f7a40665d34:   ja     0x00007f7a40666857
            │        0x00007f7a40665d3a:   ret    
            ↘        0x00007f7a40665d3b:   movabs $0x7f79c30026a0,%rsi         ;   {metadata({type array int})}
                     0x00007f7a40665d45:   mov    $0x2,%edx
                     0x00007f7a40665d4a:   mov    0x20(%rsp),%rbp
                     0x00007f7a40665d4f:   call   0x00007f7a4018ec80           ; ImmutableOopMap {rbp=Oop [24]=Oop [32]=Oop [56]=Oop [64]=Oop [80]=Oop [88]=Oop [96]=Oop }
                                                                               ;*invokestatic binaryOp {reexecute=1 rethrow=0 return_oop=1}
                                                                               ; - (reexecute) jdk.incubator.vector.IntVector::lanewiseTemplate@154 (line 784)
                                                                               ; - jdk.incubator.vector.Int64Vector::lanewise@3 (line 285)
                                                                               ; - jdk.incubator.vector.Int64Vector::lanewise@3 (line 41)
....................................................................................................
  24.19%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, level 4, jdk.internal.vm.vector.VectorSupport::compare, version 2, compile id 878 

                          0x00007f7a4064cef2:   mov    0x48(%r9),%r8
                          0x00007f7a4064cef6:   cmp    %r11,%r8
                          0x00007f7a4064cef9:   jne    0x00007f7a4064d230           ;*invokevirtual loadFence {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::maybeRebox@3 (line 702)
                                                                                    ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
                                                                                    ; - jdk.incubator.vector.Int64Vector::vec@1 (line 117)
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f79c40caf28::apply@14
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.01%                  0x00007f7a4064ceff:   mov    0xc(%rdi),%r11d              ;*getfield payload {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@4 (line 164)
                                                                                    ; - jdk.incubator.vector.Int64Vector::vec@1 (line 117)
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f79c40caf28::apply@14
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.00%                  0x00007f7a4064cf03:   mov    0x8(%r12,%r11,8),%r8d        ; implicit exception: dispatches to 0x00007f7a4064d38c
   0.19%                  0x00007f7a4064cf08:   cmp    $0x26a0,%r8d                 ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
                                                                                    ; - jdk.incubator.vector.Int64Vector::vec@1 (line 117)
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f79c40caf28::apply@14
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
                                                                                    ;   {metadata({type array int})}
                          0x00007f7a4064cf0f:   jne    0x00007f7a4064d2e0           ;*invokevirtual loadFence {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::maybeRebox@3 (line 702)
                                                                                    ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
                                                                                    ; - jdk.incubator.vector.Int64Vector::vec@1 (line 117)
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@10 (line 473)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f79c40caf28::apply@14
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.50%                  0x00007f7a4064cf15:   mov    0xc(%r10),%r8d               ;*getfield payload {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@4 (line 164)
                                                                                    ; - jdk.incubator.vector.Int64Vector::vec@1 (line 117)
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@10 (line 473)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f79c40caf28::apply@14
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.00%                  0x00007f7a4064cf19:   shl    $0x3,%r11                    ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.incubator.vector.Int64Vector::vec@4 (line 117)
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f79c40caf28::apply@14
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
                          0x00007f7a4064cf1d:   data16 xchg %ax,%ax
   0.01%                  0x00007f7a4064cf20:   mov    0x8(%r12,%r8,8),%r9d         ; implicit exception: dispatches to 0x00007f7a4064d3ac
   1.51%                  0x00007f7a4064cf25:   cmp    $0x26a0,%r9d                 ;   {metadata({type array int})}
                          0x00007f7a4064cf2c:   jne    0x00007f7a4064d304           ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
                                                                                    ; - jdk.incubator.vector.Int64Vector::vec@1 (line 117)
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f79c40caf28::apply@14
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.55%                  0x00007f7a4064cf32:   mov    0xc(%r11),%ebx               ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@47 (line 476)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f79c40caf28::apply@14
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
                          0x00007f7a4064cf36:   lea    (%r12,%r8,8),%rcx            ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.incubator.vector.Int64Vector::vec@4 (line 117)
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@10 (line 473)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f79c40caf28::apply@14
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.01%                  0x00007f7a4064cf3a:   test   %ebx,%ebx
   0.03%                  0x00007f7a4064cf3c:   nopl   0x0(%rax)
   0.61%                  0x00007f7a4064cf40:   jbe    0x00007f7a4064d1a0           ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
                                                                                    ; - jdk.incubator.vector.Int64Vector::vec@1 (line 117)
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f79c40caf28::apply@14
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
                          0x00007f7a4064cf46:   mov    0xc(%rcx),%r8d               ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@52 (line 476)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f79c40caf28::apply@14
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.01%                  0x00007f7a4064cf4a:   mov    0x10(%r11),%r9d              ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@47 (line 476)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f79c40caf28::apply@14
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.03%                  0x00007f7a4064cf4e:   test   %r8d,%r8d
                          0x00007f7a4064cf51:   jbe    0x00007f7a4064d1e4           ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
                                                                                    ; - jdk.incubator.vector.Int64Vector::vec@1 (line 117)
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f79c40caf28::apply@14
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.57%                  0x00007f7a4064cf57:   mov    0x10(%rcx),%r10d             ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@52 (line 476)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f79c40caf28::apply@14
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
                          0x00007f7a4064cf5b:   nopl   0x0(%rax,%rax,1)
   0.01%                  0x00007f7a4064cf60:   cmp    $0x3,%esi
          ╭               0x00007f7a4064cf63:   je     0x00007f7a4064cf89
   0.00%  │               0x00007f7a4064cf65:   test   %esi,%esi
          │               0x00007f7a4064cf67:   jne    0x00007f7a4064d244
   0.14%  │               0x00007f7a4064cf6d:   cmp    %r10d,%r9d
          │╭              0x00007f7a4064cf70:   jne    0x00007f7a4064cf7f
   0.00%  ││              0x00007f7a4064cf72:   mov    $0x1,%r9d
   0.00%  ││              0x00007f7a4064cf78:   mov    %r9d,0x20(%rsp)
   0.00%  ││╭             0x00007f7a4064cf7d:   jmp    0x00007f7a4064cfa3
          │↘│             0x00007f7a4064cf7f:   xor    %r10d,%r10d
          │ │             0x00007f7a4064cf82:   mov    %r10d,0x20(%rsp)
   0.00%  │ │╭            0x00007f7a4064cf87:   jmp    0x00007f7a4064cfa3
   0.04%  ↘ ││            0x00007f7a4064cf89:   cmp    %r10d,%r9d                   ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
            ││                                                                      ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
            ││                                                                      ; - jdk.incubator.vector.Int64Vector::vec@1 (line 117)
            ││                                                                      ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
            ││                                                                      ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
            ││                                                                      ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f79c40caf28::apply@14
            ││                                                                      ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
            ││╭           0x00007f7a4064cf8c:   jl     0x00007f7a4064cf98
   0.16%    │││           0x00007f7a4064cf8e:   xor    %r9d,%r9d
   0.00%    │││           0x00007f7a4064cf91:   mov    %r9d,0x20(%rsp)
            │││╭          0x00007f7a4064cf96:   jmp    0x00007f7a4064cfa3
   0.23%    ││↘│          0x00007f7a4064cf98:   mov    $0x1,%r10d
            ││ │          0x00007f7a4064cf9e:   mov    %r10d,0x20(%rsp)             ;*goto {reexecute=0 rethrow=0 return_oop=0}
            ││ │                                                                    ; - jdk.incubator.vector.IntVector::compareWithOp@148 (line 2069)
            ││ │                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$58@4 (line 2035)
            ││ │                                                                    ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f79c40cb338::apply@9
            ││ │                                                                    ; - jdk.incubator.vector.IntVector::bTest@53 (line 476)
            ││ │                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
            ││ │                                                                    ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f79c40caf28::apply@14
            ││ │                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.13%    ↘↘ ↘          0x00007f7a4064cfa3:   cmp    $0x1,%ebx
                          0x00007f7a4064cfa6:   jbe    0x00007f7a4064d1ad           ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
                                                                                    ; - jdk.incubator.vector.Int64Vector::vec@1 (line 117)
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f79c40caf28::apply@14
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.15%                  0x00007f7a4064cfac:   mov    0x14(%r11),%r9d              ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@47 (line 476)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f79c40caf28::apply@14
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.24%                  0x00007f7a4064cfb0:   cmp    $0x1,%r8d
                          0x00007f7a4064cfb4:   jbe    0x00007f7a4064d1f1           ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
                                                                                    ; - jdk.incubator.vector.Int64Vector::vec@1 (line 117)
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f79c40caf28::apply@14
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.01%                  0x00007f7a4064cfba:   mov    0x14(%rcx),%r10d             ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@52 (line 476)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f79c40caf28::apply@14
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.18%                  0x00007f7a4064cfbe:   xchg   %ax,%ax
   0.13%                  0x00007f7a4064cfc0:   cmp    $0x3,%esi
                ╭         0x00007f7a4064cfc3:   je     0x00007f7a4064cfdd
                │         0x00007f7a4064cfc5:   test   %esi,%esi
                │         0x00007f7a4064cfc7:   jne    0x00007f7a4064d24f
   0.02%        │         0x00007f7a4064cfcd:   cmp    %r10d,%r9d
                │╭        0x00007f7a4064cfd0:   jne    0x00007f7a4064cfd9
   0.08%        ││        0x00007f7a4064cfd2:   mov    $0x1,%ebp
                ││╭       0x00007f7a4064cfd7:   jmp    0x00007f7a4064cfee
   0.07%        │↘│       0x00007f7a4064cfd9:   xor    %ebp,%ebp
                │ │╭      0x00007f7a4064cfdb:   jmp    0x00007f7a4064cfee
   0.23%        ↘ ││      0x00007f7a4064cfdd:   data16 xchg %ax,%ax
   0.02%          ││      0x00007f7a4064cfe0:   cmp    %r10d,%r9d
                  ││╭     0x00007f7a4064cfe3:   jl     0x00007f7a4064cfe9
   0.26%          │││     0x00007f7a4064cfe5:   xor    %ebp,%ebp
   0.12%          │││╭    0x00007f7a4064cfe7:   jmp    0x00007f7a4064cfee           ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
                  ││││                                                              ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
                  ││││                                                              ; - jdk.incubator.vector.Int64Vector::vec@1 (line 117)
                  ││││                                                              ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
                  ││││                                                              ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                  ││││                                                              ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f79c40caf28::apply@14
                  ││││                                                              ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.20%          ││↘│    0x00007f7a4064cfe9:   mov    $0x1,%ebp
   0.47%          ↘↘ ↘    0x00007f7a4064cfee:   mov    0x1b8(%r15),%rbx
   0.19%                  0x00007f7a4064cff5:   mov    %rbx,%r10
   0.09%                  0x00007f7a4064cff8:   add    $0x10,%r10
   0.20%                  0x00007f7a4064cffc:   nopl   0x0(%rax)
   0.27%                  0x00007f7a4064d000:   cmp    0x1c8(%r15),%r10
                          0x00007f7a4064d007:   jae    0x00007f7a4064d131
   0.05%                  0x00007f7a4064d00d:   mov    %r10,0x1b8(%r15)
   0.12%                  0x00007f7a4064d014:   prefetchw 0xc0(%r10)
   0.54%                  0x00007f7a4064d01c:   movq   $0x1,(%rbx)
   0.88%                  0x00007f7a4064d023:   movl   $0x103d288,0x8(%rbx)         ;   {metadata(&apos;jdk/incubator/vector/Int64Vector$Int64Mask&apos;)}
   0.08%                  0x00007f7a4064d02a:   mov    %r12d,0xc(%rbx)
   0.13%                  0x00007f7a4064d02e:   mov    0x1b8(%r15),%rax
   0.25%                  0x00007f7a4064d035:   mov    %rax,%r10
   0.34%                  0x00007f7a4064d038:   add    $0x18,%r10
   0.06%                  0x00007f7a4064d03c:   nopl   0x0(%rax)
   0.03%                  0x00007f7a4064d040:   cmp    0x1c8(%r15),%r10
                          0x00007f7a4064d047:   jae    0x00007f7a4064d150           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@62 (line 475)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f79c40caf28::apply@14
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.29%                  0x00007f7a4064d04d:   mov    %r10,0x1b8(%r15)
   0.43%                  0x00007f7a4064d054:   prefetchw 0xc0(%r10)
   0.62%                  0x00007f7a4064d05c:   movq   $0x1,(%rax)
   1.29%                  0x00007f7a4064d063:   prefetchw 0x100(%r10)
   0.10%                  0x00007f7a4064d06b:   movl   $0x1b00,0x8(%rax)            ;   {metadata({type array bool})}
   0.49%                  0x00007f7a4064d072:   prefetchw 0x140(%r10)
   0.01%                  0x00007f7a4064d07a:   movl   $0x2,0xc(%rax)
   0.57%                  0x00007f7a4064d081:   prefetchw 0x180(%r10)
   0.18%                  0x00007f7a4064d089:   mov    %r12d,0x10(%rax)
   0.48%                  0x00007f7a4064d08d:   mov    %r12d,0x14(%rax)             ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.incubator.vector.Int64Vector$Int64Mask::prepare@6 (line 570)
                                                                                    ; - jdk.incubator.vector.Int64Vector$Int64Mask::&lt;init&gt;@3 (line 562)
                                                                                    ; - jdk.incubator.vector.Int64Vector$Int64Mask::&lt;init&gt;@3 (line 558)
                                                                                    ; - jdk.incubator.vector.Int64Vector::maskFromArray@5 (line 137)
                                                                                    ; - jdk.incubator.vector.Int64Vector::maskFromArray@2 (line 41)
                                                                                    ; - jdk.incubator.vector.AbstractSpecies::maskFactory@5 (line 328)
                                                                                    ; - jdk.incubator.vector.IntVector::maskFactory@5 (line 116)
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@68 (line 478)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f79c40caf28::apply@14
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.23%                  0x00007f7a4064d091:   mov    0x20(%rsp),%r11d             ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
                                                                                    ; - jdk.incubator.vector.Int64Vector::vec@1 (line 117)
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f79c40caf28::apply@14
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.17%                  0x00007f7a4064d096:   mov    %r11b,0x10(%rax)
   0.42%                  0x00007f7a4064d09a:   mov    %bpl,0x11(%rax)              ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.incubator.vector.Int64Vector$Int64Mask::prepare@6 (line 570)
                                                                                    ; - jdk.incubator.vector.Int64Vector$Int64Mask::&lt;init&gt;@3 (line 562)
                                                                                    ; - jdk.incubator.vector.Int64Vector$Int64Mask::&lt;init&gt;@3 (line 558)
                                                                                    ; - jdk.incubator.vector.Int64Vector::maskFromArray@5 (line 137)
                                                                                    ; - jdk.incubator.vector.Int64Vector::maskFromArray@2 (line 41)
                                                                                    ; - jdk.incubator.vector.AbstractSpecies::maskFactory@5 (line 328)
                                                                                    ; - jdk.incubator.vector.IntVector::maskFactory@5 (line 116)
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@68 (line 478)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f79c40caf28::apply@14
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.32%                  0x00007f7a4064d09e:   mov    %rbx,%r10                    ;*putfield payload {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::&lt;init&gt;@6 (line 160)
                                                                                    ; - jdk.internal.vm.vector.VectorSupport$VectorMask::&lt;init&gt;@2 (line 190)
                                                                                    ; - jdk.incubator.vector.VectorMask::&lt;init&gt;@2 (line 134)
                                                                                    ; - jdk.incubator.vector.AbstractMask::&lt;init&gt;@2 (line 39)
                                                                                    ; - jdk.incubator.vector.Int64Vector$Int64Mask::&lt;init&gt;@6 (line 562)
                                                                                    ; - jdk.incubator.vector.Int64Vector$Int64Mask::&lt;init&gt;@3 (line 558)
                                                                                    ; - jdk.incubator.vector.Int64Vector::maskFromArray@5 (line 137)
                                                                                    ; - jdk.incubator.vector.Int64Vector::maskFromArray@2 (line 41)
                                                                                    ; - jdk.incubator.vector.AbstractSpecies::maskFactory@5 (line 328)
                                                                                    ; - jdk.incubator.vector.IntVector::maskFactory@5 (line 116)
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@68 (line 478)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f79c40caf28::apply@14
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.01%                  0x00007f7a4064d0a1:   mov    %rax,%r11
   0.14%                  0x00007f7a4064d0a4:   shr    $0x3,%r11                    ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
                                                                                    ; - jdk.incubator.vector.Int64Vector::vec@1 (line 117)
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f79c40caf28::apply@14
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.07%                  0x00007f7a4064d0a8:   mov    %r11d,0xc(%rbx)              ;*putfield payload {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::&lt;init&gt;@6 (line 160)
                                                                                    ; - jdk.internal.vm.vector.VectorSupport$VectorMask::&lt;init&gt;@2 (line 190)
                                                                                    ; - jdk.incubator.vector.VectorMask::&lt;init&gt;@2 (line 134)
                                                                                    ; - jdk.incubator.vector.AbstractMask::&lt;init&gt;@2 (line 39)
                                                                                    ; - jdk.incubator.vector.Int64Vector$Int64Mask::&lt;init&gt;@6 (line 562)
                                                                                    ; - jdk.incubator.vector.Int64Vector$Int64Mask::&lt;init&gt;@3 (line 558)
                                                                                    ; - jdk.incubator.vector.Int64Vector::maskFromArray@5 (line 137)
                                                                                    ; - jdk.incubator.vector.Int64Vector::maskFromArray@2 (line 41)
                                                                                    ; - jdk.incubator.vector.AbstractSpecies::maskFactory@5 (line 328)
                                                                                    ; - jdk.incubator.vector.IntVector::maskFactory@5 (line 116)
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@68 (line 478)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f79c40caf28::apply@14
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.34%                  0x00007f7a4064d0ac:   mov    %rax,%r11
   0.02%                  0x00007f7a4064d0af:   xor    %r10,%r11
   0.10%                  0x00007f7a4064d0b2:   shr    $0x15,%r11
   0.09%                  0x00007f7a4064d0b6:   test   %r11,%r11
                      ╭   0x00007f7a4064d0b9:   je     0x00007f7a4064d0d1
                      │   0x00007f7a4064d0bb:   shr    $0x9,%r10
                      │   0x00007f7a4064d0bf:   movabs $0x7f7a3433f000,%rdi
                      │   0x00007f7a4064d0c9:   add    %r10,%rdi
                      │   0x00007f7a4064d0cc:   cmpb   $0x2,(%rdi)                  ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
                      │                                                             ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
                      │                                                             ; - jdk.incubator.vector.Int64Vector::vec@1 (line 117)
                      │                                                             ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
                      │                                                             ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                      │                                                             ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f79c40caf28::apply@14
                      │                                                             ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
                      │╭  0x00007f7a4064d0cf:   jne    0x00007f7a4064d0e7           ;*synchronization entry
                      ││                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::&lt;init&gt;@-1 (line 159)
                      ││                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorMask::&lt;init&gt;@2 (line 190)
                      ││                                                            ; - jdk.incubator.vector.VectorMask::&lt;init&gt;@2 (line 134)
                      ││                                                            ; - jdk.incubator.vector.AbstractMask::&lt;init&gt;@2 (line 39)
                      ││                                                            ; - jdk.incubator.vector.Int64Vector$Int64Mask::&lt;init&gt;@6 (line 562)
                      ││                                                            ; - jdk.incubator.vector.Int64Vector$Int64Mask::&lt;init&gt;@3 (line 558)
                      ││                                                            ; - jdk.incubator.vector.Int64Vector::maskFromArray@5 (line 137)
                      ││                                                            ; - jdk.incubator.vector.Int64Vector::maskFromArray@2 (line 41)
                      ││                                                            ; - jdk.incubator.vector.AbstractSpecies::maskFactory@5 (line 328)
                      ││                                                            ; - jdk.incubator.vector.IntVector::maskFactory@5 (line 116)
                      ││                                                            ; - jdk.incubator.vector.IntVector::bTest@68 (line 478)
                      ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                      ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f79c40caf28::apply@14
                      ││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.33%              ↘│  0x00007f7a4064d0d1:   mov    %rbx,%rax
   0.03%               │  0x00007f7a4064d0d4:   add    $0x40,%rsp
   0.12%               │  0x00007f7a4064d0d8:   pop    %rbp
   0.10%               │  0x00007f7a4064d0d9:   cmp    0x450(%r15),%rsp             ;   {poll_return}
                       │  0x00007f7a4064d0e0:   ja     0x00007f7a4064d3de
   0.36%               │  0x00007f7a4064d0e6:   ret    
                       ↘  0x00007f7a4064d0e7:   mov    0x48(%r15),%r10              ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@62 (line 475)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f79c40caf28::apply@14
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
                          0x00007f7a4064d0eb:   mov    0x58(%r15),%r11
                          0x00007f7a4064d0ef:   lock addl $0x0,-0x40(%rsp)          ;*putfield payload {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::&lt;init&gt;@6 (line 160)
                                                                                    ; - jdk.internal.vm.vector.VectorSupport$VectorMask::&lt;init&gt;@2 (line 190)
                                                                                    ; - jdk.incubator.vector.VectorMask::&lt;init&gt;@2 (line 134)
....................................................................................................
  17.47%  <total for region 2>

....[Hottest Regions]...............................................................................
  24.19%         c2, level 4  com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector, version 2, compile id 935 
  17.47%         c2, level 4  jdk.internal.vm.vector.VectorSupport::compare, version 2, compile id 878 
   8.44%         c2, level 4  jdk.incubator.vector.Int64Vector$Int64Mask$$Lambda.0x00007f79c40cc398::apply, version 2, compile id 924 
   8.24%         c2, level 4  jdk.incubator.vector.Int64Vector$Int64Mask$$Lambda.0x00007f79c40cbd70::apply, version 2, compile id 922 
   7.60%         c2, level 4  jdk.internal.vm.vector.VectorSupport::fromBitsCoerced, version 2, compile id 836 
   6.79%         c2, level 4  jdk.internal.vm.vector.VectorSupport::fromBitsCoerced, version 2, compile id 836 
   6.46%         c2, level 4  jdk.internal.vm.vector.VectorSupport::blend, version 2, compile id 926 
   4.81%         c2, level 4  jdk.internal.vm.vector.VectorSupport::maskReductionCoerced, version 2, compile id 898 
   4.72%         c2, level 4  jdk.internal.vm.vector.VectorSupport::compare, version 2, compile id 878 
   3.55%                      <unknown> 
   2.01%                      <unknown> 
   1.73%         c2, level 4  jdk.internal.vm.vector.VectorSupport::binaryOp, version 2, compile id 892 
   0.86%              kernel  [unknown] 
   0.52%              kernel  [unknown] 
   0.32%              kernel  [unknown] 
   0.08%         c2, level 4  com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector, version 2, compile id 935 
   0.07%              kernel  [unknown] 
   0.07%         c2, level 4  jdk.internal.vm.vector.VectorSupport::shuffleToVector, version 2, compile id 955 
   0.07%         c2, level 4  jdk.internal.vm.vector.VectorSupport::shuffleToVector, version 2, compile id 955 
   0.07%              kernel  [unknown] 
   1.92%  <...other 384 warm regions...>
....................................................................................................
 100.00%  <totals>

....[Hottest Methods (after inlining)]..............................................................
  24.33%         c2, level 4  com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector, version 2, compile id 935 
  22.18%         c2, level 4  jdk.internal.vm.vector.VectorSupport::compare, version 2, compile id 878 
  14.39%         c2, level 4  jdk.internal.vm.vector.VectorSupport::fromBitsCoerced, version 2, compile id 836 
   8.44%         c2, level 4  jdk.incubator.vector.Int64Vector$Int64Mask$$Lambda.0x00007f79c40cc398::apply, version 2, compile id 924 
   8.24%         c2, level 4  jdk.incubator.vector.Int64Vector$Int64Mask$$Lambda.0x00007f79c40cbd70::apply, version 2, compile id 922 
   6.46%         c2, level 4  jdk.internal.vm.vector.VectorSupport::blend, version 2, compile id 926 
   5.65%                      <unknown> 
   4.81%         c2, level 4  jdk.internal.vm.vector.VectorSupport::maskReductionCoerced, version 2, compile id 898 
   2.75%              kernel  [unknown] 
   1.73%         c2, level 4  jdk.internal.vm.vector.VectorSupport::binaryOp, version 2, compile id 892 
   0.22%         c2, level 4  jdk.internal.vm.vector.VectorSupport::shuffleToVector, version 2, compile id 955 
   0.07%           libjvm.so  ElfSymbolTable::lookup 
   0.04%         c2, level 4  com.ionutbalosin.jvm.performance.benchmarks.api.vector.jmh_generated.SortVectorApiBenchmark_sortVector_jmhTest::sortVector_avgt_jmhStub, version 5, compile id 986 
   0.04%           libjvm.so  G1MergeHeapRootsTask::G1MergeCardSetClosure::do_heap_region 
   0.03%        libc-2.31.so  __memset_avx2_erms 
   0.02%        libc-2.31.so  _IO_fwrite 
   0.02%        libc-2.31.so  __memset_avx2_unaligned_erms 
   0.02%           libjvm.so  CardTableBarrierSet::on_slowpath_allocation_exit 
   0.01%        libc-2.31.so  _IO_default_xsputn 
   0.01%           libjvm.so  OptoRuntime::new_instance_C 
   0.55%  <...other 139 warm methods...>
....................................................................................................
 100.00%  <totals>

....[Distribution by Source]........................................................................
  90.88%         c2, level 4
   5.65%                    
   2.75%              kernel
   0.51%           libjvm.so
   0.14%        libc-2.31.so
   0.03%  libpthread-2.31.so
   0.02%      hsdis-amd64.so
   0.01%          ld-2.31.so
   0.01%         interpreter
   0.01%              [vdso]
....................................................................................................
 100.00%  <totals>



# JMH version: 1.37
# VM version: JDK 21, OpenJDK 64-Bit Server VM, 21+35-2513
# VM invoker: /home/gogu/bench_jdks/jdk-21/bin/java
# VM options: -Xms4g -Xmx4g -XX:+AlwaysPreTouch --add-modules=jdk.incubator.vector
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark.sortVector
# Parameters: (arraySize = 64, vectorSize = 128)

# Run progress: 8.33% complete, ETA 00:20:22
# Fork: 1 of 1
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 7.262 us/op
# Warmup Iteration   2: 5.551 us/op
# Warmup Iteration   3: 5.542 us/op
# Warmup Iteration   4: 5.542 us/op
# Warmup Iteration   5: 5.540 us/op
Iteration   1: 5.544 us/op
Iteration   2: 5.544 us/op
Iteration   3: 5.542 us/op
Iteration   4: 5.543 us/op
Iteration   5: 5.542 us/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark.sortVector":
  5.543 ±(99.9%) 0.004 us/op [Average]
  (min, avg, max) = (5.542, 5.543, 5.544), stdev = 0.001
  CI (99.9%): [5.539, 5.547] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark.sortVector:asm":
PrintAssembly processed: 182301 total address lines.
Perf output processed (skipped 56.923 seconds):
 Column 1: cycles (50892 events)

Hottest code regions (>10.00% "cycles" events):
 Event counts are percents of total event count.

....[Hottest Region 1]..............................................................................
c2, level 4, com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector, version 2, compile id 920 

                      # {method} {0x00007f459c47a0b8} &apos;sortVector&apos; &apos;()V&apos; in &apos;com/ionutbalosin/jvm/performance/benchmarks/api/vector/SortVectorApiBenchmark&apos;
                      #           [sp+0xc0]  (sp of caller)
                      0x00007f4620664920:   mov    0x8(%rsi),%r10d
                      0x00007f4620664924:   movabs $0x7f45a7000000,%r11
                      0x00007f462066492e:   add    %r11,%r10
                      0x00007f4620664931:   cmp    %r10,%rax
                      0x00007f4620664934:   jne    0x00007f46200c4080           ;   {runtime_call ic_miss_stub}
                      0x00007f462066493a:   xchg   %ax,%ax
                      0x00007f462066493c:   nopl   0x0(%rax)
                    [Verified Entry Point]
   0.00%              0x00007f4620664940:   mov    %eax,-0x14000(%rsp)
   0.02%              0x00007f4620664947:   push   %rbp
                      0x00007f4620664948:   sub    $0xb0,%rsp
                      0x00007f462066494f:   nop
   0.01%              0x00007f4620664950:   cmpl   $0x1,0x20(%r15)
                      0x00007f4620664958:   jne    0x00007f46206659f9           ;*synchronization entry
                                                                                ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@-1 (line 72)
   0.00%              0x00007f462066495e:   mov    %rsi,%r8                     ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                                ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                                ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
                      0x00007f4620664961:   mov    0x14(%rsi),%ecx              ;*getfield species {reexecute=0 rethrow=0 return_oop=0}
                                                                                ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@1 (line 72)
   0.00%              0x00007f4620664964:   mov    0x8(%r12,%rcx,8),%r9d        ; implicit exception: dispatches to 0x00007f46206658a0
                      0x00007f4620664969:   movabs $0x7f45a8035d00,%r10         ;   {metadata(&apos;jdk/incubator/vector/AbstractSpecies&apos;)}
                      0x00007f4620664973:   movabs $0x7f45a7000000,%r11
                      0x00007f462066497d:   add    %r9,%r11
   0.00%              0x00007f4620664980:   mov    0x40(%r11),%r11
   0.04%              0x00007f4620664984:   cmp    %r10,%r11
                      0x00007f4620664987:   jne    0x00007f4620665410
   0.00%              0x00007f462066498d:   mov    %r9d,0x10(%rsp)
                      0x00007f4620664992:   mov    %rsi,0x8(%rsp)               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                                ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                                ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
                      0x00007f4620664997:   lea    (%r12,%rcx,8),%rbp
                      0x00007f462066499b:   mov    %ecx,0x20(%rsp)
   0.01%              0x00007f462066499f:   mov    %rbp,%rsi                    ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                                                ; - jdk.incubator.vector.VectorShuffle::iota@1 (line 391)
                                                                                ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@9 (line 73)
                      0x00007f46206649a2:   data16 xchg %ax,%ax
                      0x00007f46206649a5:   movabs $0x7f45a803c240,%rax
                      0x00007f46206649af:   call   0x00007f4618c4a940           ; ImmutableOopMap {rbp=Oop [8]=Oop [32]=NarrowOop }
                                                                                ;*invokevirtual dummyVector {reexecute=0 rethrow=0 return_oop=1}
                                                                                ; - jdk.incubator.vector.AbstractSpecies::iotaShuffle@10 (line 358)
                                                                                ; - jdk.incubator.vector.VectorShuffle::iota@11 (line 392)
                                                                                ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@9 (line 73)
                                                                                ;   {virtual_call}
   0.04%              0x00007f46206649b4:   nopl   0x324(%rax,%rax,1)           ;   {other}
                      0x00007f46206649bc:   mov    %rax,%rsi                    ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                                ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                                ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.00%              0x00007f46206649bf:   xchg   %ax,%ax
                      0x00007f46206649c1:   movabs $0xffffffffffffffff,%rax
   0.00%              0x00007f46206649cb:   call   0x00007f46200c0fa0           ; ImmutableOopMap {rbp=Oop [8]=Oop [32]=NarrowOop }
                                                                                ;*invokevirtual iotaShuffle {reexecute=0 rethrow=0 return_oop=1}
                                                                                ; - jdk.incubator.vector.AbstractSpecies::iotaShuffle@13 (line 358)
                                                                                ; - jdk.incubator.vector.VectorShuffle::iota@11 (line 392)
                                                                                ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@9 (line 73)
                                                                                ;   {virtual_call}
   0.00%              0x00007f46206649d0:   nopl   0x1000340(%rax,%rax,1)       ;   {other}
                      0x00007f46206649d8:   nopl   0x0(%rax,%rax,1)
   0.01%              0x00007f46206649e0:   mov    0xc(%rax),%r10d              ; implicit exception: dispatches to 0x00007f46206658bc
   0.01%              0x00007f46206649e4:   vmovd  0x10(%r12,%r10,8),%xmm1
   0.03%              0x00007f46206649eb:   mov    0x10(%rsp),%r10d
   0.00%              0x00007f46206649f0:   cmp    $0x103c240,%r10d             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                                ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                                ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
                                                                                ;   {metadata(&apos;jdk/incubator/vector/IntVector$IntSpecies&apos;)}
                      0x00007f46206649f7:   jne    0x00007f4620665424
                      0x00007f46206649fd:   mov    %rbp,%r11                    ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                                                ; - jdk.incubator.vector.IntVector::broadcast@1 (line 610)
                                                                                ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@18 (line 74)
   0.00%              0x00007f4620664a00:   mov    0x2c(%r11),%r10d             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                                ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                                ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
                      0x00007f4620664a04:   mov    0xc(%r11),%ecx               ;*getfield laneCount {reexecute=0 rethrow=0 return_oop=0}
                                                                                ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@8 (line 3847)
                                                                                ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3857)
                                                                                ; - jdk.incubator.vector.IntVector::broadcast@7 (line 611)
                                                                                ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@18 (line 74)
   0.00%              0x00007f4620664a08:   mov    %r11,0x10(%rsp)
                      0x00007f4620664a0d:   mov    %r10,%rsi
   0.00%              0x00007f4620664a10:   shl    $0x3,%rsi
                      0x00007f4620664a14:   movabs $0x7ffe7f600,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffe7f600} = int)}
   0.00%              0x00007f4620664a1e:   xor    %r8d,%r8d
                      0x00007f4620664a21:   xor    %r9d,%r9d
   0.01%              0x00007f4620664a24:   mov    %r11,%rdi
                      0x00007f4620664a27:   movabs $0x7ff18e3e8,%r10            ;   {oop(a &apos;jdk/incubator/vector/IntVector$IntSpecies$$Lambda+0x00007f45a80c6c60&apos;{0x00000007ff18e3e8})}
                      0x00007f4620664a31:   mov    %r10,(%rsp)                  ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                                ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                                ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.01%              0x00007f4620664a35:   vpmovsxbd %xmm1,%xmm0               ;*invokestatic shuffleToVector {reexecute=0 rethrow=0 return_oop=0}
                                                                                ; - jdk.incubator.vector.Int128Vector$Int128Shuffle::toVector@17 (line 815)
                                                                                ; - jdk.incubator.vector.Int128Vector$Int128Shuffle::toVector@1 (line 779)
                                                                                ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@12 (line 73)
   0.00%              0x00007f4620664a3a:   vmovd  %xmm1,0x90(%rsp)
   0.00%              0x00007f4620664a43:   vmovdqu %xmm0,0x30(%rsp)            ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                                ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                                ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.01%              0x00007f4620664a49:   xchg   %ax,%ax
   0.01%              0x00007f4620664a4b:   call   0x00007f462064e8e0           ; ImmutableOopMap {rbp=Oop [8]=Oop [16]=Oop [32]=NarrowOop }
                                                                                ;*invokestatic fromBitsCoerced {reexecute=0 rethrow=0 return_oop=1}
                                                                                ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@19 (line 3848)
                                                                                ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3857)
                                                                                ; - jdk.incubator.vector.IntVector::broadcast@7 (line 611)
                                                                                ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@18 (line 74)
                                                                                ;   {static_call}
                      0x00007f4620664a50:   nopl   0x20003c0(%rax,%rax,1)       ;   {other}
                      0x00007f4620664a58:   nopl   0x0(%rax,%rax,1)
   0.00%              0x00007f4620664a60:   mov    0x8(%rax),%r10d              ; implicit exception: dispatches to 0x00007f46206658d0
   0.01%              0x00007f4620664a64:   cmp    $0x103d7e0,%r10d             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                                ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                                ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
                                                                                ;   {metadata(&apos;jdk/incubator/vector/Int128Vector&apos;)}
                      0x00007f4620664a6b:   jne    0x00007f4620665450           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                                                ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@22 (line 3848)
                                                                                ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3857)
                                                                                ; - jdk.incubator.vector.IntVector::broadcast@7 (line 611)
                                                                                ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@18 (line 74)
   0.00%              0x00007f4620664a71:   mov    %rax,0x18(%rsp)
   0.05%              0x00007f4620664a76:   mov    0x10(%rsp),%r10              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                                ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                                ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
                      0x00007f4620664a7b:   mov    0xc(%r10),%ecx               ;*getfield laneCount {reexecute=0 rethrow=0 return_oop=0}
                                                                                ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@8 (line 3847)
                                                                                ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3857)
                                                                                ; - jdk.incubator.vector.IntVector::broadcast@7 (line 611)
                                                                                ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@24 (line 75)
   0.03%              0x00007f4620664a7f:   mov    0x2c(%r10),%r11d
                      0x00007f4620664a83:   mov    %r11,%rsi
   0.00%              0x00007f4620664a86:   shl    $0x3,%rsi
   0.01%              0x00007f4620664a8a:   movabs $0x7ffe7f600,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffe7f600} = int)}
                      0x00007f4620664a94:   xor    %r8d,%r8d
                      0x00007f4620664a97:   xor    %r9d,%r9d
                      0x00007f4620664a9a:   mov    %r10,%rdi
   0.00%              0x00007f4620664a9d:   movabs $0x7ff18e3e8,%r10            ;   {oop(a &apos;jdk/incubator/vector/IntVector$IntSpecies$$Lambda+0x00007f45a80c6c60&apos;{0x00000007ff18e3e8})}
                      0x00007f4620664aa7:   mov    %r10,(%rsp)
                      0x00007f4620664aab:   vmovd  0x90(%rsp),%xmm0             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                                ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                                ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.00%              0x00007f4620664ab4:   vpmovsxbd %xmm0,%xmm0               ;*invokestatic shuffleToVector {reexecute=0 rethrow=0 return_oop=0}
                                                                                ; - jdk.incubator.vector.Int128Vector$Int128Shuffle::toVector@17 (line 815)
                                                                                ; - jdk.incubator.vector.Int128Vector$Int128Shuffle::toVector@1 (line 779)
                                                                                ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@12 (line 73)
   0.00%              0x00007f4620664ab9:   vmovdqu %xmm0,0x20(%rsp)
                      0x00007f4620664abf:   call   0x00007f462064e8e0           ; ImmutableOopMap {[8]=Oop [16]=Oop [24]=Oop }
                                                                                ;*invokestatic fromBitsCoerced {reexecute=0 rethrow=0 return_oop=1}
                                                                                ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@19 (line 3848)
                                                                                ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3857)
                                                                                ; - jdk.incubator.vector.IntVector::broadcast@7 (line 611)
                                                                                ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@24 (line 75)
                                                                                ;   {static_call}
                      0x00007f4620664ac4:   nopl   0x3000434(%rax,%rax,1)       ;   {other}
                      0x00007f4620664acc:   mov    0x8(%rax),%r11d              ; implicit exception: dispatches to 0x00007f46206658fc
   0.01%              0x00007f4620664ad0:   cmp    $0x103d7e0,%r11d             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                                ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                                ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
                                                                                ;   {metadata(&apos;jdk/incubator/vector/Int128Vector&apos;)}
                      0x00007f4620664ad7:   jne    0x00007f462066548c           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                                                ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@22 (line 3848)
                                                                                ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3857)
                                                                                ; - jdk.incubator.vector.IntVector::broadcast@7 (line 611)
                                                                                ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@24 (line 75)
   0.01%              0x00007f4620664add:   mov    %rax,0x20(%rsp)
   0.03%              0x00007f4620664ae2:   mov    0x10(%rsp),%r10              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                                ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                                ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
                      0x00007f4620664ae7:   mov    0xc(%r10),%ecx               ;*getfield laneCount {reexecute=0 rethrow=0 return_oop=0}
                                                                                ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@8 (line 3847)
                                                                                ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3857)
                                                                                ; - jdk.incubator.vector.IntVector::broadcast@7 (line 611)
                                                                                ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@31 (line 76)
   0.03%              0x00007f4620664aeb:   mov    0x2c(%r10),%r10d
                      0x00007f4620664aef:   mov    %r10,%rsi
                      0x00007f4620664af2:   shl    $0x3,%rsi
   0.01%              0x00007f4620664af6:   mov    $0x1,%r8d
                      0x00007f4620664afc:   movabs $0x7ffe7f600,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffe7f600} = int)}
                      0x00007f4620664b06:   xor    %r9d,%r9d
                      0x00007f4620664b09:   mov    0x10(%rsp),%rdi
   0.01%              0x00007f4620664b0e:   movabs $0x7ff18e3e8,%r10            ;   {oop(a &apos;jdk/incubator/vector/IntVector$IntSpecies$$Lambda+0x00007f45a80c6c60&apos;{0x00000007ff18e3e8})}
                      0x00007f4620664b18:   mov    %r10,(%rsp)
                      0x00007f4620664b1c:   vmovd  0x90(%rsp),%xmm0             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                                ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                                ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
                      0x00007f4620664b25:   vpmovsxbd %xmm0,%xmm0               ;*invokestatic shuffleToVector {reexecute=0 rethrow=0 return_oop=0}
                                                                                ; - jdk.incubator.vector.Int128Vector$Int128Shuffle::toVector@17 (line 815)
                                                                                ; - jdk.incubator.vector.Int128Vector$Int128Shuffle::toVector@1 (line 779)
                                                                                ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@12 (line 73)
   0.01%              0x00007f4620664b2a:   vmovdqu %xmm0,0x30(%rsp)            ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                                ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                                ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
                      0x00007f4620664b30:   data16 xchg %ax,%ax
                      0x00007f4620664b33:   call   0x00007f462064e8e0           ; ImmutableOopMap {[8]=Oop [16]=Oop [24]=Oop [32]=Oop }
                                                                                ;*invokestatic fromBitsCoerced {reexecute=0 rethrow=0 return_oop=1}
                                                                                ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@19 (line 3848)
                                                                                ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3857)
                                                                                ; - jdk.incubator.vector.IntVector::broadcast@7 (line 611)
                                                                                ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@31 (line 76)
                                                                                ;   {static_call}
                      0x00007f4620664b38:   nopl   0x40004a8(%rax,%rax,1)       ;   {other}
                      0x00007f4620664b40:   mov    0x8(%rax),%r10d              ; implicit exception: dispatches to 0x00007f4620665934
   0.02%              0x00007f4620664b44:   cmp    $0x103d7e0,%r10d             ;   {metadata(&apos;jdk/incubator/vector/Int128Vector&apos;)}
                      0x00007f4620664b4b:   jne    0x00007f46206654d0
   0.01%              0x00007f4620664b51:   mov    0x8(%rsp),%r11               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                                ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                                ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.05%              0x00007f4620664b56:   mov    0x18(%r11),%r8d              ;*getfield input {reexecute=0 rethrow=0 return_oop=0}
                                                                                ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@42 (line 77)
   0.03%              0x00007f4620664b5a:   nopw   0x0(%rax,%rax,1)
                      0x00007f4620664b60:   mov    0xc(%r12,%r8,8),%r10d        ; implicit exception: dispatches to 0x00007f4620665980
   0.04%              0x00007f4620664b65:   test   %r10d,%r10d
                      0x00007f4620664b68:   jbe    0x00007f462066510e
   0.01%              0x00007f4620664b6e:   mov    %rax,%rcx
                      0x00007f4620664b71:   xor    %ebx,%ebx
          ╭           0x00007f4620664b73:   jmp    0x00007f4620664c00
   0.12%  │  ↗        0x00007f4620664b78:   mov    0x28(%rsp),%r11
   0.01%  │  │        0x00007f4620664b7d:   mov    0x38(%rsp),%rcx
   0.00%  │  │        0x00007f4620664b82:   mov    0x40(%rsp),%r10d             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │  │                                                                  ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          │  │                                                                  ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
          │  │        0x00007f4620664b87:   mov    0x1c(%r11),%edi              ;*getfield result {reexecute=0 rethrow=0 return_oop=0}
          │  │                                                                  ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@179 (line 91)
   0.09%  │  │        0x00007f4620664b8b:   mov    0xc(%r12,%rdi,8),%ebp        ; implicit exception: dispatches to 0x00007f462066581c
   0.16%  │  │        0x00007f4620664b90:   add    $0xfffffffd,%ebp
   0.05%  │  │        0x00007f4620664b93:   test   %ebp,%ebp
          │  │        0x00007f4620664b95:   jl     0x00007f46206653d4
   0.07%  │  │        0x00007f4620664b9b:   nopl   0x0(%rax,%rax,1)
   0.05%  │  │        0x00007f4620664ba0:   cmp    %ebp,%r10d
          │  │        0x00007f4620664ba3:   jae    0x00007f4620665340
   0.08%  │  │        0x00007f4620664ba9:   mov    %r10d,%ebx                   ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │  │                                                                  ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          │  │                                                                  ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.00%  │  │        0x00007f4620664bac:   add    0xc(%r9),%ebx                ;*goto {reexecute=0 rethrow=0 return_oop=0}
          │  │                                                                  ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@174 (line 79)
   0.00%  │  │        0x00007f4620664bb0:   mov    0x458(%r15),%rsi
   0.03%  │  │        0x00007f4620664bb7:   mov    0x18(%rsp),%rbp
   0.07%  │  │        0x00007f4620664bbc:   mov    0xc(%rbp),%eax               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │  │                                                                  ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          │  │                                                                  ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.01%  │  │        0x00007f4620664bbf:   mov    0x18(%r11),%r8d              ;*getfield input {reexecute=0 rethrow=0 return_oop=0}
          │  │                                                                  ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@42 (line 77)
          │  │        0x00007f4620664bc3:   vmovdqu 0x10(%r12,%rax,8),%xmm1
   0.13%  │  │        0x00007f4620664bca:   shl    $0x3,%rdi
   0.04%  │  │        0x00007f4620664bce:   vmovdqu %xmm1,0x10(%rdi,%r10,4)     ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │  │                                                                  ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          │  │                                                                  ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.23%  │  │        0x00007f4620664bd5:   vpmovsxbd %xmm0,%xmm1               ; ImmutableOopMap {r11=Oop r8=NarrowOop r9=Oop rcx=Oop rdx=Oop [24]=Oop }
          │  │                                                                  ;*goto {reexecute=1 rethrow=0 return_oop=0}
          │  │                                                                  ; - (reexecute) com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@198 (line 77)
          │  │        0x00007f4620664bda:   test   %eax,(%rsi)                  ;   {poll}
   0.01%  │  │        0x00007f4620664bdc:   nopl   0x0(%rax)
   0.01%  │  │        0x00007f4620664be0:   mov    0xc(%r12,%r8,8),%edi         ; implicit exception: dispatches to 0x00007f4620665830
   0.09%  │  │        0x00007f4620664be5:   cmp    %edi,%ebx
          │  │        0x00007f4620664be7:   jge    0x00007f462066510e
          │  │        0x00007f4620664bed:   mov    %rdx,0x20(%rsp)
   0.01%  │  │        0x00007f4620664bf2:   mov    %r9,0x10(%rsp)
   0.01%  │  │        0x00007f4620664bf7:   vmovd  %xmm0,0x90(%rsp)
   0.10%  ↘  │        0x00007f4620664c00:   mov    0xc(%r12,%r8,8),%r10d        ; implicit exception: dispatches to 0x00007f4620665808
   0.01%     │        0x00007f4620664c05:   mov    0x10(%rsp),%r9               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
             │                                                                  ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
             │                                                                  ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.01%     │        0x00007f4620664c0a:   mov    0xc(%r9),%esi                ;*getfield laneCount {reexecute=0 rethrow=0 return_oop=0}
             │                                                                  ; - jdk.incubator.vector.AbstractSpecies::length@1 (line 117)
             │                                                                  ; - jdk.incubator.vector.IntVector::fromArray@2 (line 2953)
             │                                                                  ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@56 (line 78)
   0.01%     │        0x00007f4620664c0e:   sub    %esi,%r10d
   0.10%     │        0x00007f4620664c11:   inc    %r10d
   0.05%     │        0x00007f4620664c14:   test   %r10d,%r10d
             │        0x00007f4620664c17:   jl     0x00007f462066537c
   0.01%     │        0x00007f4620664c1d:   data16 xchg %ax,%ax
   0.00%     │        0x00007f4620664c20:   cmp    %r10d,%ebx
             │        0x00007f4620664c23:   jae    0x00007f46206652e8           ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
             │                                                                  ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
             │                                                                  ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.10%     │        0x00007f4620664c29:   mov    0x44(%r9),%eax               ;*getfield dummyVector {reexecute=0 rethrow=0 return_oop=0}
             │                                                                  ; - jdk.incubator.vector.AbstractSpecies::dummyVector@1 (line 308)
             │                                                                  ; - jdk.incubator.vector.IntVector$IntSpecies::dummyVector@1 (line 3918)
             │                                                                  ; - jdk.incubator.vector.IntVector::fromArray@19 (line 2955)
             │                                                                  ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@56 (line 78)
   0.01%     │        0x00007f4620664c2d:   mov    %ebx,%r10d                   ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
             │                                                                  ; - java.util.Objects::checkIndex@3 (line 385)
             │                                                                  ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 61)
             │                                                                  ; - jdk.incubator.vector.IntVector::fromArray@9 (line 2953)
             │                                                                  ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@56 (line 78)
   0.01%     │        0x00007f4620664c30:   mov    0x8(%r12,%rax,8),%edi        ; implicit exception: dispatches to 0x00007f4620665844
   0.02%     │        0x00007f4620664c35:   data16 data16 nopw 0x0(%rax,%rax,1)
   0.09%     │        0x00007f4620664c40:   cmp    $0x103d7e0,%edi              ;   {metadata(&apos;jdk/incubator/vector/Int128Vector&apos;)}
             │        0x00007f4620664c46:   jne    0x00007f4620665520
   0.01%     │        0x00007f4620664c4c:   test   %esi,%esi
           ╭ │        0x00007f4620664c4e:   jle    0x00007f46206650fb
   0.01%   │ │        0x00007f4620664c54:   shl    $0x3,%r8                     ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           │ │                                                                  ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
           │ │                                                                  ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.01%   │ │        0x00007f4620664c58:   vmovdqu 0x10(%r8,%r10,4),%xmm1      ;*invokestatic load {reexecute=0 rethrow=0 return_oop=0}
           │ │                                                                  ; - jdk.incubator.vector.IntVector::fromArray0Template@32 (line 3442)
           │ │                                                                  ; - jdk.incubator.vector.Int128Vector::fromArray0@3 (line 852)
           │ │                                                                  ; - jdk.incubator.vector.IntVector::fromArray@24 (line 2955)
           │ │                                                                  ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@56 (line 78)
   0.09%   │ │        0x00007f4620664c5f:   vpextrd $0x2,%xmm1,%edi             ;*invokestatic extract {reexecute=0 rethrow=0 return_oop=0}
           │ │                                                                  ; - jdk.incubator.vector.Int128Vector::laneHelper@16 (line 523)
           │ │                                                                  ; - jdk.incubator.vector.Int128Vector::lane@46 (line 516)
           │ │                                                                  ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@79 (line 80)
   0.03%   │ │        0x00007f4620664c65:   vmovd  %xmm1,%esi                   ;*invokestatic extract {reexecute=0 rethrow=0 return_oop=0}
           │ │                                                                  ; - jdk.incubator.vector.Int128Vector::laneHelper@16 (line 523)
           │ │                                                                  ; - jdk.incubator.vector.Int128Vector::lane@34 (line 514)
           │ │                                                                  ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@79 (line 80)
   0.00%   │ │        0x00007f4620664c69:   vpextrd $0x1,%xmm1,%eax             ;*invokestatic extract {reexecute=0 rethrow=0 return_oop=0}
           │ │                                                                  ; - jdk.incubator.vector.Int128Vector::laneHelper@16 (line 523)
           │ │                                                                  ; - jdk.incubator.vector.Int128Vector::lane@40 (line 515)
           │ │                                                                  ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@79 (line 80)
   0.10%   │ │        0x00007f4620664c6f:   xor    %r8d,%r8d
   0.01%   │╭│        0x00007f4620664c72:   jmp    0x00007f46206650b5
           │││        0x00007f4620664c77:   nopw   0x0(%rax,%rax,1)
   0.11%   │││    ↗   0x00007f4620664c80:   mov    %eax,%ebx                    ;*invokevirtual lane {reexecute=0 rethrow=0 return_oop=0}
           │││    │                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@79 (line 80)
   0.10%   │││ ↗ ↗│↗  0x00007f4620664c82:   vmovdqu %xmm1,0x50(%rsp)
   0.08%   │││ │ │││  0x00007f4620664c88:   mov    %r8d,0x4c(%rsp)
   0.09%   │││ │ │││  0x00007f4620664c8d:   mov    %eax,0x48(%rsp)
   0.13%   │││ │ │││  0x00007f4620664c91:   mov    %esi,0x44(%rsp)
   0.12%   │││ │ │││  0x00007f4620664c95:   mov    %edi,0x14(%rsp)
   0.08%   │││ │ │││  0x00007f4620664c99:   mov    %r10d,0x40(%rsp)
   0.13%   │││ │ │││  0x00007f4620664c9e:   mov    %rcx,0x38(%rsp)
   0.11%   │││ │ │││  0x00007f4620664ca3:   mov    %r11,0x28(%rsp)              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           │││ │ │││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
           │││ │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.13%   │││ │ │││  0x00007f4620664ca8:   mov    0xc(%r9),%ecx                ;*getfield laneCount {reexecute=0 rethrow=0 return_oop=0}
           │││ │ │││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@8 (line 3847)
           │││ │ │││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3857)
           │││ │ │││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 611)
           │││ │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@87 (line 81)
   0.08%   │││ │ │││  0x00007f4620664cac:   mov    %r9,0x30(%rsp)
   0.10%   │││ │ │││  0x00007f4620664cb1:   mov    0x2c(%r9),%r11d              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           │││ │ │││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
           │││ │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.12%   │││ │ │││  0x00007f4620664cb5:   movslq %ebx,%r8                     ;*i2l {reexecute=0 rethrow=0 return_oop=0}
           │││ │ │││                                                            ; - jdk.incubator.vector.IntVector::toBits@1 (line 500)
           │││ │ │││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@2 (line 3857)
           │││ │ │││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 611)
           │││ │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@87 (line 81)
   0.12%   │││ │ │││  0x00007f4620664cb8:   mov    %r11,%rsi
   0.06%   │││ │ │││  0x00007f4620664cbb:   shl    $0x3,%rsi
   0.10%   │││ │ │││  0x00007f4620664cbf:   movabs $0x7ffe7f600,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffe7f600} = int)}
   0.14%   │││ │ │││  0x00007f4620664cc9:   xor    %r9d,%r9d
   0.13%   │││ │ │││  0x00007f4620664ccc:   mov    0x30(%rsp),%rdi
   0.38%   │││ │ │││  0x00007f4620664cd1:   movabs $0x7ff18e3e8,%r10            ;   {oop(a &apos;jdk/incubator/vector/IntVector$IntSpecies$$Lambda+0x00007f45a80c6c60&apos;{0x00000007ff18e3e8})}
   0.12%   │││ │ │││  0x00007f4620664cdb:   mov    %r10,(%rsp)
   0.14%   │││ │ │││  0x00007f4620664cdf:   vmovd  0x90(%rsp),%xmm0             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           │││ │ │││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
           │││ │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.12%   │││ │ │││  0x00007f4620664ce8:   vpmovsxbd %xmm0,%xmm0               ;*invokestatic shuffleToVector {reexecute=0 rethrow=0 return_oop=0}
           │││ │ │││                                                            ; - jdk.incubator.vector.Int128Vector$Int128Shuffle::toVector@17 (line 815)
           │││ │ │││                                                            ; - jdk.incubator.vector.Int128Vector$Int128Shuffle::toVector@1 (line 779)
           │││ │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@12 (line 73)
   0.13%   │││ │ │││  0x00007f4620664ced:   vmovdqu %xmm0,0x60(%rsp)
   0.16%   │││ │ │││  0x00007f4620664cf3:   call   0x00007f462064e8e0           ; ImmutableOopMap {[24]=Oop [32]=Oop [40]=Oop [48]=Oop [56]=Oop }
           │││ │ │││                                                            ;*invokestatic fromBitsCoerced {reexecute=0 rethrow=0 return_oop=1}
           │││ │ │││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@19 (line 3848)
           │││ │ │││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3857)
           │││ │ │││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 611)
           │││ │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@87 (line 81)
           │││ │ │││                                                            ;   {static_call}
   0.02%   │││ │ │││  0x00007f4620664cf8:   nopl   0x6000668(%rax,%rax,1)       ;   {other}
           │││ │ │││  0x00007f4620664d00:   mov    0x8(%rax),%r10d              ; implicit exception: dispatches to 0x00007f46206656c8
   0.50%   │││ │ │││  0x00007f4620664d04:   cmp    $0x103d7e0,%r10d             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           │││ │ │││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
           │││ │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
           │││ │ │││                                                            ;   {metadata(&apos;jdk/incubator/vector/Int128Vector&apos;)}
           │││ │ │││  0x00007f4620664d0b:   jne    0x00007f4620665580           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
           │││ │ │││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@22 (line 3848)
           │││ │ │││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3857)
           │││ │ │││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 611)
           │││ │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@87 (line 81)
   0.06%   │││ │ │││  0x00007f4620664d11:   mov    %rax,0x60(%rsp)
   1.46%   │││ │ │││  0x00007f4620664d16:   mov    0x30(%rsp),%r10              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           │││ │ │││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
           │││ │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.12%   │││ │ │││  0x00007f4620664d1b:   mov    0xc(%r10),%ecx               ;*getfield laneCount {reexecute=0 rethrow=0 return_oop=0}
           │││ │ │││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@8 (line 3847)
           │││ │ │││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@6 (line 3863)
           │││ │ │││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@2 (line 3804)
           │││ │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@124 (line 86)
   1.66%   │││ │ │││  0x00007f4620664d1f:   mov    0xc(%rax),%r10d
   0.01%   │││ │ │││  0x00007f4620664d23:   mov    0x30(%rsp),%r11
           │││ │ │││  0x00007f4620664d28:   mov    0x2c(%r11),%r8d
   0.07%   │││ │ │││  0x00007f4620664d2c:   vmovdqu 0x10(%r12,%r10,8),%xmm0
   0.56%   │││ │ │││  0x00007f4620664d33:   vmovdqu 0x50(%rsp),%xmm2
   0.02%   │││ │ │││  0x00007f4620664d39:   vpcmpeqd %xmm0,%xmm2,%xmm1
   1.16%   │││ │ │││  0x00007f4620664d3d:   vpcmpgtd %xmm2,%xmm0,%xmm0
   0.00%   │││ │ │││  0x00007f4620664d41:   mov    %r8,%rsi
   0.00%   │││ │ │││  0x00007f4620664d44:   shl    $0x3,%rsi
   0.00%   │││ │ │││  0x00007f4620664d48:   vmovmskps %xmm1,%r8d
   1.37%   │││ │ │││  0x00007f4620664d4c:   popcnt %r8,%r10
   0.01%   │││ │ │││  0x00007f4620664d51:   vmovmskps %xmm0,%r11d
   0.00%   │││ │ │││  0x00007f4620664d55:   popcnt %r11,%rbp
   0.00%   │││ │ │││  0x00007f4620664d5a:   add    %ebp,%r10d                   ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           │││ │ │││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
           │││ │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.37%   │││ │ │││  0x00007f4620664d5d:   movslq %r10d,%r8                    ;*i2l {reexecute=0 rethrow=0 return_oop=0}
           │││ │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@123 (line 84)
   0.40%   │││ │ │││  0x00007f4620664d60:   movabs $0x7ffe7f600,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffe7f600} = int)}
           │││ │ │││  0x00007f4620664d6a:   xor    %r9d,%r9d
   0.00%   │││ │ │││  0x00007f4620664d6d:   mov    0x30(%rsp),%rdi
           │││ │ │││  0x00007f4620664d72:   movabs $0x7ff18e3e8,%r10            ;   {oop(a &apos;jdk/incubator/vector/IntVector$IntSpecies$$Lambda+0x00007f45a80c6c60&apos;{0x00000007ff18e3e8})}
   0.44%   │││ │ │││  0x00007f4620664d7c:   mov    %r10,(%rsp)
           │││ │ │││  0x00007f4620664d80:   vmovd  0x90(%rsp),%xmm0             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           │││ │ │││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
           │││ │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.00%   │││ │ │││  0x00007f4620664d89:   vpmovsxbd %xmm0,%xmm0               ;*invokestatic shuffleToVector {reexecute=0 rethrow=0 return_oop=0}
           │││ │ │││                                                            ; - jdk.incubator.vector.Int128Vector$Int128Shuffle::toVector@17 (line 815)
           │││ │ │││                                                            ; - jdk.incubator.vector.Int128Vector$Int128Shuffle::toVector@1 (line 779)
           │││ │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@12 (line 73)
           │││ │ │││  0x00007f4620664d8e:   vmovdqu %xmm0,0x70(%rsp)            ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           │││ │ │││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
           │││ │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.44%   │││ │ │││  0x00007f4620664d94:   data16 xchg %ax,%ax
           │││ │ │││  0x00007f4620664d97:   call   0x00007f462064e8e0           ; ImmutableOopMap {[24]=Oop [32]=Oop [40]=Oop [48]=Oop [56]=Oop [96]=Oop }
           │││ │ │││                                                            ;*invokestatic fromBitsCoerced {reexecute=0 rethrow=0 return_oop=1}
           │││ │ │││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@19 (line 3848)
           │││ │ │││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@6 (line 3863)
           │││ │ │││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@2 (line 3804)
           │││ │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@124 (line 86)
           │││ │ │││                                                            ;   {static_call}
   0.03%   │││ │ │││  0x00007f4620664d9c:   nopl   0x700070c(%rax,%rax,1)       ;   {other}
   0.00%   │││ │ │││  0x00007f4620664da4:   mov    0x8(%rax),%r10d              ; implicit exception: dispatches to 0x00007f4620665730
   1.02%   │││ │ │││  0x00007f4620664da8:   cmp    $0x103d7e0,%r10d             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           │││ │ │││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
           │││ │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
           │││ │ │││                                                            ;   {metadata(&apos;jdk/incubator/vector/Int128Vector&apos;)}
           │││ │ │││  0x00007f4620664daf:   jne    0x00007f46206655f0           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
           │││ │ │││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@22 (line 3848)
           │││ │ │││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@6 (line 3863)
           │││ │ │││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@2 (line 3804)
           │││ │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@124 (line 86)
   0.35%   │││ │ │││  0x00007f4620664db5:   mov    0x30(%rsp),%r10
   1.89%   │││ │ │││  0x00007f4620664dba:   mov    0x2c(%r10),%r10d
   1.57%   │││ │ │││  0x00007f4620664dbe:   mov    0xc(%rax),%r8d
   0.01%   │││ │ │││  0x00007f4620664dc2:   mov    0x30(%rsp),%r11              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           │││ │ │││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
           │││ │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
           │││ │ │││  0x00007f4620664dc7:   mov    0xc(%r11),%ecx               ;*getfield laneCount {reexecute=0 rethrow=0 return_oop=0}
           │││ │ │││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@8 (line 3847)
           │││ │ │││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@6 (line 3863)
           │││ │ │││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@2 (line 3804)
           │││ │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@137 (line 87)
   0.09%   │││ │ │││  0x00007f4620664dcb:   vmovdqu 0x10(%r12,%r8,8),%xmm1
   0.39%   │││ │ │││  0x00007f4620664dd2:   vmovd  0x90(%rsp),%xmm0             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           │││ │ │││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
           │││ │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.00%   │││ │ │││  0x00007f4620664ddb:   vpmovsxbd %xmm0,%xmm2               ;*invokestatic shuffleToVector {reexecute=0 rethrow=0 return_oop=0}
           │││ │ │││                                                            ; - jdk.incubator.vector.Int128Vector$Int128Shuffle::toVector@17 (line 815)
           │││ │ │││                                                            ; - jdk.incubator.vector.Int128Vector$Int128Shuffle::toVector@1 (line 779)
           │││ │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@12 (line 73)
   0.01%   │││ │ │││  0x00007f4620664de0:   vpcmpgtd %xmm2,%xmm1,%xmm3          ;*invokestatic compare {reexecute=0 rethrow=0 return_oop=0}
           │││ │ │││                                                            ; - jdk.incubator.vector.IntVector::compareTemplate@42 (line 2029)
           │││ │ │││                                                            ; - jdk.incubator.vector.Int128Vector::compare@5 (line 384)
           │││ │ │││                                                            ; - jdk.incubator.vector.Int128Vector::compare@3 (line 41)
           │││ │ │││                                                            ; - jdk.incubator.vector.IntVector::lt@5 (line 1933)
           │││ │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@129 (line 86)
   1.25%   │││ │ │││  0x00007f4620664de4:   mov    %r10,%rsi
   0.00%   │││ │ │││  0x00007f4620664de7:   shl    $0x3,%rsi
           │││ │ │││  0x00007f4620664deb:   movslq %ebp,%r8
           │││ │ │││  0x00007f4620664dee:   vpxor  %xmm1,%xmm1,%xmm1
   0.44%   │││ │ │││  0x00007f4620664df2:   vpabsd %xmm3,%xmm2
           │││ │ │││  0x00007f4620664df7:   vpackusdw %xmm1,%xmm2,%xmm2
           │││ │ │││  0x00007f4620664dfc:   vpackuswb %xmm1,%xmm2,%xmm2
   0.00%   │││ │ │││  0x00007f4620664e00:   vmovd  %xmm2,0x68(%rsp)
   0.41%   │││ │ │││  0x00007f4620664e06:   vmovdqu %xmm3,0x70(%rsp)
   0.00%   │││ │ │││  0x00007f4620664e0c:   movabs $0x7ffe7f600,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffe7f600} = int)}
           │││ │ │││  0x00007f4620664e16:   xor    %r9d,%r9d
   0.00%   │││ │ │││  0x00007f4620664e19:   mov    %r11,%rdi
   0.40%   │││ │ │││  0x00007f4620664e1c:   movabs $0x7ff18e3e8,%r10            ;   {oop(a &apos;jdk/incubator/vector/IntVector$IntSpecies$$Lambda+0x00007f45a80c6c60&apos;{0x00000007ff18e3e8})}
   0.00%   │││ │ │││  0x00007f4620664e26:   mov    %r10,(%rsp)                  ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           │││ │ │││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
           │││ │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
           │││ │ │││  0x00007f4620664e2a:   vpmovsxbd %xmm0,%xmm0               ;*invokestatic shuffleToVector {reexecute=0 rethrow=0 return_oop=0}
           │││ │ │││                                                            ; - jdk.incubator.vector.Int128Vector$Int128Shuffle::toVector@17 (line 815)
           │││ │ │││                                                            ; - jdk.incubator.vector.Int128Vector$Int128Shuffle::toVector@1 (line 779)
           │││ │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@12 (line 73)
           │││ │ │││  0x00007f4620664e2f:   vmovdqu %xmm0,0x80(%rsp)            ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           │││ │ │││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
           │││ │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.43%   │││ │ │││  0x00007f4620664e38:   data16 xchg %ax,%ax
   0.01%   │││ │ │││  0x00007f4620664e3b:   call   0x00007f462064e8e0           ; ImmutableOopMap {[24]=Oop [32]=Oop [40]=Oop [48]=Oop [56]=Oop [96]=Oop }
           │││ │ │││                                                            ;*invokestatic fromBitsCoerced {reexecute=0 rethrow=0 return_oop=1}
           │││ │ │││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@19 (line 3848)
           │││ │ │││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@6 (line 3863)
           │││ │ │││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@2 (line 3804)
           │││ │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@137 (line 87)
           │││ │ │││                                                            ;   {static_call}
   0.04%   │││ │ │││  0x00007f4620664e40:   nopl   0x80007b0(%rax,%rax,1)       ;   {other}
           │││ │ │││  0x00007f4620664e48:   mov    0x8(%rax),%r11d              ; implicit exception: dispatches to 0x00007f4620665794
   0.54%   │││ │ │││  0x00007f4620664e4c:   cmp    $0x103d7e0,%r11d             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           │││ │ │││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
           │││ │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
           │││ │ │││                                                            ;   {metadata(&apos;jdk/incubator/vector/Int128Vector&apos;)}
           │││ │ │││  0x00007f4620664e53:   jne    0x00007f4620665650           ;*goto {reexecute=0 rethrow=0 return_oop=0}
           │││ │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@174 (line 79)
   0.46%   │││ │ │││  0x00007f4620664e59:   mov    0x1b8(%r15),%r8
   0.42%   │││ │ │││  0x00007f4620664e60:   mov    0xc(%rax),%r11d
   0.33%   │││ │ │││  0x00007f4620664e64:   mov    %r8,%r10
   0.01%   │││ │ │││  0x00007f4620664e67:   add    $0x20,%r10
   0.01%   │││ │ │││  0x00007f4620664e6b:   vmovdqu 0x10(%r12,%r11,8),%xmm1
   2.12%   │││ │ │││  0x00007f4620664e72:   vmovd  0x90(%rsp),%xmm0             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           │││ │ │││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
           │││ │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.00%   │││ │ │││  0x00007f4620664e7b:   vpmovsxbd %xmm0,%xmm2               ;*invokestatic shuffleToVector {reexecute=0 rethrow=0 return_oop=0}
           │││ │ │││                                                            ; - jdk.incubator.vector.Int128Vector$Int128Shuffle::toVector@17 (line 815)
           │││ │ │││                                                            ; - jdk.incubator.vector.Int128Vector$Int128Shuffle::toVector@1 (line 779)
           │││ │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@12 (line 73)
   0.38%   │││ │ │││  0x00007f4620664e80:   vpcmpgtd %xmm2,%xmm1,%xmm1
   1.73%   │││ │ │││  0x00007f4620664e84:   vpcmpeqd %xmm2,%xmm2,%xmm2
           │││ │ │││  0x00007f4620664e88:   vpxor  %xmm2,%xmm1,%xmm1
   0.48%   │││ │ │││  0x00007f4620664e8c:   vmovdqu 0x70(%rsp),%xmm2            ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           │││ │ │││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
           │││ │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.01%   │││ │ │││  0x00007f4620664e92:   vpand  %xmm1,%xmm2,%xmm4
   0.47%   │││ │ │││  0x00007f4620664e96:   vpxor  %xmm1,%xmm1,%xmm1
           │││ │ │││  0x00007f4620664e9a:   vpabsd %xmm4,%xmm3
   0.44%   │││ │ │││  0x00007f4620664e9f:   vpackusdw %xmm1,%xmm3,%xmm3
           │││ │ │││  0x00007f4620664ea4:   vpackuswb %xmm1,%xmm3,%xmm3
           │││ │ │││  0x00007f4620664ea8:   cmp    0x1c8(%r15),%r10
           │││ │ │││  0x00007f4620664eaf:   jae    0x00007f4620665124
           │││ │ │││  0x00007f4620664eb5:   mov    %r10,0x1b8(%r15)
   0.40%   │││ │ │││  0x00007f4620664ebc:   prefetchw 0xc0(%r10)
           │││ │ │││  0x00007f4620664ec4:   movq   $0x1,(%r8)
   0.00%   │││ │ │││  0x00007f4620664ecb:   prefetchw 0x100(%r10)
           │││ │ │││  0x00007f4620664ed3:   movl   $0x26a0,0x8(%r8)             ;   {metadata({type array int})}
   0.50%   │││ │ │││  0x00007f4620664edb:   prefetchw 0x140(%r10)
   0.00%   │││ │ │││  0x00007f4620664ee3:   movl   $0x4,0xc(%r8)
   0.05%   │││ │ │││  0x00007f4620664eeb:   prefetchw 0x180(%r10)
   0.13%   │││ │ │││  0x00007f4620664ef3:   mov    %r12,0x10(%r8)
   0.59%   │││ │ │││  0x00007f4620664ef7:   mov    %r12,0x18(%r8)
           │││ │ │││  0x00007f4620664efb:   mov    %r8,0x68(%rsp)
   0.26%   │││ │ │││  0x00007f4620664f00:   mov    0x18(%rsp),%r10
   0.04%   │││ │ │││  0x00007f4620664f05:   mov    0xc(%r10),%r10d              ;*goto {reexecute=0 rethrow=0 return_oop=0}
           │││ │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@174 (line 79)
   0.31%   │││ │ │││  0x00007f4620664f09:   mov    0x1b8(%r15),%r8
   0.03%   │││ │ │││  0x00007f4620664f10:   vmovdqu 0x10(%r12,%r10,8),%xmm1
   1.28%   │││ │ │││  0x00007f4620664f17:   mov    %r8,%r10
   0.01%   │││ │ │││  0x00007f4620664f1a:   add    $0x10,%r10
   0.01%   │││ │ │││  0x00007f4620664f1e:   mov    0x60(%rsp),%r11
   0.00%   │││ │ │││  0x00007f4620664f23:   mov    0xc(%r11),%r11d
   0.44%   │││ │ │││  0x00007f4620664f27:   vmovdqu 0x10(%r12,%r11,8),%xmm2     ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           │││ │ │││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
           │││ │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.38%   │││ │ │││  0x00007f4620664f2e:   vpblendvb %xmm4,%xmm2,%xmm1,%xmm2   ;*invokestatic blend {reexecute=0 rethrow=0 return_oop=0}
           │││ │ │││                                                            ; - jdk.incubator.vector.IntVector::blendTemplate@26 (line 2182)
           │││ │ │││                                                            ; - jdk.incubator.vector.Int128Vector::blend@11 (line 410)
           │││ │ │││                                                            ; - jdk.incubator.vector.Int128Vector::blend@3 (line 41)
           │││ │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@158 (line 88)
   0.83%   │││ │ │││  0x00007f4620664f34:   mov    0x68(%rsp),%r11
   0.00%   │││ │ │││  0x00007f4620664f39:   vmovdqu %xmm2,0x10(%r11)
   0.44%   │││ │ │││  0x00007f4620664f3f:   nop
   0.02%   │││ │ │││  0x00007f4620664f40:   cmp    0x1c8(%r15),%r10
           │││ │ │││  0x00007f4620664f47:   jae    0x00007f462066517d
   0.03%   │││ │ │││  0x00007f4620664f4d:   mov    %r10,0x1b8(%r15)
           │││ │ │││  0x00007f4620664f54:   prefetchw 0xc0(%r10)
   0.41%   │││ │ │││  0x00007f4620664f5c:   movq   $0x1,(%r8)
   0.01%   │││ │ │││  0x00007f4620664f63:   movl   $0x103d7e0,0x8(%r8)          ;   {metadata(&apos;jdk/incubator/vector/Int128Vector&apos;)}
   0.03%   │││ │ │││  0x00007f4620664f6b:   mov    0x68(%rsp),%r10
   0.01%   │││ │ │││  0x00007f4620664f70:   shr    $0x3,%r10
   0.42%   │││ │ │││  0x00007f4620664f74:   mov    %r10d,0xc(%r8)
   0.02%   │││ │ │││  0x00007f4620664f78:   mov    0x1b8(%r15),%r11
   0.05%   │││ │ │││  0x00007f4620664f7f:   mov    %r11,%r10
           │││ │ │││  0x00007f4620664f82:   add    $0x20,%r10
   0.39%   │││ │ │││  0x00007f4620664f86:   cmp    0x1c8(%r15),%r10
           │││ │ │││  0x00007f4620664f8d:   jae    0x00007f46206651d8
   0.03%   │││ │ │││  0x00007f4620664f93:   mov    %r10,0x1b8(%r15)
   0.02%   │││ │ │││  0x00007f4620664f9a:   prefetchw 0xc0(%r10)
   0.04%   │││ │ │││  0x00007f4620664fa2:   movq   $0x1,(%r11)
   0.39%   │││ │ │││  0x00007f4620664fa9:   prefetchw 0x100(%r10)
   0.02%   │││ │ │││  0x00007f4620664fb1:   movl   $0x26a0,0x8(%r11)            ;   {metadata({type array int})}
   0.37%   │││ │ │││  0x00007f4620664fb9:   prefetchw 0x140(%r10)
   0.30%   │││ │ │││  0x00007f4620664fc1:   movl   $0x4,0xc(%r11)
   0.62%   │││ │ │││  0x00007f4620664fc9:   prefetchw 0x180(%r10)
   0.27%   │││ │ │││  0x00007f4620664fd1:   mov    %r12,0x10(%r11)
   0.30%   │││ │ │││  0x00007f4620664fd5:   mov    %r12,0x18(%r11)
   0.29%   │││ │ │││  0x00007f4620664fd9:   mov    %r8,0x18(%rsp)
   0.27%   │││ │ │││  0x00007f4620664fde:   mov    %r11,0x8(%rsp)
   0.16%   │││ │ │││  0x00007f4620664fe3:   mov    0x38(%rsp),%r10
   0.06%   │││ │ │││  0x00007f4620664fe8:   mov    0xc(%r10),%r10d              ;*goto {reexecute=0 rethrow=0 return_oop=0}
           │││ │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@174 (line 79)
   0.17%   │││ │ │││  0x00007f4620664fec:   mov    0x1b8(%r15),%rdx
   0.17%   │││ │ │││  0x00007f4620664ff3:   vmovdqu 0x10(%r12,%r10,8),%xmm1
   0.81%   │││ │ │││  0x00007f4620664ffa:   mov    %rdx,%r10
   0.02%   │││ │ │││  0x00007f4620664ffd:   add    $0x10,%r10
   0.07%   │││ │ │││  0x00007f4620665001:   mov    0x20(%rsp),%r11
   0.10%   │││ │ │││  0x00007f4620665006:   mov    0xc(%r11),%r11d              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           │││ │ │││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
           │││ │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.30%   │││ │ │││  0x00007f462066500a:   vpaddd 0x10(%r12,%r11,8),%xmm1,%xmm1;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
           │││ │ │││                                                            ; - jdk.incubator.vector.IntVector::lanewiseTemplate@154 (line 784)
           │││ │ │││                                                            ; - jdk.incubator.vector.Int128Vector::lanewise@3 (line 285)
           │││ │ │││                                                            ; - jdk.incubator.vector.Int128Vector::lanewise@3 (line 41)
           │││ │ │││                                                            ; - jdk.incubator.vector.IntVector::add@5 (line 1352)
           │││ │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@166 (line 89)
   1.68%   │││ │ │││  0x00007f4620665011:   mov    0x8(%rsp),%r11
   0.02%   │││ │ │││  0x00007f4620665016:   vmovdqu %xmm1,0x10(%r11)
   0.60%   │││ │ │││  0x00007f462066501c:   nopl   0x0(%rax)
   0.03%   │││ │ │││  0x00007f4620665020:   cmp    0x1c8(%r15),%r10
           │││ │ │││  0x00007f4620665027:   jae    0x00007f462066522c           ;*goto {reexecute=0 rethrow=0 return_oop=0}
           │││ │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@174 (line 79)
   0.01%   │││ │ │││  0x00007f462066502d:   mov    %r10,0x1b8(%r15)
   0.01%   │││ │ │││  0x00007f4620665034:   prefetchw 0xc0(%r10)
   0.43%   │││ │ │││  0x00007f462066503c:   movq   $0x1,(%rdx)
   0.03%   │││ │ │││  0x00007f4620665043:   movl   $0x103d7e0,0x8(%rdx)         ;   {metadata(&apos;jdk/incubator/vector/Int128Vector&apos;)}
   0.02%   │││ │ │││  0x00007f462066504a:   mov    0x30(%rsp),%r9               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           │││ │ │││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
           │││ │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.02%   │││ │ │││  0x00007f462066504f:   mov    0xc(%r9),%r11d               ;*getfield laneCount {reexecute=0 rethrow=0 return_oop=0}
           │││ │ │││                                                            ; - jdk.incubator.vector.AbstractSpecies::length@1 (line 117)
           │││ │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@67 (line 79)
   0.42%   │││ │ │││  0x00007f4620665053:   mov    0x4c(%rsp),%r8d              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           │││ │ │││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
           │││ │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.03%   │││ │ │││  0x00007f4620665058:   inc    %r8d
           │││ │ │││  0x00007f462066505b:   mov    0x8(%rsp),%r10
   0.02%   │││ │ │││  0x00007f4620665060:   mov    %r10,%rcx
   0.42%   │││ │ │││  0x00007f4620665063:   shr    $0x3,%rcx
   0.03%   │││ │ │││  0x00007f4620665067:   mov    %ecx,0xc(%rdx)               ;*goto {reexecute=0 rethrow=0 return_oop=0}
           │││ │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@174 (line 79)
   0.01%   │││ │ │││  0x00007f462066506a:   mov    0x458(%r15),%r10             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           │││ │ │││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
           │││ │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.02%   │││ │ │││  0x00007f4620665071:   vpmovsxbd %xmm0,%xmm3               ; ImmutableOopMap {r9=Oop rdx=Oop [24]=Oop [40]=Oop [56]=Oop }
           │││ │ │││                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
           │││ │ │││                                                            ; - (reexecute) com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@174 (line 79)
   0.40%   │││ │ │││  0x00007f4620665076:   test   %eax,(%r10)                  ;   {poll}
   0.07%   │││ │ │││  0x00007f4620665079:   cmp    %r11d,%r8d
   0.01%   │││ │ │││  0x00007f462066507c:   nopl   0x0(%rax)
   0.01%   ││╰ │ │││  0x00007f4620665080:   jge    0x00007f4620664b78
   0.28%   ││  │ │││  0x00007f4620665086:   mov    %rdx,0x20(%rsp)
   0.01%   ││  │ │││  0x00007f462066508b:   mov    0x28(%rsp),%r11
   0.01%   ││  │ │││  0x00007f4620665090:   mov    0x38(%rsp),%rcx
   0.00%   ││  │ │││  0x00007f4620665095:   mov    0x40(%rsp),%r10d
   0.29%   ││  │ │││  0x00007f462066509a:   vmovdqu 0x50(%rsp),%xmm1
   0.03%   ││  │ │││  0x00007f46206650a0:   mov    0x14(%rsp),%edi
   0.01%   ││  │ │││  0x00007f46206650a4:   mov    0x44(%rsp),%esi
   0.00%   ││  │ │││  0x00007f46206650a8:   mov    0x48(%rsp),%eax
   0.35%   ││  │ │││  0x00007f46206650ac:   vmovd  %xmm0,0x90(%rsp)
   0.03%   │↘  │ │││  0x00007f46206650b5:   test   %r8d,%r8d
           │  ╭│ │││  0x00007f46206650b8:   jne    0x00007f46206650c5
   0.09%   │  ││ │││  0x00007f46206650ba:   mov    %esi,%ebx
   0.02%   │  ││ │││  0x00007f46206650bc:   nopl   0x0(%rax)
   0.02%   │  │╰ │││  0x00007f46206650c0:   jmp    0x00007f4620664c82
   0.01%   │  ↘  │││  0x00007f46206650c5:   cmp    $0x3,%r8d
           │    ╭│││  0x00007f46206650c9:   jne    0x00007f46206650d6           ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           │    ││││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
           │    ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
           │    ││││  0x00007f46206650cb:   vpextrd $0x3,%xmm1,%ebx             ;*invokestatic extract {reexecute=0 rethrow=0 return_oop=0}
           │    ││││                                                            ; - jdk.incubator.vector.Int128Vector::laneHelper@16 (line 523)
           │    ││││                                                            ; - jdk.incubator.vector.Int128Vector::lane@52 (line 517)
           │    ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@79 (line 80)
   0.09%   │    │╰││  0x00007f46206650d1:   jmp    0x00007f4620664c82
   0.24%   │    ↘ ││  0x00007f46206650d6:   cmp    $0x1,%r8d
           │      ││  0x00007f46206650da:   nopw   0x0(%rax,%rax,1)
           │      ╰│  0x00007f46206650e0:   je     0x00007f4620664c80
           │       │  0x00007f46206650e6:   mov    %r8d,%ebx
   0.11%   │       │  0x00007f46206650e9:   dec    %ebx
           │       │  0x00007f46206650eb:   cmp    $0x3,%ebx                    ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           │       │                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
           │       │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
           │       │  0x00007f46206650ee:   jae    0x00007f4620665289
           │       │  0x00007f46206650f4:   mov    %edi,%ebx
           │       ╰  0x00007f46206650f6:   jmp    0x00007f4620664c82
           ↘          0x00007f46206650fb:   mov    0x20(%rsp),%rdx
                      0x00007f4620665100:   vmovd  0x90(%rsp),%xmm0
                      0x00007f4620665109:   jmp    0x00007f4620664b87           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                                                ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@46 (line 77)
....................................................................................................
  47.79%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, level 4, jdk.internal.vm.vector.VectorSupport::fromBitsCoerced, version 2, compile id 832 

               0x00007f462064ea41:   jle    0x00007f462064ea53
               0x00007f462064ea43:   dec    %rcx
          ↗    0x00007f462064ea46:   vmovq  %xmm0,(%rdi)
          │    0x00007f462064ea4a:   add    $0x8,%rdi
          │    0x00007f462064ea4e:   dec    %rcx
          ╰    0x00007f462064ea51:   jge    0x00007f462064ea46           ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@4 (line 3925)
                                                                         ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
                                                                         ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007f45a80c6c60::fromBits@5
                                                                         ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
   0.39%       0x00007f462064ea53:   mov    %r8,(%rsp)                   ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@11 (line 3926)
                                                                         ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
                                                                         ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007f45a80c6c60::fromBits@5
                                                                         ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
               0x00007f462064ea57:   test   %ebp,%ebp
               0x00007f462064ea59:   jle    0x00007f462064eb3d           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@12 (line 3926)
                                                                         ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
                                                                         ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007f45a80c6c60::fromBits@5
                                                                         ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
   0.76%       0x00007f462064ea5f:   nop
   0.22%       0x00007f462064ea60:   test   %ebp,%ebp
               0x00007f462064ea62:   je     0x00007f462064ebf6
   0.38%       0x00007f462064ea68:   mov    %ebp,%r11d
               0x00007f462064ea6b:   dec    %r11d
   0.79%       0x00007f462064ea6e:   cmp    %ebp,%r11d
               0x00007f462064ea71:   jae    0x00007f462064ebf6
   0.21%       0x00007f462064ea77:   mov    %r8d,%r10d
   0.38%       0x00007f462064ea7a:   mov    0x8(%rsp),%rbx
   0.03%       0x00007f462064ea7f:   mov    %ebx,%r8d                    ;*l2i {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@22 (line 3927)
                                                                         ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
                                                                         ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007f45a80c6c60::fromBits@5
                                                                         ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
   0.86%       0x00007f462064ea82:   shr    $0x2,%r10d
   0.20%       0x00007f462064ea86:   and    $0x3,%r10d
   0.36%       0x00007f462064ea8a:   xor    %ecx,%ecx
   0.00%       0x00007f462064ea8c:   mov    $0xffffffff,%r11d
   0.70%       0x00007f462064ea92:   sub    %r10d,%r11d
   0.20%       0x00007f462064ea95:   and    $0x3,%r11d
   0.36%       0x00007f462064ea99:   inc    %r11d
   0.00%       0x00007f462064ea9c:   cmp    %ebp,%r11d
   0.75%       0x00007f462064ea9f:   cmovg  %ebp,%r11d
   0.22%       0x00007f462064eaa3:   xor    %r9d,%r9d                    ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@15 (line 3927)
                                                                         ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
                                                                         ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007f45a80c6c60::fromBits@5
                                                                         ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
   1.40%    ↗  0x00007f462064eaa6:   mov    (%rsp),%r10
   1.39%    │  0x00007f462064eaaa:   mov    %r8d,0x10(%r10,%r9,4)        ;*iastore {reexecute=0 rethrow=0 return_oop=0}
            │                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@33 (line 3928)
            │                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
            │                                                            ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007f45a80c6c60::fromBits@5
            │                                                            ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
   1.39%    │  0x00007f462064eaaf:   mov    %r9d,%r10d
   1.26%    │  0x00007f462064eab2:   inc    %r10d                        ;*iinc {reexecute=0 rethrow=0 return_oop=0}
            │                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@34 (line 3926)
            │                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
            │                                                            ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007f45a80c6c60::fromBits@5
            │                                                            ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
   1.34%    │  0x00007f462064eab5:   cmp    %r11d,%r10d
           ╭│  0x00007f462064eab8:   jge    0x00007f462064eabf           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
           ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@12 (line 3926)
           ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
           ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007f45a80c6c60::fromBits@5
           ││                                                            ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
   0.53%   ││  0x00007f462064eaba:   mov    %r10d,%r9d
   1.15%   │╰  0x00007f462064eabd:   jmp    0x00007f462064eaa6
   0.70%   ↘   0x00007f462064eabf:   lea    -0x3(%rbp),%edi
   0.21%       0x00007f462064eac2:   cmp    %edi,%r10d
               0x00007f462064eac5:   jge    0x00007f462064ec08           ;   {no_reloc}
               0x00007f462064eacb:   vmovd  %r8d,%xmm0
               0x00007f462064ead0:   vpbroadcastd %xmm0,%xmm0
               0x00007f462064ead5:   inc    %r9d
               0x00007f462064ead8:   mov    $0xfa0,%r11d
               0x00007f462064eade:   mov    %ebp,%r10d
               0x00007f462064eae1:   sub    %r9d,%r10d
               0x00007f462064eae4:   add    $0xfffffffd,%r10d
               0x00007f462064eae8:   cmp    %r9d,%edi
               0x00007f462064eaeb:   cmovl  %ecx,%r10d
....................................................................................................
  16.17%  <total for region 2>

....[Hottest Region 3]..............................................................................
c2, level 4, jdk.internal.vm.vector.VectorSupport::fromBitsCoerced, version 2, compile id 832 

                0x00007f462064e918:   jne    0x00007f462064ec10           ;*invokeinterface fromBits {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
                0x00007f462064e91e:   xchg   %ax,%ax
                0x00007f462064e920:   test   %r8,%r8
                0x00007f462064e923:   je     0x00007f462064ec30           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - jdk.incubator.vector.Int128Vector$Int128Mask::lambda$maskAll$15@3 (line 770)
                                                                          ; - jdk.incubator.vector.Int128Vector$Int128Mask$$Lambda/0x00007f45a80cb960::fromBits@2
                                                                          ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
                0x00007f462064e929:   movabs $0x7fee00458,%rax            ;   {oop(a &apos;jdk/incubator/vector/Int128Vector$Int128Mask&apos;{0x00000007fee00458})}
                0x00007f462064e933:   jmp    0x00007f462064eb9f
   0.78%        0x00007f462064e938:   nopl   0x0(%rax,%rax,1)
   0.27%        0x00007f462064e940:   mov    0x8(%rdi),%r11d              ; implicit exception: dispatches to 0x00007f462064eca4
   0.20%        0x00007f462064e944:   cmp    $0x103c240,%r11d             ;   {metadata(&apos;jdk/incubator/vector/IntVector$IntSpecies&apos;)}
                0x00007f462064e94b:   jne    0x00007f462064ec58           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007f45a80c6c60::fromBits@2
                                                                          ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
   0.13%        0x00007f462064e951:   mov    %rdi,0x10(%rsp)
   0.79%        0x00007f462064e956:   mov    0xc(%rdi),%ebp               ;*getfield laneCount {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - jdk.incubator.vector.AbstractSpecies::laneCount@1 (line 126)
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@1 (line 3925)
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007f45a80c6c60::fromBits@5
                                                                          ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
   0.24%        0x00007f462064e959:   nopl   0x0(%rax)
   0.15%        0x00007f462064e960:   cmp    $0x40000,%ebp
                0x00007f462064e966:   ja     0x00007f462064ebee
   0.11%        0x00007f462064e96c:   movslq %ebp,%r10                    ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@4 (line 3925)
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007f45a80c6c60::fromBits@5
                                                                          ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
   0.81%        0x00007f462064e96f:   cmp    $0x40000,%ebp
                0x00007f462064e975:   ja     0x00007f462064ebb2           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@37 (line 3926)
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007f45a80c6c60::fromBits@5
                                                                          ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
   0.25%        0x00007f462064e97b:   mov    0x1b8(%r15),%r8
   0.16%        0x00007f462064e982:   lea    0x17(,%r10,4),%rcx           ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@4 (line 3925)
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007f45a80c6c60::fromBits@5
                                                                          ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
   0.10%        0x00007f462064e98a:   mov    %rcx,%r10
   0.83%        0x00007f462064e98d:   and    $0xfffffffffffffff8,%r10
   0.27%        0x00007f462064e991:   mov    %r8,%r11
   0.20%        0x00007f462064e994:   add    %r10,%r11
   0.12%        0x00007f462064e997:   nopw   0x0(%rax,%rax,1)
   0.78%        0x00007f462064e9a0:   cmp    0x1c8(%r15),%r11
                0x00007f462064e9a7:   jae    0x00007f462064ebb2           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@37 (line 3926)
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007f45a80c6c60::fromBits@5
                                                                          ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
   0.28%        0x00007f462064e9ad:   mov    %r11,0x1b8(%r15)
   0.23%        0x00007f462064e9b4:   mov    %r8,%rdi
   0.09%        0x00007f462064e9b7:   add    $0x10,%rdi
   0.82%        0x00007f462064e9bb:   movq   $0x1,(%r8)
   0.28%        0x00007f462064e9c2:   prefetchw 0xc0(%r11)
   0.47%        0x00007f462064e9ca:   movl   $0x26a0,0x8(%r8)             ;   {metadata({type array int})}
   0.06%        0x00007f462064e9d2:   mov    %ebp,0xc(%r8)
   0.77%        0x00007f462064e9d6:   prefetchw 0x100(%r11)
   0.32%        0x00007f462064e9de:   prefetchw 0x140(%r11)
   0.28%        0x00007f462064e9e6:   prefetchw 0x180(%r11)
   0.51%        0x00007f462064e9ee:   shr    $0x3,%rcx
   0.73%        0x00007f462064e9f2:   add    $0xfffffffffffffffe,%rcx
   0.28%        0x00007f462064e9f6:   xor    %rax,%rax
   0.24%        0x00007f462064e9f9:   cmp    $0x8,%rcx
          ╭     0x00007f462064e9fd:   jg     0x00007f462064ea0f
   0.10%  │     0x00007f462064e9ff:   dec    %rcx
   0.72%  │     0x00007f462064ea02:   js     0x00007f462064ea53
   0.40%  │↗    0x00007f462064ea04:   mov    %rax,(%rdi,%rcx,8)
   1.60%  ││    0x00007f462064ea08:   dec    %rcx
          │╰    0x00007f462064ea0b:   jge    0x00007f462064ea04
   0.19%  │     0x00007f462064ea0d:   jmp    0x00007f462064ea53
          ↘     0x00007f462064ea0f:   vpxor  %ymm0,%ymm0,%ymm0
            ╭   0x00007f462064ea13:   jmp    0x00007f462064ea25
            │↗  0x00007f462064ea18:   vmovdqu %ymm0,(%rdi)
            ││  0x00007f462064ea1c:   vmovdqu %ymm0,0x20(%rdi)
            ││  0x00007f462064ea21:   add    $0x40,%rdi
            ↘│  0x00007f462064ea25:   sub    $0x8,%rcx
             ╰  0x00007f462064ea29:   jge    0x00007f462064ea18
                0x00007f462064ea2b:   add    $0x4,%rcx
                0x00007f462064ea2f:   jl     0x00007f462064ea3d
                0x00007f462064ea31:   vmovdqu %ymm0,(%rdi)
....................................................................................................
  14.58%  <total for region 3>

....[Hottest Region 4]..............................................................................
c2, level 4, jdk.internal.vm.vector.VectorSupport::fromBitsCoerced, version 2, compile id 832 

                                                                        ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
              0x00007f462064eb1b:   test   %eax,(%r10)                  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@37 (line 3926)
                                                                        ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
                                                                        ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007f45a80c6c60::fromBits@5
                                                                        ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
                                                                        ;   {poll}
              0x00007f462064eb1e:   xchg   %ax,%ax
              0x00007f462064eb20:   cmp    %edi,%r9d
              0x00007f462064eb23:   jl     0x00007f462064eade
   1.39%      0x00007f462064eb25:   cmp    %ebp,%r9d
          ╭   0x00007f462064eb28:   jge    0x00007f462064eb3d
          │   0x00007f462064eb2a:   xchg   %ax,%ax                      ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
          │                                                             ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@15 (line 3927)
          │                                                             ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
          │                                                             ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007f45a80c6c60::fromBits@5
          │                                                             ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
          │↗  0x00007f462064eb2c:   mov    (%rsp),%r10
          ││  0x00007f462064eb30:   mov    %r8d,0x10(%r10,%r9,4)        ;*iastore {reexecute=0 rethrow=0 return_oop=0}
          ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@33 (line 3928)
          ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
          ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007f45a80c6c60::fromBits@5
          ││                                                            ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
          ││  0x00007f462064eb35:   inc    %r9d                         ;*iinc {reexecute=0 rethrow=0 return_oop=0}
          ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@34 (line 3926)
          ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
          ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007f45a80c6c60::fromBits@5
          ││                                                            ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
          ││  0x00007f462064eb38:   cmp    %ebp,%r9d
          │╰  0x00007f462064eb3b:   jl     0x00007f462064eb2c           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
          │                                                             ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@12 (line 3926)
          │                                                             ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
          │                                                             ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007f45a80c6c60::fromBits@5
          │                                                             ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
   1.31%  ↘   0x00007f462064eb3d:   mov    0x10(%rsp),%r10
   0.01%      0x00007f462064eb42:   mov    0x44(%r10),%ebp              ;*getfield dummyVector {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - jdk.incubator.vector.AbstractSpecies::dummyVector@1 (line 308)
                                                                        ; - jdk.incubator.vector.IntVector$IntSpecies::dummyVector@1 (line 3918)
                                                                        ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@41 (line 3930)
                                                                        ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
                                                                        ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007f45a80c6c60::fromBits@5
                                                                        ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
   0.03%      0x00007f462064eb46:   mov    0x8(%r12,%rbp,8),%r11d       ; implicit exception: dispatches to 0x00007f462064ecbc
   0.42%      0x00007f462064eb4b:   cmp    $0x103d7e0,%r11d             ;   {metadata(&apos;jdk/incubator/vector/Int128Vector&apos;)}
              0x00007f462064eb52:   jne    0x00007f462064ec74
   1.28%      0x00007f462064eb58:   mov    0x1b8(%r15),%rax
   0.04%      0x00007f462064eb5f:   mov    %rax,%r10
              0x00007f462064eb62:   add    $0x10,%r10
   0.01%      0x00007f462064eb66:   cmp    0x1c8(%r15),%r10
              0x00007f462064eb6d:   jae    0x00007f462064ebd4           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@37 (line 3926)
                                                                        ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
                                                                        ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007f45a80c6c60::fromBits@5
                                                                        ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
   1.41%      0x00007f462064eb6f:   mov    %r10,0x1b8(%r15)
   0.01%      0x00007f462064eb76:   prefetchw 0xc0(%r10)
   0.06%      0x00007f462064eb7e:   movq   $0x1,(%rax)
   0.17%      0x00007f462064eb85:   movl   $0x103d7e0,0x8(%rax)         ;   {metadata(&apos;jdk/incubator/vector/Int128Vector&apos;)}
   2.43%      0x00007f462064eb8c:   mov    %r12d,0xc(%rax)              ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - jdk.incubator.vector.Int128Vector::vectorFactory@0 (line 171)
                                                                        ; - jdk.incubator.vector.Int128Vector::vectorFactory@2 (line 41)
                                                                        ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@45 (line 3930)
                                                                        ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
                                                                        ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007f45a80c6c60::fromBits@5
                                                                        ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
              0x00007f462064eb90:   mov    (%rsp),%r10
   0.03%      0x00007f462064eb94:   mov    %r10,%r11
              0x00007f462064eb97:   shr    $0x3,%r11
   1.31%      0x00007f462064eb9b:   mov    %r11d,0xc(%rax)              ;*invokeinterface fromBits {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
   0.01%      0x00007f462064eb9f:   add    $0x30,%rsp
              0x00007f462064eba3:   pop    %rbp
   0.02%      0x00007f462064eba4:   cmp    0x450(%r15),%rsp             ;   {poll_return}
              0x00007f462064ebab:   ja     0x00007f462064ecea
   1.34%      0x00007f462064ebb1:   ret    
              0x00007f462064ebb2:   movabs $0x7f45a70026a0,%rsi         ;   {metadata({type array int})}
              0x00007f462064ebbc:   mov    %ebp,%edx
              0x00007f462064ebbe:   nop
              0x00007f462064ebbf:   call   0x00007f4620190480           ; ImmutableOopMap {[16]=Oop }
                                                                        ;*newarray {reexecute=0 rethrow=0 return_oop=1}
                                                                        ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@4 (line 3925)
                                                                        ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
                                                                        ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007f45a80c6c60::fromBits@5
                                                                        ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
                                                                        ;   {runtime_call _new_array_Java}
....................................................................................................
  11.27%  <total for region 4>

....[Hottest Regions]...............................................................................
  47.79%         c2, level 4  com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector, version 2, compile id 920 
  16.17%         c2, level 4  jdk.internal.vm.vector.VectorSupport::fromBitsCoerced, version 2, compile id 832 
  14.58%         c2, level 4  jdk.internal.vm.vector.VectorSupport::fromBitsCoerced, version 2, compile id 832 
  11.27%         c2, level 4  jdk.internal.vm.vector.VectorSupport::fromBitsCoerced, version 2, compile id 832 
   5.83%         c2, level 4  jdk.internal.vm.vector.VectorSupport::fromBitsCoerced, version 2, compile id 832 
   1.13%         c2, level 4  jdk.internal.vm.vector.VectorSupport::fromBitsCoerced, version 2, compile id 832 
   0.62%              kernel  [unknown] 
   0.17%         c2, level 4  com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector, version 2, compile id 920 
   0.09%              kernel  [unknown] 
   0.09%              kernel  [unknown] 
   0.08%         c2, level 4  com.ionutbalosin.jvm.performance.benchmarks.api.vector.jmh_generated.SortVectorApiBenchmark_sortVector_jmhTest::sortVector_avgt_jmhStub, version 5, compile id 954 
   0.07%              kernel  [unknown] 
   0.06%              kernel  [unknown] 
   0.06%              kernel  [unknown] 
   0.06%              kernel  [unknown] 
   0.05%           libjvm.so  G1MergeHeapRootsTask::G1MergeCardSetClosure::do_heap_region 
   0.04%                      <unknown> 
   0.04%              kernel  [unknown] 
   0.04%         c2, level 4  jdk.incubator.vector.IntVector$IntSpecies::dummyVector, version 2, compile id 925 
   0.03%           libjvm.so  ElfSymbolTable::lookup 
   1.71%  <...other 396 warm regions...>
....................................................................................................
 100.00%  <totals>

....[Hottest Methods (after inlining)]..............................................................
  48.99%         c2, level 4  jdk.internal.vm.vector.VectorSupport::fromBitsCoerced, version 2, compile id 832 
  47.96%         c2, level 4  com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector, version 2, compile id 920 
   1.75%              kernel  [unknown] 
   0.15%                      <unknown> 
   0.08%         c2, level 4  com.ionutbalosin.jvm.performance.benchmarks.api.vector.jmh_generated.SortVectorApiBenchmark_sortVector_jmhTest::sortVector_avgt_jmhStub, version 5, compile id 954 
   0.06%           libjvm.so  G1MergeHeapRootsTask::G1MergeCardSetClosure::do_heap_region 
   0.04%         c2, level 4  jdk.incubator.vector.IntVector$IntSpecies::dummyVector, version 2, compile id 925 
   0.04%        libc-2.31.so  __memset_avx2_unaligned_erms 
   0.03%           libjvm.so  ElfSymbolTable::lookup 
   0.03%           libjvm.so  G1CardSet::reset_table_scanner 
   0.03%         c2, level 4  jdk.incubator.vector.Int128Vector::iotaShuffle, version 2, compile id 926 
   0.03%        libc-2.31.so  __memset_avx2_erms 
   0.02%           libjvm.so  TypeArrayKlass::allocate_common 
   0.02%          ld-2.31.so  __tls_get_addr 
   0.02%           libjvm.so  G1ScanCollectionSetRegionClosure::do_heap_region 
   0.02%           libjvm.so  HeapRegionManager::par_iterate 
   0.02%           libjvm.so  xmlStream::write_text 
   0.02%           libjvm.so  ObjArrayAllocator::initialize 
   0.02%           libjvm.so  G1CollectedHeap::allocate_new_tlab 
   0.02%           libjvm.so  HeapRegionClaimer::claim_region 
   0.62%  <...other 146 warm methods...>
....................................................................................................
 100.00%  <totals>

....[Distribution by Source]........................................................................
  97.11%         c2, level 4
   1.75%              kernel
   0.75%           libjvm.so
   0.15%                    
   0.15%        libc-2.31.so
   0.03%  libpthread-2.31.so
   0.02%          ld-2.31.so
   0.01%              [vdso]
   0.01%      hsdis-amd64.so
   0.01%         interpreter
   0.00%    perf-1956086.map
....................................................................................................
 100.00%  <totals>



# JMH version: 1.37
# VM version: JDK 21, OpenJDK 64-Bit Server VM, 21+35-2513
# VM invoker: /home/gogu/bench_jdks/jdk-21/bin/java
# VM options: -Xms4g -Xmx4g -XX:+AlwaysPreTouch --add-modules=jdk.incubator.vector
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark.sortVector
# Parameters: (arraySize = 64, vectorSize = 256)

# Run progress: 16.67% complete, ETA 00:18:26
# Fork: 1 of 1
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 8.305 us/op
# Warmup Iteration   2: 5.723 us/op
# Warmup Iteration   3: 5.717 us/op
# Warmup Iteration   4: 5.717 us/op
# Warmup Iteration   5: 5.717 us/op
Iteration   1: 5.717 us/op
Iteration   2: 5.687 us/op
Iteration   3: 5.720 us/op
Iteration   4: 5.718 us/op
Iteration   5: 5.720 us/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark.sortVector":
  5.713 ±(99.9%) 0.055 us/op [Average]
  (min, avg, max) = (5.687, 5.713, 5.720), stdev = 0.014
  CI (99.9%): [5.658, 5.767] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark.sortVector:asm":
PrintAssembly processed: 194252 total address lines.
Perf output processed (skipped 56.808 seconds):
 Column 1: cycles (50659 events)

Hottest code regions (>10.00% "cycles" events):
 Event counts are percents of total event count.

....[Hottest Region 1]..............................................................................
c2, level 4, com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector, version 4, compile id 962 

             # {method} {0x00007f7e0c47a0b8} &apos;sortVector&apos; &apos;()V&apos; in &apos;com/ionutbalosin/jvm/performance/benchmarks/api/vector/SortVectorApiBenchmark&apos;
             #           [sp+0x120]  (sp of caller)
             0x00007f7e90671d20:   mov    0x8(%rsi),%r10d
             0x00007f7e90671d24:   movabs $0x7f7e17000000,%r11
             0x00007f7e90671d2e:   add    %r11,%r10
             0x00007f7e90671d31:   cmp    %r10,%rax
             0x00007f7e90671d34:   jne    0x00007f7e900c4080           ;   {runtime_call ic_miss_stub}
             0x00007f7e90671d3a:   xchg   %ax,%ax
             0x00007f7e90671d3c:   nopl   0x0(%rax)
           [Verified Entry Point]
   0.00%     0x00007f7e90671d40:   mov    %eax,-0x14000(%rsp)
   0.01%     0x00007f7e90671d47:   push   %rbp
   0.00%     0x00007f7e90671d48:   sub    $0x110,%rsp
   0.00%     0x00007f7e90671d4f:   nop
   0.00%     0x00007f7e90671d50:   cmpl   $0x1,0x20(%r15)
             0x00007f7e90671d58:   jne    0x00007f7e9067301f           ;*synchronization entry
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@-1 (line 72)
             0x00007f7e90671d5e:   mov    %rsi,%r9                     ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.00%     0x00007f7e90671d61:   mov    0x14(%rsi),%ecx              ;*getfield species {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@1 (line 72)
   0.01%     0x00007f7e90671d64:   mov    0x8(%r12,%rcx,8),%r11d       ; implicit exception: dispatches to 0x00007f7e90672ed8
   0.01%     0x00007f7e90671d69:   cmp    $0x103c240,%r11d             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
                                                                       ;   {metadata(&apos;jdk/incubator/vector/IntVector$IntSpecies&apos;)}
             0x00007f7e90671d70:   jne    0x00007f7e90672a54
   0.00%     0x00007f7e90671d76:   lea    (%r12,%rcx,8),%r10           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - jdk.incubator.vector.VectorShuffle::iota@1 (line 391)
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@9 (line 73)
             0x00007f7e90671d7a:   mov    0x44(%r10),%ebp              ;*getfield dummyVector {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - jdk.incubator.vector.AbstractSpecies::dummyVector@1 (line 308)
                                                                       ; - jdk.incubator.vector.IntVector$IntSpecies::dummyVector@1 (line 3918)
                                                                       ; - jdk.incubator.vector.IntVector$IntSpecies::dummyVector@1 (line 3804)
                                                                       ; - jdk.incubator.vector.AbstractSpecies::iotaShuffle@10 (line 358)
                                                                       ; - jdk.incubator.vector.VectorShuffle::iota@11 (line 392)
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@9 (line 73)
   0.00%     0x00007f7e90671d7e:   xchg   %ax,%ax
             0x00007f7e90671d80:   mov    0x8(%r12,%rbp,8),%r8d        ; implicit exception: dispatches to 0x00007f7e90672fa4
   0.04%     0x00007f7e90671d85:   cmp    $0x103e3b8,%r8d              ;   {metadata(&apos;jdk/incubator/vector/Int256Vector&apos;)}
             0x00007f7e90671d8c:   jne    0x00007f7e90672a70
   0.01%     0x00007f7e90671d92:   mov    %rsi,%rbp                    ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
             0x00007f7e90671d95:   mov    0xc(%r10),%ecx               ;*getfield laneCount {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@8 (line 3847)
                                                                       ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3857)
                                                                       ; - jdk.incubator.vector.IntVector::broadcast@7 (line 611)
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@18 (line 74)
             0x00007f7e90671d99:   mov    0x2c(%r10),%r11d
             0x00007f7e90671d9d:   mov    %r10,0x8(%rsp)
   0.00%     0x00007f7e90671da2:   mov    %r11,%rsi
             0x00007f7e90671da5:   shl    $0x3,%rsi
             0x00007f7e90671da9:   movabs $0x7ff178df0,%r10            ;   {oop([B{0x00000007ff178df0})}
             0x00007f7e90671db3:   vmovq  0x10(%r10),%xmm1
   0.00%     0x00007f7e90671db9:   movabs $0x7ffe7f600,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffe7f600} = int)}
             0x00007f7e90671dc3:   xor    %r8d,%r8d
             0x00007f7e90671dc6:   xor    %r9d,%r9d
             0x00007f7e90671dc9:   mov    0x8(%rsp),%rdi
   0.01%     0x00007f7e90671dce:   movabs $0x7ff18e458,%r10            ;   {oop(a &apos;jdk/incubator/vector/IntVector$IntSpecies$$Lambda+0x00007f7e180c6c60&apos;{0x00000007ff18e458})}
             0x00007f7e90671dd8:   mov    %r10,(%rsp)                  ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
             0x00007f7e90671ddc:   vpmovsxbd %xmm1,%ymm0               ;*invokestatic shuffleToVector {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - jdk.incubator.vector.Int256Vector$Int256Shuffle::toVector@17 (line 823)
                                                                       ; - jdk.incubator.vector.Int256Vector$Int256Shuffle::toVector@1 (line 787)
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@12 (line 73)
             0x00007f7e90671de1:   vmovq  %xmm1,0xe0(%rsp)
   0.00%     0x00007f7e90671dea:   vmovdqu %ymm0,0x20(%rsp)
             0x00007f7e90671df0:   vzeroupper 
   0.01%     0x00007f7e90671df3:   call   0x00007f7e90650260           ; ImmutableOopMap {rbp=Oop [8]=Oop }
                                                                       ;*invokestatic fromBitsCoerced {reexecute=0 rethrow=0 return_oop=1}
                                                                       ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@19 (line 3848)
                                                                       ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3857)
                                                                       ; - jdk.incubator.vector.IntVector::broadcast@7 (line 611)
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@18 (line 74)
                                                                       ;   {static_call}
             0x00007f7e90671df8:   nopl   0x368(%rax,%rax,1)           ;   {other}
   0.01%     0x00007f7e90671e00:   mov    0x8(%rax),%r10d              ; implicit exception: dispatches to 0x00007f7e90672ef4
             0x00007f7e90671e04:   cmp    $0x103e3b8,%r10d             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
                                                                       ;   {metadata(&apos;jdk/incubator/vector/Int256Vector&apos;)}
             0x00007f7e90671e0b:   jne    0x00007f7e90672a90           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@22 (line 3848)
                                                                       ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3857)
                                                                       ; - jdk.incubator.vector.IntVector::broadcast@7 (line 611)
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@18 (line 74)
   0.00%     0x00007f7e90671e11:   mov    %rax,0x18(%rsp)
   0.01%     0x00007f7e90671e16:   mov    0x8(%rsp),%r11
             0x00007f7e90671e1b:   mov    0x2c(%r11),%r10d             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.01%     0x00007f7e90671e1f:   mov    0xc(%r11),%ecx               ;*getfield laneCount {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@8 (line 3847)
                                                                       ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3857)
                                                                       ; - jdk.incubator.vector.IntVector::broadcast@7 (line 611)
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@24 (line 75)
             0x00007f7e90671e23:   mov    %r10,%rsi
   0.00%     0x00007f7e90671e26:   shl    $0x3,%rsi
   0.00%     0x00007f7e90671e2a:   movabs $0x7ffe7f600,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffe7f600} = int)}
   0.00%     0x00007f7e90671e34:   xor    %r8d,%r8d
             0x00007f7e90671e37:   xor    %r9d,%r9d
             0x00007f7e90671e3a:   mov    %r11,%rdi
             0x00007f7e90671e3d:   movabs $0x7ff18e458,%r10            ;   {oop(a &apos;jdk/incubator/vector/IntVector$IntSpecies$$Lambda+0x00007f7e180c6c60&apos;{0x00000007ff18e458})}
             0x00007f7e90671e47:   mov    %r10,(%rsp)
             0x00007f7e90671e4b:   vmovq  0xe0(%rsp),%xmm0             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.00%     0x00007f7e90671e54:   vpmovsxbd %xmm0,%ymm0               ;*invokestatic shuffleToVector {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - jdk.incubator.vector.Int256Vector$Int256Shuffle::toVector@17 (line 823)
                                                                       ; - jdk.incubator.vector.Int256Vector$Int256Shuffle::toVector@1 (line 787)
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@12 (line 73)
             0x00007f7e90671e59:   vmovdqu %ymm0,0x20(%rsp)            ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
             0x00007f7e90671e5f:   nop
             0x00007f7e90671e60:   vzeroupper 
   0.01%     0x00007f7e90671e63:   call   0x00007f7e90650260           ; ImmutableOopMap {rbp=Oop [8]=Oop [24]=Oop }
                                                                       ;*invokestatic fromBitsCoerced {reexecute=0 rethrow=0 return_oop=1}
                                                                       ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@19 (line 3848)
                                                                       ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3857)
                                                                       ; - jdk.incubator.vector.IntVector::broadcast@7 (line 611)
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@24 (line 75)
                                                                       ;   {static_call}
             0x00007f7e90671e68:   nopl   0x10003d8(%rax,%rax,1)       ;   {other}
             0x00007f7e90671e70:   mov    0x8(%rax),%r10d              ; implicit exception: dispatches to 0x00007f7e90672f20
             0x00007f7e90671e74:   nopl   0x0(%rax,%rax,1)
   0.01%     0x00007f7e90671e7c:   data16 data16 xchg %ax,%ax
             0x00007f7e90671e80:   cmp    $0x103e3b8,%r10d             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
                                                                       ;   {metadata(&apos;jdk/incubator/vector/Int256Vector&apos;)}
             0x00007f7e90671e87:   jne    0x00007f7e90672ac0           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@22 (line 3848)
                                                                       ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3857)
                                                                       ; - jdk.incubator.vector.IntVector::broadcast@7 (line 611)
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@24 (line 75)
             0x00007f7e90671e8d:   mov    %rax,0x20(%rsp)
   0.00%     0x00007f7e90671e92:   mov    0x8(%rsp),%r11
   0.00%     0x00007f7e90671e97:   mov    0x2c(%r11),%r10d             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.00%     0x00007f7e90671e9b:   mov    0xc(%r11),%ecx               ;*getfield laneCount {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@8 (line 3847)
                                                                       ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3857)
                                                                       ; - jdk.incubator.vector.IntVector::broadcast@7 (line 611)
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@31 (line 76)
             0x00007f7e90671e9f:   mov    %r10,%rsi
   0.01%     0x00007f7e90671ea2:   shl    $0x3,%rsi
             0x00007f7e90671ea6:   mov    $0x1,%r8d
   0.00%     0x00007f7e90671eac:   movabs $0x7ffe7f600,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffe7f600} = int)}
             0x00007f7e90671eb6:   xor    %r9d,%r9d
   0.01%     0x00007f7e90671eb9:   mov    %r11,%rdi
             0x00007f7e90671ebc:   movabs $0x7ff18e458,%r10            ;   {oop(a &apos;jdk/incubator/vector/IntVector$IntSpecies$$Lambda+0x00007f7e180c6c60&apos;{0x00000007ff18e458})}
             0x00007f7e90671ec6:   mov    %r10,(%rsp)
   0.00%     0x00007f7e90671eca:   vmovq  0xe0(%rsp),%xmm0             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.00%     0x00007f7e90671ed3:   vpmovsxbd %xmm0,%ymm0               ;*invokestatic shuffleToVector {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - jdk.incubator.vector.Int256Vector$Int256Shuffle::toVector@17 (line 823)
                                                                       ; - jdk.incubator.vector.Int256Vector$Int256Shuffle::toVector@1 (line 787)
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@12 (line 73)
             0x00007f7e90671ed8:   vmovdqu %ymm0,0x40(%rsp)            ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.00%     0x00007f7e90671ede:   xchg   %ax,%ax
             0x00007f7e90671ee0:   vzeroupper 
   0.01%     0x00007f7e90671ee3:   call   0x00007f7e90650260           ; ImmutableOopMap {rbp=Oop [8]=Oop [24]=Oop [32]=Oop }
                                                                       ;*invokestatic fromBitsCoerced {reexecute=0 rethrow=0 return_oop=1}
                                                                       ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@19 (line 3848)
                                                                       ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3857)
                                                                       ; - jdk.incubator.vector.IntVector::broadcast@7 (line 611)
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@31 (line 76)
                                                                       ;   {static_call}
             0x00007f7e90671ee8:   nopl   0x2000458(%rax,%rax,1)       ;   {other}
             0x00007f7e90671ef0:   mov    0x8(%rax),%r10d              ; implicit exception: dispatches to 0x00007f7e90672f4c
             0x00007f7e90671ef4:   nopl   0x0(%rax,%rax,1)
   0.00%     0x00007f7e90671efc:   data16 data16 xchg %ax,%ax
             0x00007f7e90671f00:   cmp    $0x103e3b8,%r10d             ;   {metadata(&apos;jdk/incubator/vector/Int256Vector&apos;)}
             0x00007f7e90671f07:   jne    0x00007f7e90672af8
             0x00007f7e90671f0d:   mov    %rbp,%r11                    ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.00%     0x00007f7e90671f10:   mov    0x18(%r11),%ebx              ;*getfield input {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@42 (line 77)
   0.01%     0x00007f7e90671f14:   mov    0xc(%r12,%rbx,8),%r8d        ; implicit exception: dispatches to 0x00007f7e90672f8c
   0.03%     0x00007f7e90671f19:   test   %r8d,%r8d
   0.01%     0x00007f7e90671f1c:   nopl   0x0(%rax)
             0x00007f7e90671f20:   jbe    0x00007f7e9067272a
   0.00%     0x00007f7e90671f26:   mov    %rax,%r8
             0x00007f7e90671f29:   xor    %ecx,%ecx
          ╭  0x00007f7e90671f2b:   jmp    0x00007f7e90671fbb
   0.00%  │  0x00007f7e90671f30:   mov    0x28(%rsp),%r11
   0.04%  │  0x00007f7e90671f35:   mov    0x30(%rsp),%r9
   0.02%  │  0x00007f7e90671f3a:   mov    0x38(%rsp),%r8
   0.00%  │  0x00007f7e90671f3f:   mov    0x40(%rsp),%r10d             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
          │  0x00007f7e90671f44:   mov    0x1c(%r11),%edx              ;*getfield result {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@179 (line 91)
   0.02%  │  0x00007f7e90671f48:   mov    0xc(%r12,%rdx,8),%ebp        ; implicit exception: dispatches to 0x00007f7e90672e50
   0.06%  │  0x00007f7e90671f4d:   add    $0xfffffff9,%ebp
   0.01%  │  0x00007f7e90671f50:   test   %ebp,%ebp
          │  0x00007f7e90671f52:   jl     0x00007f7e906729bc
   0.01%  │  0x00007f7e90671f58:   cmp    %ebp,%r10d
   0.02%  │  0x00007f7e90671f5b:   nopl   0x0(%rax,%rax,1)
   0.02%  │  0x00007f7e90671f60:   jae    0x00007f7e90672930
   0.00%  │  0x00007f7e90671f66:   mov    %r10d,%ecx                   ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.01%  │  0x00007f7e90671f69:   add    0xc(%r9),%ecx                ;*goto {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@174 (line 79)
   0.03%  │  0x00007f7e90671f6d:   mov    0x458(%r15),%rdi
   0.03%  │  0x00007f7e90671f74:   mov    0x18(%rsp),%rax
   0.00%  │  0x00007f7e90671f79:   mov    0xc(%rax),%esi               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
          │  0x00007f7e90671f7c:   mov    0x18(%r11),%ebx              ;*getfield input {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@42 (line 77)
   0.01%  │  0x00007f7e90671f80:   vmovdqu 0x10(%r12,%rsi,8),%ymm0
   0.02%  │  0x00007f7e90671f87:   shl    $0x3,%rdx
   0.00%  │  0x00007f7e90671f8b:   vmovdqu %ymm0,0x10(%rdx,%r10,4)     ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.02%  │  0x00007f7e90671f92:   vpmovsxbd %xmm1,%ymm0               ; ImmutableOopMap {r11=Oop r8=Oop r9=Oop rbx=NarrowOop [24]=Oop [32]=Oop }
          │                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
          │                                                            ; - (reexecute) com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@198 (line 77)
   0.01%  │  0x00007f7e90671f97:   test   %eax,(%rdi)                  ;   {poll}
   0.02%  │  0x00007f7e90671f99:   nopl   0x0(%rax)
   0.00%  │  0x00007f7e90671fa0:   mov    0xc(%r12,%rbx,8),%edi        ; implicit exception: dispatches to 0x00007f7e90672e68
   0.01%  │  0x00007f7e90671fa5:   cmp    %edi,%ecx
          │  0x00007f7e90671fa7:   jge    0x00007f7e9067272a
   0.02%  │  0x00007f7e90671fad:   mov    %r9,0x8(%rsp)
   0.01%  │  0x00007f7e90671fb2:   vmovq  %xmm1,0xe0(%rsp)
          ↘  0x00007f7e90671fbb:   nopl   0x0(%rax,%rax,1)
   0.01%     0x00007f7e90671fc0:   mov    0xc(%r12,%rbx,8),%r10d       ; implicit exception: dispatches to 0x00007f7e90672e38
   0.00%     0x00007f7e90671fc5:   mov    0x8(%rsp),%r9                ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.03%     0x00007f7e90671fca:   mov    0xc(%r9),%edx                ;*getfield laneCount {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - jdk.incubator.vector.AbstractSpecies::length@1 (line 117)
                                                                       ; - jdk.incubator.vector.IntVector::fromArray@2 (line 2953)
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@56 (line 78)
   0.00%     0x00007f7e90671fce:   sub    %edx,%r10d
   0.01%     0x00007f7e90671fd1:   inc    %r10d
   0.02%     0x00007f7e90671fd4:   test   %r10d,%r10d
             0x00007f7e90671fd7:   jl     0x00007f7e90672968
   0.06%     0x00007f7e90671fdd:   data16 xchg %ax,%ax
   0.00%     0x00007f7e90671fe0:   cmp    %r10d,%ecx
             0x00007f7e90671fe3:   jae    0x00007f7e906728db           ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.02%     0x00007f7e90671fe9:   mov    0x44(%r9),%eax               ;*getfield dummyVector {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - jdk.incubator.vector.AbstractSpecies::dummyVector@1 (line 308)
                                                                       ; - jdk.incubator.vector.IntVector$IntSpecies::dummyVector@1 (line 3918)
                                                                       ; - jdk.incubator.vector.IntVector::fromArray@19 (line 2955)
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@56 (line 78)
   0.00%     0x00007f7e90671fed:   mov    %ecx,%r10d                   ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - java.util.Objects::checkIndex@3 (line 385)
                                                                       ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 61)
                                                                       ; - jdk.incubator.vector.IntVector::fromArray@9 (line 2953)
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@56 (line 78)
   0.04%     0x00007f7e90671ff0:   mov    0x8(%r12,%rax,8),%edi        ; implicit exception: dispatches to 0x00007f7e90672e80
   0.02%     0x00007f7e90671ff5:   data16 data16 nopw 0x0(%rax,%rax,1)
   0.02%     0x00007f7e90672000:   cmp    $0x103e3b8,%edi              ;   {metadata(&apos;jdk/incubator/vector/Int256Vector&apos;)}
             0x00007f7e90672006:   jne    0x00007f7e90672b3c
   0.03%     0x00007f7e9067200c:   test   %edx,%edx
             0x00007f7e9067200e:   jle    0x00007f7e9067271c
   0.03%     0x00007f7e90672014:   lea    (%r12,%rbx,8),%rcx
   0.00%     0x00007f7e90672018:   vmovdqu 0x10(%rcx,%r10,4),%ymm2
   0.02%     0x00007f7e9067201f:   vextractf128 $0x1,%ymm2,%xmm0
   0.05%     0x00007f7e90672025:   vpextrd $0x2,%xmm0,%edi
   0.16%     0x00007f7e9067202b:   vextractf128 $0x1,%ymm2,%xmm0
   0.00%     0x00007f7e90672031:   vpextrd $0x3,%xmm0,%ebx
   0.02%     0x00007f7e90672037:   vpextrd $0x2,%xmm2,%esi
   0.03%     0x00007f7e9067203d:   vpextrd $0x3,%xmm2,%edx             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.02%     0x00007f7e90672043:   vextractf128 $0x1,%ymm2,%xmm0
   0.03%     0x00007f7e90672049:   vmovd  %xmm0,%ebp                   ;*invokestatic extract {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - jdk.incubator.vector.Int256Vector::laneHelper@16 (line 527)
                                                                       ; - jdk.incubator.vector.Int256Vector::lane@74 (line 518)
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@79 (line 80)
             0x00007f7e9067204d:   xor    %ecx,%ecx
   0.01%     0x00007f7e9067204f:   jmp    0x00007f7e90672500
             0x00007f7e90672054:   nopl   0x0(%rax,%rax,1)
             0x00007f7e9067205c:   data16 data16 xchg %ax,%ax
   0.06%     0x00007f7e90672060:   mov    %ecx,0x58(%rsp)
             0x00007f7e90672064:   mov    %ebp,0x54(%rsp)
             0x00007f7e90672068:   mov    %edx,0x50(%rsp)
             0x00007f7e9067206c:   mov    %esi,0x4c(%rsp)
   0.05%     0x00007f7e90672070:   mov    %ebx,0x48(%rsp)
             0x00007f7e90672074:   mov    %edi,0x44(%rsp)
             0x00007f7e90672078:   mov    %r10d,0x40(%rsp)
             0x00007f7e9067207d:   mov    %r8,0x38(%rsp)
   0.07%     0x00007f7e90672082:   mov    %r9,0x30(%rsp)
             0x00007f7e90672087:   mov    %r11,0x28(%rsp)
             0x00007f7e9067208c:   mov    %ebx,%r8d
   0.10%     0x00007f7e9067208f:   vmovdqu %ymm2,0x60(%rsp)
   0.11%     0x00007f7e90672095:   mov    0x30(%rsp),%r10
   0.26%     0x00007f7e9067209a:   mov    0x2c(%r10),%r10d
   1.38%     0x00007f7e9067209e:   mov    0x30(%rsp),%r11              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.14%     0x00007f7e906720a3:   mov    0xc(%r11),%ecx               ;*getfield laneCount {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@8 (line 3847)
                                                                       ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3857)
                                                                       ; - jdk.incubator.vector.IntVector::broadcast@7 (line 611)
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@87 (line 81)
   0.41%     0x00007f7e906720a7:   movslq %r8d,%r8                     ;*i2l {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - jdk.incubator.vector.IntVector::toBits@1 (line 500)
                                                                       ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@2 (line 3857)
                                                                       ; - jdk.incubator.vector.IntVector::broadcast@7 (line 611)
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@87 (line 81)
   0.03%     0x00007f7e906720aa:   mov    %r10,%rsi
   0.14%     0x00007f7e906720ad:   shl    $0x3,%rsi
   0.04%     0x00007f7e906720b1:   movabs $0x7ffe7f600,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffe7f600} = int)}
   0.22%     0x00007f7e906720bb:   xor    %r9d,%r9d
   0.03%     0x00007f7e906720be:   mov    0x30(%rsp),%rdi
   0.15%     0x00007f7e906720c3:   movabs $0x7ff18e458,%r10            ;   {oop(a &apos;jdk/incubator/vector/IntVector$IntSpecies$$Lambda+0x00007f7e180c6c60&apos;{0x00000007ff18e458})}
   0.03%     0x00007f7e906720cd:   mov    %r10,(%rsp)
   0.21%     0x00007f7e906720d1:   vmovq  0xe0(%rsp),%xmm0             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.03%     0x00007f7e906720da:   vpmovsxbd %xmm0,%ymm0               ;*invokestatic shuffleToVector {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - jdk.incubator.vector.Int256Vector$Int256Shuffle::toVector@17 (line 823)
                                                                       ; - jdk.incubator.vector.Int256Vector$Int256Shuffle::toVector@1 (line 787)
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@12 (line 73)
   0.14%     0x00007f7e906720df:   vmovdqu %ymm0,0x80(%rsp)
   0.06%     0x00007f7e906720e8:   vzeroupper 
   0.43%     0x00007f7e906720eb:   call   0x00007f7e90650260           ; ImmutableOopMap {[24]=Oop [32]=Oop [40]=Oop [48]=Oop [56]=Oop }
                                                                       ;*invokestatic fromBitsCoerced {reexecute=0 rethrow=0 return_oop=1}
                                                                       ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@19 (line 3848)
                                                                       ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3857)
                                                                       ; - jdk.incubator.vector.IntVector::broadcast@7 (line 611)
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@87 (line 81)
                                                                       ;   {static_call}
   0.00%     0x00007f7e906720f0:   nopl   0x4000660(%rax,%rax,1)       ;   {other}
   0.18%     0x00007f7e906720f8:   nopl   0x0(%rax,%rax,1)
   0.01%     0x00007f7e90672100:   mov    0x8(%rax),%r10d              ; implicit exception: dispatches to 0x00007f7e90672cf4
   0.21%     0x00007f7e90672104:   cmp    $0x103e3b8,%r10d             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
                                                                       ;   {metadata(&apos;jdk/incubator/vector/Int256Vector&apos;)}
             0x00007f7e9067210b:   jne    0x00007f7e90672b94           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@22 (line 3848)
                                                                       ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3857)
                                                                       ; - jdk.incubator.vector.IntVector::broadcast@7 (line 611)
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@87 (line 81)
   0.01%     0x00007f7e90672111:   mov    %rax,0x80(%rsp)
   0.30%     0x00007f7e90672119:   mov    0x30(%rsp),%r10              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.21%     0x00007f7e9067211e:   mov    0xc(%r10),%ecx               ;*getfield laneCount {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@8 (line 3847)
                                                                       ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@6 (line 3863)
                                                                       ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@2 (line 3804)
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@124 (line 86)
   0.07%     0x00007f7e90672122:   mov    0xc(%rax),%r11d
   0.25%     0x00007f7e90672126:   mov    0x30(%rsp),%r10
   0.00%     0x00007f7e9067212b:   mov    0x2c(%r10),%r10d
   0.28%     0x00007f7e9067212f:   vmovdqu 0x10(%r12,%r11,8),%ymm0
   1.73%     0x00007f7e90672136:   vmovdqu 0x60(%rsp),%ymm2
   0.01%     0x00007f7e9067213c:   vpcmpeqd %ymm0,%ymm2,%ymm1
   2.52%     0x00007f7e90672140:   vpcmpgtd %ymm2,%ymm0,%ymm0
   0.01%     0x00007f7e90672144:   mov    %r10,%rsi
             0x00007f7e90672147:   shl    $0x3,%rsi
   0.00%     0x00007f7e9067214b:   vmovmskps %ymm1,%r8d
   1.99%     0x00007f7e9067214f:   popcnt %r8,%r11
   0.05%     0x00007f7e90672154:   vmovmskps %ymm0,%r10d
             0x00007f7e90672158:   popcnt %r10,%rbp
   0.01%     0x00007f7e9067215d:   add    %ebp,%r11d                   ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.40%     0x00007f7e90672160:   movslq %r11d,%r8                    ;*i2l {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@123 (line 84)
   0.43%     0x00007f7e90672163:   movabs $0x7ffe7f600,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffe7f600} = int)}
             0x00007f7e9067216d:   xor    %r9d,%r9d
             0x00007f7e90672170:   mov    0x30(%rsp),%rdi
             0x00007f7e90672175:   movabs $0x7ff18e458,%r10            ;   {oop(a &apos;jdk/incubator/vector/IntVector$IntSpecies$$Lambda+0x00007f7e180c6c60&apos;{0x00000007ff18e458})}
   0.43%     0x00007f7e9067217f:   mov    %r10,(%rsp)
             0x00007f7e90672183:   vmovq  0xe0(%rsp),%xmm0             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
             0x00007f7e9067218c:   vpmovsxbd %xmm0,%ymm0               ;*invokestatic shuffleToVector {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - jdk.incubator.vector.Int256Vector$Int256Shuffle::toVector@17 (line 823)
                                                                       ; - jdk.incubator.vector.Int256Vector$Int256Shuffle::toVector@1 (line 787)
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@12 (line 73)
             0x00007f7e90672191:   vmovdqu %ymm0,0xa0(%rsp)            ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.43%     0x00007f7e9067219a:   xchg   %ax,%ax
             0x00007f7e9067219c:   vzeroupper 
   0.45%     0x00007f7e9067219f:   call   0x00007f7e90650260           ; ImmutableOopMap {[24]=Oop [32]=Oop [40]=Oop [48]=Oop [56]=Oop [128]=Oop }
                                                                       ;*invokestatic fromBitsCoerced {reexecute=0 rethrow=0 return_oop=1}
                                                                       ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@19 (line 3848)
                                                                       ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@6 (line 3863)
                                                                       ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@2 (line 3804)
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@124 (line 86)
                                                                       ;   {static_call}
             0x00007f7e906721a4:   nopl   0x5000714(%rax,%rax,1)       ;   {other}
   0.01%     0x00007f7e906721ac:   mov    0x8(%rax),%r11d              ; implicit exception: dispatches to 0x00007f7e90672d58
   0.01%     0x00007f7e906721b0:   cmp    $0x103e3b8,%r11d             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
                                                                       ;   {metadata(&apos;jdk/incubator/vector/Int256Vector&apos;)}
             0x00007f7e906721b7:   jne    0x00007f7e90672c08           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@22 (line 3848)
                                                                       ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@6 (line 3863)
                                                                       ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@2 (line 3804)
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@124 (line 86)
   0.44%     0x00007f7e906721bd:   mov    0x30(%rsp),%r10
   0.02%     0x00007f7e906721c2:   mov    0x2c(%r10),%r11d
   0.08%     0x00007f7e906721c6:   mov    0xc(%rax),%r10d
   0.44%     0x00007f7e906721ca:   mov    0x30(%rsp),%r8               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
             0x00007f7e906721cf:   mov    0xc(%r8),%ecx                ;*getfield laneCount {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@8 (line 3847)
                                                                       ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@6 (line 3863)
                                                                       ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@2 (line 3804)
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@137 (line 87)
   0.01%     0x00007f7e906721d3:   vmovdqu 0x10(%r12,%r10,8),%ymm1
   1.86%     0x00007f7e906721da:   vmovq  0xe0(%rsp),%xmm0             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
             0x00007f7e906721e3:   vpmovsxbd %xmm0,%ymm2               ;*invokestatic shuffleToVector {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - jdk.incubator.vector.Int256Vector$Int256Shuffle::toVector@17 (line 823)
                                                                       ; - jdk.incubator.vector.Int256Vector$Int256Shuffle::toVector@1 (line 787)
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@12 (line 73)
   0.00%     0x00007f7e906721e8:   vpcmpgtd %ymm2,%ymm1,%ymm3          ;*invokestatic compare {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - jdk.incubator.vector.IntVector::compareTemplate@42 (line 2029)
                                                                       ; - jdk.incubator.vector.Int256Vector::compare@5 (line 384)
                                                                       ; - jdk.incubator.vector.Int256Vector::compare@3 (line 41)
                                                                       ; - jdk.incubator.vector.IntVector::lt@5 (line 1933)
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@129 (line 86)
   2.49%     0x00007f7e906721ec:   mov    %r11,%rsi
   0.01%     0x00007f7e906721ef:   shl    $0x3,%rsi
             0x00007f7e906721f3:   movslq %ebp,%r8
             0x00007f7e906721f6:   vpxor  %xmm1,%xmm1,%xmm1
   0.83%     0x00007f7e906721fa:   vextracti128 $0x1,%ymm3,%xmm2
   0.01%     0x00007f7e90672200:   vpackssdw %xmm2,%xmm3,%xmm2
             0x00007f7e90672204:   vpacksswb %xmm1,%xmm2,%xmm2
             0x00007f7e90672208:   vpabsb %xmm2,%xmm2
   1.76%     0x00007f7e9067220d:   vmovq  %xmm2,0x88(%rsp)
   0.00%     0x00007f7e90672216:   vmovdqu %ymm3,0xa0(%rsp)
             0x00007f7e9067221f:   movabs $0x7ffe7f600,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffe7f600} = int)}
             0x00007f7e90672229:   xor    %r9d,%r9d
   0.38%     0x00007f7e9067222c:   mov    0x30(%rsp),%rdi
   0.00%     0x00007f7e90672231:   movabs $0x7ff18e458,%r10            ;   {oop(a &apos;jdk/incubator/vector/IntVector$IntSpecies$$Lambda+0x00007f7e180c6c60&apos;{0x00000007ff18e458})}
             0x00007f7e9067223b:   mov    %r10,(%rsp)                  ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
             0x00007f7e9067223f:   vpmovsxbd %xmm0,%ymm0               ;*invokestatic shuffleToVector {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - jdk.incubator.vector.Int256Vector$Int256Shuffle::toVector@17 (line 823)
                                                                       ; - jdk.incubator.vector.Int256Vector$Int256Shuffle::toVector@1 (line 787)
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@12 (line 73)
   0.41%     0x00007f7e90672244:   vmovdqu %ymm0,0xc0(%rsp)            ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
             0x00007f7e9067224d:   data16 xchg %ax,%ax
             0x00007f7e90672250:   vzeroupper 
   0.40%     0x00007f7e90672253:   call   0x00007f7e90650260           ; ImmutableOopMap {[24]=Oop [32]=Oop [40]=Oop [48]=Oop [56]=Oop [128]=Oop }
                                                                       ;*invokestatic fromBitsCoerced {reexecute=0 rethrow=0 return_oop=1}
                                                                       ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@19 (line 3848)
                                                                       ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@6 (line 3863)
                                                                       ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@2 (line 3804)
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@137 (line 87)
                                                                       ;   {static_call}
   0.00%     0x00007f7e90672258:   nopl   0x60007c8(%rax,%rax,1)       ;   {other}
   0.00%     0x00007f7e90672260:   mov    0x8(%rax),%r10d              ; implicit exception: dispatches to 0x00007f7e90672dc0
   0.02%     0x00007f7e90672264:   cmp    $0x103e3b8,%r10d             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
                                                                       ;   {metadata(&apos;jdk/incubator/vector/Int256Vector&apos;)}
             0x00007f7e9067226b:   jne    0x00007f7e90672c70           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@174 (line 79)
   0.36%     0x00007f7e90672271:   mov    0x1b8(%r15),%r8
   0.00%     0x00007f7e90672278:   mov    0xc(%rax),%r10d
             0x00007f7e9067227c:   mov    %r8,%r11
             0x00007f7e9067227f:   add    $0x30,%r11
   0.46%     0x00007f7e90672283:   vmovdqu 0x10(%r12,%r10,8),%ymm0
   1.72%     0x00007f7e9067228a:   vmovq  0xe0(%rsp),%xmm1             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
             0x00007f7e90672293:   vpmovsxbd %xmm1,%ymm2               ;*invokestatic shuffleToVector {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - jdk.incubator.vector.Int256Vector$Int256Shuffle::toVector@17 (line 823)
                                                                       ; - jdk.incubator.vector.Int256Vector$Int256Shuffle::toVector@1 (line 787)
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@12 (line 73)
   0.03%     0x00007f7e90672298:   vpcmpgtd %ymm2,%ymm0,%ymm0
   2.59%     0x00007f7e9067229c:   vpcmpeqd %ymm2,%ymm2,%ymm2
             0x00007f7e906722a0:   vpxor  %ymm2,%ymm0,%ymm0
   0.43%     0x00007f7e906722a4:   vmovdqu 0xa0(%rsp),%ymm2            ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
             0x00007f7e906722ad:   vpand  %ymm0,%ymm2,%ymm4
   0.47%     0x00007f7e906722b1:   vpxor  %xmm2,%xmm2,%xmm2
             0x00007f7e906722b5:   vextracti128 $0x1,%ymm4,%xmm0
   0.01%     0x00007f7e906722bb:   vpackssdw %xmm0,%xmm4,%xmm0
   0.49%     0x00007f7e906722bf:   vpacksswb %xmm2,%xmm0,%xmm0
   0.43%     0x00007f7e906722c3:   vpabsb %xmm0,%xmm0
   1.73%     0x00007f7e906722c8:   cmp    0x1c8(%r15),%r11
             0x00007f7e906722cf:   jae    0x00007f7e90672743
             0x00007f7e906722d5:   mov    %r11,0x1b8(%r15)
             0x00007f7e906722dc:   prefetchw 0xc0(%r11)
             0x00007f7e906722e4:   movq   $0x1,(%r8)
   0.43%     0x00007f7e906722eb:   prefetchw 0x100(%r11)
             0x00007f7e906722f3:   movl   $0x26a0,0x8(%r8)             ;   {metadata({type array int})}
             0x00007f7e906722fb:   prefetchw 0x140(%r11)
             0x00007f7e90672303:   movl   $0x8,0xc(%r8)
   0.34%     0x00007f7e9067230b:   prefetchw 0x180(%r11)
   0.07%     0x00007f7e90672313:   mov    %r12,0x10(%r8)
....................................................................................................
  33.33%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, level 4, jdk.internal.vm.vector.VectorSupport::fromBitsCoerced, version 2, compile id 861 

                    0x00007f7e906503c1:   jle    0x00007f7e906503d3
                    0x00007f7e906503c3:   dec    %rcx
          ↗         0x00007f7e906503c6:   vmovq  %xmm0,(%rdi)
          │         0x00007f7e906503ca:   add    $0x8,%rdi
          │         0x00007f7e906503ce:   dec    %rcx
          ╰         0x00007f7e906503d1:   jge    0x00007f7e906503c6           ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@4 (line 3925)
                                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
                                                                              ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007f7e180c6c60::fromBits@5
                                                                              ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
   1.13%            0x00007f7e906503d3:   mov    %r8,(%rsp)                   ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@11 (line 3926)
                                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
                                                                              ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007f7e180c6c60::fromBits@5
                                                                              ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
                    0x00007f7e906503d7:   test   %ebp,%ebp
           ╭        0x00007f7e906503d9:   jle    0x00007f7e906504bd           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
           │                                                                  ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@12 (line 3926)
           │                                                                  ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
           │                                                                  ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007f7e180c6c60::fromBits@5
           │                                                                  ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
   0.22%   │        0x00007f7e906503df:   nop
           │        0x00007f7e906503e0:   test   %ebp,%ebp
           │        0x00007f7e906503e2:   je     0x00007f7e90650576
   1.16%   │        0x00007f7e906503e8:   mov    %ebp,%r11d
           │        0x00007f7e906503eb:   dec    %r11d
   0.22%   │        0x00007f7e906503ee:   cmp    %ebp,%r11d
           │        0x00007f7e906503f1:   jae    0x00007f7e90650576
           │        0x00007f7e906503f7:   mov    %r8d,%r10d
   0.99%   │        0x00007f7e906503fa:   mov    0x8(%rsp),%rbx
   0.01%   │        0x00007f7e906503ff:   mov    %ebx,%r8d                    ;*l2i {reexecute=0 rethrow=0 return_oop=0}
           │                                                                  ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@22 (line 3927)
           │                                                                  ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
           │                                                                  ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007f7e180c6c60::fromBits@5
           │                                                                  ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
   0.19%   │        0x00007f7e90650402:   shr    $0x2,%r10d
           │        0x00007f7e90650406:   and    $0x3,%r10d
   1.06%   │        0x00007f7e9065040a:   xor    %ecx,%ecx
           │        0x00007f7e9065040c:   mov    $0xffffffff,%r11d
   0.25%   │        0x00007f7e90650412:   sub    %r10d,%r11d
           │        0x00007f7e90650415:   and    $0x3,%r11d
   0.98%   │        0x00007f7e90650419:   inc    %r11d
           │        0x00007f7e9065041c:   cmp    %ebp,%r11d
   0.24%   │        0x00007f7e9065041f:   cmovg  %ebp,%r11d
           │        0x00007f7e90650423:   xor    %r9d,%r9d                    ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
           │                                                                  ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@15 (line 3927)
           │                                                                  ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
           │                                                                  ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007f7e180c6c60::fromBits@5
           │                                                                  ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
   1.36%   │ ↗      0x00007f7e90650426:   mov    (%rsp),%r10
   1.33%   │ │      0x00007f7e9065042a:   mov    %r8d,0x10(%r10,%r9,4)        ;*iastore {reexecute=0 rethrow=0 return_oop=0}
           │ │                                                                ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@33 (line 3928)
           │ │                                                                ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
           │ │                                                                ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007f7e180c6c60::fromBits@5
           │ │                                                                ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
   1.37%   │ │      0x00007f7e9065042f:   mov    %r9d,%r10d
   1.25%   │ │      0x00007f7e90650432:   inc    %r10d                        ;*iinc {reexecute=0 rethrow=0 return_oop=0}
           │ │                                                                ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@34 (line 3926)
           │ │                                                                ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
           │ │                                                                ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007f7e180c6c60::fromBits@5
           │ │                                                                ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
   1.39%   │ │      0x00007f7e90650435:   cmp    %r11d,%r10d
           │╭│      0x00007f7e90650438:   jge    0x00007f7e9065043f           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
           │││                                                                ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@12 (line 3926)
           │││                                                                ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
           │││                                                                ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007f7e180c6c60::fromBits@5
           │││                                                                ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
   1.03%   │││      0x00007f7e9065043a:   mov    %r10d,%r9d
   1.37%   ││╰      0x00007f7e9065043d:   jmp    0x00007f7e90650426
   0.22%   │↘       0x00007f7e9065043f:   lea    -0x3(%rbp),%edi
   0.00%   │        0x00007f7e90650442:   cmp    %edi,%r10d
           │        0x00007f7e90650445:   jge    0x00007f7e90650588           ;   {no_reloc}
   1.07%   │        0x00007f7e9065044b:   vmovd  %r8d,%xmm0
           │        0x00007f7e90650450:   vpbroadcastd %xmm0,%xmm0
   0.23%   │        0x00007f7e90650455:   inc    %r9d
           │        0x00007f7e90650458:   mov    $0xfa0,%r11d
   1.09%   │   ↗    0x00007f7e9065045e:   mov    %ebp,%r10d
           │   │    0x00007f7e90650461:   sub    %r9d,%r10d
   0.20%   │   │    0x00007f7e90650464:   add    $0xfffffffd,%r10d
           │   │    0x00007f7e90650468:   cmp    %r9d,%edi
   1.16%   │   │    0x00007f7e9065046b:   cmovl  %ecx,%r10d
           │   │    0x00007f7e9065046f:   cmp    $0xfa0,%r10d
   0.22%   │   │    0x00007f7e90650476:   cmova  %r11d,%r10d
   1.08%   │   │    0x00007f7e9065047a:   add    %r9d,%r10d
           │   │    0x00007f7e9065047d:   data16 xchg %ax,%ax                 ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
           │   │                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@15 (line 3927)
           │   │                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
           │   │                                                              ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007f7e180c6c60::fromBits@5
           │   │                                                              ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
   0.20%   │  ↗│    0x00007f7e90650480:   mov    (%rsp),%rdx
   0.00%   │  ││    0x00007f7e90650484:   vmovdqu %xmm0,0x10(%rdx,%r9,4)      ;*iastore {reexecute=0 rethrow=0 return_oop=0}
           │  ││                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@33 (line 3928)
           │  ││                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
           │  ││                                                              ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007f7e180c6c60::fromBits@5
           │  ││                                                              ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
   1.05%   │  ││    0x00007f7e9065048b:   add    $0x4,%r9d                    ;*iinc {reexecute=0 rethrow=0 return_oop=0}
           │  ││                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@34 (line 3926)
           │  ││                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
           │  ││                                                              ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007f7e180c6c60::fromBits@5
           │  ││                                                              ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
           │  ││    0x00007f7e9065048f:   cmp    %r10d,%r9d
           │  ╰│    0x00007f7e90650492:   jl     0x00007f7e90650480           ;*goto {reexecute=0 rethrow=0 return_oop=0}
           │   │                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@37 (line 3926)
           │   │                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
           │   │                                                              ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007f7e180c6c60::fromBits@5
           │   │                                                              ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
   0.24%   │   │    0x00007f7e90650494:   mov    0x458(%r15),%r10             ; ImmutableOopMap {[0]=Oop [16]=Oop }
           │   │                                                              ;*goto {reexecute=1 rethrow=0 return_oop=0}
           │   │                                                              ; - (reexecute) jdk.incubator.vector.IntVector$IntSpecies::rvOp@37 (line 3926)
           │   │                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
           │   │                                                              ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007f7e180c6c60::fromBits@5
           │   │                                                              ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
   0.03%   │   │    0x00007f7e9065049b:   test   %eax,(%r10)                  ;*goto {reexecute=0 rethrow=0 return_oop=0}
           │   │                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@37 (line 3926)
           │   │                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
           │   │                                                              ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007f7e180c6c60::fromBits@5
           │   │                                                              ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
           │   │                                                              ;   {poll}
   1.07%   │   │    0x00007f7e9065049e:   xchg   %ax,%ax
           │   │    0x00007f7e906504a0:   cmp    %edi,%r9d
           │   ╰    0x00007f7e906504a3:   jl     0x00007f7e9065045e
   0.22%   │        0x00007f7e906504a5:   cmp    %ebp,%r9d
           │    ╭   0x00007f7e906504a8:   jge    0x00007f7e906504bd
           │    │   0x00007f7e906504aa:   xchg   %ax,%ax                      ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
           │    │                                                             ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@15 (line 3927)
           │    │                                                             ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
           │    │                                                             ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007f7e180c6c60::fromBits@5
           │    │                                                             ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
           │    │↗  0x00007f7e906504ac:   mov    (%rsp),%r10
           │    ││  0x00007f7e906504b0:   mov    %r8d,0x10(%r10,%r9,4)        ;*iastore {reexecute=0 rethrow=0 return_oop=0}
           │    ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@33 (line 3928)
           │    ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
           │    ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007f7e180c6c60::fromBits@5
           │    ││                                                            ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
           │    ││  0x00007f7e906504b5:   inc    %r9d                         ;*iinc {reexecute=0 rethrow=0 return_oop=0}
           │    ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@34 (line 3926)
           │    ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
           │    ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007f7e180c6c60::fromBits@5
           │    ││                                                            ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
           │    ││  0x00007f7e906504b8:   cmp    %ebp,%r9d
           │    │╰  0x00007f7e906504bb:   jl     0x00007f7e906504ac           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
           │    │                                                             ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@12 (line 3926)
           │    │                                                             ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
           │    │                                                             ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007f7e180c6c60::fromBits@5
           │    │                                                             ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
           ↘    ↘   0x00007f7e906504bd:   mov    0x10(%rsp),%r10
   1.11%            0x00007f7e906504c2:   mov    0x44(%r10),%ebp              ;*getfield dummyVector {reexecute=0 rethrow=0 return_oop=0}
                                                                              ; - jdk.incubator.vector.AbstractSpecies::dummyVector@1 (line 308)
                                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::dummyVector@1 (line 3918)
                                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@41 (line 3930)
                                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
                                                                              ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007f7e180c6c60::fromBits@5
                                                                              ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
                    0x00007f7e906504c6:   mov    0x8(%r12,%rbp,8),%r11d       ; implicit exception: dispatches to 0x00007f7e9065063c
   0.24%            0x00007f7e906504cb:   cmp    $0x103e3b8,%r11d             ;   {metadata(&apos;jdk/incubator/vector/Int256Vector&apos;)}
                    0x00007f7e906504d2:   jne    0x00007f7e906505f4
   0.02%            0x00007f7e906504d8:   mov    0x1b8(%r15),%rax
   1.05%            0x00007f7e906504df:   mov    %rax,%r10
                    0x00007f7e906504e2:   add    $0x10,%r10
   0.25%            0x00007f7e906504e6:   cmp    0x1c8(%r15),%r10
                    0x00007f7e906504ed:   jae    0x00007f7e90650554           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@37 (line 3926)
                                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
                                                                              ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007f7e180c6c60::fromBits@5
                                                                              ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
   0.04%            0x00007f7e906504ef:   mov    %r10,0x1b8(%r15)
   1.06%            0x00007f7e906504f6:   prefetchw 0xc0(%r10)
                    0x00007f7e906504fe:   movq   $0x1,(%rax)
   0.20%            0x00007f7e90650505:   movl   $0x103e3b8,0x8(%rax)         ;   {metadata(&apos;jdk/incubator/vector/Int256Vector&apos;)}
   0.02%            0x00007f7e9065050c:   mov    %r12d,0xc(%rax)              ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                                              ; - jdk.incubator.vector.Int256Vector::vectorFactory@0 (line 171)
                                                                              ; - jdk.incubator.vector.Int256Vector::vectorFactory@2 (line 41)
                                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@45 (line 3930)
                                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
                                                                              ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007f7e180c6c60::fromBits@5
                                                                              ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
   1.09%            0x00007f7e90650510:   mov    (%rsp),%r10
   0.02%            0x00007f7e90650514:   mov    %r10,%r11
   0.21%            0x00007f7e90650517:   shr    $0x3,%r11
   0.02%            0x00007f7e9065051b:   mov    %r11d,0xc(%rax)              ;*invokeinterface fromBits {reexecute=0 rethrow=0 return_oop=0}
                                                                              ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
   1.06%            0x00007f7e9065051f:   add    $0x30,%rsp
                    0x00007f7e90650523:   pop    %rbp
   0.22%            0x00007f7e90650524:   cmp    0x450(%r15),%rsp             ;   {poll_return}
                    0x00007f7e9065052b:   ja     0x00007f7e9065066a
   1.04%            0x00007f7e90650531:   ret    
   0.00%            0x00007f7e90650532:   movabs $0x7f7e170026a0,%rsi         ;   {metadata({type array int})}
                    0x00007f7e9065053c:   mov    %ebp,%edx
                    0x00007f7e9065053e:   nop
                    0x00007f7e9065053f:   call   0x00007f7e90199b00           ; ImmutableOopMap {[16]=Oop }
                                                                              ;*newarray {reexecute=0 rethrow=0 return_oop=1}
                                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@4 (line 3925)
                                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
                                                                              ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007f7e180c6c60::fromBits@5
                                                                              ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
                                                                              ;   {runtime_call _new_array_Java}
                    0x00007f7e90650544:   nopl   0x10004b4(%rax,%rax,1)       ;*newarray {reexecute=0 rethrow=0 return_oop=0}
....................................................................................................
  31.22%  <total for region 2>

....[Hottest Region 3]..............................................................................
c2, level 4, jdk.internal.vm.vector.VectorSupport::fromBitsCoerced, version 2, compile id 861 

                0x00007f7e90650298:   jne    0x00007f7e90650590           ;*invokeinterface fromBits {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
                0x00007f7e9065029e:   xchg   %ax,%ax
                0x00007f7e906502a0:   test   %r8,%r8
                0x00007f7e906502a3:   je     0x00007f7e906505b0           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - jdk.incubator.vector.Int256Vector$Int256Mask::lambda$maskAll$15@3 (line 778)
                                                                          ; - jdk.incubator.vector.Int256Vector$Int256Mask$$Lambda/0x00007f7e180cb960::fromBits@2
                                                                          ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
                0x00007f7e906502a9:   movabs $0x7fee004e8,%rax            ;   {oop(a &apos;jdk/incubator/vector/Int256Vector$Int256Mask&apos;{0x00000007fee004e8})}
                0x00007f7e906502b3:   jmp    0x00007f7e9065051f
   0.22%        0x00007f7e906502b8:   nopl   0x0(%rax,%rax,1)
   0.44%        0x00007f7e906502c0:   mov    0x8(%rdi),%r11d              ; implicit exception: dispatches to 0x00007f7e90650624
   0.56%        0x00007f7e906502c4:   cmp    $0x103c240,%r11d             ;   {metadata(&apos;jdk/incubator/vector/IntVector$IntSpecies&apos;)}
                0x00007f7e906502cb:   jne    0x00007f7e906505d8           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007f7e180c6c60::fromBits@2
                                                                          ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
   0.04%        0x00007f7e906502d1:   mov    %rdi,0x10(%rsp)
   0.24%        0x00007f7e906502d6:   mov    0xc(%rdi),%ebp               ;*getfield laneCount {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - jdk.incubator.vector.AbstractSpecies::laneCount@1 (line 126)
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@1 (line 3925)
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007f7e180c6c60::fromBits@5
                                                                          ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
   0.43%        0x00007f7e906502d9:   nopl   0x0(%rax)
   0.56%        0x00007f7e906502e0:   cmp    $0x40000,%ebp
                0x00007f7e906502e6:   ja     0x00007f7e9065056e
   0.03%        0x00007f7e906502ec:   movslq %ebp,%r10                    ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@4 (line 3925)
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007f7e180c6c60::fromBits@5
                                                                          ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
   0.24%        0x00007f7e906502ef:   cmp    $0x40000,%ebp
                0x00007f7e906502f5:   ja     0x00007f7e90650532           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@37 (line 3926)
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007f7e180c6c60::fromBits@5
                                                                          ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
   0.45%        0x00007f7e906502fb:   mov    0x1b8(%r15),%r8
   0.52%        0x00007f7e90650302:   lea    0x17(,%r10,4),%rcx           ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@4 (line 3925)
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007f7e180c6c60::fromBits@5
                                                                          ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
   0.05%        0x00007f7e9065030a:   mov    %rcx,%r10
   0.21%        0x00007f7e9065030d:   and    $0xfffffffffffffff8,%r10
   0.42%        0x00007f7e90650311:   mov    %r8,%r11
   0.56%        0x00007f7e90650314:   add    %r10,%r11
   0.06%        0x00007f7e90650317:   nopw   0x0(%rax,%rax,1)
   0.20%        0x00007f7e90650320:   cmp    0x1c8(%r15),%r11
                0x00007f7e90650327:   jae    0x00007f7e90650532           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@37 (line 3926)
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007f7e180c6c60::fromBits@5
                                                                          ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
   0.52%        0x00007f7e9065032d:   mov    %r11,0x1b8(%r15)
   0.55%        0x00007f7e90650334:   mov    %r8,%rdi
   0.02%        0x00007f7e90650337:   add    $0x10,%rdi
   0.26%        0x00007f7e9065033b:   movq   $0x1,(%r8)
   0.52%        0x00007f7e90650342:   prefetchw 0xc0(%r11)
   0.56%        0x00007f7e9065034a:   movl   $0x26a0,0x8(%r8)             ;   {metadata({type array int})}
   0.04%        0x00007f7e90650352:   mov    %ebp,0xc(%r8)
   0.25%        0x00007f7e90650356:   prefetchw 0x100(%r11)
   0.52%        0x00007f7e9065035e:   prefetchw 0x140(%r11)
   0.55%        0x00007f7e90650366:   prefetchw 0x180(%r11)
   0.42%        0x00007f7e9065036e:   shr    $0x3,%rcx
   0.20%        0x00007f7e90650372:   add    $0xfffffffffffffffe,%rcx
   0.47%        0x00007f7e90650376:   xor    %rax,%rax
   0.55%        0x00007f7e90650379:   cmp    $0x8,%rcx
          ╭     0x00007f7e9065037d:   jg     0x00007f7e9065038f
   0.06%  │     0x00007f7e9065037f:   dec    %rcx
   0.20%  │     0x00007f7e90650382:   js     0x00007f7e906503d3
   2.85%  │↗    0x00007f7e90650384:   mov    %rax,(%rdi,%rcx,8)
   1.92%  ││    0x00007f7e90650388:   dec    %rcx
          │╰    0x00007f7e9065038b:   jge    0x00007f7e90650384
          │     0x00007f7e9065038d:   jmp    0x00007f7e906503d3
          ↘     0x00007f7e9065038f:   vpxor  %ymm0,%ymm0,%ymm0
            ╭   0x00007f7e90650393:   jmp    0x00007f7e906503a5
            │↗  0x00007f7e90650398:   vmovdqu %ymm0,(%rdi)
            ││  0x00007f7e9065039c:   vmovdqu %ymm0,0x20(%rdi)
            ││  0x00007f7e906503a1:   add    $0x40,%rdi
            ↘│  0x00007f7e906503a5:   sub    $0x8,%rcx
             ╰  0x00007f7e906503a9:   jge    0x00007f7e90650398
                0x00007f7e906503ab:   add    $0x4,%rcx
....................................................................................................
  15.74%  <total for region 3>

....[Hottest Region 4]..............................................................................
c2, level 4, com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector, version 4, compile id 962 

   0.47%          0x00007f7e906722b1:   vpxor  %xmm2,%xmm2,%xmm2
                  0x00007f7e906722b5:   vextracti128 $0x1,%ymm4,%xmm0
   0.01%          0x00007f7e906722bb:   vpackssdw %xmm0,%xmm4,%xmm0
   0.49%          0x00007f7e906722bf:   vpacksswb %xmm2,%xmm0,%xmm0
   0.43%          0x00007f7e906722c3:   vpabsb %xmm0,%xmm0
   1.73%          0x00007f7e906722c8:   cmp    0x1c8(%r15),%r11
                  0x00007f7e906722cf:   jae    0x00007f7e90672743
                  0x00007f7e906722d5:   mov    %r11,0x1b8(%r15)
                  0x00007f7e906722dc:   prefetchw 0xc0(%r11)
                  0x00007f7e906722e4:   movq   $0x1,(%r8)
   0.43%          0x00007f7e906722eb:   prefetchw 0x100(%r11)
                  0x00007f7e906722f3:   movl   $0x26a0,0x8(%r8)             ;   {metadata({type array int})}
                  0x00007f7e906722fb:   prefetchw 0x140(%r11)
                  0x00007f7e90672303:   movl   $0x8,0xc(%r8)
   0.34%          0x00007f7e9067230b:   prefetchw 0x180(%r11)
   0.07%          0x00007f7e90672313:   mov    %r12,0x10(%r8)
                  0x00007f7e90672317:   mov    %r12,0x18(%r8)
                  0x00007f7e9067231b:   mov    %r12,0x20(%r8)
   0.44%          0x00007f7e9067231f:   mov    %r12,0x28(%r8)
                  0x00007f7e90672323:   mov    %r8,0x88(%rsp)
                  0x00007f7e9067232b:   mov    0x18(%rsp),%r10
   0.00%          0x00007f7e90672330:   mov    0xc(%r10),%r11d              ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@174 (line 79)
   0.44%          0x00007f7e90672334:   mov    0x1b8(%r15),%r9
                  0x00007f7e9067233b:   vmovdqu 0x10(%r12,%r11,8),%ymm2
   0.03%          0x00007f7e90672342:   mov    %r9,%r10
                  0x00007f7e90672345:   add    $0x10,%r10
   0.43%          0x00007f7e90672349:   mov    0x80(%rsp),%r11
                  0x00007f7e90672351:   mov    0xc(%r11),%r8d
   0.01%          0x00007f7e90672355:   vmovdqu 0x10(%r12,%r8,8),%ymm3      ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
                  0x00007f7e9067235c:   vpblendvb %ymm4,%ymm3,%ymm2,%ymm2   ;*invokestatic blend {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - jdk.incubator.vector.IntVector::blendTemplate@26 (line 2182)
                                                                            ; - jdk.incubator.vector.Int256Vector::blend@11 (line 410)
                                                                            ; - jdk.incubator.vector.Int256Vector::blend@3 (line 41)
                                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@158 (line 88)
   0.50%          0x00007f7e90672362:   mov    0x88(%rsp),%r11
                  0x00007f7e9067236a:   vmovdqu %ymm2,0x10(%r11)
                  0x00007f7e90672370:   cmp    0x1c8(%r15),%r10
                  0x00007f7e90672377:   jae    0x00007f7e906727a5
   0.43%          0x00007f7e9067237d:   mov    %r10,0x1b8(%r15)
   0.02%          0x00007f7e90672384:   prefetchw 0xc0(%r10)
   0.00%          0x00007f7e9067238c:   movq   $0x1,(%r9)
                  0x00007f7e90672393:   movl   $0x103e3b8,0x8(%r9)          ;   {metadata(&apos;jdk/incubator/vector/Int256Vector&apos;)}
   0.42%          0x00007f7e9067239b:   mov    0x88(%rsp),%r10
   0.02%          0x00007f7e906723a3:   mov    %r10,%r11
                  0x00007f7e906723a6:   shr    $0x3,%r11
   0.00%          0x00007f7e906723aa:   mov    %r11d,0xc(%r9)
   0.45%          0x00007f7e906723ae:   mov    %r9,0x18(%rsp)
   0.02%          0x00007f7e906723b3:   mov    0x1b8(%r15),%r11
   0.00%          0x00007f7e906723ba:   mov    %r11,%r10
                  0x00007f7e906723bd:   add    $0x30,%r10
   0.41%          0x00007f7e906723c1:   cmp    0x1c8(%r15),%r10
                  0x00007f7e906723c8:   jae    0x00007f7e90672812
   0.01%          0x00007f7e906723ce:   mov    %r10,0x1b8(%r15)
                  0x00007f7e906723d5:   prefetchw 0xc0(%r10)
   0.00%          0x00007f7e906723dd:   movq   $0x1,(%r11)
   0.43%          0x00007f7e906723e4:   prefetchw 0x100(%r10)
   0.01%          0x00007f7e906723ec:   movl   $0x26a0,0x8(%r11)            ;   {metadata({type array int})}
                  0x00007f7e906723f4:   prefetchw 0x140(%r10)
                  0x00007f7e906723fc:   movl   $0x8,0xc(%r11)
   0.43%          0x00007f7e90672404:   prefetchw 0x180(%r10)
   0.16%          0x00007f7e9067240c:   mov    %r12,0x10(%r11)
                  0x00007f7e90672410:   mov    %r12,0x18(%r11)
   0.01%          0x00007f7e90672414:   mov    %r12,0x20(%r11)
   0.40%          0x00007f7e90672418:   mov    %r12,0x28(%r11)
   0.02%          0x00007f7e9067241c:   mov    %r11,0x8(%rsp)
                  0x00007f7e90672421:   mov    0x38(%rsp),%r10
   0.02%          0x00007f7e90672426:   mov    0xc(%r10),%r11d              ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@174 (line 79)
   0.45%          0x00007f7e9067242a:   mov    0x1b8(%r15),%r9
   0.02%          0x00007f7e90672431:   vmovdqu 0x10(%r12,%r11,8),%ymm0
   0.27%          0x00007f7e90672438:   mov    %r9,%r10
   0.00%          0x00007f7e9067243b:   add    $0x10,%r10
   0.38%          0x00007f7e9067243f:   mov    0x20(%rsp),%r11
   0.01%          0x00007f7e90672444:   mov    0xc(%r11),%r8d               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.03%          0x00007f7e90672448:   vpaddd 0x10(%r12,%r8,8),%ymm0,%ymm0 ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - jdk.incubator.vector.IntVector::lanewiseTemplate@154 (line 784)
                                                                            ; - jdk.incubator.vector.Int256Vector::lanewise@3 (line 285)
                                                                            ; - jdk.incubator.vector.Int256Vector::lanewise@3 (line 41)
                                                                            ; - jdk.incubator.vector.IntVector::add@5 (line 1352)
                                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@166 (line 89)
   0.87%          0x00007f7e9067244f:   mov    0x8(%rsp),%r11
   0.01%          0x00007f7e90672454:   vmovdqu %ymm0,0x10(%r11)
   0.03%          0x00007f7e9067245a:   nopw   0x0(%rax,%rax,1)
   0.18%          0x00007f7e90672460:   cmp    0x1c8(%r15),%r10
                  0x00007f7e90672467:   jae    0x00007f7e9067286e           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@174 (line 79)
   0.25%          0x00007f7e9067246d:   mov    %r10,0x1b8(%r15)
   0.01%          0x00007f7e90672474:   prefetchw 0xc0(%r10)
   0.02%          0x00007f7e9067247c:   movq   $0x1,(%r9)
   0.18%          0x00007f7e90672483:   movl   $0x103e3b8,0x8(%r9)          ;   {metadata(&apos;jdk/incubator/vector/Int256Vector&apos;)}
   0.26%          0x00007f7e9067248b:   mov    0x30(%rsp),%r10              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.02%          0x00007f7e90672490:   mov    0xc(%r10),%r11d              ;*getfield laneCount {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - jdk.incubator.vector.AbstractSpecies::length@1 (line 117)
                                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@67 (line 79)
   0.06%          0x00007f7e90672494:   mov    0x58(%rsp),%ecx              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.16%          0x00007f7e90672498:   inc    %ecx
   0.21%          0x00007f7e9067249a:   mov    0x8(%rsp),%r10
   0.02%          0x00007f7e9067249f:   mov    %r10,%r8
   0.03%          0x00007f7e906724a2:   shr    $0x3,%r8
   0.18%          0x00007f7e906724a6:   mov    %r8d,0xc(%r9)
   0.19%          0x00007f7e906724aa:   mov    %r9,0x20(%rsp)               ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@174 (line 79)
   0.02%          0x00007f7e906724af:   mov    0x458(%r15),%r10             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.05%          0x00007f7e906724b6:   vpmovsxbd %xmm1,%ymm3               ; ImmutableOopMap {[24]=Oop [32]=Oop [40]=Oop [48]=Oop [56]=Oop }
                                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                                            ; - (reexecute) com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@174 (line 79)
   0.21%          0x00007f7e906724bb:   test   %eax,(%r10)                  ;   {poll}
   0.24%          0x00007f7e906724be:   xchg   %ax,%ax
                  0x00007f7e906724c0:   cmp    %r11d,%ecx
                  0x00007f7e906724c3:   jge    0x00007f7e90671f30
   0.03%          0x00007f7e906724c9:   mov    0x28(%rsp),%r11
   0.13%          0x00007f7e906724ce:   mov    0x30(%rsp),%r9
   0.14%          0x00007f7e906724d3:   mov    0x38(%rsp),%r8
   0.01%          0x00007f7e906724d8:   mov    0x40(%rsp),%r10d
   0.02%          0x00007f7e906724dd:   vmovdqu 0x60(%rsp),%ymm2
   0.17%          0x00007f7e906724e3:   mov    0x44(%rsp),%edi
   0.20%          0x00007f7e906724e7:   mov    0x48(%rsp),%ebx
   0.01%          0x00007f7e906724eb:   mov    0x4c(%rsp),%esi
   0.02%          0x00007f7e906724ef:   mov    0x50(%rsp),%edx
   0.14%          0x00007f7e906724f3:   mov    0x54(%rsp),%ebp
   0.19%          0x00007f7e906724f7:   vmovq  %xmm1,0xe0(%rsp)
   0.03%          0x00007f7e90672500:   cmp    $0x4,%ecx
                  0x00007f7e90672503:   je     0x00007f7e906726e8
   0.03%          0x00007f7e90672509:   cmp    $0x4,%ecx
          ╭       0x00007f7e9067250c:   jge    0x00007f7e906725fe
   0.06%  │       0x00007f7e90672512:   cmp    $0x1,%ecx
          │╭      0x00007f7e90672515:   jne    0x00007f7e9067254e
   0.02%  ││      0x00007f7e90672517:   mov    %ecx,0x58(%rsp)
   0.00%  ││      0x00007f7e9067251b:   mov    %ebp,0x54(%rsp)
          ││      0x00007f7e9067251f:   mov    %edx,0x50(%rsp)
   0.03%  ││      0x00007f7e90672523:   mov    %esi,0x4c(%rsp)
   0.02%  ││      0x00007f7e90672527:   mov    %ebx,0x48(%rsp)
   0.00%  ││      0x00007f7e9067252b:   mov    %edi,0x44(%rsp)
   0.00%  ││      0x00007f7e9067252f:   mov    %r10d,0x40(%rsp)
   0.02%  ││      0x00007f7e90672534:   mov    %r8,0x38(%rsp)
   0.03%  ││      0x00007f7e90672539:   mov    %r9,0x30(%rsp)
          ││      0x00007f7e9067253e:   mov    %r11,0x28(%rsp)              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││                                                                ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          ││                                                                ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.01%  ││      0x00007f7e90672543:   vpextrd $0x1,%xmm2,%r8d             ;*invokestatic extract {reexecute=0 rethrow=0 return_oop=0}
          ││                                                                ; - jdk.incubator.vector.Int256Vector::laneHelper@16 (line 527)
          ││                                                                ; - jdk.incubator.vector.Int256Vector::lane@56 (line 515)
          ││                                                                ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@79 (line 80)
   0.05%  ││      0x00007f7e90672549:   jmp    0x00007f7e9067208f
   0.11%  │↘      0x00007f7e9067254e:   cmp    $0x1,%ecx
          │ ╭     0x00007f7e90672551:   jge    0x00007f7e90672591
          │ │     0x00007f7e90672553:   test   %ecx,%ecx
          │ │     0x00007f7e90672555:   jne    0x00007f7e906729f4
   0.02%  │ │     0x00007f7e9067255b:   mov    %ecx,0x58(%rsp)
          │ │     0x00007f7e9067255f:   mov    %ebp,0x54(%rsp)
   0.03%  │ │     0x00007f7e90672563:   mov    %edx,0x50(%rsp)
          │ │     0x00007f7e90672567:   mov    %esi,0x4c(%rsp)
   0.03%  │ │     0x00007f7e9067256b:   mov    %ebx,0x48(%rsp)
   0.00%  │ │     0x00007f7e9067256f:   mov    %edi,0x44(%rsp)
   0.04%  │ │     0x00007f7e90672573:   mov    %r10d,0x40(%rsp)
          │ │     0x00007f7e90672578:   mov    %r8,0x38(%rsp)
   0.03%  │ │     0x00007f7e9067257d:   mov    %r9,0x30(%rsp)
          │ │     0x00007f7e90672582:   mov    %r11,0x28(%rsp)              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ │                                                               ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          │ │                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.01%  │ │     0x00007f7e90672587:   vmovd  %xmm2,%r8d                   ;*invokestatic extract {reexecute=0 rethrow=0 return_oop=0}
          │ │                                                               ; - jdk.incubator.vector.Int256Vector::laneHelper@16 (line 527)
          │ │                                                               ; - jdk.incubator.vector.Int256Vector::lane@50 (line 514)
          │ │                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@79 (line 80)
          │ │     0x00007f7e9067258c:   jmp    0x00007f7e9067208f
   0.11%  │ ↘     0x00007f7e90672591:   cmp    $0x2,%ecx
          │  ╭    0x00007f7e90672594:   je     0x00007f7e906725ca
          │  │    0x00007f7e90672596:   mov    %ecx,0x58(%rsp)
          │  │    0x00007f7e9067259a:   mov    %ebp,0x54(%rsp)
          │  │    0x00007f7e9067259e:   mov    %edx,0x50(%rsp)
   0.07%  │  │    0x00007f7e906725a2:   mov    %esi,0x4c(%rsp)
          │  │    0x00007f7e906725a6:   mov    %ebx,0x48(%rsp)
          │  │    0x00007f7e906725aa:   mov    %edi,0x44(%rsp)
          │  │    0x00007f7e906725ae:   mov    %r10d,0x40(%rsp)
   0.05%  │  │    0x00007f7e906725b3:   mov    %r8,0x38(%rsp)
          │  │    0x00007f7e906725b8:   mov    %r9,0x30(%rsp)               ;   {no_reloc}
          │  │    0x00007f7e906725bd:   mov    %r11,0x28(%rsp)
          │  │    0x00007f7e906725c2:   mov    %edx,%r8d
   0.04%  │  │    0x00007f7e906725c5:   jmp    0x00007f7e9067208f
   0.05%  │  ↘    0x00007f7e906725ca:   mov    %ecx,0x58(%rsp)
          │       0x00007f7e906725ce:   mov    %ebp,0x54(%rsp)
          │       0x00007f7e906725d2:   mov    %edx,0x50(%rsp)
          │       0x00007f7e906725d6:   mov    %esi,0x4c(%rsp)
   0.05%  │       0x00007f7e906725da:   mov    %ebx,0x48(%rsp)
          │       0x00007f7e906725de:   mov    %edi,0x44(%rsp)
          │       0x00007f7e906725e2:   mov    %r10d,0x40(%rsp)
          │       0x00007f7e906725e7:   mov    %r8,0x38(%rsp)
   0.05%  │       0x00007f7e906725ec:   mov    %r9,0x30(%rsp)
          │       0x00007f7e906725f1:   mov    %r11,0x28(%rsp)
          │       0x00007f7e906725f6:   mov    %esi,%r8d
          │       0x00007f7e906725f9:   jmp    0x00007f7e9067208f
   0.07%  ↘       0x00007f7e906725fe:   xchg   %ax,%ax
   0.10%          0x00007f7e90672600:   cmp    $0x6,%ecx
              ╭   0x00007f7e90672603:   jne    0x00007f7e90672639
   0.00%      │   0x00007f7e90672605:   mov    %ecx,0x58(%rsp)
   0.00%      │   0x00007f7e90672609:   mov    %ebp,0x54(%rsp)
   0.03%      │   0x00007f7e9067260d:   mov    %edx,0x50(%rsp)
   0.02%      │   0x00007f7e90672611:   mov    %esi,0x4c(%rsp)
              │   0x00007f7e90672615:   mov    %ebx,0x48(%rsp)
   0.00%      │   0x00007f7e90672619:   mov    %edi,0x44(%rsp)
   0.02%      │   0x00007f7e9067261d:   mov    %r10d,0x40(%rsp)
   0.01%      │   0x00007f7e90672622:   mov    %r8,0x38(%rsp)
              │   0x00007f7e90672627:   mov    %r9,0x30(%rsp)
   0.00%      │   0x00007f7e9067262c:   mov    %r11,0x28(%rsp)
   0.02%      │   0x00007f7e90672631:   mov    %edi,%r8d
   0.03%      │   0x00007f7e90672634:   jmp    0x00007f7e9067208f
   0.06%      ↘   0x00007f7e90672639:   cmp    $0x6,%ecx
               ╭  0x00007f7e9067263c:   jge    0x00007f7e9067267b
               │  0x00007f7e9067263e:   mov    %ecx,0x58(%rsp)
               │  0x00007f7e90672642:   mov    %ebp,0x54(%rsp)
   0.03%       │  0x00007f7e90672646:   mov    %edx,0x50(%rsp)
   0.02%       │  0x00007f7e9067264a:   mov    %esi,0x4c(%rsp)
               │  0x00007f7e9067264e:   mov    %ebx,0x48(%rsp)
               │  0x00007f7e90672652:   mov    %edi,0x44(%rsp)
   0.03%       │  0x00007f7e90672656:   mov    %r10d,0x40(%rsp)
   0.02%       │  0x00007f7e9067265b:   mov    %r8,0x38(%rsp)
               │  0x00007f7e90672660:   mov    %r9,0x30(%rsp)
               │  0x00007f7e90672665:   mov    %r11,0x28(%rsp)              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
               │                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
               │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.04%       │  0x00007f7e9067266a:   vextractf128 $0x1,%ymm2,%xmm0
   0.02%       │  0x00007f7e90672670:   vpextrd $0x1,%xmm0,%r8d             ;*invokestatic extract {reexecute=0 rethrow=0 return_oop=0}
               │                                                            ; - jdk.incubator.vector.Int256Vector::laneHelper@16 (line 527)
               │                                                            ; - jdk.incubator.vector.Int256Vector::lane@80 (line 519)
               │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@79 (line 80)
   0.00%       │  0x00007f7e90672676:   jmp    0x00007f7e9067208f
   0.06%       ↘  0x00007f7e9067267b:   nopl   0x0(%rax,%rax,1)
                  0x00007f7e90672680:   cmp    $0x7,%ecx
                  0x00007f7e90672683:   je     0x00007f7e90672060
                  0x00007f7e90672689:   mov    $0xffffff45,%esi
                  0x00007f7e9067268e:   mov    %r11,%rbp
                  0x00007f7e90672691:   mov    %r9,0x8(%rsp)
                  0x00007f7e90672696:   mov    0x18(%rsp),%r11
                  0x00007f7e9067269b:   mov    %r11,0x10(%rsp)
                  0x00007f7e906726a0:   mov    0x20(%rsp),%r11
                  0x00007f7e906726a5:   mov    %r11,0x18(%rsp)
                  0x00007f7e906726aa:   mov    %r8,0x20(%rsp)
....................................................................................................
  12.97%  <total for region 4>

....[Hottest Regions]...............................................................................
  33.33%         c2, level 4  com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector, version 4, compile id 962 
  31.22%         c2, level 4  jdk.internal.vm.vector.VectorSupport::fromBitsCoerced, version 2, compile id 861 
  15.74%         c2, level 4  jdk.internal.vm.vector.VectorSupport::fromBitsCoerced, version 2, compile id 861 
  12.97%         c2, level 4  com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector, version 4, compile id 962 
   3.87%         c2, level 4  jdk.internal.vm.vector.VectorSupport::fromBitsCoerced, version 2, compile id 861 
   0.19%              kernel  [unknown] 
   0.17%         c2, level 4  com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector, version 4, compile id 962 
   0.11%              kernel  [unknown] 
   0.09%         c2, level 4  com.ionutbalosin.jvm.performance.benchmarks.api.vector.jmh_generated.SortVectorApiBenchmark_sortVector_jmhTest::sortVector_avgt_jmhStub, version 5, compile id 991 
   0.07%              kernel  [unknown] 
   0.07%           libjvm.so  G1MergeHeapRootsTask::G1MergeCardSetClosure::do_heap_region 
   0.06%           libjvm.so  G1CardSet::reset_table_scanner 
   0.06%              kernel  [unknown] 
   0.06%              kernel  [unknown] 
   0.05%           libjvm.so  G1CardTable::is_in_young 
   0.04%        libc-2.31.so  __memset_avx2_unaligned_erms 
   0.04%              kernel  [unknown] 
   0.04%          ld-2.31.so  __tls_get_addr 
   0.04%           libjvm.so  ElfSymbolTable::lookup 
   0.04%        libc-2.31.so  __memset_avx2_erms 
   1.75%  <...other 453 warm regions...>
....................................................................................................
 100.00%  <totals>

....[Hottest Methods (after inlining)]..............................................................
  50.83%         c2, level 4  jdk.internal.vm.vector.VectorSupport::fromBitsCoerced, version 2, compile id 861 
  46.48%         c2, level 4  com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector, version 4, compile id 962 
   1.19%              kernel  [unknown] 
   0.09%         c2, level 4  com.ionutbalosin.jvm.performance.benchmarks.api.vector.jmh_generated.SortVectorApiBenchmark_sortVector_jmhTest::sortVector_avgt_jmhStub, version 5, compile id 991 
   0.09%                      <unknown> 
   0.08%           libjvm.so  G1MergeHeapRootsTask::G1MergeCardSetClosure::do_heap_region 
   0.06%           libjvm.so  G1CardSet::reset_table_scanner 
   0.05%           libjvm.so  G1CardTable::is_in_young 
   0.04%        libc-2.31.so  __memset_avx2_unaligned_erms 
   0.04%          ld-2.31.so  __tls_get_addr 
   0.04%           libjvm.so  ElfSymbolTable::lookup 
   0.04%        libc-2.31.so  __memset_avx2_erms 
   0.03%           libjvm.so  MemAllocator::allocate 
   0.03%           libjvm.so  CardTableBarrierSet::on_slowpath_allocation_exit 
   0.03%           libjvm.so  OptoRuntime::new_instance_C 
   0.03%           libjvm.so  SharedRuntime::on_slowpath_allocation_exit 
   0.03%           libjvm.so  FreeListAllocator::reset 
   0.02%           libjvm.so  HeapRegionClaimer::claim_region 
   0.02%           libjvm.so  G1ScanCollectionSetRegionClosure::do_heap_region 
   0.02%           libjvm.so  G1CardSet::clear 
   0.76%  <...other 173 warm methods...>
....................................................................................................
 100.00%  <totals>

....[Distribution by Source]........................................................................
  97.40%         c2, level 4
   1.19%              kernel
   1.00%           libjvm.so
   0.19%        libc-2.31.so
   0.09%                    
   0.05%  libpthread-2.31.so
   0.04%          ld-2.31.so
   0.02%      hsdis-amd64.so
   0.02%         interpreter
   0.01%              [vdso]
....................................................................................................
 100.00%  <totals>



# JMH version: 1.37
# VM version: JDK 21, OpenJDK 64-Bit Server VM, 21+35-2513
# VM invoker: /home/gogu/bench_jdks/jdk-21/bin/java
# VM options: -Xms4g -Xmx4g -XX:+AlwaysPreTouch --add-modules=jdk.incubator.vector
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark.sortVector
# Parameters: (arraySize = 64, vectorSize = 512)

# Run progress: 25.00% complete, ETA 00:16:34
# Fork: 1 of 1
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 46.404 us/op
# Warmup Iteration   2: 33.354 us/op
# Warmup Iteration   3: 33.311 us/op
# Warmup Iteration   4: 33.288 us/op
# Warmup Iteration   5: 33.296 us/op
Iteration   1: 33.291 us/op
Iteration   2: 33.295 us/op
Iteration   3: 33.289 us/op
Iteration   4: 33.278 us/op
Iteration   5: 33.288 us/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark.sortVector":
  33.288 ±(99.9%) 0.024 us/op [Average]
  (min, avg, max) = (33.278, 33.288, 33.295), stdev = 0.006
  CI (99.9%): [33.264, 33.312] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark.sortVector:asm":
PrintAssembly processed: 189199 total address lines.
Perf output processed (skipped 56.918 seconds):
 Column 1: cycles (50628 events)

Hottest code regions (>10.00% "cycles" events):
 Event counts are percents of total event count.

....[Hottest Region 1]..............................................................................
c2, level 4, jdk.internal.vm.vector.VectorSupport::compare, version 2, compile id 890 

                  0x00007fa24c656012:   mov    0x48(%rcx),%r9
                  0x00007fa24c656016:   cmp    %r8,%r9
                  0x00007fa24c656019:   jne    0x00007fa24c6565f0           ;*invokevirtual loadFence {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - jdk.internal.vm.vector.VectorSupport::maybeRebox@3 (line 702)
                                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
                                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
                                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa1d40caf28::apply@14
                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.01%          0x00007fa24c65601f:   mov    0xc(%r10),%ecx               ;*getfield payload {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@4 (line 164)
                                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
                                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa1d40caf28::apply@14
                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.00%          0x00007fa24c656023:   mov    0x8(%r12,%rcx,8),%r8d        ; implicit exception: dispatches to 0x00007fa24c6566fc
   0.50%          0x00007fa24c656028:   cmp    $0x26a0,%r8d                 ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
                                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
                                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa1d40caf28::apply@14
                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
                                                                            ;   {metadata({type array int})}
                  0x00007fa24c65602f:   jne    0x00007fa24c656650           ;*invokevirtual loadFence {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - jdk.internal.vm.vector.VectorSupport::maybeRebox@3 (line 702)
                                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
                                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
                                                                            ; - jdk.incubator.vector.IntVector::bTest@10 (line 473)
                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa1d40caf28::apply@14
                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.20%          0x00007fa24c656035:   mov    0xc(%r11),%r11d              ;*getfield payload {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@4 (line 164)
                                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
                                                                            ; - jdk.incubator.vector.IntVector::bTest@10 (line 473)
                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa1d40caf28::apply@14
                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.01%          0x00007fa24c656039:   lea    (%r12,%rcx,8),%rdx           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - jdk.incubator.vector.Int512Vector::vec@4 (line 117)
                                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa1d40caf28::apply@14
                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
                  0x00007fa24c65603d:   data16 xchg %ax,%ax
   0.10%          0x00007fa24c656040:   mov    0x8(%r12,%r11,8),%r9d        ; implicit exception: dispatches to 0x00007fa24c656720
   0.39%          0x00007fa24c656045:   cmp    $0x26a0,%r9d                 ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
                                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
                                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa1d40caf28::apply@14
                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
                                                                            ;   {metadata({type array int})}
                  0x00007fa24c65604c:   jne    0x00007fa24c656678
   0.14%          0x00007fa24c656052:   shl    $0x3,%r11                    ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - jdk.incubator.vector.Int512Vector::vec@4 (line 117)
                                                                            ; - jdk.incubator.vector.IntVector::bTest@10 (line 473)
                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa1d40caf28::apply@14
                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
                  0x00007fa24c656056:   mov    %r11,0x40(%rsp)
   0.00%          0x00007fa24c65605b:   mov    0x1b8(%r15),%rbp
   0.15%          0x00007fa24c656062:   mov    %rbp,%r11
   0.13%          0x00007fa24c656065:   add    $0x20,%r11
                  0x00007fa24c656069:   cmp    0x1c8(%r15),%r11
                  0x00007fa24c656070:   jae    0x00007fa24c6564f7           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - jdk.incubator.vector.IntVector::bTest@62 (line 475)
                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa1d40caf28::apply@14
                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.00%          0x00007fa24c656076:   mov    %r11,0x1b8(%r15)
   0.18%          0x00007fa24c65607d:   prefetchw 0xc0(%r11)
   0.12%          0x00007fa24c656085:   movq   $0x1,0x0(%rbp)
   0.02%          0x00007fa24c65608d:   prefetchw 0x100(%r11)
   0.01%          0x00007fa24c656095:   movl   $0x1b00,0x8(%rbp)            ;   {metadata({type array bool})}
   0.74%          0x00007fa24c65609c:   prefetchw 0x140(%r11)
   0.02%          0x00007fa24c6560a4:   movl   $0x10,0xc(%rbp)
   0.34%          0x00007fa24c6560ab:   prefetchw 0x180(%r11)
   0.08%          0x00007fa24c6560b3:   mov    %r12,0x10(%rbp)
   0.35%          0x00007fa24c6560b7:   mov    %r12,0x18(%rbp)              ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - jdk.incubator.vector.IntVector::bTest@19 (line 474)
                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa1d40caf28::apply@14
                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.04%          0x00007fa24c6560bb:   mov    0xc(%rdx),%r11d              ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - jdk.incubator.vector.IntVector::bTest@47 (line 476)
                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa1d40caf28::apply@14
                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.11%          0x00007fa24c6560bf:   nop
   0.02%          0x00007fa24c6560c0:   test   %r11d,%r11d
                  0x00007fa24c6560c3:   jbe    0x00007fa24c6565ac
   0.17%          0x00007fa24c6560c9:   cmp    $0xf,%r11d
                  0x00007fa24c6560cd:   jbe    0x00007fa24c6565b2
   0.02%          0x00007fa24c6560d3:   mov    0x40(%rsp),%r11              ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
                                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
                                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa1d40caf28::apply@14
                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.14%          0x00007fa24c6560d8:   mov    0xc(%r11),%r8d               ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - jdk.incubator.vector.IntVector::bTest@52 (line 476)
                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa1d40caf28::apply@14
                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.12%          0x00007fa24c6560dc:   nopl   0x0(%rax)
   0.09%          0x00007fa24c6560e0:   test   %r8d,%r8d
                  0x00007fa24c6560e3:   jbe    0x00007fa24c6565b8
   0.14%          0x00007fa24c6560e9:   cmp    $0xf,%r8d
                  0x00007fa24c6560ed:   jbe    0x00007fa24c6565be
   0.19%          0x00007fa24c6560f3:   mov    $0x1,%r8d
   0.00%          0x00007fa24c6560f9:   mov    (%rsp),%r11d
   0.09%          0x00007fa24c6560fd:   data16 xchg %ax,%ax
   0.03%          0x00007fa24c656100:   cmp    $0x3,%r11d
          ╭       0x00007fa24c656104:   je     0x00007fa24c65613a
   0.06%  │       0x00007fa24c656106:   test   %r11d,%r11d
          │       0x00007fa24c656109:   jne    0x00007fa24c6565c2
          │       0x00007fa24c65610f:   mov    0x40(%rsp),%r10
   0.03%  │       0x00007fa24c656114:   mov    0x10(%r10),%r11d
   0.04%  │       0x00007fa24c656118:   mov    0x10(%rdx),%r10d
   0.04%  │       0x00007fa24c65611c:   nopl   0x0(%rax)
          │       0x00007fa24c656120:   cmp    %r11d,%r10d                  ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
          │                                                                 ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
          │                                                                 ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
          │                                                                 ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
          │                                                                 ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
          │                                                                 ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa1d40caf28::apply@14
          │                                                                 ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
          │       0x00007fa24c656123:   je     0x00007fa24c656496
   0.03%  │       0x00007fa24c656129:   xor    %r10d,%r10d                  ;*goto {reexecute=0 rethrow=0 return_oop=0}
          │                                                                 ; - jdk.incubator.vector.IntVector::compareWithOp@148 (line 2069)
          │                                                                 ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$58@4 (line 2035)
          │                                                                 ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa1d40cb338::apply@9
          │                                                                 ; - jdk.incubator.vector.IntVector::bTest@53 (line 476)
          │                                                                 ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
          │                                                                 ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa1d40caf28::apply@14
          │                                                                 ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.01%  │       0x00007fa24c65612c:   mov    %r10b,0x10(%rbp)             ;*bastore {reexecute=0 rethrow=0 return_oop=0}
          │                                                                 ; - jdk.incubator.vector.IntVector::bTest@58 (line 476)
          │                                                                 ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
          │                                                                 ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa1d40caf28::apply@14
          │                                                                 ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.04%  │       0x00007fa24c656130:   mov    $0x1,%ecx
   0.00%  │       0x00007fa24c656135:   jmp    0x00007fa24c6563ed
   0.14%  ↘       0x00007fa24c65613a:   mov    0x40(%rsp),%r10              ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
                                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
                                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa1d40caf28::apply@14
                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.01%          0x00007fa24c65613f:   mov    0x10(%r10),%r11d             ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - jdk.incubator.vector.IntVector::bTest@52 (line 476)
                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa1d40caf28::apply@14
                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.06%          0x00007fa24c656143:   mov    0x10(%rdx),%r10d             ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - jdk.incubator.vector.IntVector::bTest@47 (line 476)
                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa1d40caf28::apply@14
                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.04%          0x00007fa24c656147:   xor    %ecx,%ecx
   0.12%          0x00007fa24c656149:   cmp    %r11d,%r10d
   0.04%          0x00007fa24c65614c:   setl   %cl                          ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
                                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
                                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa1d40caf28::apply@14
                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.10%          0x00007fa24c65614f:   mov    %cl,0x10(%rbp)               ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - jdk.incubator.vector.IntVector::bTest@58 (line 476)
                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa1d40caf28::apply@14
                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.33%   ╭      0x00007fa24c656152:   jmp    0x00007fa24c656163
           │      0x00007fa24c656154:   nopl   0x0(%rax,%rax,1)
           │      0x00007fa24c65615c:   data16 data16 xchg %ax,%ax
   0.08%   │↗     0x00007fa24c656160:   mov    %r10d,%r8d                   ;*aload {reexecute=0 rethrow=0 return_oop=0}
           ││                                                               ; - jdk.incubator.vector.IntVector::bTest@35 (line 476)
           ││                                                               ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││                                                               ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa1d40caf28::apply@14
           ││                                                               ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.04%   ↘│     0x00007fa24c656163:   movslq %r8d,%rax                    ;*bastore {reexecute=0 rethrow=0 return_oop=0}
            │                                                               ; - jdk.incubator.vector.IntVector::bTest@58 (line 476)
            │                                                               ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
            │                                                               ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa1d40caf28::apply@14
            │                                                               ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.07%    │     0x00007fa24c656166:   mov    0x10(%rdx,%rax,4),%r14d      ;*iaload {reexecute=0 rethrow=0 return_oop=0}
            │                                                               ; - jdk.incubator.vector.IntVector::bTest@47 (line 476)
            │                                                               ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
            │                                                               ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa1d40caf28::apply@14
            │                                                               ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.30%    │     0x00007fa24c65616b:   mov    0x40(%rsp),%rbx              ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
            │                                                               ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
            │                                                               ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
            │                                                               ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
            │                                                               ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
            │                                                               ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa1d40caf28::apply@14
            │                                                               ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.26%    │     0x00007fa24c656170:   mov    0x1c(%rbx,%rax,4),%r10d      ;*iaload {reexecute=0 rethrow=0 return_oop=0}
            │                                                               ; - jdk.incubator.vector.IntVector::bTest@52 (line 476)
            │                                                               ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
            │                                                               ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa1d40caf28::apply@14
            │                                                               ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.33%    │     0x00007fa24c656175:   mov    0x1c(%rdx,%rax,4),%r13d      ;*iaload {reexecute=0 rethrow=0 return_oop=0}
            │                                                               ; - jdk.incubator.vector.IntVector::bTest@47 (line 476)
            │                                                               ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
            │                                                               ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa1d40caf28::apply@14
            │                                                               ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.03%    │     0x00007fa24c65617a:   mov    0x18(%rbx,%rax,4),%r11d
   0.27%    │     0x00007fa24c65617f:   mov    0x10(%rbx,%rax,4),%ecx       ;*iaload {reexecute=0 rethrow=0 return_oop=0}
            │                                                               ; - jdk.incubator.vector.IntVector::bTest@52 (line 476)
            │                                                               ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
            │                                                               ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa1d40caf28::apply@14
            │                                                               ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.24%    │     0x00007fa24c656183:   mov    0x18(%rdx,%rax,4),%r9d
   0.10%    │     0x00007fa24c656188:   mov    0x14(%rdx,%rax,4),%edi       ;*iaload {reexecute=0 rethrow=0 return_oop=0}
            │                                                               ; - jdk.incubator.vector.IntVector::bTest@47 (line 476)
            │                                                               ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
            │                                                               ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa1d40caf28::apply@14
            │                                                               ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.03%    │     0x00007fa24c65618c:   mov    0x14(%rbx,%rax,4),%ebx       ;*iaload {reexecute=0 rethrow=0 return_oop=0}
            │                                                               ; - jdk.incubator.vector.IntVector::bTest@52 (line 476)
            │                                                               ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
            │                                                               ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa1d40caf28::apply@14
            │                                                               ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.30%    │     0x00007fa24c656190:   xor    %esi,%esi
   0.19%    │     0x00007fa24c656192:   cmp    %r10d,%r13d                  ;   {no_reloc}
   0.15%    │     0x00007fa24c656195:   setl   %sil
   0.03%    │     0x00007fa24c656199:   xor    %r10d,%r10d
   0.30%    │     0x00007fa24c65619c:   cmp    %ebx,%edi
   0.24%    │     0x00007fa24c65619e:   setl   %r10b
   0.39%    │     0x00007fa24c6561a2:   xor    %r13d,%r13d
   0.03%    │     0x00007fa24c6561a5:   cmp    %r11d,%r9d
   0.13%    │     0x00007fa24c6561a8:   setl   %r13b
   0.18%    │     0x00007fa24c6561ac:   xor    %r9d,%r9d
   0.46%    │     0x00007fa24c6561af:   cmp    %ecx,%r14d
   0.02%    │     0x00007fa24c6561b2:   setl   %r9b                         ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
            │                                                               ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
            │                                                               ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
            │                                                               ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
            │                                                               ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
            │                                                               ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa1d40caf28::apply@14
            │                                                               ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.12%    │     0x00007fa24c6561b6:   mov    %r9b,0x10(%rbp,%rax,1)
   0.38%    │     0x00007fa24c6561bb:   mov    %r10b,0x11(%rbp,%rax,1)
   0.28%    │     0x00007fa24c6561c0:   mov    %r13b,0x12(%rbp,%rax,1)
   0.10%    │     0x00007fa24c6561c5:   mov    %sil,0x13(%rbp,%rax,1)       ;*bastore {reexecute=0 rethrow=0 return_oop=0}
            │                                                               ; - jdk.incubator.vector.IntVector::bTest@58 (line 476)
            │                                                               ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
            │                                                               ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa1d40caf28::apply@14
            │                                                               ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.17%    │     0x00007fa24c6561ca:   lea    0x4(%r8),%r10d
   0.29%    │     0x00007fa24c6561ce:   cmp    $0xd,%r10d
            ╰     0x00007fa24c6561d2:   jl     0x00007fa24c656160
   0.04%          0x00007fa24c6561d4:   add    $0x4,%r8d                    ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
                                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
                                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa1d40caf28::apply@14
                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.14%     ↗    0x00007fa24c6561d8:   movslq %r8d,%r10                    ;*bastore {reexecute=0 rethrow=0 return_oop=0}
             │                                                              ; - jdk.incubator.vector.IntVector::bTest@58 (line 476)
             │                                                              ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
             │                                                              ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa1d40caf28::apply@14
             │                                                              ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.20%     │    0x00007fa24c6561db:   mov    0x10(%rdx,%r10,4),%r11d      ;*iaload {reexecute=0 rethrow=0 return_oop=0}
             │                                                              ; - jdk.incubator.vector.IntVector::bTest@47 (line 476)
             │                                                              ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
             │                                                              ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa1d40caf28::apply@14
             │                                                              ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.18%     │    0x00007fa24c6561e0:   mov    0x40(%rsp),%rcx              ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
             │                                                              ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
             │                                                              ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
             │                                                              ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
             │                                                              ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
             │                                                              ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa1d40caf28::apply@14
             │                                                              ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.14%     │    0x00007fa24c6561e5:   mov    0x10(%rcx,%r10,4),%r9d       ;*iaload {reexecute=0 rethrow=0 return_oop=0}
             │                                                              ; - jdk.incubator.vector.IntVector::bTest@52 (line 476)
             │                                                              ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
             │                                                              ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa1d40caf28::apply@14
             │                                                              ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.17%     │    0x00007fa24c6561ea:   xor    %ebx,%ebx
   0.20%     │    0x00007fa24c6561ec:   cmp    %r9d,%r11d
   0.19%     │    0x00007fa24c6561ef:   setl   %bl                          ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
             │                                                              ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
             │                                                              ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
             │                                                              ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
             │                                                              ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
             │                                                              ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa1d40caf28::apply@14
             │                                                              ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.14%     │    0x00007fa24c6561f2:   mov    %bl,0x10(%rbp,%r10,1)        ;*bastore {reexecute=0 rethrow=0 return_oop=0}
             │                                                              ; - jdk.incubator.vector.IntVector::bTest@58 (line 476)
             │                                                              ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
             │                                                              ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa1d40caf28::apply@14
             │                                                              ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.18%     │    0x00007fa24c6561f7:   inc    %r8d
   0.21%     │    0x00007fa24c6561fa:   nopw   0x0(%rax,%rax,1)
   0.19%     │    0x00007fa24c656200:   cmp    $0x10,%r8d
             ╰    0x00007fa24c656204:   jl     0x00007fa24c6561d8
   0.07%      ╭   0x00007fa24c656206:   jmp    0x00007fa24c656238
   0.02%      │   0x00007fa24c656208:   add    $0x4,%ecx
   0.01%      │   0x00007fa24c65620b:   nop                                 ;*aload {reexecute=0 rethrow=0 return_oop=0}
              │                                                             ; - jdk.incubator.vector.IntVector::bTest@35 (line 476)
              │                                                             ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
              │                                                             ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa1d40caf28::apply@14
              │                                                             ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.15%      │↗  0x00007fa24c65620c:   movslq %ecx,%r10                    ;*bastore {reexecute=0 rethrow=0 return_oop=0}
              ││                                                            ; - jdk.incubator.vector.IntVector::bTest@58 (line 476)
              ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
              ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa1d40caf28::apply@14
              ││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.01%      ││  0x00007fa24c65620f:   mov    0x10(%rdx,%r10,4),%r11d      ;*iaload {reexecute=0 rethrow=0 return_oop=0}
              ││                                                            ; - jdk.incubator.vector.IntVector::bTest@47 (line 476)
              ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
              ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa1d40caf28::apply@14
              ││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.04%      ││  0x00007fa24c656214:   mov    0x40(%rsp),%r8               ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
              ││                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
              ││                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
              ││                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
              ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
              ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa1d40caf28::apply@14
              ││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.03%      ││  0x00007fa24c656219:   mov    0x10(%r8,%r10,4),%r9d        ;*iaload {reexecute=0 rethrow=0 return_oop=0}
              ││                                                            ; - jdk.incubator.vector.IntVector::bTest@52 (line 476)
              ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
              ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa1d40caf28::apply@14
              ││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.19%      ││  0x00007fa24c65621e:   xchg   %ax,%ax
   0.01%      ││  0x00007fa24c656220:   cmp    %r9d,%r11d                   ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
              ││                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
              ││                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
              ││                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
              ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
              ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa1d40caf28::apply@14
              ││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
              ││  0x00007fa24c656223:   je     0x00007fa24c65648b
   0.11%      ││  0x00007fa24c656229:   xor    %r8d,%r8d                    ;*goto {reexecute=0 rethrow=0 return_oop=0}
              ││                                                            ; - jdk.incubator.vector.IntVector::compareWithOp@148 (line 2069)
              ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$58@4 (line 2035)
              ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa1d40cb338::apply@9
              ││                                                            ; - jdk.incubator.vector.IntVector::bTest@53 (line 476)
              ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
              ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa1d40caf28::apply@14
              ││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.02%      ││  0x00007fa24c65622c:   mov    %r8b,0x10(%rbp,%r10,1)       ;*bastore {reexecute=0 rethrow=0 return_oop=0}
              ││                                                            ; - jdk.incubator.vector.IntVector::bTest@58 (line 476)
              ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
              ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa1d40caf28::apply@14
              ││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.07%      ││  0x00007fa24c656231:   inc    %ecx
   0.01%      ││  0x00007fa24c656233:   cmp    $0x10,%ecx
              │╰  0x00007fa24c656236:   jl     0x00007fa24c65620c
   0.03%      ↘   0x00007fa24c656238:   mov    0x1b8(%r15),%rbx
   0.06%          0x00007fa24c65623f:   mov    %rbx,%r10
   0.14%          0x00007fa24c656242:   add    $0x10,%r10
   0.06%          0x00007fa24c656246:   cmp    0x1c8(%r15),%r10
                  0x00007fa24c65624d:   jae    0x00007fa24c656534
   0.07%          0x00007fa24c656253:   mov    %r10,0x1b8(%r15)
   0.06%          0x00007fa24c65625a:   prefetchw 0xc0(%r10)
   0.14%          0x00007fa24c656262:   movq   $0x1,(%rbx)
   0.10%          0x00007fa24c656269:   movl   $0x103f610,0x8(%rbx)         ;   {metadata(&apos;jdk/incubator/vector/Int512Vector$Int512Mask&apos;)}
   0.05%          0x00007fa24c656270:   mov    %r12d,0xc(%rbx)
   0.12%          0x00007fa24c656274:   mov    0x1b8(%r15),%rax
   0.09%          0x00007fa24c65627b:   mov    %rax,%r10
   0.08%          0x00007fa24c65627e:   add    $0x20,%r10
   0.07%          0x00007fa24c656282:   cmp    0x1c8(%r15),%r10
                  0x00007fa24c656289:   jae    0x00007fa24c656554           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - jdk.incubator.vector.IntVector::bTest@62 (line 475)
                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa1d40caf28::apply@14
                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.12%          0x00007fa24c65628f:   mov    %r10,0x1b8(%r15)
   0.14%          0x00007fa24c656296:   prefetchw 0xc0(%r10)
   0.48%          0x00007fa24c65629e:   movq   $0x1,(%rax)
   0.39%          0x00007fa24c6562a5:   prefetchw 0x100(%r10)
   0.02%          0x00007fa24c6562ad:   movl   $0x1b00,0x8(%rax)            ;   {metadata({type array bool})}
   0.14%          0x00007fa24c6562b4:   prefetchw 0x140(%r10)
   0.01%          0x00007fa24c6562bc:   movl   $0x10,0xc(%rax)
   0.61%          0x00007fa24c6562c3:   prefetchw 0x180(%r10)
   0.08%          0x00007fa24c6562cb:   mov    %r12,0x10(%rax)
   0.41%          0x00007fa24c6562cf:   mov    %r12,0x18(%rax)              ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::prepare@6 (line 598)
                                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 590)
                                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 586)
                                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@5 (line 137)
                                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@2 (line 41)
                                                                            ; - jdk.incubator.vector.AbstractSpecies::maskFactory@5 (line 328)
                                                                            ; - jdk.incubator.vector.IntVector::maskFactory@5 (line 116)
                                                                            ; - jdk.incubator.vector.IntVector::bTest@68 (line 478)
                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa1d40caf28::apply@14
                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.07%          0x00007fa24c6562d3:   movzbl 0x10(%rbp),%r11d             ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
                                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
                                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa1d40caf28::apply@14
                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.08%          0x00007fa24c6562d8:   mov    %r11b,0x10(%rax)             ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::prepare@24 (line 600)
                                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 590)
                                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 586)
                                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@5 (line 137)
                                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@2 (line 41)
                                                                            ; - jdk.incubator.vector.AbstractSpecies::maskFactory@5 (line 328)
                                                                            ; - jdk.incubator.vector.IntVector::maskFactory@5 (line 116)
                                                                            ; - jdk.incubator.vector.IntVector::bTest@68 (line 478)
                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa1d40caf28::apply@14
                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.40%          0x00007fa24c6562dc:   movzbl 0x11(%rbp),%r10d             ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
                                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
                                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa1d40caf28::apply@14
                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.07%          0x00007fa24c6562e1:   mov    %r10b,0x11(%rax)             ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::prepare@24 (line 600)
                                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 590)
                                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 586)
                                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@5 (line 137)
                                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@2 (line 41)
                                                                            ; - jdk.incubator.vector.AbstractSpecies::maskFactory@5 (line 328)
                                                                            ; - jdk.incubator.vector.IntVector::maskFactory@5 (line 116)
                                                                            ; - jdk.incubator.vector.IntVector::bTest@68 (line 478)
                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa1d40caf28::apply@14
                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.09%          0x00007fa24c6562e5:   movzbl 0x12(%rbp),%r11d             ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
                                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
                                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa1d40caf28::apply@14
                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.05%          0x00007fa24c6562ea:   mov    %r11b,0x12(%rax)             ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::prepare@24 (line 600)
                                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 590)
                                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 586)
                                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@5 (line 137)
                                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@2 (line 41)
                                                                            ; - jdk.incubator.vector.AbstractSpecies::maskFactory@5 (line 328)
                                                                            ; - jdk.incubator.vector.IntVector::maskFactory@5 (line 116)
                                                                            ; - jdk.incubator.vector.IntVector::bTest@68 (line 478)
                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa1d40caf28::apply@14
                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.16%          0x00007fa24c6562ee:   movzbl 0x13(%rbp),%r10d             ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
                                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
                                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa1d40caf28::apply@14
                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.03%          0x00007fa24c6562f3:   mov    %r10b,0x13(%rax)             ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::prepare@24 (line 600)
                                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 590)
                                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 586)
                                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@5 (line 137)
                                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@2 (line 41)
                                                                            ; - jdk.incubator.vector.AbstractSpecies::maskFactory@5 (line 328)
                                                                            ; - jdk.incubator.vector.IntVector::maskFactory@5 (line 116)
                                                                            ; - jdk.incubator.vector.IntVector::bTest@68 (line 478)
                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa1d40caf28::apply@14
                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.16%          0x00007fa24c6562f7:   movzbl 0x14(%rbp),%r11d             ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
                                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
                                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa1d40caf28::apply@14
                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.02%          0x00007fa24c6562fc:   mov    %r11b,0x14(%rax)             ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::prepare@24 (line 600)
                                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 590)
                                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 586)
                                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@5 (line 137)
                                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@2 (line 41)
                                                                            ; - jdk.incubator.vector.AbstractSpecies::maskFactory@5 (line 328)
                                                                            ; - jdk.incubator.vector.IntVector::maskFactory@5 (line 116)
                                                                            ; - jdk.incubator.vector.IntVector::bTest@68 (line 478)
                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa1d40caf28::apply@14
                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.18%          0x00007fa24c656300:   movzbl 0x15(%rbp),%r10d             ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
                                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
                                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa1d40caf28::apply@14
                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.04%          0x00007fa24c656305:   mov    %r10b,0x15(%rax)             ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::prepare@24 (line 600)
                                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 590)
                                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 586)
                                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@5 (line 137)
                                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@2 (line 41)
                                                                            ; - jdk.incubator.vector.AbstractSpecies::maskFactory@5 (line 328)
                                                                            ; - jdk.incubator.vector.IntVector::maskFactory@5 (line 116)
                                                                            ; - jdk.incubator.vector.IntVector::bTest@68 (line 478)
                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa1d40caf28::apply@14
                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.15%          0x00007fa24c656309:   movzbl 0x16(%rbp),%r11d             ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
                                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
                                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa1d40caf28::apply@14
                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.03%          0x00007fa24c65630e:   mov    %r11b,0x16(%rax)             ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::prepare@24 (line 600)
                                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 590)
                                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 586)
                                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@5 (line 137)
                                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@2 (line 41)
                                                                            ; - jdk.incubator.vector.AbstractSpecies::maskFactory@5 (line 328)
                                                                            ; - jdk.incubator.vector.IntVector::maskFactory@5 (line 116)
                                                                            ; - jdk.incubator.vector.IntVector::bTest@68 (line 478)
                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa1d40caf28::apply@14
                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.21%          0x00007fa24c656312:   movzbl 0x17(%rbp),%r10d             ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
                                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
                                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa1d40caf28::apply@14
                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.02%          0x00007fa24c656317:   mov    %r10b,0x17(%rax)             ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::prepare@24 (line 600)
                                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 590)
                                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 586)
                                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@5 (line 137)
                                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@2 (line 41)
                                                                            ; - jdk.incubator.vector.AbstractSpecies::maskFactory@5 (line 328)
                                                                            ; - jdk.incubator.vector.IntVector::maskFactory@5 (line 116)
                                                                            ; - jdk.incubator.vector.IntVector::bTest@68 (line 478)
                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa1d40caf28::apply@14
                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.12%          0x00007fa24c65631b:   movzbl 0x18(%rbp),%r11d             ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
                                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
                                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa1d40caf28::apply@14
                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.02%          0x00007fa24c656320:   mov    %r11b,0x18(%rax)             ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::prepare@24 (line 600)
                                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 590)
                                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 586)
                                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@5 (line 137)
                                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@2 (line 41)
                                                                            ; - jdk.incubator.vector.AbstractSpecies::maskFactory@5 (line 328)
                                                                            ; - jdk.incubator.vector.IntVector::maskFactory@5 (line 116)
                                                                            ; - jdk.incubator.vector.IntVector::bTest@68 (line 478)
                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa1d40caf28::apply@14
                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.21%          0x00007fa24c656324:   movzbl 0x19(%rbp),%r10d             ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
                                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
                                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa1d40caf28::apply@14
                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.02%          0x00007fa24c656329:   mov    %r10b,0x19(%rax)             ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::prepare@24 (line 600)
                                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 590)
                                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 586)
                                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@5 (line 137)
                                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@2 (line 41)
                                                                            ; - jdk.incubator.vector.AbstractSpecies::maskFactory@5 (line 328)
                                                                            ; - jdk.incubator.vector.IntVector::maskFactory@5 (line 116)
                                                                            ; - jdk.incubator.vector.IntVector::bTest@68 (line 478)
                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa1d40caf28::apply@14
                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.16%          0x00007fa24c65632d:   movzbl 0x1a(%rbp),%r11d             ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
                                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
                                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa1d40caf28::apply@14
                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.01%          0x00007fa24c656332:   mov    %r11b,0x1a(%rax)             ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::prepare@24 (line 600)
                                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 590)
                                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 586)
                                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@5 (line 137)
                                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@2 (line 41)
                                                                            ; - jdk.incubator.vector.AbstractSpecies::maskFactory@5 (line 328)
                                                                            ; - jdk.incubator.vector.IntVector::maskFactory@5 (line 116)
                                                                            ; - jdk.incubator.vector.IntVector::bTest@68 (line 478)
                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa1d40caf28::apply@14
                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.25%          0x00007fa24c656336:   movzbl 0x1b(%rbp),%r10d             ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
                                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
                                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa1d40caf28::apply@14
                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.00%          0x00007fa24c65633b:   mov    %r10b,0x1b(%rax)             ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::prepare@24 (line 600)
                                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 590)
                                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 586)
                                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@5 (line 137)
                                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@2 (line 41)
                                                                            ; - jdk.incubator.vector.AbstractSpecies::maskFactory@5 (line 328)
                                                                            ; - jdk.incubator.vector.IntVector::maskFactory@5 (line 116)
                                                                            ; - jdk.incubator.vector.IntVector::bTest@68 (line 478)
                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa1d40caf28::apply@14
                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.23%          0x00007fa24c65633f:   movzbl 0x1c(%rbp),%r11d             ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
                                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
                                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa1d40caf28::apply@14
                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
                  0x00007fa24c656344:   mov    %r11b,0x1c(%rax)             ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::prepare@24 (line 600)
                                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 590)
                                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 586)
                                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@5 (line 137)
                                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@2 (line 41)
                                                                            ; - jdk.incubator.vector.AbstractSpecies::maskFactory@5 (line 328)
                                                                            ; - jdk.incubator.vector.IntVector::maskFactory@5 (line 116)
                                                                            ; - jdk.incubator.vector.IntVector::bTest@68 (line 478)
                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa1d40caf28::apply@14
                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.29%          0x00007fa24c656348:   movzbl 0x1d(%rbp),%r10d             ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
                                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
                                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa1d40caf28::apply@14
                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
                  0x00007fa24c65634d:   mov    %r10b,0x1d(%rax)             ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::prepare@24 (line 600)
                                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 590)
                                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 586)
                                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@5 (line 137)
                                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@2 (line 41)
                                                                            ; - jdk.incubator.vector.AbstractSpecies::maskFactory@5 (line 328)
                                                                            ; - jdk.incubator.vector.IntVector::maskFactory@5 (line 116)
                                                                            ; - jdk.incubator.vector.IntVector::bTest@68 (line 478)
                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa1d40caf28::apply@14
                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.26%          0x00007fa24c656351:   movzbl 0x1e(%rbp),%r11d             ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
                                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
                                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa1d40caf28::apply@14
                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
                  0x00007fa24c656356:   mov    %r11b,0x1e(%rax)             ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::prepare@24 (line 600)
                                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 590)
                                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 586)
                                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@5 (line 137)
                                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@2 (line 41)
                                                                            ; - jdk.incubator.vector.AbstractSpecies::maskFactory@5 (line 328)
                                                                            ; - jdk.incubator.vector.IntVector::maskFactory@5 (line 116)
                                                                            ; - jdk.incubator.vector.IntVector::bTest@68 (line 478)
                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa1d40caf28::apply@14
                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.31%          0x00007fa24c65635a:   movzbl 0x1f(%rbp),%r10d             ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
                                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
                                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa1d40caf28::apply@14
                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
                  0x00007fa24c65635f:   mov    %r10b,0x1f(%rax)             ;*bastore {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::prepare@24 (line 600)
                                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 590)
                                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 586)
                                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@5 (line 137)
                                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@2 (line 41)
                                                                            ; - jdk.incubator.vector.AbstractSpecies::maskFactory@5 (line 328)
                                                                            ; - jdk.incubator.vector.IntVector::maskFactory@5 (line 116)
                                                                            ; - jdk.incubator.vector.IntVector::bTest@68 (line 478)
                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa1d40caf28::apply@14
                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.29%          0x00007fa24c656363:   mov    %rbx,%r10                    ;*putfield payload {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::&lt;init&gt;@6 (line 160)
                                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorMask::&lt;init&gt;@2 (line 190)
                                                                            ; - jdk.incubator.vector.VectorMask::&lt;init&gt;@2 (line 134)
                                                                            ; - jdk.incubator.vector.AbstractMask::&lt;init&gt;@2 (line 39)
                                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@6 (line 590)
                                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 586)
                                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@5 (line 137)
                                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@2 (line 41)
                                                                            ; - jdk.incubator.vector.AbstractSpecies::maskFactory@5 (line 328)
                                                                            ; - jdk.incubator.vector.IntVector::maskFactory@5 (line 116)
                                                                            ; - jdk.incubator.vector.IntVector::bTest@68 (line 478)
                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa1d40caf28::apply@14
                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.00%          0x00007fa24c656366:   mov    %rax,%r11
   0.01%          0x00007fa24c656369:   xor    %r10,%r11
                  0x00007fa24c65636c:   mov    %rax,%r8
   0.26%          0x00007fa24c65636f:   shr    $0x3,%r8                     ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
                                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
                                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa1d40caf28::apply@14
                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
                  0x00007fa24c656373:   mov    %r8d,0xc(%rbx)               ;*putfield payload {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::&lt;init&gt;@6 (line 160)
                                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorMask::&lt;init&gt;@2 (line 190)
                                                                            ; - jdk.incubator.vector.VectorMask::&lt;init&gt;@2 (line 134)
                                                                            ; - jdk.incubator.vector.AbstractMask::&lt;init&gt;@2 (line 39)
                                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@6 (line 590)
                                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 586)
                                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@5 (line 137)
                                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@2 (line 41)
                                                                            ; - jdk.incubator.vector.AbstractSpecies::maskFactory@5 (line 328)
                                                                            ; - jdk.incubator.vector.IntVector::maskFactory@5 (line 116)
                                                                            ; - jdk.incubator.vector.IntVector::bTest@68 (line 478)
                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa1d40caf28::apply@14
                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.00%          0x00007fa24c656377:   shr    $0x15,%r11
   0.00%          0x00007fa24c65637b:   nopl   0x0(%rax,%rax,1)
   0.26%          0x00007fa24c656380:   test   %r11,%r11
                  0x00007fa24c656383:   je     0x00007fa24c65639f
                  0x00007fa24c656385:   shr    $0x9,%r10
                  0x00007fa24c656389:   movabs $0x7fa240b3f000,%rdi
                  0x00007fa24c656393:   add    %r10,%rdi
                  0x00007fa24c656396:   cmpb   $0x2,(%rdi)                  ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
                                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
                                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
                                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa1d40caf28::apply@14
....................................................................................................
  21.96%  <total for region 1>

....[Hottest Regions]...............................................................................
  21.96%         c2, level 4  jdk.internal.vm.vector.VectorSupport::compare, version 2, compile id 890 
   7.58%         c2, level 4  jdk.internal.vm.vector.VectorSupport::blend, version 2, compile id 934 
   7.40%         c2, level 4  jdk.internal.vm.vector.VectorSupport::fromBitsCoerced, version 2, compile id 865 
   6.83%         c2, level 4  com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector, version 2, compile id 959 
   6.43%         c2, level 4  jdk.internal.vm.vector.VectorSupport::fromBitsCoerced, version 2, compile id 865 
   6.18%         c2, level 4  jdk.incubator.vector.Int512Vector$Int512Mask$$Lambda.0x00007fa1d40cbd70::apply, version 2, compile id 929 
   6.11%         c2, level 4  jdk.internal.vm.vector.VectorSupport::maskReductionCoerced, version 2, compile id 916 
   5.48%         c2, level 4  jdk.incubator.vector.Int512Vector$Int512Mask$$Lambda.0x00007fa1d40cc398::apply, version 2, compile id 931 
   3.26%         c2, level 4  com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector, version 2, compile id 959 
   3.12%         c2, level 4  jdk.incubator.vector.IntVector$$Lambda.0x00007fa1d40cd200::apply, version 2, compile id 938 
   2.89%         c2, level 4  jdk.internal.vm.vector.VectorSupport::compare, version 2, compile id 890 
   2.57%         c2, level 4  jdk.incubator.vector.IntVector$$Lambda.0x00007fa1d40cd200::apply, version 2, compile id 938 
   2.52%         c2, level 4  jdk.internal.vm.vector.VectorSupport::compare, version 2, compile id 890 
   2.51%         c2, level 4  jdk.incubator.vector.Int512Vector$Int512Mask$$Lambda.0x00007fa1d40cbd70::apply, version 2, compile id 929 
   2.50%                      <unknown> 
   2.15%         c2, level 4  jdk.incubator.vector.Int512Vector$Int512Mask$$Lambda.0x00007fa1d40cc398::apply, version 2, compile id 931 
   2.04%         c2, level 4  com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector, version 2, compile id 959 
   1.63%         c2, level 4  jdk.internal.vm.vector.VectorSupport::binaryOp, version 2, compile id 913 
   1.57%    perf-1956213.map  [unknown] 
   1.35%         c2, level 4  jdk.internal.vm.vector.VectorSupport::extract, version 2, compile id 942 
   3.93%  <...other 403 warm regions...>
....................................................................................................
 100.00%  <totals>

....[Hottest Methods (after inlining)]..............................................................
  27.38%         c2, level 4  jdk.internal.vm.vector.VectorSupport::compare, version 2, compile id 890 
  13.82%         c2, level 4  jdk.internal.vm.vector.VectorSupport::fromBitsCoerced, version 2, compile id 865 
  12.76%         c2, level 4  com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector, version 2, compile id 959 
   8.69%         c2, level 4  jdk.incubator.vector.Int512Vector$Int512Mask$$Lambda.0x00007fa1d40cbd70::apply, version 2, compile id 929 
   7.63%         c2, level 4  jdk.incubator.vector.Int512Vector$Int512Mask$$Lambda.0x00007fa1d40cc398::apply, version 2, compile id 931 
   7.58%         c2, level 4  jdk.internal.vm.vector.VectorSupport::blend, version 2, compile id 934 
   6.11%         c2, level 4  jdk.internal.vm.vector.VectorSupport::maskReductionCoerced, version 2, compile id 916 
   6.05%         c2, level 4  jdk.incubator.vector.IntVector$$Lambda.0x00007fa1d40cd200::apply, version 2, compile id 938 
   2.57%                      <unknown> 
   1.63%         c2, level 4  jdk.internal.vm.vector.VectorSupport::binaryOp, version 2, compile id 913 
   1.57%    perf-1956213.map  [unknown] 
   1.36%              kernel  [unknown] 
   1.35%         c2, level 4  jdk.internal.vm.vector.VectorSupport::extract, version 2, compile id 942 
   0.35%         c2, level 4  jdk.internal.vm.vector.VectorSupport::load, version 2, compile id 982 
   0.21%         c2, level 4  jdk.internal.vm.vector.VectorSupport::store, version 2, compile id 984 
   0.13%         c2, level 4  jdk.internal.vm.vector.VectorSupport::shuffleToVector, version 2, compile id 988 
   0.04%           libjvm.so  ElfSymbolTable::lookup 
   0.03%        libc-2.31.so  __memset_avx2_unaligned_erms 
   0.03%           libjvm.so  G1MergeHeapRootsTask::G1MergeCardSetClosure::do_heap_region 
   0.03%           libjvm.so  G1CardSet::reset_table_scanner 
   0.67%  <...other 153 warm methods...>
....................................................................................................
 100.00%  <totals>

....[Distribution by Source]........................................................................
  93.74%         c2, level 4
   2.57%                    
   1.57%    perf-1956213.map
   1.36%              kernel
   0.52%           libjvm.so
   0.13%        libc-2.31.so
   0.03%  libpthread-2.31.so
   0.02%          ld-2.31.so
   0.02%      hsdis-amd64.so
   0.02%         interpreter
   0.01%              [vdso]
   0.00%         c1, level 3
   0.00%       libdl-2.31.so
....................................................................................................
 100.00%  <totals>



# JMH version: 1.37
# VM version: JDK 21, OpenJDK 64-Bit Server VM, 21+35-2513
# VM invoker: /home/gogu/bench_jdks/jdk-21/bin/java
# VM options: -Xms4g -Xmx4g -XX:+AlwaysPreTouch --add-modules=jdk.incubator.vector
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark.sortVector
# Parameters: (arraySize = 1024, vectorSize = 64)

# Run progress: 33.33% complete, ETA 00:14:42
# Fork: 1 of 1
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 366.530 us/op
# Warmup Iteration   2: 278.747 us/op
# Warmup Iteration   3: 275.000 us/op
# Warmup Iteration   4: 275.081 us/op
# Warmup Iteration   5: 274.560 us/op
Iteration   1: 275.051 us/op
Iteration   2: 274.972 us/op
Iteration   3: 274.745 us/op
Iteration   4: 274.875 us/op
Iteration   5: 274.770 us/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark.sortVector":
  274.883 ±(99.9%) 0.503 us/op [Average]
  (min, avg, max) = (274.745, 274.883, 275.051), stdev = 0.131
  CI (99.9%): [274.380, 275.385] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark.sortVector:asm":
PrintAssembly processed: 181909 total address lines.
Perf output processed (skipped 56.802 seconds):
 Column 1: cycles (50767 events)

Hottest code regions (>10.00% "cycles" events):
 Event counts are percents of total event count.

....[Hottest Region 1]..............................................................................
c2, level 4, com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector, version 2, compile id 929 

                     0x00007f7980667418:   nopl   0x0(%rax,%rax,1)
                     0x00007f7980667420:   cmp    $0x103c620,%r10d             ;   {metadata(&apos;jdk/incubator/vector/Int64Vector&apos;)}
                     0x00007f7980667427:   jne    0x00007f7980667f1c
                     0x00007f798066742d:   mov    0x18(%rsp),%r9               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                               ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
                     0x00007f7980667432:   mov    0x18(%r9),%ecx               ;*getfield input {reexecute=0 rethrow=0 return_oop=0}
                                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@42 (line 77)
                     0x00007f7980667436:   data16 nopw 0x0(%rax,%rax,1)
                     0x00007f7980667440:   mov    0xc(%r12,%rcx,8),%r10d       ; implicit exception: dispatches to 0x00007f7980668614
   0.00%             0x00007f7980667445:   test   %r10d,%r10d                  ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                               ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
          ╭          0x00007f7980667448:   jbe    0x00007f7980667c98
          │          0x00007f798066744e:   mov    %rax,%r10
          │          0x00007f7980667451:   xor    %r11d,%r11d
          │╭         0x00007f7980667454:   jmp    0x00007f7980667b10
          ││         0x00007f7980667459:   nopl   0x0(%rax)
   0.03%  ││     ↗   0x00007f7980667460:   mov    %ecx,%r10d                   ;*invokevirtual lane {reexecute=0 rethrow=0 return_oop=0}
          ││     │                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@79 (line 80)
          ││     │↗  0x00007f7980667463:   vmovq  %xmm0,0x78(%rsp)
   0.01%  ││     ││  0x00007f7980667469:   mov    %r11d,0x68(%rsp)
   0.05%  ││     ││  0x00007f798066746e:   mov    %ecx,0x24(%rsp)
   0.05%  ││     ││  0x00007f7980667472:   mov    %r8d,0x20(%rsp)
          ││     ││  0x00007f7980667477:   mov    %rax,0x18(%rsp)
   0.02%  ││     ││  0x00007f798066747c:   mov    0x50(%rsp),%r11
   0.07%  ││     ││  0x00007f7980667481:   mov    0x2c(%r11),%r11d
   0.04%  ││     ││  0x00007f7980667485:   mov    0x50(%rsp),%r8               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
          ││     ││  0x00007f798066748a:   mov    0xc(%r8),%ecx                ;*getfield laneCount {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@8 (line 3847)
          ││     ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3857)
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 611)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@87 (line 81)
   0.02%  ││     ││  0x00007f798066748e:   movslq %r10d,%r8                    ;*i2l {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::toBits@1 (line 500)
          ││     ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@2 (line 3857)
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 611)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@87 (line 81)
   0.06%  ││     ││  0x00007f7980667491:   mov    %r11,%rsi
   0.06%  ││     ││  0x00007f7980667494:   shl    $0x3,%rsi
          ││     ││  0x00007f7980667498:   movabs $0x7ffe7f600,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffe7f600} = int)}
   0.03%  ││     ││  0x00007f79806674a2:   xor    %r9d,%r9d
   0.05%  ││     ││  0x00007f79806674a5:   mov    0x50(%rsp),%rdi
   0.05%  ││     ││  0x00007f79806674aa:   movabs $0x7ff18fd40,%r10            ;   {oop(a &apos;jdk/incubator/vector/IntVector$IntSpecies$$Lambda+0x00007f79080c6c60&apos;{0x00000007ff18fd40})}
   0.00%  ││     ││  0x00007f79806674b4:   mov    %r10,(%rsp)                  ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.04%  ││     ││  0x00007f79806674b8:   data16 xchg %ax,%ax
   0.08%  ││     ││  0x00007f79806674bb:   call   0x00007f7980649c60           ; ImmutableOopMap {[24]=Oop [56]=Oop [64]=Oop [72]=Oop [80]=Oop [88]=Oop [96]=Oop }
          ││     ││                                                            ;*invokestatic fromBitsCoerced {reexecute=0 rethrow=0 return_oop=1}
          ││     ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@19 (line 3848)
          ││     ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3857)
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 611)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@87 (line 81)
          ││     ││                                                            ;   {static_call}
   0.03%  ││     ││  0x00007f79806674c0:   nopl   0x60006b0(%rax,%rax,1)       ;   {other}
   0.04%  ││     ││  0x00007f79806674c8:   mov    0x8(%rax),%r10d              ; implicit exception: dispatches to 0x00007f79806682a8
   0.10%  ││     ││  0x00007f79806674cc:   cmp    $0x103c620,%r10d             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
          ││     ││                                                            ;   {metadata(&apos;jdk/incubator/vector/Int64Vector&apos;)}
          ││     ││  0x00007f79806674d3:   jne    0x00007f7980667f74           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@22 (line 3848)
          ││     ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3857)
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 611)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@87 (line 81)
   0.01%  ││     ││  0x00007f79806674d9:   mov    %rax,0x80(%rsp)
   0.38%  ││     ││  0x00007f79806674e1:   mov    $0x3,%esi
   0.00%  ││     ││  0x00007f79806674e6:   movabs $0x7ff15d8a0,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ff15d8a0} = &apos;jdk/incubator/vector/Int64Vector&apos;)}
   0.00%  ││     ││  0x00007f79806674f0:   movabs $0x7ff15da20,%rcx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ff15da20} = &apos;jdk/incubator/vector/Int64Vector$Int64Mask&apos;)}
   0.01%  ││     ││  0x00007f79806674fa:   movabs $0x7ffe7f600,%r8             ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffe7f600} = int)}
   0.15%  ││     ││  0x00007f7980667504:   mov    $0x2,%r9d
   0.01%  ││     ││  0x00007f798066750a:   mov    0x18(%rsp),%rdi
   0.01%  ││     ││  0x00007f798066750f:   mov    %rax,(%rsp)
   0.01%  ││     ││  0x00007f7980667513:   xor    %r10d,%r10d
   0.09%  ││     ││  0x00007f7980667516:   mov    %r10,0x8(%rsp)
   0.01%  ││     ││  0x00007f798066751b:   movabs $0x7ff1f82d0,%r10            ;   {oop(a &apos;jdk/incubator/vector/IntVector$$Lambda+0x00007f79080caf28&apos;{0x00000007ff1f82d0})}
   0.01%  ││     ││  0x00007f7980667525:   mov    %r10,0x10(%rsp)              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.29%  ││     ││  0x00007f798066752a:   nop
   0.02%  ││     ││  0x00007f798066752b:   call   0x00007f798064ffe0           ; ImmutableOopMap {[24]=Oop [56]=Oop [64]=Oop [72]=Oop [80]=Oop [88]=Oop [96]=Oop [128]=Oop }
          ││     ││                                                            ;*invokestatic compare {reexecute=0 rethrow=0 return_oop=1}
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::compareTemplate@42 (line 2029)
          ││     ││                                                            ; - jdk.incubator.vector.Int64Vector::compare@5 (line 384)
          ││     ││                                                            ; - jdk.incubator.vector.Int64Vector::compare@3 (line 41)
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::lt@5 (line 1933)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@96 (line 82)
          ││     ││                                                            ;   {static_call}
   0.04%  ││     ││  0x00007f7980667530:   nopl   0x7000720(%rax,%rax,1)       ;   {other}
   0.03%  ││     ││  0x00007f7980667538:   nopl   0x0(%rax,%rax,1)
   0.06%  ││     ││  0x00007f7980667540:   mov    0x8(%rax),%r10d              ; implicit exception: dispatches to 0x00007f79806682d4
   0.01%  ││     ││  0x00007f7980667544:   cmp    $0x103d288,%r10d             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
          ││     ││                                                            ;   {metadata(&apos;jdk/incubator/vector/Int64Vector$Int64Mask&apos;)}
          ││     ││  0x00007f798066754b:   jne    0x00007f7980667fb0
   0.02%  ││     ││  0x00007f7980667551:   mov    %rax,%r9                     ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::compareTemplate@45 (line 2029)
          ││     ││                                                            ; - jdk.incubator.vector.Int64Vector::compare@5 (line 384)
          ││     ││                                                            ; - jdk.incubator.vector.Int64Vector::compare@3 (line 41)
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::lt@5 (line 1933)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@96 (line 82)
   0.03%  ││     ││  0x00007f7980667554:   mov    $0x14,%esi
   0.08%  ││     ││  0x00007f7980667559:   movabs $0x7ff15da20,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ff15da20} = &apos;jdk/incubator/vector/Int64Vector$Int64Mask&apos;)}
   0.02%  ││     ││  0x00007f7980667563:   movabs $0x7ffe7f600,%rcx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffe7f600} = int)}
   0.03%  ││     ││  0x00007f798066756d:   mov    $0x2,%r8d
   0.02%  ││     ││  0x00007f7980667573:   movabs $0x7fee04ac8,%rdi            ;   {oop(a &apos;jdk/incubator/vector/Int64Vector$Int64Mask$$Lambda+0x00007f79080cb748&apos;{0x00000007fee04ac8})}
   0.08%  ││     ││  0x00007f798066757d:   xchg   %ax,%ax
   0.01%  ││     ││  0x00007f798066757f:   call   0x00007f7980654f40           ; ImmutableOopMap {[24]=Oop [56]=Oop [64]=Oop [72]=Oop [80]=Oop [88]=Oop [96]=Oop [128]=Oop }
          ││     ││                                                            ;*invokestatic maskReductionCoerced {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                            ; - jdk.incubator.vector.Int64Vector$Int64Mask::trueCount@16 (line 715)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@99 (line 82)
          ││     ││                                                            ;   {static_call}
   0.08%  ││     ││  0x00007f7980667584:   nopl   0x8000774(%rax,%rax,1)       ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
          ││     ││                                                            ;   {other}
   0.11%  ││     ││  0x00007f798066758c:   mov    %eax,%ebp                    ;*l2i {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                            ; - jdk.incubator.vector.Int64Vector$Int64Mask::trueCount@19 (line 715)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@99 (line 82)
   0.01%  ││     ││  0x00007f798066758e:   xor    %esi,%esi
   0.00%  ││     ││  0x00007f7980667590:   movabs $0x7ff15d8a0,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ff15d8a0} = &apos;jdk/incubator/vector/Int64Vector&apos;)}
   0.06%  ││     ││  0x00007f798066759a:   movabs $0x7ff15da20,%rcx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ff15da20} = &apos;jdk/incubator/vector/Int64Vector$Int64Mask&apos;)}
   0.12%  ││     ││  0x00007f79806675a4:   movabs $0x7ffe7f600,%r8             ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffe7f600} = int)}
   0.00%  ││     ││  0x00007f79806675ae:   mov    $0x2,%r9d
   0.03%  ││     ││  0x00007f79806675b4:   mov    0x18(%rsp),%rdi
   0.74%  ││     ││  0x00007f79806675b9:   mov    0x80(%rsp),%r10
   0.13%  ││     ││  0x00007f79806675c1:   mov    %r10,(%rsp)
   0.38%  ││     ││  0x00007f79806675c5:   xor    %r10d,%r10d
          ││     ││  0x00007f79806675c8:   mov    %r10,0x8(%rsp)
   0.06%  ││     ││  0x00007f79806675cd:   movabs $0x7ff1f82d0,%r10            ;   {oop(a &apos;jdk/incubator/vector/IntVector$$Lambda+0x00007f79080caf28&apos;{0x00000007ff1f82d0})}
          ││     ││  0x00007f79806675d7:   mov    %r10,0x10(%rsp)              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.26%  ││     ││  0x00007f79806675dc:   data16 xchg %ax,%ax
          ││     ││  0x00007f79806675df:   call   0x00007f798064ffe0           ; ImmutableOopMap {[24]=Oop [56]=Oop [64]=Oop [72]=Oop [80]=Oop [88]=Oop [96]=Oop [128]=Oop }
          ││     ││                                                            ;*invokestatic compare {reexecute=0 rethrow=0 return_oop=1}
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::compareTemplate@42 (line 2029)
          ││     ││                                                            ; - jdk.incubator.vector.Int64Vector::compare@5 (line 384)
          ││     ││                                                            ; - jdk.incubator.vector.Int64Vector::compare@3 (line 41)
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::eq@5 (line 1905)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@108 (line 83)
          ││     ││                                                            ;   {static_call}
   0.05%  ││     ││  0x00007f79806675e4:   nopl   0x90007d4(%rax,%rax,1)       ;   {other}
   0.02%  ││     ││  0x00007f79806675ec:   mov    0x8(%rax),%r10d              ; implicit exception: dispatches to 0x00007f798066830c
   0.06%  ││     ││  0x00007f79806675f0:   cmp    $0x103d288,%r10d             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
          ││     ││                                                            ;   {metadata(&apos;jdk/incubator/vector/Int64Vector$Int64Mask&apos;)}
          ││     ││  0x00007f79806675f7:   jne    0x00007f7980667ff4
   0.01%  ││     ││  0x00007f79806675fd:   mov    %rax,%r9                     ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::compareTemplate@45 (line 2029)
          ││     ││                                                            ; - jdk.incubator.vector.Int64Vector::compare@5 (line 384)
          ││     ││                                                            ; - jdk.incubator.vector.Int64Vector::compare@3 (line 41)
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::eq@5 (line 1905)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@108 (line 83)
   0.06%  ││     ││  0x00007f7980667600:   mov    $0x14,%esi
   0.02%  ││     ││  0x00007f7980667605:   movabs $0x7ff15da20,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ff15da20} = &apos;jdk/incubator/vector/Int64Vector$Int64Mask&apos;)}
   0.07%  ││     ││  0x00007f798066760f:   movabs $0x7ffe7f600,%rcx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffe7f600} = int)}
   0.00%  ││     ││  0x00007f7980667619:   mov    $0x2,%r8d
   0.05%  ││     ││  0x00007f798066761f:   movabs $0x7fee04ac8,%rdi            ;   {oop(a &apos;jdk/incubator/vector/Int64Vector$Int64Mask$$Lambda+0x00007f79080cb748&apos;{0x00000007fee04ac8})}
   0.02%  ││     ││  0x00007f7980667629:   xchg   %ax,%ax
   0.04%  ││     ││  0x00007f798066762b:   call   0x00007f7980654f40           ; ImmutableOopMap {[24]=Oop [56]=Oop [64]=Oop [72]=Oop [80]=Oop [88]=Oop [96]=Oop [128]=Oop }
          ││     ││                                                            ;*invokestatic maskReductionCoerced {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                            ; - jdk.incubator.vector.Int64Vector$Int64Mask::trueCount@16 (line 715)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@111 (line 83)
          ││     ││                                                            ;   {static_call}
   0.23%  ││     ││  0x00007f7980667630:   nopl   0xa000820(%rax,%rax,1)       ;   {other}
   0.05%  ││     ││  0x00007f7980667638:   mov    0x50(%rsp),%r10
   0.50%  ││     ││  0x00007f798066763d:   mov    0x2c(%r10),%r10d
   0.58%  ││     ││  0x00007f7980667641:   mov    0x50(%rsp),%r11              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
          ││     ││  0x00007f7980667646:   mov    0xc(%r11),%ecx               ;*getfield laneCount {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@8 (line 3847)
          ││     ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@6 (line 3863)
          ││     ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@2 (line 3804)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@124 (line 86)
   0.17%  ││     ││  0x00007f798066764a:   mov    %eax,%r11d
          ││     ││  0x00007f798066764d:   add    %ebp,%r11d
          ││     ││  0x00007f7980667650:   mov    %r10,%rsi
          ││     ││  0x00007f7980667653:   shl    $0x3,%rsi                    ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.13%  ││     ││  0x00007f7980667657:   movslq %r11d,%r8                    ;*i2l {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@123 (line 84)
          ││     ││  0x00007f798066765a:   movabs $0x7ffe7f600,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffe7f600} = int)}
   0.00%  ││     ││  0x00007f7980667664:   xor    %r9d,%r9d
          ││     ││  0x00007f7980667667:   mov    0x50(%rsp),%rdi
   0.14%  ││     ││  0x00007f798066766c:   movabs $0x7ff18fd40,%r10            ;   {oop(a &apos;jdk/incubator/vector/IntVector$IntSpecies$$Lambda+0x00007f79080c6c60&apos;{0x00000007ff18fd40})}
          ││     ││  0x00007f7980667676:   mov    %r10,(%rsp)                  ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.28%  ││     ││  0x00007f798066767a:   nop
          ││     ││  0x00007f798066767b:   call   0x00007f7980649c60           ; ImmutableOopMap {[24]=Oop [56]=Oop [64]=Oop [72]=Oop [80]=Oop [88]=Oop [96]=Oop [128]=Oop }
          ││     ││                                                            ;*invokestatic fromBitsCoerced {reexecute=0 rethrow=0 return_oop=1}
          ││     ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@19 (line 3848)
          ││     ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@6 (line 3863)
          ││     ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@2 (line 3804)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@124 (line 86)
          ││     ││                                                            ;   {static_call}
   0.01%  ││     ││  0x00007f7980667680:   nopl   0xb000870(%rax,%rax,1)       ;   {other}
   0.01%  ││     ││  0x00007f7980667688:   mov    0x8(%rax),%r11d              ; implicit exception: dispatches to 0x00007f7980668348
   0.10%  ││     ││  0x00007f798066768c:   cmp    $0x103c620,%r11d             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
          ││     ││                                                            ;   {metadata(&apos;jdk/incubator/vector/Int64Vector&apos;)}
          ││     ││  0x00007f7980667693:   jne    0x00007f7980668040           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@22 (line 3848)
          ││     ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@6 (line 3863)
          ││     ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@2 (line 3804)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@124 (line 86)
   0.04%  ││     ││  0x00007f7980667699:   mov    $0x3,%esi
   0.01%  ││     ││  0x00007f798066769e:   movabs $0x7ff15d8a0,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ff15d8a0} = &apos;jdk/incubator/vector/Int64Vector&apos;)}
          ││     ││  0x00007f79806676a8:   movabs $0x7ff15da20,%rcx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ff15da20} = &apos;jdk/incubator/vector/Int64Vector$Int64Mask&apos;)}
   0.10%  ││     ││  0x00007f79806676b2:   movabs $0x7ffe7f600,%r8             ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffe7f600} = int)}
   0.08%  ││     ││  0x00007f79806676bc:   mov    $0x2,%r9d
   0.01%  ││     ││  0x00007f79806676c2:   mov    0x58(%rsp),%rdi
   0.57%  ││     ││  0x00007f79806676c7:   mov    %rax,(%rsp)
   0.72%  ││     ││  0x00007f79806676cb:   xor    %r10d,%r10d
          ││     ││  0x00007f79806676ce:   mov    %r10,0x8(%rsp)
   0.04%  ││     ││  0x00007f79806676d3:   movabs $0x7ff1f82d0,%r10            ;   {oop(a &apos;jdk/incubator/vector/IntVector$$Lambda+0x00007f79080caf28&apos;{0x00000007ff1f82d0})}
   0.01%  ││     ││  0x00007f79806676dd:   mov    %r10,0x10(%rsp)              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.14%  ││     ││  0x00007f79806676e2:   nop
   0.00%  ││     ││  0x00007f79806676e3:   call   0x00007f798064ffe0           ; ImmutableOopMap {[24]=Oop [56]=Oop [64]=Oop [72]=Oop [80]=Oop [88]=Oop [96]=Oop [128]=Oop }
          ││     ││                                                            ;*invokestatic compare {reexecute=0 rethrow=0 return_oop=1}
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::compareTemplate@42 (line 2029)
          ││     ││                                                            ; - jdk.incubator.vector.Int64Vector::compare@5 (line 384)
          ││     ││                                                            ; - jdk.incubator.vector.Int64Vector::compare@3 (line 41)
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::lt@5 (line 1933)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@129 (line 86)
          ││     ││                                                            ;   {static_call}
   0.01%  ││     ││  0x00007f79806676e8:   nopl   0xc0008d8(%rax,%rax,1)       ;   {other}
   0.01%  ││     ││  0x00007f79806676f0:   mov    0x8(%rax),%r11d              ; implicit exception: dispatches to 0x00007f7980668384
   0.14%  ││     ││  0x00007f79806676f4:   nopl   0x0(%rax,%rax,1)
   0.00%  ││     ││  0x00007f79806676fc:   data16 data16 xchg %ax,%ax
   0.02%  ││     ││  0x00007f7980667700:   cmp    $0x103d288,%r11d             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
          ││     ││                                                            ;   {metadata(&apos;jdk/incubator/vector/Int64Vector$Int64Mask&apos;)}
          ││     ││  0x00007f7980667707:   jne    0x00007f7980668094           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::compareTemplate@45 (line 2029)
          ││     ││                                                            ; - jdk.incubator.vector.Int64Vector::compare@5 (line 384)
          ││     ││                                                            ; - jdk.incubator.vector.Int64Vector::compare@3 (line 41)
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::lt@5 (line 1933)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@129 (line 86)
   0.01%  ││     ││  0x00007f798066770d:   mov    %rax,0x88(%rsp)
   0.13%  ││     ││  0x00007f7980667715:   mov    0x50(%rsp),%r10              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.02%  ││     ││  0x00007f798066771a:   mov    0xc(%r10),%ecx               ;*getfield laneCount {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@8 (line 3847)
          ││     ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@6 (line 3863)
          ││     ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@2 (line 3804)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@137 (line 87)
   0.04%  ││     ││  0x00007f798066771e:   mov    0x2c(%r10),%r10d             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.10%  ││     ││  0x00007f7980667722:   movslq %ebp,%r8                     ;*i2l {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@136 (line 86)
   0.00%  ││     ││  0x00007f7980667725:   mov    %r10,%rsi
   0.02%  ││     ││  0x00007f7980667728:   shl    $0x3,%rsi
   0.03%  ││     ││  0x00007f798066772c:   movabs $0x7ffe7f600,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffe7f600} = int)}
   0.09%  ││     ││  0x00007f7980667736:   xor    %r9d,%r9d
   0.01%  ││     ││  0x00007f7980667739:   mov    0x50(%rsp),%rdi
   0.01%  ││     ││  0x00007f798066773e:   movabs $0x7ff18fd40,%r10            ;   {oop(a &apos;jdk/incubator/vector/IntVector$IntSpecies$$Lambda+0x00007f79080c6c60&apos;{0x00000007ff18fd40})}
   0.02%  ││     ││  0x00007f7980667748:   mov    %r10,(%rsp)                  ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.14%  ││     ││  0x00007f798066774c:   data16 xchg %ax,%ax
   0.01%  ││     ││  0x00007f798066774f:   call   0x00007f7980649c60           ; ImmutableOopMap {[24]=Oop [56]=Oop [64]=Oop [72]=Oop [80]=Oop [88]=Oop [96]=Oop [128]=Oop [136]=Oop }
          ││     ││                                                            ;*invokestatic fromBitsCoerced {reexecute=0 rethrow=0 return_oop=1}
          ││     ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@19 (line 3848)
          ││     ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@6 (line 3863)
          ││     ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@2 (line 3804)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@137 (line 87)
          ││     ││                                                            ;   {static_call}
   0.02%  ││     ││  0x00007f7980667754:   nopl   0xd000944(%rax,%rax,1)       ;   {other}
   0.00%  ││     ││  0x00007f798066775c:   nopl   0x0(%rax)
   0.11%  ││     ││  0x00007f7980667760:   mov    0x8(%rax),%r10d              ; implicit exception: dispatches to 0x00007f79806683c0
   0.03%  ││     ││  0x00007f7980667764:   cmp    $0x103c620,%r10d             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
          ││     ││                                                            ;   {metadata(&apos;jdk/incubator/vector/Int64Vector&apos;)}
          ││     ││  0x00007f798066776b:   jne    0x00007f79806680e0           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@22 (line 3848)
          ││     ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@6 (line 3863)
          ││     ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@2 (line 3804)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@137 (line 87)
   0.02%  ││     ││  0x00007f7980667771:   mov    $0x3,%esi
          ││     ││  0x00007f7980667776:   movabs $0x7ff15d8a0,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ff15d8a0} = &apos;jdk/incubator/vector/Int64Vector&apos;)}
   0.11%  ││     ││  0x00007f7980667780:   movabs $0x7ff15da20,%rcx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ff15da20} = &apos;jdk/incubator/vector/Int64Vector$Int64Mask&apos;)}
   0.01%  ││     ││  0x00007f798066778a:   movabs $0x7ffe7f600,%r8             ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffe7f600} = int)}
   0.03%  ││     ││  0x00007f7980667794:   mov    $0x2,%r9d
   0.00%  ││     ││  0x00007f798066779a:   mov    0x58(%rsp),%rdi
   0.32%  ││     ││  0x00007f798066779f:   mov    %rax,(%rsp)
   0.14%  ││     ││  0x00007f79806677a3:   xor    %r10d,%r10d
          ││     ││  0x00007f79806677a6:   mov    %r10,0x8(%rsp)
   0.22%  ││     ││  0x00007f79806677ab:   movabs $0x7ff1f82d0,%r10            ;   {oop(a &apos;jdk/incubator/vector/IntVector$$Lambda+0x00007f79080caf28&apos;{0x00000007ff1f82d0})}
   0.01%  ││     ││  0x00007f79806677b5:   mov    %r10,0x10(%rsp)              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.27%  ││     ││  0x00007f79806677ba:   nop
          ││     ││  0x00007f79806677bb:   call   0x00007f798064ffe0           ; ImmutableOopMap {[24]=Oop [56]=Oop [64]=Oop [72]=Oop [80]=Oop [88]=Oop [96]=Oop [128]=Oop [136]=Oop }
          ││     ││                                                            ;*invokestatic compare {reexecute=0 rethrow=0 return_oop=1}
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::compareTemplate@42 (line 2029)
          ││     ││                                                            ; - jdk.incubator.vector.Int64Vector::compare@5 (line 384)
          ││     ││                                                            ; - jdk.incubator.vector.Int64Vector::compare@3 (line 41)
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::lt@5 (line 1933)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@142 (line 87)
          ││     ││                                                            ;   {static_call}
   0.03%  ││     ││  0x00007f79806677c0:   nopl   0xe0009b0(%rax,%rax,1)       ;   {other}
   0.02%  ││     ││  0x00007f79806677c8:   mov    0x8(%rax),%r10d              ; implicit exception: dispatches to 0x00007f7980668400
   0.06%  ││     ││  0x00007f79806677cc:   cmp    $0x103d288,%r10d             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
          ││     ││                                                            ;   {metadata(&apos;jdk/incubator/vector/Int64Vector$Int64Mask&apos;)}
          ││     ││  0x00007f79806677d3:   jne    0x00007f7980668138           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::compareTemplate@45 (line 2029)
          ││     ││                                                            ; - jdk.incubator.vector.Int64Vector::compare@5 (line 384)
          ││     ││                                                            ; - jdk.incubator.vector.Int64Vector::compare@3 (line 41)
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::lt@5 (line 1933)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@142 (line 87)
   0.01%  ││     ││  0x00007f79806677d9:   mov    %rax,0x90(%rsp)
   0.05%  ││     ││  0x00007f79806677e1:   movabs $0x7ff15da20,%rsi            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ff15da20} = &apos;jdk/incubator/vector/Int64Vector$Int64Mask&apos;)}
   0.08%  ││     ││  0x00007f79806677eb:   movabs $0x7ffe7f600,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffe7f600} = int)}
   0.00%  ││     ││  0x00007f79806677f5:   mov    $0x2,%ecx
   0.03%  ││     ││  0x00007f79806677fa:   mov    $0xffffffffffffffff,%r8
   0.01%  ││     ││  0x00007f7980667801:   xor    %r9d,%r9d
   0.09%  ││     ││  0x00007f7980667804:   xor    %edi,%edi
   0.00%  ││     ││  0x00007f7980667806:   movabs $0x7fee07858,%r10            ;   {oop(a &apos;jdk/incubator/vector/Int64Vector$Int64Mask$$Lambda+0x00007f79080cb960&apos;{0x00000007fee07858})}
   0.02%  ││     ││  0x00007f7980667810:   mov    %r10,(%rsp)                  ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.03%  ││     ││  0x00007f7980667814:   data16 xchg %ax,%ax
   0.08%  ││     ││  0x00007f7980667817:   call   0x00007f7980649c60           ; ImmutableOopMap {[24]=Oop [56]=Oop [64]=Oop [72]=Oop [80]=Oop [88]=Oop [96]=Oop [128]=Oop [136]=Oop [144]=Oop }
          ││     ││                                                            ;*invokestatic fromBitsCoerced {reexecute=0 rethrow=0 return_oop=1}
          ││     ││                                                            ; - jdk.incubator.vector.Int64Vector$Int64Mask::maskAll@25 (line 764)
          ││     ││                                                            ; - jdk.incubator.vector.Int64Vector$Int64Mask::not@2 (line 666)
          ││     ││                                                            ; - jdk.incubator.vector.Int64Vector$Int64Mask::not@1 (line 553)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@145 (line 87)
          ││     ││                                                            ;   {static_call}
   0.07%  ││     ││  0x00007f798066781c:   nopl   0xf000a0c(%rax,%rax,1)       ;   {other}
          ││     ││  0x00007f7980667824:   mov    0x8(%rax),%r10d              ; implicit exception: dispatches to 0x00007f7980668440
   0.17%  ││     ││  0x00007f7980667828:   cmp    $0x103d288,%r10d             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
          ││     ││                                                            ;   {metadata(&apos;jdk/incubator/vector/Int64Vector$Int64Mask&apos;)}
          ││     ││  0x00007f798066782f:   jne    0x00007f7980668188           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                            ; - jdk.incubator.vector.Int64Vector$Int64Mask::maskAll@28 (line 764)
          ││     ││                                                            ; - jdk.incubator.vector.Int64Vector$Int64Mask::not@2 (line 666)
          ││     ││                                                            ; - jdk.incubator.vector.Int64Vector$Int64Mask::not@1 (line 553)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@145 (line 87)
   0.02%  ││     ││  0x00007f7980667835:   mov    $0xc,%esi
   0.01%  ││     ││  0x00007f798066783a:   movabs $0x7ff15da20,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ff15da20} = &apos;jdk/incubator/vector/Int64Vector$Int64Mask&apos;)}
   0.00%  ││     ││  0x00007f7980667844:   xor    %ecx,%ecx
   0.12%  ││     ││  0x00007f7980667846:   movabs $0x7ffe7f600,%r8             ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffe7f600} = int)}
   0.03%  ││     ││  0x00007f7980667850:   mov    $0x2,%r9d
   0.05%  ││     ││  0x00007f7980667856:   mov    0x90(%rsp),%rdi
   0.36%  ││     ││  0x00007f798066785e:   mov    %rax,(%rsp)
   0.20%  ││     ││  0x00007f7980667862:   xor    %r10d,%r10d
          ││     ││  0x00007f7980667865:   mov    %r10,0x8(%rsp)
   0.14%  ││     ││  0x00007f798066786a:   movabs $0x7fee0ba10,%r10            ;   {oop(a &apos;jdk/incubator/vector/Int64Vector$Int64Mask$$Lambda+0x00007f79080cbd70&apos;{0x00000007fee0ba10})}
   0.01%  ││     ││  0x00007f7980667874:   mov    %r10,0x10(%rsp)              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.39%  ││     ││  0x00007f7980667879:   xchg   %ax,%ax
          ││     ││  0x00007f798066787b:   call   0x00007f7980653e80           ; ImmutableOopMap {[24]=Oop [56]=Oop [64]=Oop [72]=Oop [80]=Oop [88]=Oop [96]=Oop [128]=Oop [136]=Oop }
          ││     ││                                                            ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=1}
          ││     ││                                                            ; - jdk.incubator.vector.Int64Vector$Int64Mask::xor@29 (line 705)
          ││     ││                                                            ; - jdk.incubator.vector.Int64Vector$Int64Mask::not@5 (line 666)
          ││     ││                                                            ; - jdk.incubator.vector.Int64Vector$Int64Mask::not@1 (line 553)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@145 (line 87)
          ││     ││                                                            ;   {static_call}
   0.08%  ││     ││  0x00007f7980667880:   nopl   0x10000a70(%rax,%rax,1)      ;   {other}
   0.00%  ││     ││  0x00007f7980667888:   mov    0x8(%rax),%r10d              ; implicit exception: dispatches to 0x00007f798066848c
   0.42%  ││     ││  0x00007f798066788c:   cmp    $0x103d288,%r10d             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
          ││     ││                                                            ;   {metadata(&apos;jdk/incubator/vector/Int64Vector$Int64Mask&apos;)}
          ││     ││  0x00007f7980667893:   jne    0x00007f79806681ec           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                            ; - jdk.incubator.vector.Int64Vector$Int64Mask::xor@32 (line 705)
          ││     ││                                                            ; - jdk.incubator.vector.Int64Vector$Int64Mask::not@5 (line 666)
          ││     ││                                                            ; - jdk.incubator.vector.Int64Vector$Int64Mask::not@1 (line 553)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@145 (line 87)
   0.16%  ││     ││  0x00007f7980667899:   mov    $0xa,%esi
   0.01%  ││     ││  0x00007f798066789e:   movabs $0x7ff15da20,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ff15da20} = &apos;jdk/incubator/vector/Int64Vector$Int64Mask&apos;)}
          ││     ││  0x00007f79806678a8:   xor    %ecx,%ecx
   0.00%  ││     ││  0x00007f79806678aa:   movabs $0x7ffe7f600,%r8             ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffe7f600} = int)}
   0.27%  ││     ││  0x00007f79806678b4:   mov    $0x2,%r9d
   0.00%  ││     ││  0x00007f79806678ba:   mov    0x88(%rsp),%rdi
   0.69%  ││     ││  0x00007f79806678c2:   mov    %rax,(%rsp)
   0.14%  ││     ││  0x00007f79806678c6:   xor    %r10d,%r10d
   0.01%  ││     ││  0x00007f79806678c9:   mov    %r10,0x8(%rsp)
   0.60%  ││     ││  0x00007f79806678ce:   movabs $0x7fee10e60,%r10            ;   {oop(a &apos;jdk/incubator/vector/Int64Vector$Int64Mask$$Lambda+0x00007f79080cc398&apos;{0x00000007fee10e60})}
          ││     ││  0x00007f79806678d8:   mov    %r10,0x10(%rsp)              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.13%  ││     ││  0x00007f79806678dd:   xchg   %ax,%ax
          ││     ││  0x00007f79806678df:   call   0x00007f7980653e80           ; ImmutableOopMap {[24]=Oop [56]=Oop [64]=Oop [72]=Oop [80]=Oop [88]=Oop [96]=Oop [128]=Oop }
          ││     ││                                                            ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=1}
          ││     ││                                                            ; - jdk.incubator.vector.Int64Vector$Int64Mask::and@29 (line 685)
          ││     ││                                                            ; - jdk.incubator.vector.Int64Vector$Int64Mask::and@2 (line 553)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@148 (line 87)
          ││     ││                                                            ;   {static_call}
   0.12%  ││     ││  0x00007f79806678e4:   nopl   0x11000ad4(%rax,%rax,1)      ;   {other}
   0.00%  ││     ││  0x00007f79806678ec:   mov    0x8(%rax),%r10d              ; implicit exception: dispatches to 0x00007f79806684cc
   0.16%  ││     ││  0x00007f79806678f0:   cmp    $0x103d288,%r10d             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
          ││     ││                                                            ;   {metadata(&apos;jdk/incubator/vector/Int64Vector$Int64Mask&apos;)}
          ││     ││  0x00007f79806678f7:   jne    0x00007f798066823c           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                            ; - jdk.incubator.vector.Int64Vector$Int64Mask::and@32 (line 685)
          ││     ││                                                            ; - jdk.incubator.vector.Int64Vector$Int64Mask::and@2 (line 553)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@148 (line 87)
   0.06%  ││     ││  0x00007f79806678fd:   movabs $0x7ff15d8a0,%rsi            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ff15d8a0} = &apos;jdk/incubator/vector/Int64Vector&apos;)}
   0.07%  ││     ││  0x00007f7980667907:   movabs $0x7ff15da20,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ff15da20} = &apos;jdk/incubator/vector/Int64Vector$Int64Mask&apos;)}
          ││     ││  0x00007f7980667911:   movabs $0x7ffe7f600,%rcx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffe7f600} = int)}
   0.00%  ││     ││  0x00007f798066791b:   mov    $0x2,%r8d
   0.14%  ││     ││  0x00007f7980667921:   mov    0x48(%rsp),%r9
   0.48%  ││     ││  0x00007f7980667926:   mov    0x80(%rsp),%rdi
   0.01%  ││     ││  0x00007f798066792e:   mov    %rax,(%rsp)
   0.13%  ││     ││  0x00007f7980667932:   movabs $0x7fee16a20,%r10            ;   {oop(a &apos;jdk/incubator/vector/IntVector$$Lambda+0x00007f79080cc9c0&apos;{0x00000007fee16a20})}
          ││     ││  0x00007f798066793c:   mov    %r10,0x8(%rsp)               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.12%  ││     ││  0x00007f7980667941:   xchg   %ax,%ax
          ││     ││  0x00007f7980667943:   call   0x00007f798065a680           ; ImmutableOopMap {[24]=Oop [56]=Oop [64]=Oop [80]=Oop [88]=Oop [96]=Oop }
          ││     ││                                                            ;*invokestatic blend {reexecute=0 rethrow=0 return_oop=1}
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::blendTemplate@26 (line 2182)
          ││     ││                                                            ; - jdk.incubator.vector.Int64Vector::blend@11 (line 410)
          ││     ││                                                            ; - jdk.incubator.vector.Int64Vector::blend@3 (line 41)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@158 (line 88)
          ││     ││                                                            ;   {static_call}
   0.01%  ││     ││  0x00007f7980667948:   nopl   0x12000b38(%rax,%rax,1)      ;   {other}
          ││     ││  0x00007f7980667950:   mov    0x8(%rax),%r10d              ; implicit exception: dispatches to 0x00007f7980668504
   0.31%  ││     ││  0x00007f7980667954:   nopl   0x0(%rax,%rax,1)
   0.02%  ││     ││  0x00007f798066795c:   data16 data16 xchg %ax,%ax
   0.02%  ││     ││  0x00007f7980667960:   cmp    $0x103c620,%r10d             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
          ││     ││                                                            ;   {metadata(&apos;jdk/incubator/vector/Int64Vector&apos;)}
          ││     ││  0x00007f7980667967:   jne    0x00007f7980668280           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
          ││     ││                                                            ; - jdk.incubator.vector.IntVector::blendTemplate@29 (line 2182)
          ││     ││                                                            ; - jdk.incubator.vector.Int64Vector::blend@11 (line 410)
          ││     ││                                                            ; - jdk.incubator.vector.Int64Vector::blend@3 (line 41)
          ││     ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@158 (line 88)
   0.08%  ││     ││  0x00007f798066796d:   mov    %rax,0x48(%rsp)
   1.15%  ││     ││  0x00007f7980667972:   mov    0x1b8(%r15),%r11
          ││     ││  0x00007f7980667979:   mov    %r11,%r10
   0.00%  ││     ││  0x00007f798066797c:   add    $0x18,%r10
          ││     ││  0x00007f7980667980:   cmp    0x1c8(%r15),%r10
          ││╭    ││  0x00007f7980667987:   jae    0x00007f7980667cae
   0.19%  │││    ││  0x00007f798066798d:   mov    %r10,0x1b8(%r15)
   0.00%  │││    ││  0x00007f7980667994:   prefetchw 0xc0(%r10)
   0.02%  │││    ││  0x00007f798066799c:   movq   $0x1,(%r11)
          │││    ││  0x00007f79806679a3:   prefetchw 0x100(%r10)
   0.14%  │││    ││  0x00007f79806679ab:   movl   $0x26a0,0x8(%r11)            ;   {metadata({type array int})}
   0.32%  │││    ││  0x00007f79806679b3:   prefetchw 0x140(%r10)
          │││    ││  0x00007f79806679bb:   movl   $0x2,0xc(%r11)
   0.05%  │││    ││  0x00007f79806679c3:   prefetchw 0x180(%r10)
   0.04%  │││    ││  0x00007f79806679cb:   mov    %r12,0x10(%r11)
   0.10%  │││    ││  0x00007f79806679cf:   mov    %r11,0x28(%rsp)
   0.01%  │││    ││  0x00007f79806679d4:   mov    0x38(%rsp),%r10
   0.06%  │││    ││  0x00007f79806679d9:   mov    0xc(%r10),%r10d              ;*goto {reexecute=0 rethrow=0 return_oop=0}
          │││    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@174 (line 79)
   0.02%  │││    ││  0x00007f79806679dd:   mov    0x1b8(%r15),%rax
   0.09%  │││    ││  0x00007f79806679e4:   vmovq  0x10(%r12,%r10,8),%xmm0
   0.55%  │││    ││  0x00007f79806679eb:   mov    %rax,%r10
          │││    ││  0x00007f79806679ee:   add    $0x10,%r10
          │││    ││  0x00007f79806679f2:   mov    0x60(%rsp),%r11
   0.00%  │││    ││  0x00007f79806679f7:   mov    0xc(%r11),%r11d
   0.16%  │││    ││  0x00007f79806679fb:   vmovq  0x10(%r12,%r11,8),%xmm1      ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││    ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          │││    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.19%  │││    ││  0x00007f7980667a02:   vpaddd %xmm1,%xmm0,%xmm0            ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
          │││    ││                                                            ; - jdk.incubator.vector.IntVector::lanewiseTemplate@154 (line 784)
          │││    ││                                                            ; - jdk.incubator.vector.Int64Vector::lanewise@3 (line 285)
          │││    ││                                                            ; - jdk.incubator.vector.Int64Vector::lanewise@3 (line 41)
          │││    ││                                                            ; - jdk.incubator.vector.IntVector::add@5 (line 1352)
          │││    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@166 (line 89)
   0.38%  │││    ││  0x00007f7980667a06:   mov    0x28(%rsp),%r11
          │││    ││  0x00007f7980667a0b:   vmovq  %xmm0,0x10(%r11)
   0.11%  │││    ││  0x00007f7980667a11:   cmp    0x1c8(%r15),%r10
          │││    ││  0x00007f7980667a18:   jae    0x00007f7980667cd8           ;*goto {reexecute=0 rethrow=0 return_oop=0}
          │││    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@174 (line 79)
   0.00%  │││    ││  0x00007f7980667a1e:   mov    %r10,0x1b8(%r15)
   0.05%  │││    ││  0x00007f7980667a25:   prefetchw 0xc0(%r10)
          │││    ││  0x00007f7980667a2d:   movq   $0x1,(%rax)
   0.08%  │││    ││  0x00007f7980667a34:   movl   $0x103c620,0x8(%rax)         ;   {metadata(&apos;jdk/incubator/vector/Int64Vector&apos;)}
   0.00%  │││    ││  0x00007f7980667a3b:   mov    0x50(%rsp),%r10              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││    ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          │││    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.06%  │││    ││  0x00007f7980667a40:   mov    0xc(%r10),%r10d              ;*getfield laneCount {reexecute=0 rethrow=0 return_oop=0}
          │││    ││                                                            ; - jdk.incubator.vector.AbstractSpecies::length@1 (line 117)
          │││    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@67 (line 79)
   0.00%  │││    ││  0x00007f7980667a44:   mov    0x68(%rsp),%r11d             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││    ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          │││    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.10%  │││    ││  0x00007f7980667a49:   inc    %r11d
          │││    ││  0x00007f7980667a4c:   mov    0x28(%rsp),%r8
   0.05%  │││    ││  0x00007f7980667a51:   shr    $0x3,%r8
   0.00%  │││    ││  0x00007f7980667a55:   mov    %r8d,0xc(%rax)               ;*goto {reexecute=0 rethrow=0 return_oop=0}
          │││    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@174 (line 79)
   0.10%  │││    ││  0x00007f7980667a59:   mov    0x458(%r15),%r8              ; ImmutableOopMap {rax=Oop [24]=Oop [64]=Oop [72]=Oop [80]=Oop [88]=Oop [96]=Oop }
          │││    ││                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
          │││    ││                                                            ; - (reexecute) com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@174 (line 79)
   0.00%  │││    ││  0x00007f7980667a60:   test   %eax,(%r8)                   ;   {poll}
   0.05%  │││    ││  0x00007f7980667a63:   cmp    %r10d,%r11d                  ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││    ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          │││    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
          │││╭   ││  0x00007f7980667a66:   jge    0x00007f7980667a8b
          ││││   ││  0x00007f7980667a68:   mov    %rax,0x38(%rsp)
   0.05%  ││││   ││  0x00007f7980667a6d:   vmovq  0x78(%rsp),%xmm0
          ││││   ││  0x00007f7980667a73:   mov    0x18(%rsp),%rax
   0.01%  ││││   ││  0x00007f7980667a78:   mov    0x20(%rsp),%r8d
          ││││   ││  0x00007f7980667a7d:   mov    0x24(%rsp),%ecx
   0.05%  ││││╭  ││  0x00007f7980667a81:   jmp    0x00007f7980667c77
          │││││ ↗││  0x00007f7980667a86:   mov    0x38(%rsp),%rax              ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
          │││││ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@72 (line 79)
   0.00%  │││↘│ │││  0x00007f7980667a8b:   mov    0x40(%rsp),%rcx              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││ │ │││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          │││ │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.05%  │││ │ │││  0x00007f7980667a90:   mov    0x1c(%rcx),%r10d             ;*getfield result {reexecute=0 rethrow=0 return_oop=0}
          │││ │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@179 (line 91)
   0.01%  │││ │ │││  0x00007f7980667a94:   mov    0xc(%r12,%r10,8),%r8d        ; implicit exception: dispatches to 0x00007f798066853c
   0.21%  │││ │ │││  0x00007f7980667a99:   dec    %r8d
   0.06%  │││ │ │││  0x00007f7980667a9c:   nopl   0x0(%rax)
   0.01%  │││ │ │││  0x00007f7980667aa0:   test   %r8d,%r8d
          │││ │ │││  0x00007f7980667aa3:   jl     0x00007f7980667e54
   0.07%  │││ │ │││  0x00007f7980667aa9:   mov    0x6c(%rsp),%r11d
          │││ │ │││  0x00007f7980667aae:   cmp    %r8d,%r11d
          │││ │ │││  0x00007f7980667ab1:   jae    0x00007f7980667de0
   0.05%  │││ │ │││  0x00007f7980667ab7:   mov    %rcx,%r8
   0.00%  │││ │ │││  0x00007f7980667aba:   mov    0x50(%rsp),%r9               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││ │ │││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          │││ │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.02%  │││ │ │││  0x00007f7980667abf:   add    0xc(%r9),%r11d               ;*goto {reexecute=0 rethrow=0 return_oop=0}
          │││ │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@174 (line 79)
   0.01%  │││ │ │││  0x00007f7980667ac3:   mov    0x458(%r15),%r9              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││ │ │││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          │││ │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.06%  │││ │ │││  0x00007f7980667aca:   mov    0x18(%r8),%ecx               ;*getfield input {reexecute=0 rethrow=0 return_oop=0}
          │││ │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@42 (line 77)
   0.00%  │││ │ │││  0x00007f7980667ace:   mov    0x48(%rsp),%rbx
   0.01%  │││ │ │││  0x00007f7980667ad3:   mov    0xc(%rbx),%ebx
   0.00%  │││ │ │││  0x00007f7980667ad6:   vmovq  0x10(%r12,%rbx,8),%xmm0
   0.06%  │││ │ │││  0x00007f7980667add:   shl    $0x3,%r10
          │││ │ │││  0x00007f7980667ae1:   mov    0x70(%rsp),%rbx
   0.02%  │││ │ │││  0x00007f7980667ae6:   vmovq  %xmm0,0x10(%r10,%rbx,1)      ; ImmutableOopMap {r8=Oop rcx=NarrowOop rax=Oop [72]=Oop [80]=Oop [88]=Oop [96]=Oop }
          │││ │ │││                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
          │││ │ │││                                                            ; - (reexecute) com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@198 (line 77)
   0.12%  │││ │ │││  0x00007f7980667aed:   test   %eax,(%r9)                   ;   {poll}
   0.01%  │││ │ │││  0x00007f7980667af0:   mov    0xc(%r12,%rcx,8),%r9d        ; implicit exception: dispatches to 0x00007f7980668550
   0.00%  │││ │ │││  0x00007f7980667af5:   cmp    %r9d,%r11d
          │││ │╭│││  0x00007f7980667af8:   jge    0x00007f7980667c98
   0.01%  │││ │││││  0x00007f7980667afe:   mov    %rax,0x38(%rsp)
   0.05%  │││ │││││  0x00007f7980667b03:   mov    %r8,%r9
   0.00%  │││ │││││  0x00007f7980667b06:   mov    0x50(%rsp),%rbp
   0.00%  │││ │││││  0x00007f7980667b0b:   mov    0x60(%rsp),%r10
   0.01%  │↘│ │││││  0x00007f7980667b10:   mov    0xc(%r12,%rcx,8),%r8d        ; implicit exception: dispatches to 0x00007f7980668528
          │ │ │││││                                                            ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ │ │││││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          │ │ │││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.06%  │ │ │││││  0x00007f7980667b15:   mov    0xc(%rbp),%ebx               ;*getfield laneCount {reexecute=0 rethrow=0 return_oop=0}
          │ │ │││││                                                            ; - jdk.incubator.vector.AbstractSpecies::length@1 (line 117)
          │ │ │││││                                                            ; - jdk.incubator.vector.IntVector::fromArray@2 (line 2953)
          │ │ │││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@56 (line 78)
   0.01%  │ │ │││││  0x00007f7980667b18:   sub    %ebx,%r8d
   0.00%  │ │ │││││  0x00007f7980667b1b:   inc    %r8d
   0.01%  │ │ │││││  0x00007f7980667b1e:   xchg   %ax,%ax
   0.07%  │ │ │││││  0x00007f7980667b20:   test   %r8d,%r8d
          │ │ │││││  0x00007f7980667b23:   jl     0x00007f7980667e14
   0.00%  │ │ │││││  0x00007f7980667b29:   cmp    %r8d,%r11d
          │ │ │││││  0x00007f7980667b2c:   jae    0x00007f7980667da0
   0.00%  │ │ │││││  0x00007f7980667b32:   mov    %ebx,0x1c(%rsp)
   0.01%  │ │ │││││  0x00007f7980667b36:   mov    %r10,0x60(%rsp)
   0.04%  │ │ │││││  0x00007f7980667b3b:   mov    %r9,0x40(%rsp)               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ │ │││││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          │ │ │││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.00%  │ │ │││││  0x00007f7980667b40:   mov    0x44(%rbp),%r10d             ;*getfield dummyVector {reexecute=0 rethrow=0 return_oop=0}
          │ │ │││││                                                            ; - jdk.incubator.vector.AbstractSpecies::dummyVector@1 (line 308)
          │ │ │││││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::dummyVector@1 (line 3918)
          │ │ │││││                                                            ; - jdk.incubator.vector.IntVector::fromArray@19 (line 2955)
          │ │ │││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@56 (line 78)
   0.01%  │ │ │││││  0x00007f7980667b44:   mov    %rbp,0x50(%rsp)
   0.01%  │ │ │││││  0x00007f7980667b49:   mov    %r11d,0x68(%rsp)             ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
          │ │ │││││                                                            ; - java.util.Objects::checkIndex@3 (line 385)
          │ │ │││││                                                            ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 61)
          │ │ │││││                                                            ; - jdk.incubator.vector.IntVector::fromArray@9 (line 2953)
          │ │ │││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@56 (line 78)
   0.05%  │ │ │││││  0x00007f7980667b4e:   mov    %r11d,0x6c(%rsp)
   0.01%  │ │ │││││  0x00007f7980667b53:   mov    0x8(%r12,%r10,8),%r11d       ; implicit exception: dispatches to 0x00007f7980668564
   0.00%  │ │ │││││  0x00007f7980667b58:   nopl   0x0(%rax,%rax,1)
   0.00%  │ │ │││││  0x00007f7980667b60:   cmp    $0x103c620,%r11d             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ │ │││││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          │ │ │││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
          │ │ │││││                                                            ;   {metadata(&apos;jdk/incubator/vector/Int64Vector&apos;)}
          │ │ │││││  0x00007f7980667b67:   jne    0x00007f7980667f40           ;*goto {reexecute=0 rethrow=0 return_oop=0}
          │ │ │││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@174 (line 79)
   0.05%  │ │ │││││  0x00007f7980667b6d:   mov    0x1b8(%r15),%r11
   0.01%  │ │ │││││  0x00007f7980667b74:   mov    %r11,%r10
   0.00%  │ │ │││││  0x00007f7980667b77:   add    $0x18,%r10
   0.01%  │ │ │││││  0x00007f7980667b7b:   lea    (%r12,%rcx,8),%r8
   0.06%  │ │ │││││  0x00007f7980667b7f:   mov    %r8,0x20(%rsp)               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ │ │││││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          │ │ │││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
          │ │ │││││  0x00007f7980667b84:   movslq 0x6c(%rsp),%r8               ;*i2l {reexecute=0 rethrow=0 return_oop=0}
          │ │ │││││                                                            ; - jdk.incubator.vector.IntVector::arrayAddress@4 (line 3691)
          │ │ │││││                                                            ; - jdk.incubator.vector.IntVector::fromArray0Template@20 (line 3444)
          │ │ │││││                                                            ; - jdk.incubator.vector.Int64Vector::fromArray0@3 (line 848)
          │ │ │││││                                                            ; - jdk.incubator.vector.IntVector::fromArray@24 (line 2955)
          │ │ │││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@56 (line 78)
   0.04%  │ │ │││││  0x00007f7980667b89:   mov    %r8,0x30(%rsp)               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ │ │││││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          │ │ │││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.01%  │ │ │││││  0x00007f7980667b8e:   shl    $0x2,%r8
   0.04%  │ │ │││││  0x00007f7980667b92:   mov    %r8,0x70(%rsp)
   0.01%  │ │ │││││  0x00007f7980667b97:   lea    0x10(%r8),%rbp
   0.00%  │ │ │││││  0x00007f7980667b9b:   nopl   0x0(%rax,%rax,1)
   0.00%  │ │ │││││  0x00007f7980667ba0:   cmp    0x1c8(%r15),%r10
          │ │ │││││  0x00007f7980667ba7:   jae    0x00007f7980667d07           ;*goto {reexecute=0 rethrow=0 return_oop=0}
          │ │ │││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@174 (line 79)
   0.06%  │ │ │││││  0x00007f7980667bad:   mov    %r10,0x1b8(%r15)
   0.00%  │ │ │││││  0x00007f7980667bb4:   prefetchw 0xc0(%r10)
   0.01%  │ │ │││││  0x00007f7980667bbc:   movq   $0x1,(%r11)
   0.01%  │ │ │││││  0x00007f7980667bc3:   prefetchw 0x100(%r10)
   0.05%  │ │ │││││  0x00007f7980667bcb:   movl   $0x26a0,0x8(%r11)            ;   {metadata({type array int})}
   0.01%  │ │ │││││  0x00007f7980667bd3:   prefetchw 0x140(%r10)
   0.00%  │ │ │││││  0x00007f7980667bdb:   movl   $0x2,0xc(%r11)
   0.02%  │ │ │││││  0x00007f7980667be3:   prefetchw 0x180(%r10)
   0.06%  │ │ │││││  0x00007f7980667beb:   mov    %r12,0x10(%r11)
   0.01%  │ │ │││││  0x00007f7980667bef:   mov    %r11,0x78(%rsp)
   0.01%  │ │ │││││  0x00007f7980667bf4:   mov    0x20(%rsp),%r10
   0.02%  │ │ │││││  0x00007f7980667bf9:   mov    0x70(%rsp),%r11              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ │ │││││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          │ │ │││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.05%  │ │ │││││  0x00007f7980667bfe:   vmovq  0x10(%r10,%r11,1),%xmm0      ;*invokestatic load {reexecute=0 rethrow=0 return_oop=0}
          │ │ │││││                                                            ; - jdk.incubator.vector.IntVector::fromArray0Template@32 (line 3442)
          │ │ │││││                                                            ; - jdk.incubator.vector.Int64Vector::fromArray0@3 (line 848)
          │ │ │││││                                                            ; - jdk.incubator.vector.IntVector::fromArray@24 (line 2955)
          │ │ │││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@56 (line 78)
   0.21%  │ │ │││││  0x00007f7980667c05:   mov    0x78(%rsp),%r10
   0.04%  │ │ │││││  0x00007f7980667c0a:   vmovq  %xmm0,0x10(%r10)
   0.39%  │ │ │││││  0x00007f7980667c10:   mov    0x1b8(%r15),%rax
   0.01%  │ │ │││││  0x00007f7980667c17:   mov    %rax,%r10
          │ │ │││││  0x00007f7980667c1a:   add    $0x10,%r10
          │ │ │││││  0x00007f7980667c1e:   xchg   %ax,%ax
   0.07%  │ │ │││││  0x00007f7980667c20:   cmp    0x1c8(%r15),%r10
          │ │ │││││  0x00007f7980667c27:   jae    0x00007f7980667d2c           ;*goto {reexecute=0 rethrow=0 return_oop=0}
          │ │ │││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@174 (line 79)
          │ │ │││││  0x00007f7980667c2d:   mov    %r10,0x1b8(%r15)
   0.00%  │ │ │││││  0x00007f7980667c34:   prefetchw 0xc0(%r10)
   0.00%  │ │ │││││  0x00007f7980667c3c:   movq   $0x1,(%rax)
   0.07%  │ │ │││││  0x00007f7980667c43:   movl   $0x103c620,0x8(%rax)         ;   {metadata(&apos;jdk/incubator/vector/Int64Vector&apos;)}
   0.01%  │ │ │││││  0x00007f7980667c4a:   mov    0x78(%rsp),%r10
   0.00%  │ │ │││││  0x00007f7980667c4f:   mov    %r10,%r11
   0.00%  │ │ │││││  0x00007f7980667c52:   shr    $0x3,%r11
   0.07%  │ │ │││││  0x00007f7980667c56:   mov    %r11d,0xc(%rax)
   0.00%  │ │ │││││  0x00007f7980667c5a:   mov    0x1c(%rsp),%r10d
   0.00%  │ │ │││││  0x00007f7980667c5f:   nop
          │ │ │││││  0x00007f7980667c60:   test   %r10d,%r10d
          │ │ ││╰││  0x00007f7980667c63:   jle    0x00007f7980667a86           ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ │ ││ ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          │ │ ││ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.06%  │ │ ││ ││  0x00007f7980667c69:   vmovd  %xmm0,%r8d                   ;*invokestatic extract {reexecute=0 rethrow=0 return_oop=0}
          │ │ ││ ││                                                            ; - jdk.incubator.vector.Int64Vector::laneHelper@16 (line 521)
          │ │ ││ ││                                                            ; - jdk.incubator.vector.Int64Vector::lane@30 (line 514)
          │ │ ││ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@79 (line 80)
   0.01%  │ │ ││ ││  0x00007f7980667c6e:   vpextrd $0x1,%xmm0,%ecx             ;*invokestatic extract {reexecute=0 rethrow=0 return_oop=0}
          │ │ ││ ││                                                            ; - jdk.incubator.vector.Int64Vector::laneHelper@16 (line 521)
          │ │ ││ ││                                                            ; - jdk.incubator.vector.Int64Vector::lane@36 (line 515)
          │ │ ││ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@79 (line 80)
          │ │ ││ ││  0x00007f7980667c74:   xor    %r11d,%r11d
   0.06%  │ │ ↘│ ││  0x00007f7980667c77:   cmp    $0x1,%r11d
   0.03%  │ │  │ ││  0x00007f7980667c7b:   nopl   0x0(%rax,%rax,1)
          │ │  │ ╰│  0x00007f7980667c80:   je     0x00007f7980667460
          │ │  │  │  0x00007f7980667c86:   cmp    $0x1,%r11d                   ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ │  │  │                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          │ │  │  │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
          │ │  │  │  0x00007f7980667c8a:   ja     0x00007f7980667d5a
   0.07%  │ │  │  │  0x00007f7980667c90:   mov    %r8d,%r10d
   0.00%  │ │  │  ╰  0x00007f7980667c93:   jmp    0x00007f7980667463           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
          │ │  │                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@46 (line 77)
          ↘ │  ↘     0x00007f7980667c98:   add    $0xb0,%rsp
            │        0x00007f7980667c9f:   pop    %rbp
   0.00%    │        0x00007f7980667ca0:   cmp    0x450(%r15),%rsp             ;   {poll_return}
            │        0x00007f7980667ca7:   ja     0x00007f79806686ce
            │        0x00007f7980667cad:   ret    
            ↘        0x00007f7980667cae:   movabs $0x7f79070026a0,%rsi         ;   {metadata({type array int})}
                     0x00007f7980667cb8:   mov    $0x2,%edx
                     0x00007f7980667cbd:   mov    0x40(%rsp),%rbp              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                               ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
                     0x00007f7980667cc2:   nop
                     0x00007f7980667cc3:   call   0x00007f7980193900           ; ImmutableOopMap {rbp=Oop [24]=Oop [56]=Oop [64]=Oop [72]=Oop [80]=Oop [88]=Oop [96]=Oop }
                                                                               ;*invokestatic binaryOp {reexecute=1 rethrow=0 return_oop=1}
....................................................................................................
  23.99%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, level 4, jdk.internal.vm.vector.VectorSupport::compare, version 2, compile id 870 

                          0x00007f7980650072:   mov    0x48(%r9),%r8
                          0x00007f7980650076:   cmp    %r11,%r8
                          0x00007f7980650079:   jne    0x00007f79806503b0           ;*invokevirtual loadFence {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::maybeRebox@3 (line 702)
                                                                                    ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
                                                                                    ; - jdk.incubator.vector.Int64Vector::vec@1 (line 117)
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f79080caf28::apply@14
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.00%                  0x00007f798065007f:   mov    0xc(%rdi),%r11d              ;*getfield payload {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@4 (line 164)
                                                                                    ; - jdk.incubator.vector.Int64Vector::vec@1 (line 117)
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f79080caf28::apply@14
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.00%                  0x00007f7980650083:   mov    0x8(%r12,%r11,8),%r8d        ; implicit exception: dispatches to 0x00007f798065050c
   0.19%                  0x00007f7980650088:   cmp    $0x26a0,%r8d                 ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
                                                                                    ; - jdk.incubator.vector.Int64Vector::vec@1 (line 117)
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f79080caf28::apply@14
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
                                                                                    ;   {metadata({type array int})}
                          0x00007f798065008f:   jne    0x00007f7980650460           ;*invokevirtual loadFence {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::maybeRebox@3 (line 702)
                                                                                    ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
                                                                                    ; - jdk.incubator.vector.Int64Vector::vec@1 (line 117)
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@10 (line 473)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f79080caf28::apply@14
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.53%                  0x00007f7980650095:   mov    0xc(%r10),%r8d               ;*getfield payload {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@4 (line 164)
                                                                                    ; - jdk.incubator.vector.Int64Vector::vec@1 (line 117)
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@10 (line 473)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f79080caf28::apply@14
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.00%                  0x00007f7980650099:   shl    $0x3,%r11                    ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.incubator.vector.Int64Vector::vec@4 (line 117)
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f79080caf28::apply@14
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.01%                  0x00007f798065009d:   data16 xchg %ax,%ax
   0.01%                  0x00007f79806500a0:   mov    0x8(%r12,%r8,8),%r9d         ; implicit exception: dispatches to 0x00007f798065052c
   1.46%                  0x00007f79806500a5:   cmp    $0x26a0,%r9d                 ;   {metadata({type array int})}
                          0x00007f79806500ac:   jne    0x00007f7980650484           ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
                                                                                    ; - jdk.incubator.vector.Int64Vector::vec@1 (line 117)
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f79080caf28::apply@14
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.50%                  0x00007f79806500b2:   mov    0xc(%r11),%ebx               ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@47 (line 476)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f79080caf28::apply@14
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.01%                  0x00007f79806500b6:   lea    (%r12,%r8,8),%rcx            ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.incubator.vector.Int64Vector::vec@4 (line 117)
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@10 (line 473)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f79080caf28::apply@14
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.01%                  0x00007f79806500ba:   test   %ebx,%ebx
   0.04%                  0x00007f79806500bc:   nopl   0x0(%rax)
   0.51%                  0x00007f79806500c0:   jbe    0x00007f7980650320           ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
                                                                                    ; - jdk.incubator.vector.Int64Vector::vec@1 (line 117)
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f79080caf28::apply@14
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.01%                  0x00007f79806500c6:   mov    0xc(%rcx),%r8d               ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@52 (line 476)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f79080caf28::apply@14
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.01%                  0x00007f79806500ca:   mov    0x10(%r11),%r9d              ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@47 (line 476)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f79080caf28::apply@14
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.05%                  0x00007f79806500ce:   test   %r8d,%r8d
                          0x00007f79806500d1:   jbe    0x00007f7980650364           ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
                                                                                    ; - jdk.incubator.vector.Int64Vector::vec@1 (line 117)
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f79080caf28::apply@14
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.51%                  0x00007f79806500d7:   mov    0x10(%rcx),%r10d             ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@52 (line 476)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f79080caf28::apply@14
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.01%                  0x00007f79806500db:   nopl   0x0(%rax,%rax,1)
   0.01%                  0x00007f79806500e0:   cmp    $0x3,%esi
          ╭               0x00007f79806500e3:   je     0x00007f7980650109
          │               0x00007f79806500e5:   test   %esi,%esi
          │               0x00007f79806500e7:   jne    0x00007f79806503c4
   0.15%  │               0x00007f79806500ed:   cmp    %r10d,%r9d
          │╭              0x00007f79806500f0:   jne    0x00007f79806500ff
   0.00%  ││              0x00007f79806500f2:   mov    $0x1,%r9d
          ││              0x00007f79806500f8:   mov    %r9d,0x20(%rsp)
          ││╭             0x00007f79806500fd:   jmp    0x00007f7980650123
          │↘│             0x00007f79806500ff:   xor    %r10d,%r10d
          │ │             0x00007f7980650102:   mov    %r10d,0x20(%rsp)
          │ │╭            0x00007f7980650107:   jmp    0x00007f7980650123
   0.04%  ↘ ││            0x00007f7980650109:   cmp    %r10d,%r9d                   ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
            ││                                                                      ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
            ││                                                                      ; - jdk.incubator.vector.Int64Vector::vec@1 (line 117)
            ││                                                                      ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
            ││                                                                      ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
            ││                                                                      ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f79080caf28::apply@14
            ││                                                                      ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
            ││╭           0x00007f798065010c:   jl     0x00007f7980650118
   0.15%    │││           0x00007f798065010e:   xor    %r9d,%r9d
   0.00%    │││           0x00007f7980650111:   mov    %r9d,0x20(%rsp)
   0.00%    │││╭          0x00007f7980650116:   jmp    0x00007f7980650123
   0.27%    ││↘│          0x00007f7980650118:   mov    $0x1,%r10d
            ││ │          0x00007f798065011e:   mov    %r10d,0x20(%rsp)             ;*goto {reexecute=0 rethrow=0 return_oop=0}
            ││ │                                                                    ; - jdk.incubator.vector.IntVector::compareWithOp@148 (line 2069)
            ││ │                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$58@4 (line 2035)
            ││ │                                                                    ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f79080cb338::apply@9
            ││ │                                                                    ; - jdk.incubator.vector.IntVector::bTest@53 (line 476)
            ││ │                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
            ││ │                                                                    ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f79080caf28::apply@14
            ││ │                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.16%    ↘↘ ↘          0x00007f7980650123:   cmp    $0x1,%ebx
                          0x00007f7980650126:   jbe    0x00007f798065032d           ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
                                                                                    ; - jdk.incubator.vector.Int64Vector::vec@1 (line 117)
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f79080caf28::apply@14
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.15%                  0x00007f798065012c:   mov    0x14(%r11),%r9d              ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@47 (line 476)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f79080caf28::apply@14
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.26%                  0x00007f7980650130:   cmp    $0x1,%r8d
                          0x00007f7980650134:   jbe    0x00007f7980650371           ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
                                                                                    ; - jdk.incubator.vector.Int64Vector::vec@1 (line 117)
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f79080caf28::apply@14
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.01%                  0x00007f798065013a:   mov    0x14(%rcx),%r10d             ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@52 (line 476)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f79080caf28::apply@14
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.17%                  0x00007f798065013e:   xchg   %ax,%ax
   0.17%                  0x00007f7980650140:   cmp    $0x3,%esi
                ╭         0x00007f7980650143:   je     0x00007f798065015d
   0.00%        │         0x00007f7980650145:   test   %esi,%esi
                │         0x00007f7980650147:   jne    0x00007f79806503cf
   0.02%        │         0x00007f798065014d:   cmp    %r10d,%r9d
                │╭        0x00007f7980650150:   jne    0x00007f7980650159
   0.08%        ││        0x00007f7980650152:   mov    $0x1,%ebp
                ││╭       0x00007f7980650157:   jmp    0x00007f798065016e
   0.08%        │↘│       0x00007f7980650159:   xor    %ebp,%ebp
                │ │╭      0x00007f798065015b:   jmp    0x00007f798065016e
   0.22%        ↘ ││      0x00007f798065015d:   data16 xchg %ax,%ax
   0.01%          ││      0x00007f7980650160:   cmp    %r10d,%r9d
                  ││╭     0x00007f7980650163:   jl     0x00007f7980650169
   0.20%          │││     0x00007f7980650165:   xor    %ebp,%ebp
   0.15%          │││╭    0x00007f7980650167:   jmp    0x00007f798065016e           ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
                  ││││                                                              ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
                  ││││                                                              ; - jdk.incubator.vector.Int64Vector::vec@1 (line 117)
                  ││││                                                              ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
                  ││││                                                              ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                  ││││                                                              ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f79080caf28::apply@14
                  ││││                                                              ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.22%          ││↘│    0x00007f7980650169:   mov    $0x1,%ebp
   0.46%          ↘↘ ↘    0x00007f798065016e:   mov    0x1b8(%r15),%rbx
   0.17%                  0x00007f7980650175:   mov    %rbx,%r10
   0.05%                  0x00007f7980650178:   add    $0x10,%r10
   0.22%                  0x00007f798065017c:   nopl   0x0(%rax)
   0.21%                  0x00007f7980650180:   cmp    0x1c8(%r15),%r10
                          0x00007f7980650187:   jae    0x00007f79806502b1
   0.10%                  0x00007f798065018d:   mov    %r10,0x1b8(%r15)
   0.11%                  0x00007f7980650194:   prefetchw 0xc0(%r10)
   0.53%                  0x00007f798065019c:   movq   $0x1,(%rbx)
   0.82%                  0x00007f79806501a3:   movl   $0x103d288,0x8(%rbx)         ;   {metadata(&apos;jdk/incubator/vector/Int64Vector$Int64Mask&apos;)}
   0.08%                  0x00007f79806501aa:   mov    %r12d,0xc(%rbx)
   0.16%                  0x00007f79806501ae:   mov    0x1b8(%r15),%rax
   0.25%                  0x00007f79806501b5:   mov    %rax,%r10
   0.25%                  0x00007f79806501b8:   add    $0x18,%r10
   0.07%                  0x00007f79806501bc:   nopl   0x0(%rax)
   0.05%                  0x00007f79806501c0:   cmp    0x1c8(%r15),%r10
                          0x00007f79806501c7:   jae    0x00007f79806502d0           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@62 (line 475)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f79080caf28::apply@14
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.33%                  0x00007f79806501cd:   mov    %r10,0x1b8(%r15)
   0.35%                  0x00007f79806501d4:   prefetchw 0xc0(%r10)
   0.66%                  0x00007f79806501dc:   movq   $0x1,(%rax)
   1.15%                  0x00007f79806501e3:   prefetchw 0x100(%r10)
   0.11%                  0x00007f79806501eb:   movl   $0x1b00,0x8(%rax)            ;   {metadata({type array bool})}
   0.57%                  0x00007f79806501f2:   prefetchw 0x140(%r10)
   0.03%                  0x00007f79806501fa:   movl   $0x2,0xc(%rax)
   0.58%                  0x00007f7980650201:   prefetchw 0x180(%r10)
   0.22%                  0x00007f7980650209:   mov    %r12d,0x10(%rax)
   0.54%                  0x00007f798065020d:   mov    %r12d,0x14(%rax)             ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.incubator.vector.Int64Vector$Int64Mask::prepare@6 (line 570)
                                                                                    ; - jdk.incubator.vector.Int64Vector$Int64Mask::&lt;init&gt;@3 (line 562)
                                                                                    ; - jdk.incubator.vector.Int64Vector$Int64Mask::&lt;init&gt;@3 (line 558)
                                                                                    ; - jdk.incubator.vector.Int64Vector::maskFromArray@5 (line 137)
                                                                                    ; - jdk.incubator.vector.Int64Vector::maskFromArray@2 (line 41)
                                                                                    ; - jdk.incubator.vector.AbstractSpecies::maskFactory@5 (line 328)
                                                                                    ; - jdk.incubator.vector.IntVector::maskFactory@5 (line 116)
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@68 (line 478)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f79080caf28::apply@14
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.21%                  0x00007f7980650211:   mov    0x20(%rsp),%r11d             ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
                                                                                    ; - jdk.incubator.vector.Int64Vector::vec@1 (line 117)
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f79080caf28::apply@14
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.18%                  0x00007f7980650216:   mov    %r11b,0x10(%rax)
   0.32%                  0x00007f798065021a:   mov    %bpl,0x11(%rax)              ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.incubator.vector.Int64Vector$Int64Mask::prepare@6 (line 570)
                                                                                    ; - jdk.incubator.vector.Int64Vector$Int64Mask::&lt;init&gt;@3 (line 562)
                                                                                    ; - jdk.incubator.vector.Int64Vector$Int64Mask::&lt;init&gt;@3 (line 558)
                                                                                    ; - jdk.incubator.vector.Int64Vector::maskFromArray@5 (line 137)
                                                                                    ; - jdk.incubator.vector.Int64Vector::maskFromArray@2 (line 41)
                                                                                    ; - jdk.incubator.vector.AbstractSpecies::maskFactory@5 (line 328)
                                                                                    ; - jdk.incubator.vector.IntVector::maskFactory@5 (line 116)
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@68 (line 478)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f79080caf28::apply@14
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.34%                  0x00007f798065021e:   mov    %rbx,%r10                    ;*putfield payload {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::&lt;init&gt;@6 (line 160)
                                                                                    ; - jdk.internal.vm.vector.VectorSupport$VectorMask::&lt;init&gt;@2 (line 190)
                                                                                    ; - jdk.incubator.vector.VectorMask::&lt;init&gt;@2 (line 134)
                                                                                    ; - jdk.incubator.vector.AbstractMask::&lt;init&gt;@2 (line 39)
                                                                                    ; - jdk.incubator.vector.Int64Vector$Int64Mask::&lt;init&gt;@6 (line 562)
                                                                                    ; - jdk.incubator.vector.Int64Vector$Int64Mask::&lt;init&gt;@3 (line 558)
                                                                                    ; - jdk.incubator.vector.Int64Vector::maskFromArray@5 (line 137)
                                                                                    ; - jdk.incubator.vector.Int64Vector::maskFromArray@2 (line 41)
                                                                                    ; - jdk.incubator.vector.AbstractSpecies::maskFactory@5 (line 328)
                                                                                    ; - jdk.incubator.vector.IntVector::maskFactory@5 (line 116)
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@68 (line 478)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f79080caf28::apply@14
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.05%                  0x00007f7980650221:   mov    %rax,%r11
   0.12%                  0x00007f7980650224:   shr    $0x3,%r11                    ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
                                                                                    ; - jdk.incubator.vector.Int64Vector::vec@1 (line 117)
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f79080caf28::apply@14
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.10%                  0x00007f7980650228:   mov    %r11d,0xc(%rbx)              ;*putfield payload {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::&lt;init&gt;@6 (line 160)
                                                                                    ; - jdk.internal.vm.vector.VectorSupport$VectorMask::&lt;init&gt;@2 (line 190)
                                                                                    ; - jdk.incubator.vector.VectorMask::&lt;init&gt;@2 (line 134)
                                                                                    ; - jdk.incubator.vector.AbstractMask::&lt;init&gt;@2 (line 39)
                                                                                    ; - jdk.incubator.vector.Int64Vector$Int64Mask::&lt;init&gt;@6 (line 562)
                                                                                    ; - jdk.incubator.vector.Int64Vector$Int64Mask::&lt;init&gt;@3 (line 558)
                                                                                    ; - jdk.incubator.vector.Int64Vector::maskFromArray@5 (line 137)
                                                                                    ; - jdk.incubator.vector.Int64Vector::maskFromArray@2 (line 41)
                                                                                    ; - jdk.incubator.vector.AbstractSpecies::maskFactory@5 (line 328)
                                                                                    ; - jdk.incubator.vector.IntVector::maskFactory@5 (line 116)
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@68 (line 478)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f79080caf28::apply@14
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.36%                  0x00007f798065022c:   mov    %rax,%r11
   0.02%                  0x00007f798065022f:   xor    %r10,%r11
   0.12%                  0x00007f7980650232:   shr    $0x15,%r11
   0.07%                  0x00007f7980650236:   test   %r11,%r11
                      ╭   0x00007f7980650239:   je     0x00007f7980650251
                      │   0x00007f798065023b:   shr    $0x9,%r10
                      │   0x00007f798065023f:   movabs $0x7f7974b3f000,%rdi
                      │   0x00007f7980650249:   add    %r10,%rdi
                      │   0x00007f798065024c:   cmpb   $0x2,(%rdi)                  ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
                      │                                                             ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
                      │                                                             ; - jdk.incubator.vector.Int64Vector::vec@1 (line 117)
                      │                                                             ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
                      │                                                             ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                      │                                                             ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f79080caf28::apply@14
                      │                                                             ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
                      │╭  0x00007f798065024f:   jne    0x00007f7980650267           ;*synchronization entry
                      ││                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::&lt;init&gt;@-1 (line 159)
                      ││                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorMask::&lt;init&gt;@2 (line 190)
                      ││                                                            ; - jdk.incubator.vector.VectorMask::&lt;init&gt;@2 (line 134)
                      ││                                                            ; - jdk.incubator.vector.AbstractMask::&lt;init&gt;@2 (line 39)
                      ││                                                            ; - jdk.incubator.vector.Int64Vector$Int64Mask::&lt;init&gt;@6 (line 562)
                      ││                                                            ; - jdk.incubator.vector.Int64Vector$Int64Mask::&lt;init&gt;@3 (line 558)
                      ││                                                            ; - jdk.incubator.vector.Int64Vector::maskFromArray@5 (line 137)
                      ││                                                            ; - jdk.incubator.vector.Int64Vector::maskFromArray@2 (line 41)
                      ││                                                            ; - jdk.incubator.vector.AbstractSpecies::maskFactory@5 (line 328)
                      ││                                                            ; - jdk.incubator.vector.IntVector::maskFactory@5 (line 116)
                      ││                                                            ; - jdk.incubator.vector.IntVector::bTest@68 (line 478)
                      ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                      ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f79080caf28::apply@14
                      ││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.33%              ↘│  0x00007f7980650251:   mov    %rbx,%rax
   0.02%               │  0x00007f7980650254:   add    $0x40,%rsp
   0.11%               │  0x00007f7980650258:   pop    %rbp
   0.15%               │  0x00007f7980650259:   cmp    0x450(%r15),%rsp             ;   {poll_return}
                       │  0x00007f7980650260:   ja     0x00007f798065055e
   0.40%               │  0x00007f7980650266:   ret    
                       ↘  0x00007f7980650267:   mov    0x48(%r15),%r10              ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@62 (line 475)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f79080caf28::apply@14
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
                          0x00007f798065026b:   mov    0x58(%r15),%r11
                          0x00007f798065026f:   lock addl $0x0,-0x40(%rsp)          ;*putfield payload {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::&lt;init&gt;@6 (line 160)
                                                                                    ; - jdk.internal.vm.vector.VectorSupport$VectorMask::&lt;init&gt;@2 (line 190)
                                                                                    ; - jdk.incubator.vector.VectorMask::&lt;init&gt;@2 (line 134)
....................................................................................................
  17.35%  <total for region 2>

....[Hottest Regions]...............................................................................
  23.99%         c2, level 4  com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector, version 2, compile id 929 
  17.35%         c2, level 4  jdk.internal.vm.vector.VectorSupport::compare, version 2, compile id 870 
   8.56%         c2, level 4  jdk.incubator.vector.Int64Vector$Int64Mask$$Lambda.0x00007f79080cc398::apply, version 2, compile id 918 
   8.06%         c2, level 4  jdk.incubator.vector.Int64Vector$Int64Mask$$Lambda.0x00007f79080cbd70::apply, version 2, compile id 916 
   8.02%         c2, level 4  jdk.internal.vm.vector.VectorSupport::fromBitsCoerced, version 2, compile id 818 
   7.57%         c2, level 4  jdk.internal.vm.vector.VectorSupport::fromBitsCoerced, version 2, compile id 818 
   6.33%         c2, level 4  jdk.internal.vm.vector.VectorSupport::blend, version 2, compile id 913 
   4.80%         c2, level 4  jdk.internal.vm.vector.VectorSupport::maskReductionCoerced, version 2, compile id 891 
   4.79%         c2, level 4  jdk.internal.vm.vector.VectorSupport::compare, version 2, compile id 870 
   3.59%                      <unknown> 
   1.94%    perf-1956279.map  [unknown] 
   1.83%         c2, level 4  jdk.internal.vm.vector.VectorSupport::binaryOp, version 2, compile id 884 
   0.71%         c2, level 4  jdk.incubator.vector.Int64Vector$Int64Mask::lambda$maskAll$15, version 2, compile id 914 
   0.39%              kernel  [unknown] 
   0.11%              kernel  [unknown] 
   0.06%              kernel  [unknown] 
   0.06%              kernel  [unknown] 
   0.05%              kernel  [unknown] 
   0.05%              kernel  [unknown] 
   0.04%              kernel  [unknown] 
   1.70%  <...other 371 warm regions...>
....................................................................................................
 100.00%  <totals>

....[Hottest Methods (after inlining)]..............................................................
  24.00%         c2, level 4  com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector, version 2, compile id 929 
  22.15%         c2, level 4  jdk.internal.vm.vector.VectorSupport::compare, version 2, compile id 870 
  15.59%         c2, level 4  jdk.internal.vm.vector.VectorSupport::fromBitsCoerced, version 2, compile id 818 
   8.56%         c2, level 4  jdk.incubator.vector.Int64Vector$Int64Mask$$Lambda.0x00007f79080cc398::apply, version 2, compile id 918 
   8.06%         c2, level 4  jdk.incubator.vector.Int64Vector$Int64Mask$$Lambda.0x00007f79080cbd70::apply, version 2, compile id 916 
   6.33%         c2, level 4  jdk.internal.vm.vector.VectorSupport::blend, version 2, compile id 913 
   4.80%         c2, level 4  jdk.internal.vm.vector.VectorSupport::maskReductionCoerced, version 2, compile id 891 
   3.66%                      <unknown> 
   1.94%    perf-1956279.map  [unknown] 
   1.83%         c2, level 4  jdk.internal.vm.vector.VectorSupport::binaryOp, version 2, compile id 884 
   1.61%              kernel  [unknown] 
   0.71%         c2, level 4  jdk.incubator.vector.Int64Vector$Int64Mask::lambda$maskAll$15, version 2, compile id 914 
   0.04%           libjvm.so  ElfSymbolTable::lookup 
   0.03%           libjvm.so  G1MergeHeapRootsTask::G1MergeCardSetClosure::do_heap_region 
   0.03%        libc-2.31.so  __memset_avx2_unaligned_erms 
   0.03%           libjvm.so  G1CardSet::reset_table_scanner 
   0.02%        libc-2.31.so  __memset_avx2_erms 
   0.02%           libjvm.so  HeapRegionClaimer::claim_region 
   0.02%         c2, level 4  com.ionutbalosin.jvm.performance.benchmarks.api.vector.jmh_generated.SortVectorApiBenchmark_sortVector_jmhTest::sortVector_avgt_jmhStub, version 4, compile id 984 
   0.02%        libc-2.31.so  __vfprintf_internal 
   0.56%  <...other 144 warm methods...>
....................................................................................................
 100.00%  <totals>

....[Distribution by Source]........................................................................
  92.06%         c2, level 4
   3.66%                    
   1.94%    perf-1956279.map
   1.61%              kernel
   0.52%           libjvm.so
   0.14%        libc-2.31.so
   0.02%  libpthread-2.31.so
   0.02%          ld-2.31.so
   0.02%         interpreter
   0.01%              [vdso]
   0.01%      hsdis-amd64.so
....................................................................................................
 100.00%  <totals>



# JMH version: 1.37
# VM version: JDK 21, OpenJDK 64-Bit Server VM, 21+35-2513
# VM invoker: /home/gogu/bench_jdks/jdk-21/bin/java
# VM options: -Xms4g -Xmx4g -XX:+AlwaysPreTouch --add-modules=jdk.incubator.vector
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark.sortVector
# Parameters: (arraySize = 1024, vectorSize = 128)

# Run progress: 41.67% complete, ETA 00:12:52
# Fork: 1 of 1
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 117.578 us/op
# Warmup Iteration   2: 88.701 us/op
# Warmup Iteration   3: 88.863 us/op
# Warmup Iteration   4: 88.881 us/op
# Warmup Iteration   5: 88.819 us/op
Iteration   1: 88.782 us/op
Iteration   2: 88.864 us/op
Iteration   3: 88.867 us/op
Iteration   4: 88.824 us/op
Iteration   5: 88.859 us/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark.sortVector":
  88.839 ±(99.9%) 0.139 us/op [Average]
  (min, avg, max) = (88.782, 88.839, 88.867), stdev = 0.036
  CI (99.9%): [88.700, 88.978] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark.sortVector:asm":
PrintAssembly processed: 180862 total address lines.
Perf output processed (skipped 56.884 seconds):
 Column 1: cycles (50660 events)

Hottest code regions (>10.00% "cycles" events):
 Event counts are percents of total event count.

....[Hottest Region 1]..............................................................................
c2, level 4, com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector, version 2, compile id 943 

                      0x00007f9b4066755d:   mov    0x8(%rsp),%r11               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                                ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                                ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
                      0x00007f9b40667562:   mov    0x18(%r11),%r8d              ;*getfield input {reexecute=0 rethrow=0 return_oop=0}
                                                                                ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@42 (line 77)
                      0x00007f9b40667566:   mov    0xc(%r12,%r8,8),%r9d         ; implicit exception: dispatches to 0x00007f9b406683dc
                      0x00007f9b4066756b:   test   %r9d,%r9d
                      0x00007f9b4066756e:   jbe    0x00007f9b40667b3f
                      0x00007f9b40667574:   mov    %rax,%r9
                      0x00007f9b40667577:   xor    %ecx,%ecx
   0.00%  ╭           0x00007f9b40667579:   jmp    0x00007f9b40667602
   0.00%  │ ↗         0x00007f9b4066757e:   mov    0x18(%rsp),%r11
   0.01%  │ │         0x00007f9b40667583:   mov    0x38(%rsp),%r9
   0.11%  │ │         0x00007f9b40667588:   mov    0x40(%rsp),%r10d             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ │                                                                   ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          │ │                                                                   ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.00%  │ │         0x00007f9b4066758d:   mov    0x1c(%r11),%ebx              ;*getfield result {reexecute=0 rethrow=0 return_oop=0}
          │ │                                                                   ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@179 (line 91)
   0.00%  │ │         0x00007f9b40667591:   mov    0xc(%r12,%rbx,8),%ecx        ; implicit exception: dispatches to 0x00007f9b40668238
   0.02%  │ │         0x00007f9b40667596:   add    $0xfffffffd,%ecx
   0.11%  │ │         0x00007f9b40667599:   test   %ecx,%ecx
   0.01%  │ │         0x00007f9b4066759b:   nopl   0x0(%rax,%rax,1)
          │ │         0x00007f9b406675a0:   jl     0x00007f9b40667d8c
   0.04%  │ │         0x00007f9b406675a6:   cmp    %ecx,%r10d
          │ │         0x00007f9b406675a9:   jae    0x00007f9b40667cfc
   0.08%  │ │         0x00007f9b406675af:   mov    %r10d,%ecx                   ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ │                                                                   ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          │ │                                                                   ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
          │ │         0x00007f9b406675b2:   add    0xc(%rbp),%ecx               ;*goto {reexecute=0 rethrow=0 return_oop=0}
          │ │                                                                   ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@174 (line 79)
          │ │         0x00007f9b406675b5:   mov    0x458(%r15),%rdx
   0.02%  │ │         0x00007f9b406675bc:   mov    0x30(%rsp),%rax
   0.08%  │ │         0x00007f9b406675c1:   mov    0xc(%rax),%esi               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ │                                                                   ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          │ │                                                                   ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.00%  │ │         0x00007f9b406675c4:   mov    0x18(%r11),%r8d              ;*getfield input {reexecute=0 rethrow=0 return_oop=0}
          │ │                                                                   ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@42 (line 77)
   0.01%  │ │         0x00007f9b406675c8:   vmovdqu 0x10(%r12,%rsi,8),%xmm1
   0.05%  │ │         0x00007f9b406675cf:   shl    $0x3,%rbx
   0.06%  │ │         0x00007f9b406675d3:   vmovdqu %xmm1,0x10(%rbx,%r10,4)     ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ │                                                                   ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          │ │                                                                   ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.08%  │ │         0x00007f9b406675da:   vpmovsxbd %xmm0,%xmm1               ; ImmutableOopMap {r11=Oop r8=NarrowOop r9=Oop rdi=Oop rbp=Oop [48]=Oop }
          │ │                                                                   ;*goto {reexecute=1 rethrow=0 return_oop=0}
          │ │                                                                   ; - (reexecute) com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@198 (line 77)
   0.00%  │ │         0x00007f9b406675df:   test   %eax,(%rdx)                  ;   {poll}
   0.01%  │ │         0x00007f9b406675e1:   mov    0xc(%r12,%r8,8),%r10d        ; implicit exception: dispatches to 0x00007f9b4066824c
   0.03%  │ │         0x00007f9b406675e6:   cmp    %r10d,%ecx
          │ │         0x00007f9b406675e9:   jge    0x00007f9b40667b3f
   0.08%  │ │         0x00007f9b406675ef:   mov    %rdi,0x20(%rsp)
          │ │         0x00007f9b406675f4:   mov    %rbp,0x10(%rsp)
   0.01%  │ │         0x00007f9b406675f9:   vmovd  %xmm0,0x90(%rsp)
   0.04%  ↘ │         0x00007f9b40667602:   mov    0xc(%r12,%r8,8),%ebx         ; implicit exception: dispatches to 0x00007f9b40668224
   0.07%    │         0x00007f9b40667607:   mov    0x10(%rsp),%rbp              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            │                                                                   ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
            │                                                                   ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.01%    │         0x00007f9b4066760c:   mov    0xc(%rbp),%edi               ;*getfield laneCount {reexecute=0 rethrow=0 return_oop=0}
            │                                                                   ; - jdk.incubator.vector.AbstractSpecies::length@1 (line 117)
            │                                                                   ; - jdk.incubator.vector.IntVector::fromArray@2 (line 2953)
            │                                                                   ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@56 (line 78)
   0.02%    │         0x00007f9b4066760f:   sub    %edi,%ebx
   0.05%    │         0x00007f9b40667611:   inc    %ebx
   0.10%    │         0x00007f9b40667613:   test   %ebx,%ebx
            │         0x00007f9b40667615:   jl     0x00007f9b40667d38
   0.02%    │         0x00007f9b4066761b:   cmp    %ebx,%ecx
   0.01%    │         0x00007f9b4066761d:   data16 xchg %ax,%ax
   0.04%    │         0x00007f9b40667620:   jae    0x00007f9b40667caa           ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            │                                                                   ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
            │                                                                   ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.08%    │         0x00007f9b40667626:   mov    0x44(%rbp),%edx              ;*getfield dummyVector {reexecute=0 rethrow=0 return_oop=0}
            │                                                                   ; - jdk.incubator.vector.AbstractSpecies::dummyVector@1 (line 308)
            │                                                                   ; - jdk.incubator.vector.IntVector$IntSpecies::dummyVector@1 (line 3918)
            │                                                                   ; - jdk.incubator.vector.IntVector::fromArray@19 (line 2955)
            │                                                                   ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@56 (line 78)
   0.02%    │         0x00007f9b40667629:   mov    %ecx,%r10d                   ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
            │                                                                   ; - java.util.Objects::checkIndex@3 (line 385)
            │                                                                   ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 61)
            │                                                                   ; - jdk.incubator.vector.IntVector::fromArray@9 (line 2953)
            │                                                                   ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@56 (line 78)
   0.00%    │         0x00007f9b4066762c:   mov    0x8(%r12,%rdx,8),%ebx        ; implicit exception: dispatches to 0x00007f9b40668260
   0.03%    │         0x00007f9b40667631:   cmp    $0x103d7e0,%ebx              ;   {metadata(&apos;jdk/incubator/vector/Int128Vector&apos;)}
            │         0x00007f9b40667637:   jne    0x00007f9b40667f30
   0.06%    │         0x00007f9b4066763d:   data16 xchg %ax,%ax
   0.02%    │         0x00007f9b40667640:   test   %edi,%edi
            │         0x00007f9b40667642:   jle    0x00007f9b40667b2c
   0.00%    │         0x00007f9b40667648:   shl    $0x3,%r8                     ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            │                                                                   ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
            │                                                                   ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.02%    │         0x00007f9b4066764c:   vmovdqu 0x10(%r8,%r10,4),%xmm1      ;*invokestatic load {reexecute=0 rethrow=0 return_oop=0}
            │                                                                   ; - jdk.incubator.vector.IntVector::fromArray0Template@32 (line 3442)
            │                                                                   ; - jdk.incubator.vector.Int128Vector::fromArray0@3 (line 852)
            │                                                                   ; - jdk.incubator.vector.IntVector::fromArray@24 (line 2955)
            │                                                                   ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@56 (line 78)
   0.26%    │         0x00007f9b40667653:   vpextrd $0x3,%xmm1,%ecx             ;*invokestatic extract {reexecute=0 rethrow=0 return_oop=0}
            │                                                                   ; - jdk.incubator.vector.Int128Vector::laneHelper@16 (line 523)
            │                                                                   ; - jdk.incubator.vector.Int128Vector::lane@52 (line 517)
            │                                                                   ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@79 (line 80)
   0.18%    │         0x00007f9b40667659:   vpextrd $0x2,%xmm1,%edx             ;*invokestatic extract {reexecute=0 rethrow=0 return_oop=0}
            │                                                                   ; - jdk.incubator.vector.Int128Vector::laneHelper@16 (line 523)
            │                                                                   ; - jdk.incubator.vector.Int128Vector::lane@46 (line 516)
            │                                                                   ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@79 (line 80)
   0.07%    │         0x00007f9b4066765f:   xor    %r8d,%r8d
   0.03%   ╭│         0x00007f9b40667662:   jmp    0x00007f9b40667a91
           ││         0x00007f9b40667667:   nopw   0x0(%rax,%rax,1)
   0.10%   ││      ↗  0x00007f9b40667670:   mov    %ecx,%edi                    ;*invokevirtual lane {reexecute=0 rethrow=0 return_oop=0}
           ││      │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@79 (line 80)
   0.11%   ││ ↗  ↗↗│  0x00007f9b40667672:   mov    %r8d,0x48(%rsp)
   0.02%   ││ │  │││  0x00007f9b40667677:   mov    %edx,0x44(%rsp)
   0.11%   ││ │  │││  0x00007f9b4066767b:   mov    %ecx,0x14(%rsp)
   0.22%   ││ │  │││  0x00007f9b4066767f:   vmovdqu %xmm1,0x50(%rsp)
   0.14%   ││ │  │││  0x00007f9b40667685:   mov    %r10d,0x40(%rsp)
   0.03%   ││ │  │││  0x00007f9b4066768a:   mov    %r9,0x38(%rsp)
   0.09%   ││ │  │││  0x00007f9b4066768f:   mov    %r11,0x18(%rsp)              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           ││ │  │││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
           ││ │  │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.18%   ││ │  │││  0x00007f9b40667694:   mov    0xc(%rbp),%ecx               ;*getfield laneCount {reexecute=0 rethrow=0 return_oop=0}
           ││ │  │││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@8 (line 3847)
           ││ │  │││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3857)
           ││ │  │││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 611)
           ││ │  │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@87 (line 81)
   0.10%   ││ │  │││  0x00007f9b40667697:   mov    0x2c(%rbp),%r10d
   0.01%   ││ │  │││  0x00007f9b4066769b:   mov    %rbp,0x28(%rsp)              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           ││ │  │││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
           ││ │  │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.08%   ││ │  │││  0x00007f9b406676a0:   movslq %edi,%r8                     ;*i2l {reexecute=0 rethrow=0 return_oop=0}
           ││ │  │││                                                            ; - jdk.incubator.vector.IntVector::toBits@1 (line 500)
           ││ │  │││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@2 (line 3857)
           ││ │  │││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 611)
           ││ │  │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@87 (line 81)
   0.20%   ││ │  │││  0x00007f9b406676a3:   mov    %r10,%rsi
   0.12%   ││ │  │││  0x00007f9b406676a6:   shl    $0x3,%rsi
   0.01%   ││ │  │││  0x00007f9b406676aa:   movabs $0x7ffe7f600,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffe7f600} = int)}
   0.09%   ││ │  │││  0x00007f9b406676b4:   xor    %r9d,%r9d
   0.23%   ││ │  │││  0x00007f9b406676b7:   mov    %rbp,%rdi
   0.10%   ││ │  │││  0x00007f9b406676ba:   movabs $0x7ff1901f8,%r10            ;   {oop(a &apos;jdk/incubator/vector/IntVector$IntSpecies$$Lambda+0x00007f9ac80c6c60&apos;{0x00000007ff1901f8})}
   0.02%   ││ │  │││  0x00007f9b406676c4:   mov    %r10,(%rsp)
   0.08%   ││ │  │││  0x00007f9b406676c8:   vmovd  0x90(%rsp),%xmm0             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           ││ │  │││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
           ││ │  │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.20%   ││ │  │││  0x00007f9b406676d1:   vpmovsxbd %xmm0,%xmm0               ;*invokestatic shuffleToVector {reexecute=0 rethrow=0 return_oop=0}
           ││ │  │││                                                            ; - jdk.incubator.vector.Int128Vector$Int128Shuffle::toVector@17 (line 815)
           ││ │  │││                                                            ; - jdk.incubator.vector.Int128Vector$Int128Shuffle::toVector@1 (line 779)
           ││ │  │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@12 (line 73)
   0.10%   ││ │  │││  0x00007f9b406676d6:   vmovdqu %xmm0,0x60(%rsp)            ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           ││ │  │││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
           ││ │  │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.01%   ││ │  │││  0x00007f9b406676dc:   data16 xchg %ax,%ax
   0.09%   ││ │  │││  0x00007f9b406676df:   call   0x00007f9b4064eae0           ; ImmutableOopMap {rbp=Oop [24]=Oop [32]=Oop [40]=Oop [48]=Oop [56]=Oop }
           ││ │  │││                                                            ;*invokestatic fromBitsCoerced {reexecute=0 rethrow=0 return_oop=1}
           ││ │  │││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@19 (line 3848)
           ││ │  │││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3857)
           ││ │  │││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 611)
           ││ │  │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@87 (line 81)
           ││ │  │││                                                            ;   {static_call}
   0.04%   ││ │  │││  0x00007f9b406676e4:   nopl   0x6000654(%rax,%rax,1)       ;   {other}
           ││ │  │││  0x00007f9b406676ec:   mov    0x8(%rax),%r10d              ; implicit exception: dispatches to 0x00007f9b406680cc
   0.45%   ││ │  │││  0x00007f9b406676f0:   cmp    $0x103d7e0,%r10d             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           ││ │  │││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
           ││ │  │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
           ││ │  │││                                                            ;   {metadata(&apos;jdk/incubator/vector/Int128Vector&apos;)}
           ││ │  │││  0x00007f9b406676f7:   jne    0x00007f9b40667f88           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
           ││ │  │││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@22 (line 3848)
           ││ │  │││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3857)
           ││ │  │││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 611)
           ││ │  │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@87 (line 81)
   0.00%   ││ │  │││  0x00007f9b406676fd:   mov    0xc(%rbp),%ecx               ;*getfield laneCount {reexecute=0 rethrow=0 return_oop=0}
           ││ │  │││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@8 (line 3847)
           ││ │  │││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@6 (line 3863)
           ││ │  │││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@2 (line 3804)
           ││ │  │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@124 (line 86)
   0.01%   ││ │  │││  0x00007f9b40667700:   mov    0xc(%rax),%r11d
   0.00%   ││ │  │││  0x00007f9b40667704:   mov    %rax,0x60(%rsp)
   0.47%   ││ │  │││  0x00007f9b40667709:   mov    0x2c(%rbp),%r10d
   0.00%   ││ │  │││  0x00007f9b4066770d:   vmovdqu 0x10(%r12,%r11,8),%xmm0
   1.07%   ││ │  │││  0x00007f9b40667714:   vmovdqu 0x50(%rsp),%xmm2
   0.04%   ││ │  │││  0x00007f9b4066771a:   vpcmpeqd %xmm0,%xmm2,%xmm1
   2.21%   ││ │  │││  0x00007f9b4066771e:   vpcmpgtd %xmm2,%xmm0,%xmm0
   0.27%   ││ │  │││  0x00007f9b40667722:   mov    %r10,%rsi
           ││ │  │││  0x00007f9b40667725:   shl    $0x3,%rsi
           ││ │  │││  0x00007f9b40667729:   vmovmskps %xmm1,%r8d
   0.46%   ││ │  │││  0x00007f9b4066772d:   popcnt %r8,%r11
   0.85%   ││ │  │││  0x00007f9b40667732:   vmovmskps %xmm0,%r10d
           ││ │  │││  0x00007f9b40667736:   popcnt %r10,%rbp
           ││ │  │││  0x00007f9b4066773b:   add    %ebp,%r11d                   ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           ││ │  │││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
           ││ │  │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.14%   ││ │  │││  0x00007f9b4066773e:   movslq %r11d,%r8                    ;*i2l {reexecute=0 rethrow=0 return_oop=0}
           ││ │  │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@123 (line 84)
   0.42%   ││ │  │││  0x00007f9b40667741:   movabs $0x7ffe7f600,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffe7f600} = int)}
           ││ │  │││  0x00007f9b4066774b:   xor    %r9d,%r9d
           ││ │  │││  0x00007f9b4066774e:   mov    0x28(%rsp),%rdi
           ││ │  │││  0x00007f9b40667753:   movabs $0x7ff1901f8,%r10            ;   {oop(a &apos;jdk/incubator/vector/IntVector$IntSpecies$$Lambda+0x00007f9ac80c6c60&apos;{0x00000007ff1901f8})}
   0.49%   ││ │  │││  0x00007f9b4066775d:   mov    %r10,(%rsp)
           ││ │  │││  0x00007f9b40667761:   vmovd  0x90(%rsp),%xmm0             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           ││ │  │││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
           ││ │  │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
           ││ │  │││  0x00007f9b4066776a:   vpmovsxbd %xmm0,%xmm0               ;*invokestatic shuffleToVector {reexecute=0 rethrow=0 return_oop=0}
           ││ │  │││                                                            ; - jdk.incubator.vector.Int128Vector$Int128Shuffle::toVector@17 (line 815)
           ││ │  │││                                                            ; - jdk.incubator.vector.Int128Vector$Int128Shuffle::toVector@1 (line 779)
           ││ │  │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@12 (line 73)
           ││ │  │││  0x00007f9b4066776f:   vmovdqu %xmm0,0x70(%rsp)            ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           ││ │  │││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
           ││ │  │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.46%   ││ │  │││  0x00007f9b40667775:   xchg   %ax,%ax
           ││ │  │││  0x00007f9b40667777:   call   0x00007f9b4064eae0           ; ImmutableOopMap {[24]=Oop [32]=Oop [40]=Oop [48]=Oop [56]=Oop [96]=Oop }
           ││ │  │││                                                            ;*invokestatic fromBitsCoerced {reexecute=0 rethrow=0 return_oop=1}
           ││ │  │││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@19 (line 3848)
           ││ │  │││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@6 (line 3863)
           ││ │  │││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@2 (line 3804)
           ││ │  │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@124 (line 86)
           ││ │  │││                                                            ;   {static_call}
   0.02%   ││ │  │││  0x00007f9b4066777c:   nopl   0x70006ec(%rax,%rax,1)       ;   {other}
           ││ │  │││  0x00007f9b40667784:   mov    0x8(%rax),%r11d              ; implicit exception: dispatches to 0x00007f9b40668134
   0.42%   ││ │  │││  0x00007f9b40667788:   cmp    $0x103d7e0,%r11d             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           ││ │  │││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
           ││ │  │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
           ││ │  │││                                                            ;   {metadata(&apos;jdk/incubator/vector/Int128Vector&apos;)}
           ││ │  │││  0x00007f9b4066778f:   jne    0x00007f9b40667ff8           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
           ││ │  │││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@22 (line 3848)
           ││ │  │││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@6 (line 3863)
           ││ │  │││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@2 (line 3804)
           ││ │  │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@124 (line 86)
   0.01%   ││ │  │││  0x00007f9b40667795:   mov    0x28(%rsp),%r10
   0.04%   ││ │  │││  0x00007f9b4066779a:   mov    0x2c(%r10),%r11d
   0.75%   ││ │  │││  0x00007f9b4066779e:   mov    0xc(%rax),%r10d
           ││ │  │││  0x00007f9b406677a2:   mov    0x28(%rsp),%r8               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           ││ │  │││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
           ││ │  │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.00%   ││ │  │││  0x00007f9b406677a7:   mov    0xc(%r8),%ecx                ;*getfield laneCount {reexecute=0 rethrow=0 return_oop=0}
           ││ │  │││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@8 (line 3847)
           ││ │  │││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@6 (line 3863)
           ││ │  │││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@2 (line 3804)
           ││ │  │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@137 (line 87)
   0.01%   ││ │  │││  0x00007f9b406677ab:   vmovdqu 0x10(%r12,%r10,8),%xmm1
   0.98%   ││ │  │││  0x00007f9b406677b2:   vmovd  0x90(%rsp),%xmm0             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           ││ │  │││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
           ││ │  │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.00%   ││ │  │││  0x00007f9b406677bb:   vpmovsxbd %xmm0,%xmm2               ;*invokestatic shuffleToVector {reexecute=0 rethrow=0 return_oop=0}
           ││ │  │││                                                            ; - jdk.incubator.vector.Int128Vector$Int128Shuffle::toVector@17 (line 815)
           ││ │  │││                                                            ; - jdk.incubator.vector.Int128Vector$Int128Shuffle::toVector@1 (line 779)
           ││ │  │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@12 (line 73)
   0.01%   ││ │  │││  0x00007f9b406677c0:   vpcmpgtd %xmm2,%xmm1,%xmm3          ;*invokestatic compare {reexecute=0 rethrow=0 return_oop=0}
           ││ │  │││                                                            ; - jdk.incubator.vector.IntVector::compareTemplate@42 (line 2029)
           ││ │  │││                                                            ; - jdk.incubator.vector.Int128Vector::compare@5 (line 384)
           ││ │  │││                                                            ; - jdk.incubator.vector.Int128Vector::compare@3 (line 41)
           ││ │  │││                                                            ; - jdk.incubator.vector.IntVector::lt@5 (line 1933)
           ││ │  │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@129 (line 86)
   1.80%   ││ │  │││  0x00007f9b406677c4:   mov    %r11,%rsi
   0.00%   ││ │  │││  0x00007f9b406677c7:   shl    $0x3,%rsi
           ││ │  │││  0x00007f9b406677cb:   movslq %ebp,%r8
   0.00%   ││ │  │││  0x00007f9b406677ce:   vpxor  %xmm1,%xmm1,%xmm1
   0.42%   ││ │  │││  0x00007f9b406677d2:   vpabsd %xmm3,%xmm2
   0.00%   ││ │  │││  0x00007f9b406677d7:   vpackusdw %xmm1,%xmm2,%xmm2
           ││ │  │││  0x00007f9b406677dc:   vpackuswb %xmm1,%xmm2,%xmm2
           ││ │  │││  0x00007f9b406677e0:   vmovd  %xmm2,0x4c(%rsp)
   0.42%   ││ │  │││  0x00007f9b406677e6:   vmovdqu %xmm3,0x70(%rsp)
   0.00%   ││ │  │││  0x00007f9b406677ec:   movabs $0x7ffe7f600,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffe7f600} = int)}
           ││ │  │││  0x00007f9b406677f6:   xor    %r9d,%r9d
   0.00%   ││ │  │││  0x00007f9b406677f9:   mov    0x28(%rsp),%rdi
   0.43%   ││ │  │││  0x00007f9b406677fe:   movabs $0x7ff1901f8,%r10            ;   {oop(a &apos;jdk/incubator/vector/IntVector$IntSpecies$$Lambda+0x00007f9ac80c6c60&apos;{0x00000007ff1901f8})}
   0.00%   ││ │  │││  0x00007f9b40667808:   mov    %r10,(%rsp)                  ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           ││ │  │││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
           ││ │  │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
           ││ │  │││  0x00007f9b4066780c:   vpmovsxbd %xmm0,%xmm0               ;*invokestatic shuffleToVector {reexecute=0 rethrow=0 return_oop=0}
           ││ │  │││                                                            ; - jdk.incubator.vector.Int128Vector$Int128Shuffle::toVector@17 (line 815)
           ││ │  │││                                                            ; - jdk.incubator.vector.Int128Vector$Int128Shuffle::toVector@1 (line 779)
           ││ │  │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@12 (line 73)
           ││ │  │││  0x00007f9b40667811:   vmovdqu %xmm0,0x80(%rsp)            ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           ││ │  │││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
           ││ │  │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.47%   ││ │  │││  0x00007f9b4066781a:   nop
   0.00%   ││ │  │││  0x00007f9b4066781b:   call   0x00007f9b4064eae0           ; ImmutableOopMap {[24]=Oop [32]=Oop [40]=Oop [48]=Oop [56]=Oop [96]=Oop }
           ││ │  │││                                                            ;*invokestatic fromBitsCoerced {reexecute=0 rethrow=0 return_oop=1}
           ││ │  │││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@19 (line 3848)
           ││ │  │││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@6 (line 3863)
           ││ │  │││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@2 (line 3804)
           ││ │  │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@137 (line 87)
           ││ │  │││                                                            ;   {static_call}
   0.03%   ││ │  │││  0x00007f9b40667820:   nopl   0x8000790(%rax,%rax,1)       ;   {other}
           ││ │  │││  0x00007f9b40667828:   mov    0x8(%rax),%r10d              ; implicit exception: dispatches to 0x00007f9b406681a4
   0.43%   ││ │  │││  0x00007f9b4066782c:   cmp    $0x103d7e0,%r10d             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           ││ │  │││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
           ││ │  │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
           ││ │  │││                                                            ;   {metadata(&apos;jdk/incubator/vector/Int128Vector&apos;)}
           ││ │  │││  0x00007f9b40667833:   jne    0x00007f9b40668060           ;*goto {reexecute=0 rethrow=0 return_oop=0}
           ││ │  │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@174 (line 79)
   0.00%   ││ │  │││  0x00007f9b40667839:   mov    0x1b8(%r15),%r8
           ││ │  │││  0x00007f9b40667840:   mov    0xc(%rax),%r10d
   0.00%   ││ │  │││  0x00007f9b40667844:   mov    %r8,%r11
   0.43%   ││ │  │││  0x00007f9b40667847:   add    $0x20,%r11
   0.00%   ││ │  │││  0x00007f9b4066784b:   vmovdqu 0x10(%r12,%r10,8),%xmm1
   1.22%   ││ │  │││  0x00007f9b40667852:   vmovd  0x90(%rsp),%xmm0             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           ││ │  │││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
           ││ │  │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.00%   ││ │  │││  0x00007f9b4066785b:   vpmovsxbd %xmm0,%xmm2               ;*invokestatic shuffleToVector {reexecute=0 rethrow=0 return_oop=0}
           ││ │  │││                                                            ; - jdk.incubator.vector.Int128Vector$Int128Shuffle::toVector@17 (line 815)
           ││ │  │││                                                            ; - jdk.incubator.vector.Int128Vector$Int128Shuffle::toVector@1 (line 779)
           ││ │  │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@12 (line 73)
   0.00%   ││ │  │││  0x00007f9b40667860:   vpcmpgtd %xmm2,%xmm1,%xmm1
   2.26%   ││ │  │││  0x00007f9b40667864:   vpcmpeqd %xmm2,%xmm2,%xmm2
           ││ │  │││  0x00007f9b40667868:   vpxor  %xmm2,%xmm1,%xmm1
   0.34%   ││ │  │││  0x00007f9b4066786c:   vmovdqu 0x70(%rsp),%xmm2            ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           ││ │  │││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
           ││ │  │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.00%   ││ │  │││  0x00007f9b40667872:   vpand  %xmm1,%xmm2,%xmm4
   0.43%   ││ │  │││  0x00007f9b40667876:   vpxor  %xmm1,%xmm1,%xmm1
           ││ │  │││  0x00007f9b4066787a:   vpabsd %xmm4,%xmm3
   0.58%   ││ │  │││  0x00007f9b4066787f:   vpackusdw %xmm1,%xmm3,%xmm3
           ││ │  │││  0x00007f9b40667884:   vpackuswb %xmm1,%xmm3,%xmm3
   0.00%   ││ │  │││  0x00007f9b40667888:   cmp    0x1c8(%r15),%r11
           ││ │  │││  0x00007f9b4066788f:   jae    0x00007f9b40667b55
   0.00%   ││ │  │││  0x00007f9b40667895:   mov    %r11,0x1b8(%r15)
   0.38%   ││ │  │││  0x00007f9b4066789c:   prefetchw 0xc0(%r11)
   0.00%   ││ │  │││  0x00007f9b406678a4:   movq   $0x1,(%r8)
   0.00%   ││ │  │││  0x00007f9b406678ab:   prefetchw 0x100(%r11)
           ││ │  │││  0x00007f9b406678b3:   movl   $0x26a0,0x8(%r8)             ;   {metadata({type array int})}
   0.43%   ││ │  │││  0x00007f9b406678bb:   prefetchw 0x140(%r11)
           ││ │  │││  0x00007f9b406678c3:   movl   $0x4,0xc(%r8)
           ││ │  │││  0x00007f9b406678cb:   prefetchw 0x180(%r11)
   0.10%   ││ │  │││  0x00007f9b406678d3:   mov    %r12,0x10(%r8)
   0.41%   ││ │  │││  0x00007f9b406678d7:   mov    %r12,0x18(%r8)
           ││ │  │││  0x00007f9b406678db:   mov    %r8,0x68(%rsp)
           ││ │  │││  0x00007f9b406678e0:   mov    0x30(%rsp),%r10
   0.01%   ││ │  │││  0x00007f9b406678e5:   mov    0xc(%r10),%r11d              ;*goto {reexecute=0 rethrow=0 return_oop=0}
           ││ │  │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@174 (line 79)
   0.42%   ││ │  │││  0x00007f9b406678e9:   mov    0x1b8(%r15),%rax
   0.01%   ││ │  │││  0x00007f9b406678f0:   vmovdqu 0x10(%r12,%r11,8),%xmm1
   0.05%   ││ │  │││  0x00007f9b406678f7:   mov    %rax,%r10
   0.01%   ││ │  │││  0x00007f9b406678fa:   add    $0x10,%r10
   0.38%   ││ │  │││  0x00007f9b406678fe:   mov    0x60(%rsp),%r11
           ││ │  │││  0x00007f9b40667903:   mov    0xc(%r11),%r8d
   0.02%   ││ │  │││  0x00007f9b40667907:   vmovdqu 0x10(%r12,%r8,8),%xmm2      ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           ││ │  │││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
           ││ │  │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.19%   ││ │  │││  0x00007f9b4066790e:   vpblendvb %xmm4,%xmm2,%xmm1,%xmm2   ;*invokestatic blend {reexecute=0 rethrow=0 return_oop=0}
           ││ │  │││                                                            ; - jdk.incubator.vector.IntVector::blendTemplate@26 (line 2182)
           ││ │  │││                                                            ; - jdk.incubator.vector.Int128Vector::blend@11 (line 410)
           ││ │  │││                                                            ; - jdk.incubator.vector.Int128Vector::blend@3 (line 41)
           ││ │  │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@158 (line 88)
   0.99%   ││ │  │││  0x00007f9b40667914:   mov    0x68(%rsp),%r11
           ││ │  │││  0x00007f9b40667919:   vmovdqu %xmm2,0x10(%r11)
   0.48%   ││ │  │││  0x00007f9b4066791f:   nop
   0.08%   ││ │  │││  0x00007f9b40667920:   cmp    0x1c8(%r15),%r10
           ││ │  │││  0x00007f9b40667927:   jae    0x00007f9b40667bad
   0.12%   ││ │  │││  0x00007f9b4066792d:   mov    %r10,0x1b8(%r15)
           ││ │  │││  0x00007f9b40667934:   prefetchw 0xc0(%r10)
   0.21%   ││ │  │││  0x00007f9b4066793c:   movq   $0x1,(%rax)
   0.08%   ││ │  │││  0x00007f9b40667943:   movl   $0x103d7e0,0x8(%rax)         ;   {metadata(&apos;jdk/incubator/vector/Int128Vector&apos;)}
   0.16%   ││ │  │││  0x00007f9b4066794a:   mov    0x68(%rsp),%r10
   0.01%   ││ │  │││  0x00007f9b4066794f:   mov    %r10,%r11
   0.24%   ││ │  │││  0x00007f9b40667952:   shr    $0x3,%r11
   0.11%   ││ │  │││  0x00007f9b40667956:   mov    %r11d,0xc(%rax)
   0.12%   ││ │  │││  0x00007f9b4066795a:   mov    0x1b8(%r15),%r11
   0.03%   ││ │  │││  0x00007f9b40667961:   mov    %r11,%r10
   0.18%   ││ │  │││  0x00007f9b40667964:   add    $0x20,%r10
   0.07%   ││ │  │││  0x00007f9b40667968:   cmp    0x1c8(%r15),%r10
           ││ │  │││  0x00007f9b4066796f:   jae    0x00007f9b40667bfd
   0.12%   ││ │  │││  0x00007f9b40667975:   mov    %r10,0x1b8(%r15)
   0.00%   ││ │  │││  0x00007f9b4066797c:   prefetchw 0xc0(%r10)
   0.25%   ││ │  │││  0x00007f9b40667984:   movq   $0x1,(%r11)
   0.19%   ││ │  │││  0x00007f9b4066798b:   prefetchw 0x100(%r10)
   0.10%   ││ │  │││  0x00007f9b40667993:   movl   $0x26a0,0x8(%r11)            ;   {metadata({type array int})}
   0.12%   ││ │  │││  0x00007f9b4066799b:   prefetchw 0x140(%r10)
   0.20%   ││ │  │││  0x00007f9b406679a3:   movl   $0x4,0xc(%r11)
   0.10%   ││ │  │││  0x00007f9b406679ab:   prefetchw 0x180(%r10)
   0.22%   ││ │  │││  0x00007f9b406679b3:   mov    %r12,0x10(%r11)
   0.21%   ││ │  │││  0x00007f9b406679b7:   mov    %r12,0x18(%r11)
   0.11%   ││ │  │││  0x00007f9b406679bb:   mov    %rax,0x30(%rsp)
   0.07%   ││ │  │││  0x00007f9b406679c0:   mov    %r11,0x8(%rsp)
   0.07%   ││ │  │││  0x00007f9b406679c5:   mov    0x38(%rsp),%r10
   0.22%   ││ │  │││  0x00007f9b406679ca:   mov    0xc(%r10),%r11d              ;*goto {reexecute=0 rethrow=0 return_oop=0}
           ││ │  │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@174 (line 79)
   0.12%   ││ │  │││  0x00007f9b406679ce:   mov    0x1b8(%r15),%r10
   0.11%   ││ │  │││  0x00007f9b406679d5:   vmovdqu 0x10(%r12,%r11,8),%xmm1
   0.43%   ││ │  │││  0x00007f9b406679dc:   mov    %r10,%rdi
   0.11%   ││ │  │││  0x00007f9b406679df:   add    $0x10,%r10
   0.05%   ││ │  │││  0x00007f9b406679e3:   mov    0x20(%rsp),%r11
   0.08%   ││ │  │││  0x00007f9b406679e8:   mov    0xc(%r11),%r8d               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           ││ │  │││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
           ││ │  │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.25%   ││ │  │││  0x00007f9b406679ec:   vpaddd 0x10(%r12,%r8,8),%xmm1,%xmm1 ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
           ││ │  │││                                                            ; - jdk.incubator.vector.IntVector::lanewiseTemplate@154 (line 784)
           ││ │  │││                                                            ; - jdk.incubator.vector.Int128Vector::lanewise@3 (line 285)
           ││ │  │││                                                            ; - jdk.incubator.vector.Int128Vector::lanewise@3 (line 41)
           ││ │  │││                                                            ; - jdk.incubator.vector.IntVector::add@5 (line 1352)
           ││ │  │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@166 (line 89)
   2.94%   ││ │  │││  0x00007f9b406679f3:   mov    0x8(%rsp),%r11
   0.02%   ││ │  │││  0x00007f9b406679f8:   vmovdqu %xmm1,0x10(%r11)
   0.06%   ││ │  │││  0x00007f9b406679fe:   xchg   %ax,%ax
   0.40%   ││ │  │││  0x00007f9b40667a00:   cmp    0x1c8(%r15),%r10
           ││ │  │││  0x00007f9b40667a07:   jae    0x00007f9b40667c54           ;*goto {reexecute=0 rethrow=0 return_oop=0}
           ││ │  │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@174 (line 79)
   0.03%   ││ │  │││  0x00007f9b40667a0d:   mov    %r10,0x1b8(%r15)
   0.01%   ││ │  │││  0x00007f9b40667a14:   prefetchw 0xc0(%r10)
   0.04%   ││ │  │││  0x00007f9b40667a1c:   movq   $0x1,(%rdi)
   0.39%   ││ │  │││  0x00007f9b40667a23:   movl   $0x103d7e0,0x8(%rdi)         ;   {metadata(&apos;jdk/incubator/vector/Int128Vector&apos;)}
   0.01%   ││ │  │││  0x00007f9b40667a2a:   mov    0x28(%rsp),%rbp              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           ││ │  │││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
           ││ │  │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.02%   ││ │  │││  0x00007f9b40667a2f:   mov    0xc(%rbp),%r10d              ;*getfield laneCount {reexecute=0 rethrow=0 return_oop=0}
           ││ │  │││                                                            ; - jdk.incubator.vector.AbstractSpecies::length@1 (line 117)
           ││ │  │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@67 (line 79)
   0.07%   ││ │  │││  0x00007f9b40667a33:   mov    0x48(%rsp),%r8d              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           ││ │  │││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
           ││ │  │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.33%   ││ │  │││  0x00007f9b40667a38:   inc    %r8d
   0.01%   ││ │  │││  0x00007f9b40667a3b:   mov    0x8(%rsp),%r11
   0.03%   ││ │  │││  0x00007f9b40667a40:   shr    $0x3,%r11
   0.04%   ││ │  │││  0x00007f9b40667a44:   mov    %r11d,0xc(%rdi)              ;*goto {reexecute=0 rethrow=0 return_oop=0}
           ││ │  │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@174 (line 79)
   0.41%   ││ │  │││  0x00007f9b40667a48:   mov    0x458(%r15),%r11             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           ││ │  │││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
           ││ │  │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.03%   ││ │  │││  0x00007f9b40667a4f:   vpmovsxbd %xmm0,%xmm3               ; ImmutableOopMap {rdi=Oop rbp=Oop [24]=Oop [48]=Oop [56]=Oop }
           ││ │  │││                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
           ││ │  │││                                                            ; - (reexecute) com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@174 (line 79)
   0.01%   ││ │  │││  0x00007f9b40667a54:   test   %eax,(%r11)                  ;   {poll}
   0.06%   ││ │  │││  0x00007f9b40667a57:   cmp    %r10d,%r8d
   0.35%   ││ │  │││  0x00007f9b40667a5a:   nopw   0x0(%rax,%rax,1)
   0.01%   │╰ │  │││  0x00007f9b40667a60:   jge    0x00007f9b4066757e
   0.01%   │  │  │││  0x00007f9b40667a66:   mov    %rdi,0x20(%rsp)
   0.05%   │  │  │││  0x00007f9b40667a6b:   mov    0x18(%rsp),%r11
   0.32%   │  │  │││  0x00007f9b40667a70:   mov    0x38(%rsp),%r9
   0.01%   │  │  │││  0x00007f9b40667a75:   mov    0x40(%rsp),%r10d
   0.01%   │  │  │││  0x00007f9b40667a7a:   vmovdqu 0x50(%rsp),%xmm1
   0.05%   │  │  │││  0x00007f9b40667a80:   mov    0x14(%rsp),%ecx
   0.29%   │  │  │││  0x00007f9b40667a84:   mov    0x44(%rsp),%edx
   0.02%   │  │  │││  0x00007f9b40667a88:   vmovd  %xmm0,0x90(%rsp)
   0.01%   ↘  │  │││  0x00007f9b40667a91:   cmp    $0x2,%r8d
             ╭│  │││  0x00007f9b40667a95:   jne    0x00007f9b40667a9e
   0.00%     ││  │││  0x00007f9b40667a97:   mov    %edx,%edi
   0.08%     │╰  │││  0x00007f9b40667a99:   jmp    0x00007f9b40667672
   0.15%     ↘   │││  0x00007f9b40667a9e:   xchg   %ax,%ax
   0.17%         │││  0x00007f9b40667aa0:   cmp    $0x2,%r8d
               ╭ │││  0x00007f9b40667aa4:   jge    0x00007f9b40667ac8
               │ │││  0x00007f9b40667aa6:   test   %r8d,%r8d
               │╭│││  0x00007f9b40667aa9:   je     0x00007f9b40667abf
   0.00%       │││││  0x00007f9b40667aab:   test   %r8d,%r8d
               │││││  0x00007f9b40667aae:   jl     0x00007f9b40667dc8           ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
               │││││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
               │││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.02%       │││││  0x00007f9b40667ab4:   vpextrd $0x1,%xmm1,%edi             ;*invokestatic extract {reexecute=0 rethrow=0 return_oop=0}
               │││││                                                            ; - jdk.incubator.vector.Int128Vector::laneHelper@16 (line 523)
               │││││                                                            ; - jdk.incubator.vector.Int128Vector::lane@40 (line 515)
               │││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@79 (line 80)
   0.10%       ││╰││  0x00007f9b40667aba:   jmp    0x00007f9b40667672           ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
               ││ ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
               ││ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.12%       │↘ ││  0x00007f9b40667abf:   vmovd  %xmm1,%edi                   ;*invokestatic extract {reexecute=0 rethrow=0 return_oop=0}
               │  ││                                                            ; - jdk.incubator.vector.Int128Vector::laneHelper@16 (line 523)
               │  ││                                                            ; - jdk.incubator.vector.Int128Vector::lane@34 (line 514)
               │  ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@79 (line 80)
               │  ╰│  0x00007f9b40667ac3:   jmp    0x00007f9b40667672
   0.02%       ↘   │  0x00007f9b40667ac8:   cmp    $0x3,%r8d
                   ╰  0x00007f9b40667acc:   je     0x00007f9b40667670
                      0x00007f9b40667ad2:   mov    $0xffffff45,%esi
                      0x00007f9b40667ad7:   mov    %r11,0x8(%rsp)
                      0x00007f9b40667adc:   mov    0x30(%rsp),%r11
                      0x00007f9b40667ae1:   mov    %r11,0x10(%rsp)
                      0x00007f9b40667ae6:   mov    0x20(%rsp),%r11
                      0x00007f9b40667aeb:   mov    %r11,0x18(%rsp)
                      0x00007f9b40667af0:   mov    %r9,0x20(%rsp)
                      0x00007f9b40667af5:   mov    %r10d,0x28(%rsp)
                      0x00007f9b40667afa:   mov    %r8d,0x30(%rsp)
....................................................................................................
  38.44%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, level 4, jdk.internal.vm.vector.VectorSupport::fromBitsCoerced, version 2, compile id 870 

                0x00007f9b4064eb18:   jne    0x00007f9b4064ee10           ;*invokeinterface fromBits {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
                0x00007f9b4064eb1e:   xchg   %ax,%ax
                0x00007f9b4064eb20:   test   %r8,%r8
                0x00007f9b4064eb23:   je     0x00007f9b4064ee30           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - jdk.incubator.vector.Int128Vector$Int128Mask::lambda$maskAll$15@3 (line 770)
                                                                          ; - jdk.incubator.vector.Int128Vector$Int128Mask$$Lambda/0x00007f9ac80cb960::fromBits@2
                                                                          ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
                0x00007f9b4064eb29:   movabs $0x7fee025a8,%rax            ;   {oop(a &apos;jdk/incubator/vector/Int128Vector$Int128Mask&apos;{0x00000007fee025a8})}
                0x00007f9b4064eb33:   jmp    0x00007f9b4064ed9f
   0.40%        0x00007f9b4064eb38:   nopl   0x0(%rax,%rax,1)
   0.12%        0x00007f9b4064eb40:   mov    0x8(%rdi),%r11d              ; implicit exception: dispatches to 0x00007f9b4064eea4
   0.73%        0x00007f9b4064eb44:   cmp    $0x103c240,%r11d             ;   {metadata(&apos;jdk/incubator/vector/IntVector$IntSpecies&apos;)}
                0x00007f9b4064eb4b:   jne    0x00007f9b4064ee58           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007f9ac80c6c60::fromBits@2
                                                                          ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
   0.10%        0x00007f9b4064eb51:   mov    %rdi,0x10(%rsp)
   0.34%        0x00007f9b4064eb56:   mov    0xc(%rdi),%ebp               ;*getfield laneCount {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - jdk.incubator.vector.AbstractSpecies::laneCount@1 (line 126)
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@1 (line 3925)
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007f9ac80c6c60::fromBits@5
                                                                          ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
   0.11%        0x00007f9b4064eb59:   nopl   0x0(%rax)
   0.77%        0x00007f9b4064eb60:   cmp    $0x40000,%ebp
                0x00007f9b4064eb66:   ja     0x00007f9b4064edee
   0.09%        0x00007f9b4064eb6c:   movslq %ebp,%r10                    ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@4 (line 3925)
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007f9ac80c6c60::fromBits@5
                                                                          ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
   0.38%        0x00007f9b4064eb6f:   cmp    $0x40000,%ebp
                0x00007f9b4064eb75:   ja     0x00007f9b4064edb2           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@37 (line 3926)
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007f9ac80c6c60::fromBits@5
                                                                          ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
   0.10%        0x00007f9b4064eb7b:   mov    0x1b8(%r15),%r8
   8.10%        0x00007f9b4064eb82:   lea    0x17(,%r10,4),%rcx           ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@4 (line 3925)
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007f9ac80c6c60::fromBits@5
                                                                          ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
   0.01%        0x00007f9b4064eb8a:   mov    %rcx,%r10
   0.01%        0x00007f9b4064eb8d:   and    $0xfffffffffffffff8,%r10
   0.03%        0x00007f9b4064eb91:   mov    %r8,%r11
   1.23%        0x00007f9b4064eb94:   add    %r10,%r11
   0.03%        0x00007f9b4064eb97:   nopw   0x0(%rax,%rax,1)
   0.01%        0x00007f9b4064eba0:   cmp    0x1c8(%r15),%r11
                0x00007f9b4064eba7:   jae    0x00007f9b4064edb2           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@37 (line 3926)
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007f9ac80c6c60::fromBits@5
                                                                          ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
   0.97%        0x00007f9b4064ebad:   mov    %r11,0x1b8(%r15)
   1.33%        0x00007f9b4064ebb4:   mov    %r8,%rdi
   0.01%        0x00007f9b4064ebb7:   add    $0x10,%rdi
   0.01%        0x00007f9b4064ebbb:   movq   $0x1,(%r8)
   3.71%        0x00007f9b4064ebc2:   prefetchw 0xc0(%r11)
   0.39%        0x00007f9b4064ebca:   movl   $0x26a0,0x8(%r8)             ;   {metadata({type array int})}
   0.48%        0x00007f9b4064ebd2:   mov    %ebp,0xc(%r8)
   3.05%        0x00007f9b4064ebd6:   prefetchw 0x100(%r11)
   0.08%        0x00007f9b4064ebde:   prefetchw 0x140(%r11)
   0.13%        0x00007f9b4064ebe6:   prefetchw 0x180(%r11)
   0.42%        0x00007f9b4064ebee:   shr    $0x3,%rcx
   1.07%        0x00007f9b4064ebf2:   add    $0xfffffffffffffffe,%rcx
   0.08%        0x00007f9b4064ebf6:   xor    %rax,%rax
   0.11%        0x00007f9b4064ebf9:   cmp    $0x8,%rcx
          ╭     0x00007f9b4064ebfd:   jg     0x00007f9b4064ec0f
   0.03%  │     0x00007f9b4064ebff:   dec    %rcx
   1.08%  │     0x00007f9b4064ec02:   js     0x00007f9b4064ec53
   0.13%  │↗    0x00007f9b4064ec04:   mov    %rax,(%rdi,%rcx,8)
   2.41%  ││    0x00007f9b4064ec08:   dec    %rcx
          │╰    0x00007f9b4064ec0b:   jge    0x00007f9b4064ec04
   0.05%  │     0x00007f9b4064ec0d:   jmp    0x00007f9b4064ec53
          ↘     0x00007f9b4064ec0f:   vpxor  %ymm0,%ymm0,%ymm0
            ╭   0x00007f9b4064ec13:   jmp    0x00007f9b4064ec25
            │↗  0x00007f9b4064ec18:   vmovdqu %ymm0,(%rdi)
            ││  0x00007f9b4064ec1c:   vmovdqu %ymm0,0x20(%rdi)
            ││  0x00007f9b4064ec21:   add    $0x40,%rdi
            ↘│  0x00007f9b4064ec25:   sub    $0x8,%rcx
             ╰  0x00007f9b4064ec29:   jge    0x00007f9b4064ec18
                0x00007f9b4064ec2b:   add    $0x4,%rcx
                0x00007f9b4064ec2f:   jl     0x00007f9b4064ec3d
                0x00007f9b4064ec31:   vmovdqu %ymm0,(%rdi)
....................................................................................................
  28.08%  <total for region 2>

....[Hottest Region 3]..............................................................................
c2, level 4, jdk.internal.vm.vector.VectorSupport::fromBitsCoerced, version 2, compile id 870 

               0x00007f9b4064ec41:   jle    0x00007f9b4064ec53
               0x00007f9b4064ec43:   dec    %rcx
          ↗    0x00007f9b4064ec46:   vmovq  %xmm0,(%rdi)
          │    0x00007f9b4064ec4a:   add    $0x8,%rdi
          │    0x00007f9b4064ec4e:   dec    %rcx
          ╰    0x00007f9b4064ec51:   jge    0x00007f9b4064ec46           ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@4 (line 3925)
                                                                         ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
                                                                         ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007f9ac80c6c60::fromBits@5
                                                                         ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
   0.27%       0x00007f9b4064ec53:   mov    %r8,(%rsp)                   ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@11 (line 3926)
                                                                         ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
                                                                         ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007f9ac80c6c60::fromBits@5
                                                                         ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
               0x00007f9b4064ec57:   test   %ebp,%ebp
               0x00007f9b4064ec59:   jle    0x00007f9b4064ed3d           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@12 (line 3926)
                                                                         ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
                                                                         ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007f9ac80c6c60::fromBits@5
                                                                         ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
   0.99%       0x00007f9b4064ec5f:   nop
   0.07%       0x00007f9b4064ec60:   test   %ebp,%ebp
               0x00007f9b4064ec62:   je     0x00007f9b4064edf6
   0.27%       0x00007f9b4064ec68:   mov    %ebp,%r11d
               0x00007f9b4064ec6b:   dec    %r11d
   0.99%       0x00007f9b4064ec6e:   cmp    %ebp,%r11d
               0x00007f9b4064ec71:   jae    0x00007f9b4064edf6
   0.08%       0x00007f9b4064ec77:   mov    %r8d,%r10d
   0.29%       0x00007f9b4064ec7a:   mov    0x8(%rsp),%rbx
   0.03%       0x00007f9b4064ec7f:   mov    %ebx,%r8d                    ;*l2i {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@22 (line 3927)
                                                                         ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
                                                                         ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007f9ac80c6c60::fromBits@5
                                                                         ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
   0.98%       0x00007f9b4064ec82:   shr    $0x2,%r10d
   0.06%       0x00007f9b4064ec86:   and    $0x3,%r10d
   0.26%       0x00007f9b4064ec8a:   xor    %ecx,%ecx
   0.00%       0x00007f9b4064ec8c:   mov    $0xffffffff,%r11d
   0.98%       0x00007f9b4064ec92:   sub    %r10d,%r11d
   0.04%       0x00007f9b4064ec95:   and    $0x3,%r11d
   0.25%       0x00007f9b4064ec99:   inc    %r11d
               0x00007f9b4064ec9c:   cmp    %ebp,%r11d
   0.99%       0x00007f9b4064ec9f:   cmovg  %ebp,%r11d
   0.05%       0x00007f9b4064eca3:   xor    %r9d,%r9d                    ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@15 (line 3927)
                                                                         ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
                                                                         ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007f9ac80c6c60::fromBits@5
                                                                         ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
   1.29%    ↗  0x00007f9b4064eca6:   mov    (%rsp),%r10
   1.36%    │  0x00007f9b4064ecaa:   mov    %r8d,0x10(%r10,%r9,4)        ;*iastore {reexecute=0 rethrow=0 return_oop=0}
            │                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@33 (line 3928)
            │                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
            │                                                            ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007f9ac80c6c60::fromBits@5
            │                                                            ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
   1.44%    │  0x00007f9b4064ecaf:   mov    %r9d,%r10d
   1.33%    │  0x00007f9b4064ecb2:   inc    %r10d                        ;*iinc {reexecute=0 rethrow=0 return_oop=0}
            │                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@34 (line 3926)
            │                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
            │                                                            ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007f9ac80c6c60::fromBits@5
            │                                                            ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
   1.40%    │  0x00007f9b4064ecb5:   cmp    %r11d,%r10d
           ╭│  0x00007f9b4064ecb8:   jge    0x00007f9b4064ecbf           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
           ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@12 (line 3926)
           ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
           ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007f9ac80c6c60::fromBits@5
           ││                                                            ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
   0.31%   ││  0x00007f9b4064ecba:   mov    %r10d,%r9d
   1.30%   │╰  0x00007f9b4064ecbd:   jmp    0x00007f9b4064eca6
   1.01%   ↘   0x00007f9b4064ecbf:   lea    -0x3(%rbp),%edi
   0.06%       0x00007f9b4064ecc2:   cmp    %edi,%r10d
               0x00007f9b4064ecc5:   jge    0x00007f9b4064ee08           ;   {no_reloc}
               0x00007f9b4064eccb:   vmovd  %r8d,%xmm0
               0x00007f9b4064ecd0:   vpbroadcastd %xmm0,%xmm0
               0x00007f9b4064ecd5:   inc    %r9d
               0x00007f9b4064ecd8:   mov    $0xfa0,%r11d
               0x00007f9b4064ecde:   mov    %ebp,%r10d
               0x00007f9b4064ece1:   sub    %r9d,%r10d
               0x00007f9b4064ece4:   add    $0xfffffffd,%r10d
               0x00007f9b4064ece8:   cmp    %r9d,%edi
               0x00007f9b4064eceb:   cmovl  %ecx,%r10d
....................................................................................................
  16.10%  <total for region 3>

....[Hottest Regions]...............................................................................
  38.44%         c2, level 4  com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector, version 2, compile id 943 
  28.08%         c2, level 4  jdk.internal.vm.vector.VectorSupport::fromBitsCoerced, version 2, compile id 870 
  16.10%         c2, level 4  jdk.internal.vm.vector.VectorSupport::fromBitsCoerced, version 2, compile id 870 
   9.58%         c2, level 4  jdk.internal.vm.vector.VectorSupport::fromBitsCoerced, version 2, compile id 870 
   4.03%         c2, level 4  jdk.internal.vm.vector.VectorSupport::fromBitsCoerced, version 2, compile id 870 
   1.26%         c2, level 4  jdk.internal.vm.vector.VectorSupport::fromBitsCoerced, version 2, compile id 870 
   0.12%              kernel  [unknown] 
   0.08%              kernel  [unknown] 
   0.06%              kernel  [unknown] 
   0.06%              kernel  [unknown] 
   0.06%              kernel  [unknown] 
   0.06%           libjvm.so  G1MergeHeapRootsTask::G1MergeCardSetClosure::do_heap_region 
   0.05%              kernel  [unknown] 
   0.05%              kernel  [unknown] 
   0.05%           libjvm.so  G1CardSet::reset_table_scanner 
   0.04%        libc-2.31.so  __memset_avx2_erms 
   0.04%           libjvm.so  ElfSymbolTable::lookup 
   0.04%              kernel  [unknown] 
   0.03%           libjvm.so  HeapRegionManager::par_iterate 
   0.03%              kernel  [unknown] 
   1.75%  <...other 433 warm regions...>
....................................................................................................
 100.00%  <totals>

....[Hottest Methods (after inlining)]..............................................................
  59.04%         c2, level 4  jdk.internal.vm.vector.VectorSupport::fromBitsCoerced, version 2, compile id 870 
  38.49%         c2, level 4  com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector, version 2, compile id 943 
   1.21%              kernel  [unknown] 
   0.10%                      <unknown> 
   0.07%           libjvm.so  G1MergeHeapRootsTask::G1MergeCardSetClosure::do_heap_region 
   0.05%           libjvm.so  G1CardSet::reset_table_scanner 
   0.04%        libc-2.31.so  __memset_avx2_erms 
   0.04%           libjvm.so  ElfSymbolTable::lookup 
   0.03%        libc-2.31.so  __memset_avx2_unaligned_erms 
   0.03%              [vdso]  __vdso_clock_gettime 
   0.03%           libjvm.so  HeapRegionManager::par_iterate 
   0.03%           libjvm.so  G1ScanCollectionSetRegionClosure::do_heap_region 
   0.02%           libjvm.so  MemAllocator::allocate 
   0.02%           libjvm.so  ObjAllocator::initialize 
   0.02%          ld-2.31.so  __tls_get_addr 
   0.02%           libjvm.so  SharedRuntime::on_slowpath_allocation_exit 
   0.02%         c2, level 4  com.ionutbalosin.jvm.performance.benchmarks.api.vector.jmh_generated.SortVectorApiBenchmark_sortVector_jmhTest::sortVector_avgt_jmhStub, version 4, compile id 976 
   0.02%        libc-2.31.so  __vfprintf_internal 
   0.02%           libjvm.so  OptoRuntime::new_array_C 
   0.02%           libjvm.so  FreeCSetClosure::do_heap_region 
   0.67%  <...other 161 warm methods...>
....................................................................................................
 100.00%  <totals>

....[Distribution by Source]........................................................................
  97.56%         c2, level 4
   1.21%              kernel
   0.84%           libjvm.so
   0.16%        libc-2.31.so
   0.10%                    
   0.04%  libpthread-2.31.so
   0.03%              [vdso]
   0.02%          ld-2.31.so
   0.02%      hsdis-amd64.so
   0.02%         interpreter
   0.00%        runtime stub
   0.00%         c1, level 3
....................................................................................................
 100.00%  <totals>



# JMH version: 1.37
# VM version: JDK 21, OpenJDK 64-Bit Server VM, 21+35-2513
# VM invoker: /home/gogu/bench_jdks/jdk-21/bin/java
# VM options: -Xms4g -Xmx4g -XX:+AlwaysPreTouch --add-modules=jdk.incubator.vector
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark.sortVector
# Parameters: (arraySize = 1024, vectorSize = 256)

# Run progress: 50.00% complete, ETA 00:11:01
# Fork: 1 of 1
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 123.353 us/op
# Warmup Iteration   2: 90.120 us/op
# Warmup Iteration   3: 89.921 us/op
# Warmup Iteration   4: 89.910 us/op
# Warmup Iteration   5: 89.955 us/op
Iteration   1: 90.206 us/op
Iteration   2: 90.269 us/op
Iteration   3: 90.265 us/op
Iteration   4: 90.255 us/op
Iteration   5: 89.965 us/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark.sortVector":
  90.192 ±(99.9%) 0.498 us/op [Average]
  (min, avg, max) = (89.965, 90.192, 90.269), stdev = 0.129
  CI (99.9%): [89.694, 90.690] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark.sortVector:asm":
PrintAssembly processed: 182293 total address lines.
Perf output processed (skipped 56.774 seconds):
 Column 1: cycles (50896 events)

Hottest code regions (>10.00% "cycles" events):
 Event counts are percents of total event count.

....[Hottest Region 1]..............................................................................
c2, level 4, com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector, version 2, compile id 937 

                                                                                      ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
                            0x00007fab3c66be92:   mov    0x18(%r11),%ebx              ;*getfield input {reexecute=0 rethrow=0 return_oop=0}
                                                                                      ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@42 (line 77)
                            0x00007fab3c66be96:   data16 nopw 0x0(%rax,%rax,1)
                            0x00007fab3c66bea0:   mov    0xc(%r12,%rbx,8),%r10d       ; implicit exception: dispatches to 0x00007fab3c66cfcc
                            0x00007fab3c66bea5:   test   %r10d,%r10d
                            0x00007fab3c66bea8:   jbe    0x00007fab3c66c69e
                            0x00007fab3c66beae:   mov    %rax,%r8
                            0x00007fab3c66beb1:   xor    %ecx,%ecx
          ╭                 0x00007fab3c66beb3:   jmp    0x00007fab3c66bf3e
   0.02%  │ ↗               0x00007fab3c66beb8:   mov    0x18(%rsp),%r11
   0.00%  │ │               0x00007fab3c66bebd:   mov    0x28(%rsp),%r9
   0.04%  │ │               0x00007fab3c66bec2:   mov    0x30(%rsp),%r8
          │ │               0x00007fab3c66bec7:   mov    0x40(%rsp),%r10d             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ │                                                                         ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          │ │                                                                         ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.01%  │ │               0x00007fab3c66becc:   mov    0x1c(%r11),%edi              ;*getfield result {reexecute=0 rethrow=0 return_oop=0}
          │ │                                                                         ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@179 (line 91)
   0.01%  │ │               0x00007fab3c66bed0:   mov    0xc(%r12,%rdi,8),%ebp        ; implicit exception: dispatches to 0x00007fab3c66ce04
   0.06%  │ │               0x00007fab3c66bed5:   add    $0xfffffff9,%ebp
   0.00%  │ │               0x00007fab3c66bed8:   test   %ebp,%ebp
   0.02%  │ │               0x00007fab3c66beda:   nopw   0x0(%rax,%rax,1)
          │ │               0x00007fab3c66bee0:   jl     0x00007fab3c66c92c
   0.05%  │ │               0x00007fab3c66bee6:   cmp    %ebp,%r10d
          │ │               0x00007fab3c66bee9:   jae    0x00007fab3c66c89c
          │ │               0x00007fab3c66beef:   mov    %r10d,%ecx                   ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ │                                                                         ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          │ │                                                                         ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.01%  │ │               0x00007fab3c66bef2:   add    0xc(%r9),%ecx                ;*goto {reexecute=0 rethrow=0 return_oop=0}
          │ │                                                                         ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@174 (line 79)
   0.00%  │ │               0x00007fab3c66bef6:   mov    0x458(%r15),%rdx
   0.04%  │ │               0x00007fab3c66befd:   mov    0x38(%rsp),%rsi
          │ │               0x00007fab3c66bf02:   mov    0xc(%rsi),%eax               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ │                                                                         ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          │ │                                                                         ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.01%  │ │               0x00007fab3c66bf05:   mov    0x18(%r11),%ebx              ;*getfield input {reexecute=0 rethrow=0 return_oop=0}
          │ │                                                                         ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@42 (line 77)
   0.00%  │ │               0x00007fab3c66bf09:   vmovdqu 0x10(%r12,%rax,8),%ymm0
   0.04%  │ │               0x00007fab3c66bf10:   shl    $0x3,%rdi
          │ │               0x00007fab3c66bf14:   vmovdqu %ymm0,0x10(%rdi,%r10,4)     ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │ │                                                                         ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          │ │                                                                         ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.04%  │ │               0x00007fab3c66bf1b:   vpmovsxbd %xmm1,%ymm0               ; ImmutableOopMap {r11=Oop r8=Oop r9=Oop rbx=NarrowOop [32]=Oop [56]=Oop }
          │ │                                                                         ;*goto {reexecute=1 rethrow=0 return_oop=0}
          │ │                                                                         ; - (reexecute) com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@198 (line 77)
          │ │               0x00007fab3c66bf20:   test   %eax,(%rdx)                  ;   {poll}
   0.05%  │ │               0x00007fab3c66bf22:   mov    0xc(%r12,%rbx,8),%r10d       ; implicit exception: dispatches to 0x00007fab3c66ce1c
   0.00%  │ │               0x00007fab3c66bf27:   cmp    %r10d,%ecx
          │ │               0x00007fab3c66bf2a:   jge    0x00007fab3c66c69e
   0.02%  │ │               0x00007fab3c66bf30:   mov    %r9,0x18(%rsp)
          │ │               0x00007fab3c66bf35:   vmovq  %xmm1,0xe0(%rsp)
   0.03%  ↘ │               0x00007fab3c66bf3e:   xchg   %ax,%ax
            │               0x00007fab3c66bf40:   mov    0xc(%r12,%rbx,8),%r10d       ; implicit exception: dispatches to 0x00007fab3c66cdec
   0.02%    │               0x00007fab3c66bf45:   mov    0x18(%rsp),%r9               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            │                                                                         ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
            │                                                                         ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
            │               0x00007fab3c66bf4a:   mov    0xc(%r9),%esi                ;*getfield laneCount {reexecute=0 rethrow=0 return_oop=0}
            │                                                                         ; - jdk.incubator.vector.AbstractSpecies::length@1 (line 117)
            │                                                                         ; - jdk.incubator.vector.IntVector::fromArray@2 (line 2953)
            │                                                                         ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@56 (line 78)
   0.03%    │               0x00007fab3c66bf4e:   sub    %esi,%r10d
   0.01%    │               0x00007fab3c66bf51:   inc    %r10d
   0.03%    │               0x00007fab3c66bf54:   test   %r10d,%r10d
            │               0x00007fab3c66bf57:   jl     0x00007fab3c66c8d4
   0.00%    │               0x00007fab3c66bf5d:   data16 xchg %ax,%ax
   0.03%    │               0x00007fab3c66bf60:   cmp    %r10d,%ecx
            │               0x00007fab3c66bf63:   jae    0x00007fab3c66c845           ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            │                                                                         ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
            │                                                                         ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
            │               0x00007fab3c66bf69:   mov    0x44(%r9),%eax               ;*getfield dummyVector {reexecute=0 rethrow=0 return_oop=0}
            │                                                                         ; - jdk.incubator.vector.AbstractSpecies::dummyVector@1 (line 308)
            │                                                                         ; - jdk.incubator.vector.IntVector$IntSpecies::dummyVector@1 (line 3918)
            │                                                                         ; - jdk.incubator.vector.IntVector::fromArray@19 (line 2955)
            │                                                                         ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@56 (line 78)
   0.03%    │               0x00007fab3c66bf6d:   mov    %ecx,%r10d                   ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
            │                                                                         ; - java.util.Objects::checkIndex@3 (line 385)
            │                                                                         ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 61)
            │                                                                         ; - jdk.incubator.vector.IntVector::fromArray@9 (line 2953)
            │                                                                         ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@56 (line 78)
   0.01%    │               0x00007fab3c66bf70:   mov    0x8(%r12,%rax,8),%edi        ; implicit exception: dispatches to 0x00007fab3c66ce34
   0.03%    │               0x00007fab3c66bf75:   data16 data16 nopw 0x0(%rax,%rax,1)
   0.00%    │               0x00007fab3c66bf80:   cmp    $0x103e3b8,%edi              ;   {metadata(&apos;jdk/incubator/vector/Int256Vector&apos;)}
            │               0x00007fab3c66bf86:   jne    0x00007fab3c66cadc
   0.01%    │               0x00007fab3c66bf8c:   test   %esi,%esi
            │               0x00007fab3c66bf8e:   jle    0x00007fab3c66c690
            │               0x00007fab3c66bf94:   lea    (%r12,%rbx,8),%rcx
   0.02%    │               0x00007fab3c66bf98:   vmovdqu 0x10(%rcx,%r10,4),%ymm2
   0.24%    │               0x00007fab3c66bf9f:   vextractf128 $0x1,%ymm2,%xmm0
   0.10%    │               0x00007fab3c66bfa5:   vpextrd $0x3,%xmm0,%ebx
   0.07%    │               0x00007fab3c66bfab:   vpextrd $0x2,%xmm2,%edx
   0.02%    │               0x00007fab3c66bfb1:   vpextrd $0x3,%xmm2,%edi
   0.08%    │               0x00007fab3c66bfb7:   vextractf128 $0x1,%ymm2,%xmm0
            │               0x00007fab3c66bfbd:   vmovd  %xmm0,%eax                   ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
            │                                                                         ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
            │                                                                         ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.07%    │               0x00007fab3c66bfc1:   vextractf128 $0x1,%ymm2,%xmm0
            │               0x00007fab3c66bfc7:   vpextrd $0x2,%xmm0,%esi             ;*invokestatic extract {reexecute=0 rethrow=0 return_oop=0}
            │                                                                         ; - jdk.incubator.vector.Int256Vector::laneHelper@16 (line 527)
            │                                                                         ; - jdk.incubator.vector.Int256Vector::lane@87 (line 520)
            │                                                                         ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@79 (line 80)
   0.05%    │               0x00007fab3c66bfcd:   xor    %ecx,%ecx
   0.03%   ╭│               0x00007fab3c66bfcf:   jmp    0x00007fab3c66c480
           ││               0x00007fab3c66bfd4:   nopl   0x0(%rax,%rax,1)
           ││               0x00007fab3c66bfdc:   data16 data16 xchg %ax,%ax
   0.05%   ││            ↗  0x00007fab3c66bfe0:   mov    %ecx,0x58(%rsp)
           ││            │  0x00007fab3c66bfe4:   mov    %esi,0x54(%rsp)
   0.00%   ││            │  0x00007fab3c66bfe8:   mov    %eax,0x50(%rsp)
           ││            │  0x00007fab3c66bfec:   mov    %edi,0x4c(%rsp)
   0.06%   ││            │  0x00007fab3c66bff0:   mov    %edx,0x48(%rsp)
           ││            │  0x00007fab3c66bff4:   mov    %ebx,0x44(%rsp)
           ││            │  0x00007fab3c66bff8:   mov    %r10d,0x40(%rsp)
           ││            │  0x00007fab3c66bffd:   mov    %r8,0x30(%rsp)
   0.07%   ││            │  0x00007fab3c66c002:   mov    %r9,0x28(%rsp)
           ││            │  0x00007fab3c66c007:   mov    %r11,0x18(%rsp)
           ││            │  0x00007fab3c66c00c:   mov    %ebx,%r10d
   0.10%   ││  ↗ ↗ ↗↗ ↗ ↗│  0x00007fab3c66c00f:   vmovdqu %ymm2,0x60(%rsp)
   0.14%   ││  │ │ ││ │ ││  0x00007fab3c66c015:   mov    0x28(%rsp),%r11
   0.28%   ││  │ │ ││ │ ││  0x00007fab3c66c01a:   mov    0x2c(%r11),%r11d
   0.22%   ││  │ │ ││ │ ││  0x00007fab3c66c01e:   mov    0x28(%rsp),%r8               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           ││  │ │ ││ │ ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
           ││  │ │ ││ │ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.14%   ││  │ │ ││ │ ││  0x00007fab3c66c023:   mov    0xc(%r8),%ecx                ;*getfield laneCount {reexecute=0 rethrow=0 return_oop=0}
           ││  │ │ ││ │ ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@8 (line 3847)
           ││  │ │ ││ │ ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3857)
           ││  │ │ ││ │ ││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 611)
           ││  │ │ ││ │ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@87 (line 81)
   0.19%   ││  │ │ ││ │ ││  0x00007fab3c66c027:   movslq %r10d,%r8                    ;*i2l {reexecute=0 rethrow=0 return_oop=0}
           ││  │ │ ││ │ ││                                                            ; - jdk.incubator.vector.IntVector::toBits@1 (line 500)
           ││  │ │ ││ │ ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@2 (line 3857)
           ││  │ │ ││ │ ││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 611)
           ││  │ │ ││ │ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@87 (line 81)
   0.05%   ││  │ │ ││ │ ││  0x00007fab3c66c02a:   mov    %r11,%rsi
   0.14%   ││  │ │ ││ │ ││  0x00007fab3c66c02d:   shl    $0x3,%rsi
   0.08%   ││  │ │ ││ │ ││  0x00007fab3c66c031:   movabs $0x7ffe7f600,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffe7f600} = int)}
   0.17%   ││  │ │ ││ │ ││  0x00007fab3c66c03b:   xor    %r9d,%r9d
   0.06%   ││  │ │ ││ │ ││  0x00007fab3c66c03e:   mov    0x28(%rsp),%rdi
   0.15%   ││  │ │ ││ │ ││  0x00007fab3c66c043:   movabs $0x7ff190268,%r10            ;   {oop(a &apos;jdk/incubator/vector/IntVector$IntSpecies$$Lambda+0x00007faac40c6c60&apos;{0x00000007ff190268})}
   0.08%   ││  │ │ ││ │ ││  0x00007fab3c66c04d:   mov    %r10,(%rsp)
   0.16%   ││  │ │ ││ │ ││  0x00007fab3c66c051:   vmovq  0xe0(%rsp),%xmm0             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           ││  │ │ ││ │ ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
           ││  │ │ ││ │ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.07%   ││  │ │ ││ │ ││  0x00007fab3c66c05a:   vpmovsxbd %xmm0,%ymm0               ;*invokestatic shuffleToVector {reexecute=0 rethrow=0 return_oop=0}
           ││  │ │ ││ │ ││                                                            ; - jdk.incubator.vector.Int256Vector$Int256Shuffle::toVector@17 (line 823)
           ││  │ │ ││ │ ││                                                            ; - jdk.incubator.vector.Int256Vector$Int256Shuffle::toVector@1 (line 787)
           ││  │ │ ││ │ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@12 (line 73)
   0.13%   ││  │ │ ││ │ ││  0x00007fab3c66c05f:   vmovdqu %ymm0,0x80(%rsp)
   0.13%   ││  │ │ ││ │ ││  0x00007fab3c66c068:   vzeroupper 
   0.44%   ││  │ │ ││ │ ││  0x00007fab3c66c06b:   call   0x00007fab3c657360           ; ImmutableOopMap {[24]=Oop [32]=Oop [40]=Oop [48]=Oop [56]=Oop }
           ││  │ │ ││ │ ││                                                            ;*invokestatic fromBitsCoerced {reexecute=0 rethrow=0 return_oop=1}
           ││  │ │ ││ │ ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@19 (line 3848)
           ││  │ │ ││ │ ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3857)
           ││  │ │ ││ │ ││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 611)
           ││  │ │ ││ │ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@87 (line 81)
           ││  │ │ ││ │ ││                                                            ;   {static_call}
   0.00%   ││  │ │ ││ │ ││  0x00007fab3c66c070:   nopl   0x60006e0(%rax,%rax,1)       ;   {other}
   0.05%   ││  │ │ ││ │ ││  0x00007fab3c66c078:   nopl   0x0(%rax,%rax,1)
   0.00%   ││  │ │ ││ │ ││  0x00007fab3c66c080:   mov    0x8(%rax),%r11d              ; implicit exception: dispatches to 0x00007fab3c66cc9c
   0.40%   ││  │ │ ││ │ ││  0x00007fab3c66c084:   cmp    $0x103e3b8,%r11d             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           ││  │ │ ││ │ ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
           ││  │ │ ││ │ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
           ││  │ │ ││ │ ││                                                            ;   {metadata(&apos;jdk/incubator/vector/Int256Vector&apos;)}
           ││  │ │ ││ │ ││  0x00007fab3c66c08b:   jne    0x00007fab3c66cb34           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
           ││  │ │ ││ │ ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@22 (line 3848)
           ││  │ │ ││ │ ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3857)
           ││  │ │ ││ │ ││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 611)
           ││  │ │ ││ │ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@87 (line 81)
   0.01%   ││  │ │ ││ │ ││  0x00007fab3c66c091:   mov    %rax,0x80(%rsp)
   0.13%   ││  │ │ ││ │ ││  0x00007fab3c66c099:   mov    0x28(%rsp),%r10              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           ││  │ │ ││ │ ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
           ││  │ │ ││ │ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.41%   ││  │ │ ││ │ ││  0x00007fab3c66c09e:   mov    0xc(%r10),%ecx               ;*getfield laneCount {reexecute=0 rethrow=0 return_oop=0}
           ││  │ │ ││ │ ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@8 (line 3847)
           ││  │ │ ││ │ ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@6 (line 3863)
           ││  │ │ ││ │ ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@2 (line 3804)
           ││  │ │ ││ │ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@124 (line 86)
   0.44%   ││  │ │ ││ │ ││  0x00007fab3c66c0a2:   mov    0xc(%rax),%r10d
   0.03%   ││  │ │ ││ │ ││  0x00007fab3c66c0a6:   mov    0x28(%rsp),%r11
   0.00%   ││  │ │ ││ │ ││  0x00007fab3c66c0ab:   mov    0x2c(%r11),%r8d
   0.29%   ││  │ │ ││ │ ││  0x00007fab3c66c0af:   vmovdqu 0x10(%r12,%r10,8),%ymm0
   1.90%   ││  │ │ ││ │ ││  0x00007fab3c66c0b6:   vmovdqu 0x60(%rsp),%ymm2
           ││  │ │ ││ │ ││  0x00007fab3c66c0bc:   vpcmpeqd %ymm0,%ymm2,%ymm1
   2.41%   ││  │ │ ││ │ ││  0x00007fab3c66c0c0:   vpcmpgtd %ymm2,%ymm0,%ymm0
   0.00%   ││  │ │ ││ │ ││  0x00007fab3c66c0c4:   mov    %r8,%rsi
           ││  │ │ ││ │ ││  0x00007fab3c66c0c7:   shl    $0x3,%rsi
   0.00%   ││  │ │ ││ │ ││  0x00007fab3c66c0cb:   vmovmskps %ymm1,%r8d
   2.14%   ││  │ │ ││ │ ││  0x00007fab3c66c0cf:   popcnt %r8,%r11
   0.06%   ││  │ │ ││ │ ││  0x00007fab3c66c0d4:   vmovmskps %ymm0,%r10d
           ││  │ │ ││ │ ││  0x00007fab3c66c0d8:   popcnt %r10,%rbp
   0.00%   ││  │ │ ││ │ ││  0x00007fab3c66c0dd:   add    %ebp,%r11d                   ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           ││  │ │ ││ │ ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
           ││  │ │ ││ │ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.44%   ││  │ │ ││ │ ││  0x00007fab3c66c0e0:   movslq %r11d,%r8                    ;*i2l {reexecute=0 rethrow=0 return_oop=0}
           ││  │ │ ││ │ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@123 (line 84)
   0.41%   ││  │ │ ││ │ ││  0x00007fab3c66c0e3:   movabs $0x7ffe7f600,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffe7f600} = int)}
           ││  │ │ ││ │ ││  0x00007fab3c66c0ed:   xor    %r9d,%r9d
           ││  │ │ ││ │ ││  0x00007fab3c66c0f0:   mov    0x28(%rsp),%rdi
           ││  │ │ ││ │ ││  0x00007fab3c66c0f5:   movabs $0x7ff190268,%r10            ;   {oop(a &apos;jdk/incubator/vector/IntVector$IntSpecies$$Lambda+0x00007faac40c6c60&apos;{0x00000007ff190268})}
   0.46%   ││  │ │ ││ │ ││  0x00007fab3c66c0ff:   mov    %r10,(%rsp)
           ││  │ │ ││ │ ││  0x00007fab3c66c103:   vmovq  0xe0(%rsp),%xmm0             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           ││  │ │ ││ │ ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
           ││  │ │ ││ │ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.00%   ││  │ │ ││ │ ││  0x00007fab3c66c10c:   vpmovsxbd %xmm0,%ymm0               ;*invokestatic shuffleToVector {reexecute=0 rethrow=0 return_oop=0}
           ││  │ │ ││ │ ││                                                            ; - jdk.incubator.vector.Int256Vector$Int256Shuffle::toVector@17 (line 823)
           ││  │ │ ││ │ ││                                                            ; - jdk.incubator.vector.Int256Vector$Int256Shuffle::toVector@1 (line 787)
           ││  │ │ ││ │ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@12 (line 73)
   0.00%   ││  │ │ ││ │ ││  0x00007fab3c66c111:   vmovdqu %ymm0,0xa0(%rsp)            ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           ││  │ │ ││ │ ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
           ││  │ │ ││ │ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.46%   ││  │ │ ││ │ ││  0x00007fab3c66c11a:   xchg   %ax,%ax
           ││  │ │ ││ │ ││  0x00007fab3c66c11c:   vzeroupper 
   0.41%   ││  │ │ ││ │ ││  0x00007fab3c66c11f:   call   0x00007fab3c657360           ; ImmutableOopMap {[24]=Oop [32]=Oop [40]=Oop [48]=Oop [56]=Oop [128]=Oop }
           ││  │ │ ││ │ ││                                                            ;*invokestatic fromBitsCoerced {reexecute=0 rethrow=0 return_oop=1}
           ││  │ │ ││ │ ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@19 (line 3848)
           ││  │ │ ││ │ ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@6 (line 3863)
           ││  │ │ ││ │ ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@2 (line 3804)
           ││  │ │ ││ │ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@124 (line 86)
           ││  │ │ ││ │ ││                                                            ;   {static_call}
           ││  │ │ ││ │ ││  0x00007fab3c66c124:   nopl   0x7000794(%rax,%rax,1)       ;   {other}
           ││  │ │ ││ │ ││  0x00007fab3c66c12c:   mov    0x8(%rax),%r10d              ; implicit exception: dispatches to 0x00007fab3c66cd00
   0.01%   ││  │ │ ││ │ ││  0x00007fab3c66c130:   cmp    $0x103e3b8,%r10d             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           ││  │ │ ││ │ ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
           ││  │ │ ││ │ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
           ││  │ │ ││ │ ││                                                            ;   {metadata(&apos;jdk/incubator/vector/Int256Vector&apos;)}
           ││  │ │ ││ │ ││  0x00007fab3c66c137:   jne    0x00007fab3c66cba8           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
           ││  │ │ ││ │ ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@22 (line 3848)
           ││  │ │ ││ │ ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@6 (line 3863)
           ││  │ │ ││ │ ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@2 (line 3804)
           ││  │ │ ││ │ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@124 (line 86)
   0.40%   ││  │ │ ││ │ ││  0x00007fab3c66c13d:   mov    0x28(%rsp),%r10
   0.02%   ││  │ │ ││ │ ││  0x00007fab3c66c142:   mov    0x2c(%r10),%r10d
   0.15%   ││  │ │ ││ │ ││  0x00007fab3c66c146:   mov    0xc(%rax),%r8d
   0.38%   ││  │ │ ││ │ ││  0x00007fab3c66c14a:   mov    0x28(%rsp),%r11              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           ││  │ │ ││ │ ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
           ││  │ │ ││ │ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
           ││  │ │ ││ │ ││  0x00007fab3c66c14f:   mov    0xc(%r11),%ecx               ;*getfield laneCount {reexecute=0 rethrow=0 return_oop=0}
           ││  │ │ ││ │ ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@8 (line 3847)
           ││  │ │ ││ │ ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@6 (line 3863)
           ││  │ │ ││ │ ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@2 (line 3804)
           ││  │ │ ││ │ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@137 (line 87)
   0.01%   ││  │ │ ││ │ ││  0x00007fab3c66c153:   vmovdqu 0x10(%r12,%r8,8),%ymm1
   2.04%   ││  │ │ ││ │ ││  0x00007fab3c66c15a:   vmovq  0xe0(%rsp),%xmm0             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           ││  │ │ ││ │ ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
           ││  │ │ ││ │ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.00%   ││  │ │ ││ │ ││  0x00007fab3c66c163:   vpmovsxbd %xmm0,%ymm2               ;*invokestatic shuffleToVector {reexecute=0 rethrow=0 return_oop=0}
           ││  │ │ ││ │ ││                                                            ; - jdk.incubator.vector.Int256Vector$Int256Shuffle::toVector@17 (line 823)
           ││  │ │ ││ │ ││                                                            ; - jdk.incubator.vector.Int256Vector$Int256Shuffle::toVector@1 (line 787)
           ││  │ │ ││ │ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@12 (line 73)
   0.01%   ││  │ │ ││ │ ││  0x00007fab3c66c168:   vpcmpgtd %ymm2,%ymm1,%ymm3          ;*invokestatic compare {reexecute=0 rethrow=0 return_oop=0}
           ││  │ │ ││ │ ││                                                            ; - jdk.incubator.vector.IntVector::compareTemplate@42 (line 2029)
           ││  │ │ ││ │ ││                                                            ; - jdk.incubator.vector.Int256Vector::compare@5 (line 384)
           ││  │ │ ││ │ ││                                                            ; - jdk.incubator.vector.Int256Vector::compare@3 (line 41)
           ││  │ │ ││ │ ││                                                            ; - jdk.incubator.vector.IntVector::lt@5 (line 1933)
           ││  │ │ ││ │ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@129 (line 86)
   2.46%   ││  │ │ ││ │ ││  0x00007fab3c66c16c:   mov    %r10,%rsi
   0.00%   ││  │ │ ││ │ ││  0x00007fab3c66c16f:   shl    $0x3,%rsi
           ││  │ │ ││ │ ││  0x00007fab3c66c173:   movslq %ebp,%r8
           ││  │ │ ││ │ ││  0x00007fab3c66c176:   vpxor  %xmm1,%xmm1,%xmm1
   0.83%   ││  │ │ ││ │ ││  0x00007fab3c66c17a:   vextracti128 $0x1,%ymm3,%xmm2
   0.01%   ││  │ │ ││ │ ││  0x00007fab3c66c180:   vpackssdw %xmm2,%xmm3,%xmm2
           ││  │ │ ││ │ ││  0x00007fab3c66c184:   vpacksswb %xmm1,%xmm2,%xmm2
           ││  │ │ ││ │ ││  0x00007fab3c66c188:   vpabsb %xmm2,%xmm2
   1.72%   ││  │ │ ││ │ ││  0x00007fab3c66c18d:   vmovq  %xmm2,0x88(%rsp)
   0.00%   ││  │ │ ││ │ ││  0x00007fab3c66c196:   vmovdqu %ymm3,0xa0(%rsp)
           ││  │ │ ││ │ ││  0x00007fab3c66c19f:   movabs $0x7ffe7f600,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffe7f600} = int)}
           ││  │ │ ││ │ ││  0x00007fab3c66c1a9:   xor    %r9d,%r9d
   0.52%   ││  │ │ ││ │ ││  0x00007fab3c66c1ac:   mov    0x28(%rsp),%rdi
           ││  │ │ ││ │ ││  0x00007fab3c66c1b1:   movabs $0x7ff190268,%r10            ;   {oop(a &apos;jdk/incubator/vector/IntVector$IntSpecies$$Lambda+0x00007faac40c6c60&apos;{0x00000007ff190268})}
           ││  │ │ ││ │ ││  0x00007fab3c66c1bb:   mov    %r10,(%rsp)                  ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           ││  │ │ ││ │ ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
           ││  │ │ ││ │ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
           ││  │ │ ││ │ ││  0x00007fab3c66c1bf:   vpmovsxbd %xmm0,%ymm0               ;*invokestatic shuffleToVector {reexecute=0 rethrow=0 return_oop=0}
           ││  │ │ ││ │ ││                                                            ; - jdk.incubator.vector.Int256Vector$Int256Shuffle::toVector@17 (line 823)
           ││  │ │ ││ │ ││                                                            ; - jdk.incubator.vector.Int256Vector$Int256Shuffle::toVector@1 (line 787)
           ││  │ │ ││ │ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@12 (line 73)
   0.37%   ││  │ │ ││ │ ││  0x00007fab3c66c1c4:   vmovdqu %ymm0,0xc0(%rsp)            ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           ││  │ │ ││ │ ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
           ││  │ │ ││ │ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.00%   ││  │ │ ││ │ ││  0x00007fab3c66c1cd:   data16 xchg %ax,%ax
   0.00%   ││  │ │ ││ │ ││  0x00007fab3c66c1d0:   vzeroupper 
   0.42%   ││  │ │ ││ │ ││  0x00007fab3c66c1d3:   call   0x00007fab3c657360           ; ImmutableOopMap {[24]=Oop [32]=Oop [40]=Oop [48]=Oop [56]=Oop [128]=Oop }
           ││  │ │ ││ │ ││                                                            ;*invokestatic fromBitsCoerced {reexecute=0 rethrow=0 return_oop=1}
           ││  │ │ ││ │ ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@19 (line 3848)
           ││  │ │ ││ │ ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@6 (line 3863)
           ││  │ │ ││ │ ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@2 (line 3804)
           ││  │ │ ││ │ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@137 (line 87)
           ││  │ │ ││ │ ││                                                            ;   {static_call}
   0.01%   ││  │ │ ││ │ ││  0x00007fab3c66c1d8:   nopl   0x8000848(%rax,%rax,1)       ;   {other}
           ││  │ │ ││ │ ││  0x00007fab3c66c1e0:   mov    0x8(%rax),%r11d              ; implicit exception: dispatches to 0x00007fab3c66cd74
   0.02%   ││  │ │ ││ │ ││  0x00007fab3c66c1e4:   cmp    $0x103e3b8,%r11d             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           ││  │ │ ││ │ ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
           ││  │ │ ││ │ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
           ││  │ │ ││ │ ││                                                            ;   {metadata(&apos;jdk/incubator/vector/Int256Vector&apos;)}
           ││  │ │ ││ │ ││  0x00007fab3c66c1eb:   jne    0x00007fab3c66cc18           ;*goto {reexecute=0 rethrow=0 return_oop=0}
           ││  │ │ ││ │ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@174 (line 79)
   0.46%   ││  │ │ ││ │ ││  0x00007fab3c66c1f1:   mov    0x1b8(%r15),%r8
   0.03%   ││  │ │ ││ │ ││  0x00007fab3c66c1f8:   mov    0xc(%rax),%r11d
           ││  │ │ ││ │ ││  0x00007fab3c66c1fc:   mov    %r8,%r10
   0.00%   ││  │ │ ││ │ ││  0x00007fab3c66c1ff:   add    $0x30,%r10
   0.45%   ││  │ │ ││ │ ││  0x00007fab3c66c203:   vmovdqu 0x10(%r12,%r11,8),%ymm0
   1.80%   ││  │ │ ││ │ ││  0x00007fab3c66c20a:   vmovq  0xe0(%rsp),%xmm1             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           ││  │ │ ││ │ ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
           ││  │ │ ││ │ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
           ││  │ │ ││ │ ││  0x00007fab3c66c213:   vpmovsxbd %xmm1,%ymm2               ;*invokestatic shuffleToVector {reexecute=0 rethrow=0 return_oop=0}
           ││  │ │ ││ │ ││                                                            ; - jdk.incubator.vector.Int256Vector$Int256Shuffle::toVector@17 (line 823)
           ││  │ │ ││ │ ││                                                            ; - jdk.incubator.vector.Int256Vector$Int256Shuffle::toVector@1 (line 787)
           ││  │ │ ││ │ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@12 (line 73)
   0.06%   ││  │ │ ││ │ ││  0x00007fab3c66c218:   vpcmpgtd %ymm2,%ymm0,%ymm0
   2.51%   ││  │ │ ││ │ ││  0x00007fab3c66c21c:   vpcmpeqd %ymm2,%ymm2,%ymm2
           ││  │ │ ││ │ ││  0x00007fab3c66c220:   vpxor  %ymm2,%ymm0,%ymm0
   0.44%   ││  │ │ ││ │ ││  0x00007fab3c66c224:   vmovdqu 0xa0(%rsp),%ymm2            ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           ││  │ │ ││ │ ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
           ││  │ │ ││ │ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.00%   ││  │ │ ││ │ ││  0x00007fab3c66c22d:   vpand  %ymm0,%ymm2,%ymm4
   0.38%   ││  │ │ ││ │ ││  0x00007fab3c66c231:   vpxor  %xmm2,%xmm2,%xmm2
           ││  │ │ ││ │ ││  0x00007fab3c66c235:   vextracti128 $0x1,%ymm4,%xmm0
   0.03%   ││  │ │ ││ │ ││  0x00007fab3c66c23b:   vpackssdw %xmm0,%xmm4,%xmm0
   0.48%   ││  │ │ ││ │ ││  0x00007fab3c66c23f:   vpacksswb %xmm2,%xmm0,%xmm0
   0.47%   ││  │ │ ││ │ ││  0x00007fab3c66c243:   vpabsb %xmm0,%xmm0
   1.74%   ││  │ │ ││ │ ││  0x00007fab3c66c248:   cmp    0x1c8(%r15),%r10
           ││  │ │ ││ │ ││  0x00007fab3c66c24f:   jae    0x00007fab3c66c6b7
   0.00%   ││  │ │ ││ │ ││  0x00007fab3c66c255:   mov    %r10,0x1b8(%r15)
           ││  │ │ ││ │ ││  0x00007fab3c66c25c:   prefetchw 0xc0(%r10)
           ││  │ │ ││ │ ││  0x00007fab3c66c264:   movq   $0x1,(%r8)
   0.41%   ││  │ │ ││ │ ││  0x00007fab3c66c26b:   prefetchw 0x100(%r10)
           ││  │ │ ││ │ ││  0x00007fab3c66c273:   movl   $0x26a0,0x8(%r8)             ;   {metadata({type array int})}
   0.00%   ││  │ │ ││ │ ││  0x00007fab3c66c27b:   prefetchw 0x140(%r10)
           ││  │ │ ││ │ ││  0x00007fab3c66c283:   movl   $0x8,0xc(%r8)
   0.47%   ││  │ │ ││ │ ││  0x00007fab3c66c28b:   prefetchw 0x180(%r10)
   0.12%   ││  │ │ ││ │ ││  0x00007fab3c66c293:   mov    %r12,0x10(%r8)
   0.01%   ││  │ │ ││ │ ││  0x00007fab3c66c297:   mov    %r12,0x18(%r8)
           ││  │ │ ││ │ ││  0x00007fab3c66c29b:   mov    %r12,0x20(%r8)
   0.46%   ││  │ │ ││ │ ││  0x00007fab3c66c29f:   mov    %r12,0x28(%r8)
   0.01%   ││  │ │ ││ │ ││  0x00007fab3c66c2a3:   mov    %r8,0x88(%rsp)
           ││  │ │ ││ │ ││  0x00007fab3c66c2ab:   mov    0x38(%rsp),%r10
           ││  │ │ ││ │ ││  0x00007fab3c66c2b0:   mov    0xc(%r10),%r10d              ;*goto {reexecute=0 rethrow=0 return_oop=0}
           ││  │ │ ││ │ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@174 (line 79)
   0.47%   ││  │ │ ││ │ ││  0x00007fab3c66c2b4:   mov    0x1b8(%r15),%rax
           ││  │ │ ││ │ ││  0x00007fab3c66c2bb:   vmovdqu 0x10(%r12,%r10,8),%ymm2
           ││  │ │ ││ │ ││  0x00007fab3c66c2c2:   mov    %rax,%r10
           ││  │ │ ││ │ ││  0x00007fab3c66c2c5:   add    $0x10,%r10
   0.45%   ││  │ │ ││ │ ││  0x00007fab3c66c2c9:   mov    0x80(%rsp),%r11
   0.00%   ││  │ │ ││ │ ││  0x00007fab3c66c2d1:   mov    0xc(%r11),%r11d
   0.01%   ││  │ │ ││ │ ││  0x00007fab3c66c2d5:   vmovdqu 0x10(%r12,%r11,8),%ymm3     ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           ││  │ │ ││ │ ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
           ││  │ │ ││ │ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.02%   ││  │ │ ││ │ ││  0x00007fab3c66c2dc:   vpblendvb %ymm4,%ymm3,%ymm2,%ymm2   ;*invokestatic blend {reexecute=0 rethrow=0 return_oop=0}
           ││  │ │ ││ │ ││                                                            ; - jdk.incubator.vector.IntVector::blendTemplate@26 (line 2182)
           ││  │ │ ││ │ ││                                                            ; - jdk.incubator.vector.Int256Vector::blend@11 (line 410)
           ││  │ │ ││ │ ││                                                            ; - jdk.incubator.vector.Int256Vector::blend@3 (line 41)
           ││  │ │ ││ │ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@158 (line 88)
   0.50%   ││  │ │ ││ │ ││  0x00007fab3c66c2e2:   vmovdqu %ymm2,0x10(%r8)
           ││  │ │ ││ │ ││  0x00007fab3c66c2e8:   cmp    0x1c8(%r15),%r10
           ││  │ │ ││ │ ││  0x00007fab3c66c2ef:   jae    0x00007fab3c66c714
   0.02%   ││  │ │ ││ │ ││  0x00007fab3c66c2f5:   mov    %r10,0x1b8(%r15)
   0.40%   ││  │ │ ││ │ ││  0x00007fab3c66c2fc:   prefetchw 0xc0(%r10)
   0.01%   ││  │ │ ││ │ ││  0x00007fab3c66c304:   movq   $0x1,(%rax)
           ││  │ │ ││ │ ││  0x00007fab3c66c30b:   movl   $0x103e3b8,0x8(%rax)         ;   {metadata(&apos;jdk/incubator/vector/Int256Vector&apos;)}
   0.00%   ││  │ │ ││ │ ││  0x00007fab3c66c312:   mov    0x88(%rsp),%r10
   0.45%   ││  │ │ ││ │ ││  0x00007fab3c66c31a:   shr    $0x3,%r10
   0.02%   ││  │ │ ││ │ ││  0x00007fab3c66c31e:   mov    %r10d,0xc(%rax)
           ││  │ │ ││ │ ││  0x00007fab3c66c322:   mov    %rax,0x38(%rsp)
   0.00%   ││  │ │ ││ │ ││  0x00007fab3c66c327:   mov    0x1b8(%r15),%r11
   0.38%   ││  │ │ ││ │ ││  0x00007fab3c66c32e:   mov    %r11,%r10
   0.02%   ││  │ │ ││ │ ││  0x00007fab3c66c331:   add    $0x30,%r10
   0.00%   ││  │ │ ││ │ ││  0x00007fab3c66c335:   data16 data16 nopw 0x0(%rax,%rax,1)
   0.00%   ││  │ │ ││ │ ││  0x00007fab3c66c340:   cmp    0x1c8(%r15),%r10
           ││  │ │ ││ │ ││  0x00007fab3c66c347:   jae    0x00007fab3c66c77f
   0.42%   ││  │ │ ││ │ ││  0x00007fab3c66c34d:   mov    %r10,0x1b8(%r15)
   0.01%   ││  │ │ ││ │ ││  0x00007fab3c66c354:   prefetchw 0xc0(%r10)
   0.02%   ││  │ │ ││ │ ││  0x00007fab3c66c35c:   movq   $0x1,(%r11)
   0.00%   ││  │ │ ││ │ ││  0x00007fab3c66c363:   prefetchw 0x100(%r10)
   0.40%   ││  │ │ ││ │ ││  0x00007fab3c66c36b:   movl   $0x26a0,0x8(%r11)            ;   {metadata({type array int})}
   0.01%   ││  │ │ ││ │ ││  0x00007fab3c66c373:   prefetchw 0x140(%r10)
   0.01%   ││  │ │ ││ │ ││  0x00007fab3c66c37b:   movl   $0x8,0xc(%r11)
   0.02%   ││  │ │ ││ │ ││  0x00007fab3c66c383:   prefetchw 0x180(%r10)
   0.57%   ││  │ │ ││ │ ││  0x00007fab3c66c38b:   mov    %r12,0x10(%r11)
   0.04%   ││  │ │ ││ │ ││  0x00007fab3c66c38f:   mov    %r12,0x18(%r11)
   0.00%   ││  │ │ ││ │ ││  0x00007fab3c66c393:   mov    %r12,0x20(%r11)
   0.01%   ││  │ │ ││ │ ││  0x00007fab3c66c397:   mov    %r12,0x28(%r11)
   0.37%   ││  │ │ ││ │ ││  0x00007fab3c66c39b:   mov    %r11,0x8(%rsp)
   0.02%   ││  │ │ ││ │ ││  0x00007fab3c66c3a0:   mov    0x30(%rsp),%r10
   0.03%   ││  │ │ ││ │ ││  0x00007fab3c66c3a5:   mov    0xc(%r10),%r10d              ;*goto {reexecute=0 rethrow=0 return_oop=0}
           ││  │ │ ││ │ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@174 (line 79)
   0.07%   ││  │ │ ││ │ ││  0x00007fab3c66c3a9:   mov    0x1b8(%r15),%rax
   0.42%   ││  │ │ ││ │ ││  0x00007fab3c66c3b0:   vmovdqu 0x10(%r12,%r10,8),%ymm0
   0.41%   ││  │ │ ││ │ ││  0x00007fab3c66c3b7:   mov    %rax,%r10
   0.01%   ││  │ │ ││ │ ││  0x00007fab3c66c3ba:   add    $0x10,%r10
   0.01%   ││  │ │ ││ │ ││  0x00007fab3c66c3be:   mov    0x20(%rsp),%r11
   0.32%   ││  │ │ ││ │ ││  0x00007fab3c66c3c3:   mov    0xc(%r11),%r11d              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           ││  │ │ ││ │ ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
           ││  │ │ ││ │ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.10%   ││  │ │ ││ │ ││  0x00007fab3c66c3c7:   vpaddd 0x10(%r12,%r11,8),%ymm0,%ymm0;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
           ││  │ │ ││ │ ││                                                            ; - jdk.incubator.vector.IntVector::lanewiseTemplate@154 (line 784)
           ││  │ │ ││ │ ││                                                            ; - jdk.incubator.vector.Int256Vector::lanewise@3 (line 285)
           ││  │ │ ││ │ ││                                                            ; - jdk.incubator.vector.Int256Vector::lanewise@3 (line 41)
           ││  │ │ ││ │ ││                                                            ; - jdk.incubator.vector.IntVector::add@5 (line 1352)
           ││  │ │ ││ │ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@166 (line 89)
   1.40%   ││  │ │ ││ │ ││  0x00007fab3c66c3ce:   mov    0x8(%rsp),%r11
   0.15%   ││  │ │ ││ │ ││  0x00007fab3c66c3d3:   vmovdqu %ymm0,0x10(%r11)
   0.04%   ││  │ │ ││ │ ││  0x00007fab3c66c3d9:   nopl   0x0(%rax)
   0.27%   ││  │ │ ││ │ ││  0x00007fab3c66c3e0:   cmp    0x1c8(%r15),%r10
           ││  │ │ ││ │ ││  0x00007fab3c66c3e7:   jae    0x00007fab3c66c7da           ;*goto {reexecute=0 rethrow=0 return_oop=0}
           ││  │ │ ││ │ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@174 (line 79)
   0.02%   ││  │ │ ││ │ ││  0x00007fab3c66c3ed:   mov    %r10,0x1b8(%r15)
   0.18%   ││  │ │ ││ │ ││  0x00007fab3c66c3f4:   prefetchw 0xc0(%r10)
   0.01%   ││  │ │ ││ │ ││  0x00007fab3c66c3fc:   movq   $0x1,(%rax)
   0.23%   ││  │ │ ││ │ ││  0x00007fab3c66c403:   movl   $0x103e3b8,0x8(%rax)         ;   {metadata(&apos;jdk/incubator/vector/Int256Vector&apos;)}
   0.01%   ││  │ │ ││ │ ││  0x00007fab3c66c40a:   mov    0x28(%rsp),%r10              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           ││  │ │ ││ │ ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
           ││  │ │ ││ │ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.17%   ││  │ │ ││ │ ││  0x00007fab3c66c40f:   mov    0xc(%r10),%r10d              ;*getfield laneCount {reexecute=0 rethrow=0 return_oop=0}
           ││  │ │ ││ │ ││                                                            ; - jdk.incubator.vector.AbstractSpecies::length@1 (line 117)
           ││  │ │ ││ │ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@67 (line 79)
   0.05%   ││  │ │ ││ │ ││  0x00007fab3c66c413:   mov    0x58(%rsp),%ecx              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           ││  │ │ ││ │ ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
           ││  │ │ ││ │ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.24%   ││  │ │ ││ │ ││  0x00007fab3c66c417:   inc    %ecx
   0.01%   ││  │ │ ││ │ ││  0x00007fab3c66c419:   mov    0x8(%rsp),%r11
   0.16%   ││  │ │ ││ │ ││  0x00007fab3c66c41e:   shr    $0x3,%r11
   0.03%   ││  │ │ ││ │ ││  0x00007fab3c66c422:   mov    %r11d,0xc(%rax)
   0.26%   ││  │ │ ││ │ ││  0x00007fab3c66c426:   mov    %rax,0x20(%rsp)              ;*goto {reexecute=0 rethrow=0 return_oop=0}
           ││  │ │ ││ │ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@174 (line 79)
   0.01%   ││  │ │ ││ │ ││  0x00007fab3c66c42b:   mov    0x458(%r15),%r11             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           ││  │ │ ││ │ ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
           ││  │ │ ││ │ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.14%   ││  │ │ ││ │ ││  0x00007fab3c66c432:   vpmovsxbd %xmm1,%ymm3               ; ImmutableOopMap {[24]=Oop [32]=Oop [40]=Oop [48]=Oop [56]=Oop }
           ││  │ │ ││ │ ││                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
           ││  │ │ ││ │ ││                                                            ; - (reexecute) com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@174 (line 79)
   0.02%   ││  │ │ ││ │ ││  0x00007fab3c66c437:   test   %eax,(%r11)                  ;   {poll}
   0.26%   ││  │ │ ││ │ ││  0x00007fab3c66c43a:   nopw   0x0(%rax,%rax,1)
           ││  │ │ ││ │ ││  0x00007fab3c66c440:   cmp    %r10d,%ecx
           │╰  │ │ ││ │ ││  0x00007fab3c66c443:   jge    0x00007fab3c66beb8
   0.14%   │   │ │ ││ │ ││  0x00007fab3c66c449:   mov    0x18(%rsp),%r11
   0.04%   │   │ │ ││ │ ││  0x00007fab3c66c44e:   mov    0x28(%rsp),%r9
   0.23%   │   │ │ ││ │ ││  0x00007fab3c66c453:   mov    0x30(%rsp),%r8
   0.01%   │   │ │ ││ │ ││  0x00007fab3c66c458:   mov    0x40(%rsp),%r10d
   0.12%   │   │ │ ││ │ ││  0x00007fab3c66c45d:   vmovdqu 0x60(%rsp),%ymm2
   0.03%   │   │ │ ││ │ ││  0x00007fab3c66c463:   mov    0x44(%rsp),%ebx
   0.22%   │   │ │ ││ │ ││  0x00007fab3c66c467:   mov    0x48(%rsp),%edx
   0.01%   │   │ │ ││ │ ││  0x00007fab3c66c46b:   mov    0x4c(%rsp),%edi
   0.13%   │   │ │ ││ │ ││  0x00007fab3c66c46f:   mov    0x50(%rsp),%eax
   0.02%   │   │ │ ││ │ ││  0x00007fab3c66c473:   mov    0x54(%rsp),%esi
   0.23%   │   │ │ ││ │ ││  0x00007fab3c66c477:   vmovq  %xmm1,0xe0(%rsp)
   0.01%   ↘   │ │ ││ │ ││  0x00007fab3c66c480:   cmp    $0x4,%ecx
               │ │ ││ │ ││  0x00007fab3c66c483:   je     0x00007fab3c66c65c
   0.15%       │ │ ││ │ ││  0x00007fab3c66c489:   cmp    $0x4,%ecx
             ╭ │ │ ││ │ ││  0x00007fab3c66c48c:   jge    0x00007fab3c66c57e
   0.03%     │ │ │ ││ │ ││  0x00007fab3c66c492:   cmp    $0x1,%ecx
             │╭│ │ ││ │ ││  0x00007fab3c66c495:   jne    0x00007fab3c66c4ce
   0.01%     │││ │ ││ │ ││  0x00007fab3c66c497:   mov    %ecx,0x58(%rsp)
             │││ │ ││ │ ││  0x00007fab3c66c49b:   mov    %esi,0x54(%rsp)
   0.03%     │││ │ ││ │ ││  0x00007fab3c66c49f:   mov    %eax,0x50(%rsp)
   0.00%     │││ │ ││ │ ││  0x00007fab3c66c4a3:   mov    %edi,0x4c(%rsp)
   0.01%     │││ │ ││ │ ││  0x00007fab3c66c4a7:   mov    %edx,0x48(%rsp)
             │││ │ ││ │ ││  0x00007fab3c66c4ab:   mov    %ebx,0x44(%rsp)
   0.03%     │││ │ ││ │ ││  0x00007fab3c66c4af:   mov    %r10d,0x40(%rsp)
   0.00%     │││ │ ││ │ ││  0x00007fab3c66c4b4:   mov    %r8,0x30(%rsp)
   0.03%     │││ │ ││ │ ││  0x00007fab3c66c4b9:   mov    %r9,0x28(%rsp)
             │││ │ ││ │ ││  0x00007fab3c66c4be:   mov    %r11,0x18(%rsp)              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
             │││ │ ││ │ ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
             │││ │ ││ │ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.04%     │││ │ ││ │ ││  0x00007fab3c66c4c3:   vpextrd $0x1,%xmm2,%r10d            ;*invokestatic extract {reexecute=0 rethrow=0 return_oop=0}
             │││ │ ││ │ ││                                                            ; - jdk.incubator.vector.Int256Vector::laneHelper@16 (line 527)
             │││ │ ││ │ ││                                                            ; - jdk.incubator.vector.Int256Vector::lane@56 (line 515)
             │││ │ ││ │ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@79 (line 80)
   0.02%     ││╰ │ ││ │ ││  0x00007fab3c66c4c9:   jmp    0x00007fab3c66c00f
   0.12%     │↘  │ ││ │ ││  0x00007fab3c66c4ce:   cmp    $0x1,%ecx
             │  ╭│ ││ │ ││  0x00007fab3c66c4d1:   jge    0x00007fab3c66c511
             │  ││ ││ │ ││  0x00007fab3c66c4d3:   test   %ecx,%ecx
             │  ││ ││ │ ││  0x00007fab3c66c4d5:   jne    0x00007fab3c66c964
   0.02%     │  ││ ││ │ ││  0x00007fab3c66c4db:   mov    %ecx,0x58(%rsp)
   0.02%     │  ││ ││ │ ││  0x00007fab3c66c4df:   mov    %esi,0x54(%rsp)
   0.04%     │  ││ ││ │ ││  0x00007fab3c66c4e3:   mov    %eax,0x50(%rsp)
             │  ││ ││ │ ││  0x00007fab3c66c4e7:   mov    %edi,0x4c(%rsp)
   0.01%     │  ││ ││ │ ││  0x00007fab3c66c4eb:   mov    %edx,0x48(%rsp)
   0.02%     │  ││ ││ │ ││  0x00007fab3c66c4ef:   mov    %ebx,0x44(%rsp)
   0.03%     │  ││ ││ │ ││  0x00007fab3c66c4f3:   mov    %r10d,0x40(%rsp)
             │  ││ ││ │ ││  0x00007fab3c66c4f8:   mov    %r8,0x30(%rsp)
   0.02%     │  ││ ││ │ ││  0x00007fab3c66c4fd:   mov    %r9,0x28(%rsp)
   0.01%     │  ││ ││ │ ││  0x00007fab3c66c502:   mov    %r11,0x18(%rsp)              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
             │  ││ ││ │ ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
             │  ││ ││ │ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.02%     │  ││ ││ │ ││  0x00007fab3c66c507:   vmovd  %xmm2,%r10d                  ;*invokestatic extract {reexecute=0 rethrow=0 return_oop=0}
             │  ││ ││ │ ││                                                            ; - jdk.incubator.vector.Int256Vector::laneHelper@16 (line 527)
             │  ││ ││ │ ││                                                            ; - jdk.incubator.vector.Int256Vector::lane@50 (line 514)
             │  ││ ││ │ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@79 (line 80)
             │  │╰ ││ │ ││  0x00007fab3c66c50c:   jmp    0x00007fab3c66c00f
   0.11%     │  ↘  ││ │ ││  0x00007fab3c66c511:   cmp    $0x2,%ecx
             │    ╭││ │ ││  0x00007fab3c66c514:   je     0x00007fab3c66c54a
   0.00%     │    │││ │ ││  0x00007fab3c66c516:   mov    %ecx,0x58(%rsp)
   0.00%     │    │││ │ ││  0x00007fab3c66c51a:   mov    %esi,0x54(%rsp)
             │    │││ │ ││  0x00007fab3c66c51e:   mov    %eax,0x50(%rsp)
   0.05%     │    │││ │ ││  0x00007fab3c66c522:   mov    %edi,0x4c(%rsp)
             │    │││ │ ││  0x00007fab3c66c526:   mov    %edx,0x48(%rsp)
             │    │││ │ ││  0x00007fab3c66c52a:   mov    %ebx,0x44(%rsp)
             │    │││ │ ││  0x00007fab3c66c52e:   mov    %r10d,0x40(%rsp)
   0.04%     │    │││ │ ││  0x00007fab3c66c533:   mov    %r8,0x30(%rsp)               ;   {no_reloc}
             │    │││ │ ││  0x00007fab3c66c538:   mov    %r9,0x28(%rsp)
   0.00%     │    │││ │ ││  0x00007fab3c66c53d:   mov    %r11,0x18(%rsp)
             │    │││ │ ││  0x00007fab3c66c542:   mov    %edi,%r10d
   0.05%     │    │╰│ │ ││  0x00007fab3c66c545:   jmp    0x00007fab3c66c00f
   0.05%     │    ↘ │ │ ││  0x00007fab3c66c54a:   mov    %ecx,0x58(%rsp)
             │      │ │ ││  0x00007fab3c66c54e:   mov    %esi,0x54(%rsp)
             │      │ │ ││  0x00007fab3c66c552:   mov    %eax,0x50(%rsp)
             │      │ │ ││  0x00007fab3c66c556:   mov    %edi,0x4c(%rsp)
   0.06%     │      │ │ ││  0x00007fab3c66c55a:   mov    %edx,0x48(%rsp)
             │      │ │ ││  0x00007fab3c66c55e:   mov    %ebx,0x44(%rsp)
             │      │ │ ││  0x00007fab3c66c562:   mov    %r10d,0x40(%rsp)
             │      │ │ ││  0x00007fab3c66c567:   mov    %r8,0x30(%rsp)
   0.04%     │      │ │ ││  0x00007fab3c66c56c:   mov    %r9,0x28(%rsp)
   0.00%     │      │ │ ││  0x00007fab3c66c571:   mov    %r11,0x18(%rsp)
             │      │ │ ││  0x00007fab3c66c576:   mov    %edx,%r10d
             │      ╰ │ ││  0x00007fab3c66c579:   jmp    0x00007fab3c66c00f
   0.01%     ↘        │ ││  0x00007fab3c66c57e:   xchg   %ax,%ax
   0.11%              │ ││  0x00007fab3c66c580:   cmp    $0x6,%ecx
                     ╭│ ││  0x00007fab3c66c583:   jne    0x00007fab3c66c5b9
                     ││ ││  0x00007fab3c66c585:   mov    %ecx,0x58(%rsp)
   0.01%             ││ ││  0x00007fab3c66c589:   mov    %esi,0x54(%rsp)
   0.01%             ││ ││  0x00007fab3c66c58d:   mov    %eax,0x50(%rsp)
   0.03%             ││ ││  0x00007fab3c66c591:   mov    %edi,0x4c(%rsp)
                     ││ ││  0x00007fab3c66c595:   mov    %edx,0x48(%rsp)
   0.02%             ││ ││  0x00007fab3c66c599:   mov    %ebx,0x44(%rsp)
   0.01%             ││ ││  0x00007fab3c66c59d:   mov    %r10d,0x40(%rsp)
   0.04%             ││ ││  0x00007fab3c66c5a2:   mov    %r8,0x30(%rsp)
   0.00%             ││ ││  0x00007fab3c66c5a7:   mov    %r9,0x28(%rsp)
   0.01%             ││ ││  0x00007fab3c66c5ac:   mov    %r11,0x18(%rsp)
   0.01%             ││ ││  0x00007fab3c66c5b1:   mov    %esi,%r10d
   0.03%             │╰ ││  0x00007fab3c66c5b4:   jmp    0x00007fab3c66c00f
   0.05%             ↘  ││  0x00007fab3c66c5b9:   cmp    $0x6,%ecx
                       ╭││  0x00007fab3c66c5bc:   jge    0x00007fab3c66c5fb
                       │││  0x00007fab3c66c5be:   mov    %ecx,0x58(%rsp)
   0.00%               │││  0x00007fab3c66c5c2:   mov    %esi,0x54(%rsp)
   0.03%               │││  0x00007fab3c66c5c6:   mov    %eax,0x50(%rsp)
   0.02%               │││  0x00007fab3c66c5ca:   mov    %edi,0x4c(%rsp)
                       │││  0x00007fab3c66c5ce:   mov    %edx,0x48(%rsp)
                       │││  0x00007fab3c66c5d2:   mov    %ebx,0x44(%rsp)
   0.04%               │││  0x00007fab3c66c5d6:   mov    %r10d,0x40(%rsp)
   0.02%               │││  0x00007fab3c66c5db:   mov    %r8,0x30(%rsp)
                       │││  0x00007fab3c66c5e0:   mov    %r9,0x28(%rsp)
                       │││  0x00007fab3c66c5e5:   mov    %r11,0x18(%rsp)              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                       │││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                       │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.03%               │││  0x00007fab3c66c5ea:   vextractf128 $0x1,%ymm2,%xmm0
   0.02%               │││  0x00007fab3c66c5f0:   vpextrd $0x1,%xmm0,%r10d            ;*invokestatic extract {reexecute=0 rethrow=0 return_oop=0}
                       │││                                                            ; - jdk.incubator.vector.Int256Vector::laneHelper@16 (line 527)
                       │││                                                            ; - jdk.incubator.vector.Int256Vector::lane@80 (line 519)
                       │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@79 (line 80)
   0.00%               │╰│  0x00007fab3c66c5f6:   jmp    0x00007fab3c66c00f
   0.05%               ↘ │  0x00007fab3c66c5fb:   nopl   0x0(%rax,%rax,1)
   0.00%                 │  0x00007fab3c66c600:   cmp    $0x7,%ecx
                         ╰  0x00007fab3c66c603:   je     0x00007fab3c66bfe0
                            0x00007fab3c66c609:   mov    $0xffffff45,%esi
                            0x00007fab3c66c60e:   mov    %r11,%rbp
                            0x00007fab3c66c611:   mov    %r9,0x8(%rsp)
                            0x00007fab3c66c616:   mov    0x20(%rsp),%r11
                            0x00007fab3c66c61b:   mov    %r11,0x18(%rsp)
                            0x00007fab3c66c620:   mov    %r8,0x20(%rsp)
                            0x00007fab3c66c625:   mov    %r10d,0x28(%rsp)
                            0x00007fab3c66c62a:   mov    %ecx,0x30(%rsp)
                            0x00007fab3c66c62e:   mov    %ecx,0x34(%rsp)
....................................................................................................
  46.85%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, level 4, jdk.internal.vm.vector.VectorSupport::fromBitsCoerced, version 2, compile id 881 

                    0x00007fab3c6574c1:   jle    0x00007fab3c6574d3
                    0x00007fab3c6574c3:   dec    %rcx
          ↗         0x00007fab3c6574c6:   vmovq  %xmm0,(%rdi)
          │         0x00007fab3c6574ca:   add    $0x8,%rdi
          │         0x00007fab3c6574ce:   dec    %rcx
          ╰         0x00007fab3c6574d1:   jge    0x00007fab3c6574c6           ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@4 (line 3925)
                                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
                                                                              ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007faac40c6c60::fromBits@5
                                                                              ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
   1.26%            0x00007fab3c6574d3:   mov    %r8,(%rsp)                   ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@11 (line 3926)
                                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
                                                                              ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007faac40c6c60::fromBits@5
                                                                              ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
                    0x00007fab3c6574d7:   test   %ebp,%ebp
           ╭        0x00007fab3c6574d9:   jle    0x00007fab3c6575bd           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
           │                                                                  ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@12 (line 3926)
           │                                                                  ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
           │                                                                  ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007faac40c6c60::fromBits@5
           │                                                                  ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
   0.04%   │        0x00007fab3c6574df:   nop
           │        0x00007fab3c6574e0:   test   %ebp,%ebp
           │        0x00007fab3c6574e2:   je     0x00007fab3c657676
   1.27%   │        0x00007fab3c6574e8:   mov    %ebp,%r11d
           │        0x00007fab3c6574eb:   dec    %r11d
   0.06%   │        0x00007fab3c6574ee:   cmp    %ebp,%r11d
           │        0x00007fab3c6574f1:   jae    0x00007fab3c657676
           │        0x00007fab3c6574f7:   mov    %r8d,%r10d
   1.18%   │        0x00007fab3c6574fa:   mov    0x8(%rsp),%rbx
   0.01%   │        0x00007fab3c6574ff:   mov    %ebx,%r8d                    ;*l2i {reexecute=0 rethrow=0 return_oop=0}
           │                                                                  ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@22 (line 3927)
           │                                                                  ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
           │                                                                  ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007faac40c6c60::fromBits@5
           │                                                                  ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
   0.04%   │        0x00007fab3c657502:   shr    $0x2,%r10d
           │        0x00007fab3c657506:   and    $0x3,%r10d
   1.22%   │        0x00007fab3c65750a:   xor    %ecx,%ecx
   0.00%   │        0x00007fab3c65750c:   mov    $0xffffffff,%r11d
   0.05%   │        0x00007fab3c657512:   sub    %r10d,%r11d
           │        0x00007fab3c657515:   and    $0x3,%r11d
   1.19%   │        0x00007fab3c657519:   inc    %r11d
           │        0x00007fab3c65751c:   cmp    %ebp,%r11d
   0.05%   │        0x00007fab3c65751f:   cmovg  %ebp,%r11d
           │        0x00007fab3c657523:   xor    %r9d,%r9d                    ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
           │                                                                  ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@15 (line 3927)
           │                                                                  ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
           │                                                                  ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007faac40c6c60::fromBits@5
           │                                                                  ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
   1.24%   │ ↗      0x00007fab3c657526:   mov    (%rsp),%r10
   1.33%   │ │      0x00007fab3c65752a:   mov    %r8d,0x10(%r10,%r9,4)        ;*iastore {reexecute=0 rethrow=0 return_oop=0}
           │ │                                                                ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@33 (line 3928)
           │ │                                                                ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
           │ │                                                                ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007faac40c6c60::fromBits@5
           │ │                                                                ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
   1.37%   │ │      0x00007fab3c65752f:   mov    %r9d,%r10d
   1.31%   │ │      0x00007fab3c657532:   inc    %r10d                        ;*iinc {reexecute=0 rethrow=0 return_oop=0}
           │ │                                                                ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@34 (line 3926)
           │ │                                                                ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
           │ │                                                                ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007faac40c6c60::fromBits@5
           │ │                                                                ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
   1.37%   │ │      0x00007fab3c657535:   cmp    %r11d,%r10d
           │╭│      0x00007fab3c657538:   jge    0x00007fab3c65753f           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
           │││                                                                ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@12 (line 3926)
           │││                                                                ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
           │││                                                                ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007faac40c6c60::fromBits@5
           │││                                                                ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
   1.21%   │││      0x00007fab3c65753a:   mov    %r10d,%r9d
   1.13%   ││╰      0x00007fab3c65753d:   jmp    0x00007fab3c657526
   0.06%   │↘       0x00007fab3c65753f:   lea    -0x3(%rbp),%edi
           │        0x00007fab3c657542:   cmp    %edi,%r10d
           │        0x00007fab3c657545:   jge    0x00007fab3c657688           ;   {no_reloc}
   1.29%   │        0x00007fab3c65754b:   vmovd  %r8d,%xmm0
           │        0x00007fab3c657550:   vpbroadcastd %xmm0,%xmm0
   0.06%   │        0x00007fab3c657555:   inc    %r9d
   0.00%   │        0x00007fab3c657558:   mov    $0xfa0,%r11d
   1.26%   │   ↗    0x00007fab3c65755e:   mov    %ebp,%r10d
   0.01%   │   │    0x00007fab3c657561:   sub    %r9d,%r10d
   0.04%   │   │    0x00007fab3c657564:   add    $0xfffffffd,%r10d
   0.00%   │   │    0x00007fab3c657568:   cmp    %r9d,%edi
   1.22%   │   │    0x00007fab3c65756b:   cmovl  %ecx,%r10d
           │   │    0x00007fab3c65756f:   cmp    $0xfa0,%r10d
   0.06%   │   │    0x00007fab3c657576:   cmova  %r11d,%r10d
   1.23%   │   │    0x00007fab3c65757a:   add    %r9d,%r10d
           │   │    0x00007fab3c65757d:   data16 xchg %ax,%ax                 ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
           │   │                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@15 (line 3927)
           │   │                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
           │   │                                                              ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007faac40c6c60::fromBits@5
           │   │                                                              ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
   0.04%   │  ↗│    0x00007fab3c657580:   mov    (%rsp),%rdx
           │  ││    0x00007fab3c657584:   vmovdqu %xmm0,0x10(%rdx,%r9,4)      ;*iastore {reexecute=0 rethrow=0 return_oop=0}
           │  ││                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@33 (line 3928)
           │  ││                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
           │  ││                                                              ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007faac40c6c60::fromBits@5
           │  ││                                                              ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
   1.26%   │  ││    0x00007fab3c65758b:   add    $0x4,%r9d                    ;*iinc {reexecute=0 rethrow=0 return_oop=0}
           │  ││                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@34 (line 3926)
           │  ││                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
           │  ││                                                              ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007faac40c6c60::fromBits@5
           │  ││                                                              ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
           │  ││    0x00007fab3c65758f:   cmp    %r10d,%r9d
           │  ╰│    0x00007fab3c657592:   jl     0x00007fab3c657580           ;*goto {reexecute=0 rethrow=0 return_oop=0}
           │   │                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@37 (line 3926)
           │   │                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
           │   │                                                              ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007faac40c6c60::fromBits@5
           │   │                                                              ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
   0.06%   │   │    0x00007fab3c657594:   mov    0x458(%r15),%r10             ; ImmutableOopMap {[0]=Oop [16]=Oop }
           │   │                                                              ;*goto {reexecute=1 rethrow=0 return_oop=0}
           │   │                                                              ; - (reexecute) jdk.incubator.vector.IntVector$IntSpecies::rvOp@37 (line 3926)
           │   │                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
           │   │                                                              ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007faac40c6c60::fromBits@5
           │   │                                                              ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
   0.02%   │   │    0x00007fab3c65759b:   test   %eax,(%r10)                  ;*goto {reexecute=0 rethrow=0 return_oop=0}
           │   │                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@37 (line 3926)
           │   │                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
           │   │                                                              ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007faac40c6c60::fromBits@5
           │   │                                                              ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
           │   │                                                              ;   {poll}
   1.19%   │   │    0x00007fab3c65759e:   xchg   %ax,%ax
   0.00%   │   │    0x00007fab3c6575a0:   cmp    %edi,%r9d
           │   ╰    0x00007fab3c6575a3:   jl     0x00007fab3c65755e
   0.04%   │        0x00007fab3c6575a5:   cmp    %ebp,%r9d
           │    ╭   0x00007fab3c6575a8:   jge    0x00007fab3c6575bd
           │    │   0x00007fab3c6575aa:   xchg   %ax,%ax                      ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
           │    │                                                             ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@15 (line 3927)
           │    │                                                             ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
           │    │                                                             ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007faac40c6c60::fromBits@5
           │    │                                                             ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
           │    │↗  0x00007fab3c6575ac:   mov    (%rsp),%r10
           │    ││  0x00007fab3c6575b0:   mov    %r8d,0x10(%r10,%r9,4)        ;*iastore {reexecute=0 rethrow=0 return_oop=0}
           │    ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@33 (line 3928)
           │    ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
           │    ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007faac40c6c60::fromBits@5
           │    ││                                                            ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
           │    ││  0x00007fab3c6575b5:   inc    %r9d                         ;*iinc {reexecute=0 rethrow=0 return_oop=0}
           │    ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@34 (line 3926)
           │    ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
           │    ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007faac40c6c60::fromBits@5
           │    ││                                                            ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
           │    ││  0x00007fab3c6575b8:   cmp    %ebp,%r9d
           │    │╰  0x00007fab3c6575bb:   jl     0x00007fab3c6575ac           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
           │    │                                                             ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@12 (line 3926)
           │    │                                                             ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
           │    │                                                             ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007faac40c6c60::fromBits@5
           │    │                                                             ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
           ↘    ↘   0x00007fab3c6575bd:   mov    0x10(%rsp),%r10
   1.22%            0x00007fab3c6575c2:   mov    0x44(%r10),%ebp              ;*getfield dummyVector {reexecute=0 rethrow=0 return_oop=0}
                                                                              ; - jdk.incubator.vector.AbstractSpecies::dummyVector@1 (line 308)
                                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::dummyVector@1 (line 3918)
                                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@41 (line 3930)
                                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
                                                                              ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007faac40c6c60::fromBits@5
                                                                              ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
   0.01%            0x00007fab3c6575c6:   mov    0x8(%r12,%rbp,8),%r11d       ; implicit exception: dispatches to 0x00007fab3c65773c
   0.10%            0x00007fab3c6575cb:   cmp    $0x103e3b8,%r11d             ;   {metadata(&apos;jdk/incubator/vector/Int256Vector&apos;)}
                    0x00007fab3c6575d2:   jne    0x00007fab3c6576f4
   0.02%            0x00007fab3c6575d8:   mov    0x1b8(%r15),%rax
   1.28%            0x00007fab3c6575df:   mov    %rax,%r10
                    0x00007fab3c6575e2:   add    $0x10,%r10
   0.03%            0x00007fab3c6575e6:   cmp    0x1c8(%r15),%r10
                    0x00007fab3c6575ed:   jae    0x00007fab3c657654           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@37 (line 3926)
                                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
                                                                              ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007faac40c6c60::fromBits@5
                                                                              ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
   0.03%            0x00007fab3c6575ef:   mov    %r10,0x1b8(%r15)
   1.29%            0x00007fab3c6575f6:   prefetchw 0xc0(%r10)
   0.01%            0x00007fab3c6575fe:   movq   $0x1,(%rax)
   0.06%            0x00007fab3c657605:   movl   $0x103e3b8,0x8(%rax)         ;   {metadata(&apos;jdk/incubator/vector/Int256Vector&apos;)}
   0.04%            0x00007fab3c65760c:   mov    %r12d,0xc(%rax)              ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                                              ; - jdk.incubator.vector.Int256Vector::vectorFactory@0 (line 171)
                                                                              ; - jdk.incubator.vector.Int256Vector::vectorFactory@2 (line 41)
                                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@45 (line 3930)
                                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
                                                                              ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007faac40c6c60::fromBits@5
                                                                              ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
   1.16%            0x00007fab3c657610:   mov    (%rsp),%r10
   0.01%            0x00007fab3c657614:   mov    %r10,%r11
   0.05%            0x00007fab3c657617:   shr    $0x3,%r11
   0.03%            0x00007fab3c65761b:   mov    %r11d,0xc(%rax)              ;*invokeinterface fromBits {reexecute=0 rethrow=0 return_oop=0}
                                                                              ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
   1.20%            0x00007fab3c65761f:   add    $0x30,%rsp
                    0x00007fab3c657623:   pop    %rbp
   0.09%            0x00007fab3c657624:   cmp    0x450(%r15),%rsp             ;   {poll_return}
                    0x00007fab3c65762b:   ja     0x00007fab3c65776a
   1.16%            0x00007fab3c657631:   ret    
                    0x00007fab3c657632:   movabs $0x7faac30026a0,%rsi         ;   {metadata({type array int})}
                    0x00007fab3c65763c:   mov    %ebp,%edx
                    0x00007fab3c65763e:   nop
                    0x00007fab3c65763f:   call   0x00007fab3c190680           ; ImmutableOopMap {[16]=Oop }
                                                                              ;*newarray {reexecute=0 rethrow=0 return_oop=1}
                                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@4 (line 3925)
                                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
                                                                              ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007faac40c6c60::fromBits@5
                                                                              ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
                                                                              ;   {runtime_call _new_array_Java}
....................................................................................................
  30.97%  <total for region 2>

....[Hottest Region 3]..............................................................................
c2, level 4, jdk.internal.vm.vector.VectorSupport::fromBitsCoerced, version 2, compile id 881 

                0x00007fab3c657398:   jne    0x00007fab3c657690           ;*invokeinterface fromBits {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
                0x00007fab3c65739e:   xchg   %ax,%ax
                0x00007fab3c6573a0:   test   %r8,%r8
                0x00007fab3c6573a3:   je     0x00007fab3c6576b0           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - jdk.incubator.vector.Int256Vector$Int256Mask::lambda$maskAll$15@3 (line 778)
                                                                          ; - jdk.incubator.vector.Int256Vector$Int256Mask$$Lambda/0x00007faac40cb960::fromBits@2
                                                                          ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
                0x00007fab3c6573a9:   movabs $0x7fee025a8,%rax            ;   {oop(a &apos;jdk/incubator/vector/Int256Vector$Int256Mask&apos;{0x00000007fee025a8})}
                0x00007fab3c6573b3:   jmp    0x00007fab3c65761f
   0.14%        0x00007fab3c6573b8:   nopl   0x0(%rax,%rax,1)
   0.47%        0x00007fab3c6573c0:   mov    0x8(%rdi),%r11d              ; implicit exception: dispatches to 0x00007fab3c657724
   0.51%        0x00007fab3c6573c4:   cmp    $0x103c240,%r11d             ;   {metadata(&apos;jdk/incubator/vector/IntVector$IntSpecies&apos;)}
                0x00007fab3c6573cb:   jne    0x00007fab3c6576d8           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007faac40c6c60::fromBits@2
                                                                          ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
   0.08%        0x00007fab3c6573d1:   mov    %rdi,0x10(%rsp)
   0.15%        0x00007fab3c6573d6:   mov    0xc(%rdi),%ebp               ;*getfield laneCount {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - jdk.incubator.vector.AbstractSpecies::laneCount@1 (line 126)
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@1 (line 3925)
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007faac40c6c60::fromBits@5
                                                                          ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
   0.47%        0x00007fab3c6573d9:   nopl   0x0(%rax)
   0.50%        0x00007fab3c6573e0:   cmp    $0x40000,%ebp
                0x00007fab3c6573e6:   ja     0x00007fab3c65766e
   0.08%        0x00007fab3c6573ec:   movslq %ebp,%r10                    ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@4 (line 3925)
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007faac40c6c60::fromBits@5
                                                                          ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
   0.17%        0x00007fab3c6573ef:   cmp    $0x40000,%ebp
                0x00007fab3c6573f5:   ja     0x00007fab3c657632           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@37 (line 3926)
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007faac40c6c60::fromBits@5
                                                                          ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
   0.50%        0x00007fab3c6573fb:   mov    0x1b8(%r15),%r8
   0.55%        0x00007fab3c657402:   lea    0x17(,%r10,4),%rcx           ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@4 (line 3925)
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007faac40c6c60::fromBits@5
                                                                          ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
   0.09%        0x00007fab3c65740a:   mov    %rcx,%r10
   0.18%        0x00007fab3c65740d:   and    $0xfffffffffffffff8,%r10
   0.49%        0x00007fab3c657411:   mov    %r8,%r11
   0.54%        0x00007fab3c657414:   add    %r10,%r11
   0.10%        0x00007fab3c657417:   nopw   0x0(%rax,%rax,1)
   0.15%        0x00007fab3c657420:   cmp    0x1c8(%r15),%r11
                0x00007fab3c657427:   jae    0x00007fab3c657632           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@37 (line 3926)
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007faac40c6c60::fromBits@5
                                                                          ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
   0.48%        0x00007fab3c65742d:   mov    %r11,0x1b8(%r15)
   0.58%        0x00007fab3c657434:   mov    %r8,%rdi
   0.12%        0x00007fab3c657437:   add    $0x10,%rdi
   0.17%        0x00007fab3c65743b:   movq   $0x1,(%r8)
   0.45%        0x00007fab3c657442:   prefetchw 0xc0(%r11)
   0.60%        0x00007fab3c65744a:   movl   $0x26a0,0x8(%r8)             ;   {metadata({type array int})}
   0.10%        0x00007fab3c657452:   mov    %ebp,0xc(%r8)
   0.14%        0x00007fab3c657456:   prefetchw 0x100(%r11)
   0.52%        0x00007fab3c65745e:   prefetchw 0x140(%r11)
   0.60%        0x00007fab3c657466:   prefetchw 0x180(%r11)
   0.56%        0x00007fab3c65746e:   shr    $0x3,%rcx
   0.14%        0x00007fab3c657472:   add    $0xfffffffffffffffe,%rcx
   0.47%        0x00007fab3c657476:   xor    %rax,%rax
   0.49%        0x00007fab3c657479:   cmp    $0x8,%rcx
          ╭     0x00007fab3c65747d:   jg     0x00007fab3c65748f
   0.11%  │     0x00007fab3c65747f:   dec    %rcx
   0.13%  │     0x00007fab3c657482:   js     0x00007fab3c6574d3
   3.00%  │↗    0x00007fab3c657484:   mov    %rax,(%rdi,%rcx,8)
   0.85%  ││    0x00007fab3c657488:   dec    %rcx
          │╰    0x00007fab3c65748b:   jge    0x00007fab3c657484
          │     0x00007fab3c65748d:   jmp    0x00007fab3c6574d3
          ↘     0x00007fab3c65748f:   vpxor  %ymm0,%ymm0,%ymm0
            ╭   0x00007fab3c657493:   jmp    0x00007fab3c6574a5
            │↗  0x00007fab3c657498:   vmovdqu %ymm0,(%rdi)
            ││  0x00007fab3c65749c:   vmovdqu %ymm0,0x20(%rdi)
            ││  0x00007fab3c6574a1:   add    $0x40,%rdi
            ↘│  0x00007fab3c6574a5:   sub    $0x8,%rcx
             ╰  0x00007fab3c6574a9:   jge    0x00007fab3c657498
                0x00007fab3c6574ab:   add    $0x4,%rcx
....................................................................................................
  14.69%  <total for region 3>

....[Hottest Regions]...............................................................................
  46.85%         c2, level 4  com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector, version 2, compile id 937 
  30.97%         c2, level 4  jdk.internal.vm.vector.VectorSupport::fromBitsCoerced, version 2, compile id 881 
  14.69%         c2, level 4  jdk.internal.vm.vector.VectorSupport::fromBitsCoerced, version 2, compile id 881 
   3.91%         c2, level 4  jdk.internal.vm.vector.VectorSupport::fromBitsCoerced, version 2, compile id 881 
   0.45%              kernel  [unknown] 
   0.17%         c2, level 4  com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector, version 2, compile id 937 
   0.09%              kernel  [unknown] 
   0.09%              kernel  [unknown] 
   0.08%           libjvm.so  G1MergeHeapRootsTask::G1MergeCardSetClosure::do_heap_region 
   0.07%              kernel  [unknown] 
   0.06%           libjvm.so  G1CardSet::reset_table_scanner 
   0.05%              kernel  [unknown] 
   0.05%              kernel  [unknown] 
   0.04%                      <unknown> 
   0.03%              kernel  [unknown] 
   0.03%           libjvm.so  HeapRegionManager::par_iterate 
   0.03%           libjvm.so  SharedRuntime::on_slowpath_allocation_exit 
   0.03%          ld-2.31.so  __tls_get_addr 
   0.03%              kernel  [unknown] 
   0.03%           libjvm.so  ElfSymbolTable::lookup 
   2.25%  <...other 534 warm regions...>
....................................................................................................
 100.00%  <totals>

....[Hottest Methods (after inlining)]..............................................................
  49.57%         c2, level 4  jdk.internal.vm.vector.VectorSupport::fromBitsCoerced, version 2, compile id 881 
  47.07%         c2, level 4  com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector, version 2, compile id 937 
   1.86%              kernel  [unknown] 
   0.12%                      <unknown> 
   0.09%           libjvm.so  G1MergeHeapRootsTask::G1MergeCardSetClosure::do_heap_region 
   0.06%           libjvm.so  G1CardSet::reset_table_scanner 
   0.04%        libc-2.31.so  __memset_avx2_unaligned_erms 
   0.03%              [vdso]  __vdso_clock_gettime 
   0.03%           libjvm.so  G1CollectedHeap::allocate_new_tlab 
   0.03%           libjvm.so  HeapRegionManager::par_iterate 
   0.03%          ld-2.31.so  __tls_get_addr 
   0.03%           libjvm.so  SharedRuntime::on_slowpath_allocation_exit 
   0.03%           libjvm.so  CardTableBarrierSet::on_slowpath_allocation_exit 
   0.03%           libjvm.so  ElfSymbolTable::lookup 
   0.03%        libc-2.31.so  __memset_avx2_erms 
   0.03%           libjvm.so  ThreadLocalAllocBuffer::fill 
   0.03%           libjvm.so  G1CollectedHeap::fill_with_dummy_object 
   0.03%           libjvm.so  OptoRuntime::new_array_C 
   0.02%           libjvm.so  G1Allocator::unsafe_max_tlab_alloc 
   0.02%         c2, level 4  com.ionutbalosin.jvm.performance.benchmarks.api.vector.jmh_generated.SortVectorApiBenchmark_sortVector_jmhTest::sortVector_avgt_jmhStub, version 4, compile id 969 
   0.81%  <...other 169 warm methods...>
....................................................................................................
 100.00%  <totals>

....[Distribution by Source]........................................................................
  96.67%         c2, level 4
   1.86%              kernel
   1.04%           libjvm.so
   0.17%        libc-2.31.so
   0.12%                    
   0.04%  libpthread-2.31.so
   0.03%              [vdso]
   0.03%          ld-2.31.so
   0.02%      hsdis-amd64.so
   0.01%         interpreter
   0.00%    perf-1956411.map
....................................................................................................
 100.00%  <totals>



# JMH version: 1.37
# VM version: JDK 21, OpenJDK 64-Bit Server VM, 21+35-2513
# VM invoker: /home/gogu/bench_jdks/jdk-21/bin/java
# VM options: -Xms4g -Xmx4g -XX:+AlwaysPreTouch --add-modules=jdk.incubator.vector
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark.sortVector
# Parameters: (arraySize = 1024, vectorSize = 512)

# Run progress: 58.33% complete, ETA 00:09:11
# Fork: 1 of 1
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 790.754 us/op
# Warmup Iteration   2: 526.258 us/op
# Warmup Iteration   3: 525.708 us/op
# Warmup Iteration   4: 524.950 us/op
# Warmup Iteration   5: 524.747 us/op
Iteration   1: 524.590 us/op
Iteration   2: 524.468 us/op
Iteration   3: 524.449 us/op
Iteration   4: 524.173 us/op
Iteration   5: 524.343 us/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark.sortVector":
  524.405 ±(99.9%) 0.602 us/op [Average]
  (min, avg, max) = (524.173, 524.405, 524.590), stdev = 0.156
  CI (99.9%): [523.802, 525.007] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark.sortVector:asm":
PrintAssembly processed: 196204 total address lines.
Perf output processed (skipped 56.768 seconds):
 Column 1: cycles (51107 events)

Hottest code regions (>10.00% "cycles" events):
 Event counts are percents of total event count.

....[Hottest Region 1]..............................................................................
c2, level 4, jdk.internal.vm.vector.VectorSupport::compare, version 2, compile id 872 

                                  0x00007fa124655412:   mov    0x48(%rcx),%r9
                                  0x00007fa124655416:   cmp    %r8,%r9
                                  0x00007fa124655419:   jne    0x00007fa1246559f0           ;*invokevirtual loadFence {reexecute=0 rethrow=0 return_oop=0}
                                                                                            ; - jdk.internal.vm.vector.VectorSupport::maybeRebox@3 (line 702)
                                                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
                                                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
                                                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
                                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa0ac0caf28::apply@14
                                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.02%                          0x00007fa12465541f:   mov    0xc(%r10),%ecx               ;*getfield payload {reexecute=0 rethrow=0 return_oop=0}
                                                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@4 (line 164)
                                                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
                                                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
                                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa0ac0caf28::apply@14
                                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.00%                          0x00007fa124655423:   mov    0x8(%r12,%rcx,8),%r8d        ; implicit exception: dispatches to 0x00007fa124655afc
   0.38%                          0x00007fa124655428:   cmp    $0x26a0,%r8d                 ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
                                                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
                                                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
                                                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
                                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa0ac0caf28::apply@14
                                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
                                                                                            ;   {metadata({type array int})}
                                  0x00007fa12465542f:   jne    0x00007fa124655a50           ;*invokevirtual loadFence {reexecute=0 rethrow=0 return_oop=0}
                                                                                            ; - jdk.internal.vm.vector.VectorSupport::maybeRebox@3 (line 702)
                                                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
                                                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
                                                                                            ; - jdk.incubator.vector.IntVector::bTest@10 (line 473)
                                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa0ac0caf28::apply@14
                                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.07%                          0x00007fa124655435:   mov    0xc(%r11),%r11d              ;*getfield payload {reexecute=0 rethrow=0 return_oop=0}
                                                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@4 (line 164)
                                                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
                                                                                            ; - jdk.incubator.vector.IntVector::bTest@10 (line 473)
                                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa0ac0caf28::apply@14
                                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.02%                          0x00007fa124655439:   lea    (%r12,%rcx,8),%rdx           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                                                            ; - jdk.incubator.vector.Int512Vector::vec@4 (line 117)
                                                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
                                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa0ac0caf28::apply@14
                                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
                                  0x00007fa12465543d:   data16 xchg %ax,%ax
   0.22%                          0x00007fa124655440:   mov    0x8(%r12,%r11,8),%r9d        ; implicit exception: dispatches to 0x00007fa124655b20
   0.21%                          0x00007fa124655445:   cmp    $0x26a0,%r9d                 ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
                                                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
                                                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
                                                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
                                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa0ac0caf28::apply@14
                                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
                                                                                            ;   {metadata({type array int})}
                                  0x00007fa12465544c:   jne    0x00007fa124655a78
   0.30%                          0x00007fa124655452:   shl    $0x3,%r11                    ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                                                            ; - jdk.incubator.vector.Int512Vector::vec@4 (line 117)
                                                                                            ; - jdk.incubator.vector.IntVector::bTest@10 (line 473)
                                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa0ac0caf28::apply@14
                                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
                                  0x00007fa124655456:   mov    %r11,0x40(%rsp)
   0.00%                          0x00007fa12465545b:   mov    0x1b8(%r15),%rbp
   0.01%                          0x00007fa124655462:   mov    %rbp,%r11
   0.27%                          0x00007fa124655465:   add    $0x20,%r11
                                  0x00007fa124655469:   cmp    0x1c8(%r15),%r11
                                  0x00007fa124655470:   jae    0x00007fa1246558f7           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                                                            ; - jdk.incubator.vector.IntVector::bTest@62 (line 475)
                                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa0ac0caf28::apply@14
                                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.00%                          0x00007fa124655476:   mov    %r11,0x1b8(%r15)
   0.02%                          0x00007fa12465547d:   prefetchw 0xc0(%r11)
   0.26%                          0x00007fa124655485:   movq   $0x1,0x0(%rbp)
   0.00%                          0x00007fa12465548d:   prefetchw 0x100(%r11)
   0.01%                          0x00007fa124655495:   movl   $0x1b00,0x8(%rbp)            ;   {metadata({type array bool})}
   0.03%                          0x00007fa12465549c:   prefetchw 0x140(%r11)
   0.27%                          0x00007fa1246554a4:   movl   $0x10,0xc(%rbp)
   0.02%                          0x00007fa1246554ab:   prefetchw 0x180(%r11)
   0.09%                          0x00007fa1246554b3:   mov    %r12,0x10(%rbp)
   0.08%                          0x00007fa1246554b7:   mov    %r12,0x18(%rbp)              ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                                                            ; - jdk.incubator.vector.IntVector::bTest@19 (line 474)
                                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa0ac0caf28::apply@14
                                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.29%                          0x00007fa1246554bb:   mov    0xc(%rdx),%r11d              ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                                                            ; - jdk.incubator.vector.IntVector::bTest@47 (line 476)
                                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa0ac0caf28::apply@14
                                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.01%                          0x00007fa1246554bf:   nop
   0.01%                          0x00007fa1246554c0:   test   %r11d,%r11d
                                  0x00007fa1246554c3:   jbe    0x00007fa1246559ac
   0.03%                          0x00007fa1246554c9:   cmp    $0xf,%r11d
                                  0x00007fa1246554cd:   jbe    0x00007fa1246559b2
   0.26%                          0x00007fa1246554d3:   mov    0x40(%rsp),%r11              ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
                                                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
                                                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
                                                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
                                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa0ac0caf28::apply@14
                                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.00%                          0x00007fa1246554d8:   mov    0xc(%r11),%r8d               ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                                                            ; - jdk.incubator.vector.IntVector::bTest@52 (line 476)
                                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa0ac0caf28::apply@14
                                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.48%                          0x00007fa1246554dc:   nopl   0x0(%rax)
   0.01%                          0x00007fa1246554e0:   test   %r8d,%r8d
                                  0x00007fa1246554e3:   jbe    0x00007fa1246559b8
   0.34%                          0x00007fa1246554e9:   cmp    $0xf,%r8d
                                  0x00007fa1246554ed:   jbe    0x00007fa1246559be
   0.11%                          0x00007fa1246554f3:   mov    $0x1,%r8d
   0.01%                          0x00007fa1246554f9:   mov    (%rsp),%r11d
   0.02%                          0x00007fa1246554fd:   data16 xchg %ax,%ax
   0.17%                          0x00007fa124655500:   cmp    $0x3,%r11d
          ╭                       0x00007fa124655504:   je     0x00007fa12465553a
   0.04%  │                       0x00007fa124655506:   test   %r11d,%r11d
          │                       0x00007fa124655509:   jne    0x00007fa1246559c2
   0.00%  │                       0x00007fa12465550f:   mov    0x40(%rsp),%r10
          │                       0x00007fa124655514:   mov    0x10(%r10),%r11d
   0.03%  │                       0x00007fa124655518:   mov    0x10(%rdx),%r10d
   0.04%  │                       0x00007fa12465551c:   nopl   0x0(%rax)
   0.01%  │                       0x00007fa124655520:   cmp    %r11d,%r10d                  ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
          │                                                                                 ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
          │                                                                                 ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
          │                                                                                 ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
          │                                                                                 ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
          │                                                                                 ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa0ac0caf28::apply@14
          │                                                                                 ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
          │╭                      0x00007fa124655523:   je     0x00007fa124655896
   0.01%  ││                      0x00007fa124655529:   xor    %r10d,%r10d                  ;*goto {reexecute=0 rethrow=0 return_oop=0}
          ││                                                                                ; - jdk.incubator.vector.IntVector::compareWithOp@148 (line 2069)
          ││                                                                                ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$58@4 (line 2035)
          ││                                                                                ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa0ac0cb338::apply@9
          ││                                                                                ; - jdk.incubator.vector.IntVector::bTest@53 (line 476)
          ││                                                                                ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
          ││                                                                                ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa0ac0caf28::apply@14
          ││                                                                                ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.02%  ││                   ↗  0x00007fa12465552c:   mov    %r10b,0x10(%rbp)             ;*bastore {reexecute=0 rethrow=0 return_oop=0}
          ││                   │                                                            ; - jdk.incubator.vector.IntVector::bTest@58 (line 476)
          ││                   │                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
          ││                   │                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa0ac0caf28::apply@14
          ││                   │                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.04%  ││                   │  0x00007fa124655530:   mov    $0x1,%ecx
   0.00%  ││╭                  │  0x00007fa124655535:   jmp    0x00007fa1246557ed
   0.05%  ↘││                  │  0x00007fa12465553a:   mov    0x40(%rsp),%r10              ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
           ││                  │                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
           ││                  │                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
           ││                  │                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
           ││                  │                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││                  │                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa0ac0caf28::apply@14
           ││                  │                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.00%   ││                  │  0x00007fa12465553f:   mov    0x10(%r10),%r11d             ;*iaload {reexecute=0 rethrow=0 return_oop=0}
           ││                  │                                                            ; - jdk.incubator.vector.IntVector::bTest@52 (line 476)
           ││                  │                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││                  │                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa0ac0caf28::apply@14
           ││                  │                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.02%   ││                  │  0x00007fa124655543:   mov    0x10(%rdx),%r10d             ;*iaload {reexecute=0 rethrow=0 return_oop=0}
           ││                  │                                                            ; - jdk.incubator.vector.IntVector::bTest@47 (line 476)
           ││                  │                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││                  │                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa0ac0caf28::apply@14
           ││                  │                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.16%   ││                  │  0x00007fa124655547:   xor    %ecx,%ecx
   0.04%   ││                  │  0x00007fa124655549:   cmp    %r11d,%r10d
   0.01%   ││                  │  0x00007fa12465554c:   setl   %cl                          ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
           ││                  │                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
           ││                  │                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
           ││                  │                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
           ││                  │                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││                  │                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa0ac0caf28::apply@14
           ││                  │                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.02%   ││                  │  0x00007fa12465554f:   mov    %cl,0x10(%rbp)               ;*bastore {reexecute=0 rethrow=0 return_oop=0}
           ││                  │                                                            ; - jdk.incubator.vector.IntVector::bTest@58 (line 476)
           ││                  │                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││                  │                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa0ac0caf28::apply@14
           ││                  │                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.21%   ││╭                 │  0x00007fa124655552:   jmp    0x00007fa124655563
           │││                 │  0x00007fa124655554:   nopl   0x0(%rax,%rax,1)
           │││                 │  0x00007fa12465555c:   data16 data16 xchg %ax,%ax
   0.04%   │││↗                │  0x00007fa124655560:   mov    %r10d,%r8d                   ;*aload {reexecute=0 rethrow=0 return_oop=0}
           ││││                │                                                            ; - jdk.incubator.vector.IntVector::bTest@35 (line 476)
           ││││                │                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││││                │                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa0ac0caf28::apply@14
           ││││                │                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.06%   ││↘│                │  0x00007fa124655563:   movslq %r8d,%rax                    ;*bastore {reexecute=0 rethrow=0 return_oop=0}
           ││ │                │                                                            ; - jdk.incubator.vector.IntVector::bTest@58 (line 476)
           ││ │                │                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││ │                │                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa0ac0caf28::apply@14
           ││ │                │                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.13%   ││ │                │  0x00007fa124655566:   mov    0x10(%rdx,%rax,4),%r14d      ;*iaload {reexecute=0 rethrow=0 return_oop=0}
           ││ │                │                                                            ; - jdk.incubator.vector.IntVector::bTest@47 (line 476)
           ││ │                │                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││ │                │                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa0ac0caf28::apply@14
           ││ │                │                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.20%   ││ │                │  0x00007fa12465556b:   mov    0x40(%rsp),%rbx              ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
           ││ │                │                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
           ││ │                │                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
           ││ │                │                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
           ││ │                │                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││ │                │                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa0ac0caf28::apply@14
           ││ │                │                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.22%   ││ │                │  0x00007fa124655570:   mov    0x1c(%rbx,%rax,4),%r10d      ;*iaload {reexecute=0 rethrow=0 return_oop=0}
           ││ │                │                                                            ; - jdk.incubator.vector.IntVector::bTest@52 (line 476)
           ││ │                │                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││ │                │                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa0ac0caf28::apply@14
           ││ │                │                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.08%   ││ │                │  0x00007fa124655575:   mov    0x1c(%rdx,%rax,4),%r13d      ;*iaload {reexecute=0 rethrow=0 return_oop=0}
           ││ │                │                                                            ; - jdk.incubator.vector.IntVector::bTest@47 (line 476)
           ││ │                │                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││ │                │                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa0ac0caf28::apply@14
           ││ │                │                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.19%   ││ │                │  0x00007fa12465557a:   mov    0x18(%rbx,%rax,4),%r11d
   0.21%   ││ │                │  0x00007fa12465557f:   mov    0x10(%rbx,%rax,4),%ecx       ;*iaload {reexecute=0 rethrow=0 return_oop=0}
           ││ │                │                                                            ; - jdk.incubator.vector.IntVector::bTest@52 (line 476)
           ││ │                │                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││ │                │                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa0ac0caf28::apply@14
           ││ │                │                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.22%   ││ │                │  0x00007fa124655583:   mov    0x18(%rdx,%rax,4),%r9d
   0.10%   ││ │                │  0x00007fa124655588:   mov    0x14(%rdx,%rax,4),%edi       ;*iaload {reexecute=0 rethrow=0 return_oop=0}
           ││ │                │                                                            ; - jdk.incubator.vector.IntVector::bTest@47 (line 476)
           ││ │                │                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││ │                │                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa0ac0caf28::apply@14
           ││ │                │                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.15%   ││ │                │  0x00007fa12465558c:   mov    0x14(%rbx,%rax,4),%ebx       ;*iaload {reexecute=0 rethrow=0 return_oop=0}
           ││ │                │                                                            ; - jdk.incubator.vector.IntVector::bTest@52 (line 476)
           ││ │                │                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││ │                │                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa0ac0caf28::apply@14
           ││ │                │                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.25%   ││ │                │  0x00007fa124655590:   xor    %esi,%esi
   0.26%   ││ │                │  0x00007fa124655592:   cmp    %r10d,%r13d                  ;   {no_reloc}
   0.09%   ││ │                │  0x00007fa124655595:   setl   %sil
   0.11%   ││ │                │  0x00007fa124655599:   xor    %r10d,%r10d
   0.21%   ││ │                │  0x00007fa12465559c:   cmp    %ebx,%edi
   0.23%   ││ │                │  0x00007fa12465559e:   setl   %r10b
   0.11%   ││ │                │  0x00007fa1246555a2:   xor    %r13d,%r13d
   0.11%   ││ │                │  0x00007fa1246555a5:   cmp    %r11d,%r9d
   0.20%   ││ │                │  0x00007fa1246555a8:   setl   %r13b
   0.26%   ││ │                │  0x00007fa1246555ac:   xor    %r9d,%r9d
   0.13%   ││ │                │  0x00007fa1246555af:   cmp    %ecx,%r14d
   0.14%   ││ │                │  0x00007fa1246555b2:   setl   %r9b                         ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
           ││ │                │                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
           ││ │                │                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
           ││ │                │                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
           ││ │                │                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││ │                │                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa0ac0caf28::apply@14
           ││ │                │                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.21%   ││ │                │  0x00007fa1246555b6:   mov    %r9b,0x10(%rbp,%rax,1)
   0.26%   ││ │                │  0x00007fa1246555bb:   mov    %r10b,0x11(%rbp,%rax,1)
   0.10%   ││ │                │  0x00007fa1246555c0:   mov    %r13b,0x12(%rbp,%rax,1)
   0.18%   ││ │                │  0x00007fa1246555c5:   mov    %sil,0x13(%rbp,%rax,1)       ;*bastore {reexecute=0 rethrow=0 return_oop=0}
           ││ │                │                                                            ; - jdk.incubator.vector.IntVector::bTest@58 (line 476)
           ││ │                │                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││ │                │                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa0ac0caf28::apply@14
           ││ │                │                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.20%   ││ │                │  0x00007fa1246555ca:   lea    0x4(%r8),%r10d
   0.25%   ││ │                │  0x00007fa1246555ce:   cmp    $0xd,%r10d
           ││ ╰                │  0x00007fa1246555d2:   jl     0x00007fa124655560
   0.02%   ││                  │  0x00007fa1246555d4:   add    $0x4,%r8d                    ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
           ││                  │                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
           ││                  │                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
           ││                  │                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
           ││                  │                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││                  │                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa0ac0caf28::apply@14
           ││                  │                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.16%   ││  ↗               │  0x00007fa1246555d8:   movslq %r8d,%r10                    ;*bastore {reexecute=0 rethrow=0 return_oop=0}
           ││  │               │                                                            ; - jdk.incubator.vector.IntVector::bTest@58 (line 476)
           ││  │               │                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││  │               │                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa0ac0caf28::apply@14
           ││  │               │                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.23%   ││  │               │  0x00007fa1246555db:   mov    0x10(%rdx,%r10,4),%r11d      ;*iaload {reexecute=0 rethrow=0 return_oop=0}
           ││  │               │                                                            ; - jdk.incubator.vector.IntVector::bTest@47 (line 476)
           ││  │               │                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││  │               │                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa0ac0caf28::apply@14
           ││  │               │                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.15%   ││  │               │  0x00007fa1246555e0:   mov    0x40(%rsp),%rcx              ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
           ││  │               │                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
           ││  │               │                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
           ││  │               │                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
           ││  │               │                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││  │               │                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa0ac0caf28::apply@14
           ││  │               │                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.08%   ││  │               │  0x00007fa1246555e5:   mov    0x10(%rcx,%r10,4),%r9d       ;*iaload {reexecute=0 rethrow=0 return_oop=0}
           ││  │               │                                                            ; - jdk.incubator.vector.IntVector::bTest@52 (line 476)
           ││  │               │                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││  │               │                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa0ac0caf28::apply@14
           ││  │               │                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.22%   ││  │               │  0x00007fa1246555ea:   xor    %ebx,%ebx
   0.27%   ││  │               │  0x00007fa1246555ec:   cmp    %r9d,%r11d
   0.24%   ││  │               │  0x00007fa1246555ef:   setl   %bl                          ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
           ││  │               │                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
           ││  │               │                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
           ││  │               │                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
           ││  │               │                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││  │               │                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa0ac0caf28::apply@14
           ││  │               │                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.11%   ││  │               │  0x00007fa1246555f2:   mov    %bl,0x10(%rbp,%r10,1)        ;*bastore {reexecute=0 rethrow=0 return_oop=0}
           ││  │               │                                                            ; - jdk.incubator.vector.IntVector::bTest@58 (line 476)
           ││  │               │                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││  │               │                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa0ac0caf28::apply@14
           ││  │               │                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.37%   ││  │               │  0x00007fa1246555f7:   inc    %r8d
   0.18%   ││  │               │  0x00007fa1246555fa:   nopw   0x0(%rax,%rax,1)
   0.17%   ││  │               │  0x00007fa124655600:   cmp    $0x10,%r8d
           ││  ╰               │  0x00007fa124655604:   jl     0x00007fa1246555d8
   0.03%   ││   ╭              │  0x00007fa124655606:   jmp    0x00007fa124655638
   0.02%   ││   │    ↗         │  0x00007fa124655608:   add    $0x4,%ecx
   0.02%   ││   │    │         │  0x00007fa12465560b:   nop                                 ;*aload {reexecute=0 rethrow=0 return_oop=0}
           ││   │    │         │                                                            ; - jdk.incubator.vector.IntVector::bTest@35 (line 476)
           ││   │    │         │                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││   │    │         │                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa0ac0caf28::apply@14
           ││   │    │         │                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.07%   ││   │ ↗  │         │  0x00007fa12465560c:   movslq %ecx,%r10                    ;*bastore {reexecute=0 rethrow=0 return_oop=0}
           ││   │ │  │         │                                                            ; - jdk.incubator.vector.IntVector::bTest@58 (line 476)
           ││   │ │  │         │                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││   │ │  │         │                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa0ac0caf28::apply@14
           ││   │ │  │         │                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.05%   ││   │ │  │         │  0x00007fa12465560f:   mov    0x10(%rdx,%r10,4),%r11d      ;*iaload {reexecute=0 rethrow=0 return_oop=0}
           ││   │ │  │         │                                                            ; - jdk.incubator.vector.IntVector::bTest@47 (line 476)
           ││   │ │  │         │                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││   │ │  │         │                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa0ac0caf28::apply@14
           ││   │ │  │         │                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.04%   ││   │ │  │         │  0x00007fa124655614:   mov    0x40(%rsp),%r8               ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
           ││   │ │  │         │                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
           ││   │ │  │         │                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
           ││   │ │  │         │                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
           ││   │ │  │         │                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││   │ │  │         │                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa0ac0caf28::apply@14
           ││   │ │  │         │                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.05%   ││   │ │  │         │  0x00007fa124655619:   mov    0x10(%r8,%r10,4),%r9d        ;*iaload {reexecute=0 rethrow=0 return_oop=0}
           ││   │ │  │         │                                                            ; - jdk.incubator.vector.IntVector::bTest@52 (line 476)
           ││   │ │  │         │                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││   │ │  │         │                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa0ac0caf28::apply@14
           ││   │ │  │         │                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.08%   ││   │ │  │         │  0x00007fa12465561e:   xchg   %ax,%ax
   0.05%   ││   │ │  │         │  0x00007fa124655620:   cmp    %r9d,%r11d                   ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
           ││   │ │  │         │                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
           ││   │ │  │         │                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
           ││   │ │  │         │                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
           ││   │ │  │         │                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││   │ │  │         │                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa0ac0caf28::apply@14
           ││   │ │  │         │                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
           ││   │╭│  │         │  0x00007fa124655623:   je     0x00007fa12465588b
   0.08%   ││   │││  │         │  0x00007fa124655629:   xor    %r8d,%r8d                    ;*goto {reexecute=0 rethrow=0 return_oop=0}
           ││   │││  │         │                                                            ; - jdk.incubator.vector.IntVector::compareWithOp@148 (line 2069)
           ││   │││  │         │                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$58@4 (line 2035)
           ││   │││  │         │                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa0ac0cb338::apply@9
           ││   │││  │         │                                                            ; - jdk.incubator.vector.IntVector::bTest@53 (line 476)
           ││   │││  │         │                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││   │││  │         │                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa0ac0caf28::apply@14
           ││   │││  │         │                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.05%   ││   │││  │        ↗│  0x00007fa12465562c:   mov    %r8b,0x10(%rbp,%r10,1)       ;*bastore {reexecute=0 rethrow=0 return_oop=0}
           ││   │││  │        ││                                                            ; - jdk.incubator.vector.IntVector::bTest@58 (line 476)
           ││   │││  │        ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││   │││  │        ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa0ac0caf28::apply@14
           ││   │││  │        ││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.05%   ││   │││  │        ││  0x00007fa124655631:   inc    %ecx
   0.04%   ││   │││  │        ││  0x00007fa124655633:   cmp    $0x10,%ecx
           ││   ││╰  │        ││  0x00007fa124655636:   jl     0x00007fa12465560c
   0.05%   ││   ↘│   │        ││  0x00007fa124655638:   mov    0x1b8(%r15),%rbx
   0.07%   ││    │   │        ││  0x00007fa12465563f:   mov    %rbx,%r10
   0.13%   ││    │   │        ││  0x00007fa124655642:   add    $0x10,%r10
   0.03%   ││    │   │        ││  0x00007fa124655646:   cmp    0x1c8(%r15),%r10
           ││    │   │        ││  0x00007fa12465564d:   jae    0x00007fa124655934
   0.08%   ││    │   │        ││  0x00007fa124655653:   mov    %r10,0x1b8(%r15)
   0.08%   ││    │   │        ││  0x00007fa12465565a:   prefetchw 0xc0(%r10)
   0.16%   ││    │   │        ││  0x00007fa124655662:   movq   $0x1,(%rbx)
   0.06%   ││    │   │        ││  0x00007fa124655669:   movl   $0x103f610,0x8(%rbx)         ;   {metadata(&apos;jdk/incubator/vector/Int512Vector$Int512Mask&apos;)}
   0.10%   ││    │   │        ││  0x00007fa124655670:   mov    %r12d,0xc(%rbx)
   0.09%   ││    │   │        ││  0x00007fa124655674:   mov    0x1b8(%r15),%rax
   0.22%   ││    │   │        ││  0x00007fa12465567b:   mov    %rax,%r10
   0.03%   ││    │   │        ││  0x00007fa12465567e:   add    $0x20,%r10
   0.10%   ││    │   │        ││  0x00007fa124655682:   cmp    0x1c8(%r15),%r10
           ││    │   │        ││  0x00007fa124655689:   jae    0x00007fa124655954           ;*goto {reexecute=0 rethrow=0 return_oop=0}
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::bTest@62 (line 475)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa0ac0caf28::apply@14
           ││    │   │        ││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.15%   ││    │   │        ││  0x00007fa12465568f:   mov    %r10,0x1b8(%r15)
   0.17%   ││    │   │        ││  0x00007fa124655696:   prefetchw 0xc0(%r10)
   0.41%   ││    │   │        ││  0x00007fa12465569e:   movq   $0x1,(%rax)
   0.51%   ││    │   │        ││  0x00007fa1246556a5:   prefetchw 0x100(%r10)
   0.02%   ││    │   │        ││  0x00007fa1246556ad:   movl   $0x1b00,0x8(%rax)            ;   {metadata({type array bool})}
   0.43%   ││    │   │        ││  0x00007fa1246556b4:   prefetchw 0x140(%r10)
   0.02%   ││    │   │        ││  0x00007fa1246556bc:   movl   $0x10,0xc(%rax)
   0.40%   ││    │   │        ││  0x00007fa1246556c3:   prefetchw 0x180(%r10)
   0.08%   ││    │   │        ││  0x00007fa1246556cb:   mov    %r12,0x10(%rax)
   0.32%   ││    │   │        ││  0x00007fa1246556cf:   mov    %r12,0x18(%rax)              ;*newarray {reexecute=0 rethrow=0 return_oop=0}
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::prepare@6 (line 598)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 590)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 586)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@5 (line 137)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@2 (line 41)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.AbstractSpecies::maskFactory@5 (line 328)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::maskFactory@5 (line 116)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::bTest@68 (line 478)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa0ac0caf28::apply@14
           ││    │   │        ││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.10%   ││    │   │        ││  0x00007fa1246556d3:   movzbl 0x10(%rbp),%r11d             ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
           ││    │   │        ││                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa0ac0caf28::apply@14
           ││    │   │        ││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.10%   ││    │   │        ││  0x00007fa1246556d8:   mov    %r11b,0x10(%rax)             ;*bastore {reexecute=0 rethrow=0 return_oop=0}
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::prepare@24 (line 600)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 590)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 586)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@5 (line 137)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@2 (line 41)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.AbstractSpecies::maskFactory@5 (line 328)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::maskFactory@5 (line 116)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::bTest@68 (line 478)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa0ac0caf28::apply@14
           ││    │   │        ││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.16%   ││    │   │        ││  0x00007fa1246556dc:   movzbl 0x11(%rbp),%r10d             ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
           ││    │   │        ││                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa0ac0caf28::apply@14
           ││    │   │        ││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.09%   ││    │   │        ││  0x00007fa1246556e1:   mov    %r10b,0x11(%rax)             ;*bastore {reexecute=0 rethrow=0 return_oop=0}
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::prepare@24 (line 600)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 590)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 586)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@5 (line 137)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@2 (line 41)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.AbstractSpecies::maskFactory@5 (line 328)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::maskFactory@5 (line 116)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::bTest@68 (line 478)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa0ac0caf28::apply@14
           ││    │   │        ││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.17%   ││    │   │        ││  0x00007fa1246556e5:   movzbl 0x12(%rbp),%r11d             ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
           ││    │   │        ││                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa0ac0caf28::apply@14
           ││    │   │        ││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.05%   ││    │   │        ││  0x00007fa1246556ea:   mov    %r11b,0x12(%rax)             ;*bastore {reexecute=0 rethrow=0 return_oop=0}
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::prepare@24 (line 600)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 590)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 586)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@5 (line 137)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@2 (line 41)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.AbstractSpecies::maskFactory@5 (line 328)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::maskFactory@5 (line 116)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::bTest@68 (line 478)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa0ac0caf28::apply@14
           ││    │   │        ││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.20%   ││    │   │        ││  0x00007fa1246556ee:   movzbl 0x13(%rbp),%r10d             ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
           ││    │   │        ││                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa0ac0caf28::apply@14
           ││    │   │        ││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.06%   ││    │   │        ││  0x00007fa1246556f3:   mov    %r10b,0x13(%rax)             ;*bastore {reexecute=0 rethrow=0 return_oop=0}
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::prepare@24 (line 600)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 590)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 586)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@5 (line 137)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@2 (line 41)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.AbstractSpecies::maskFactory@5 (line 328)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::maskFactory@5 (line 116)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::bTest@68 (line 478)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa0ac0caf28::apply@14
           ││    │   │        ││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.14%   ││    │   │        ││  0x00007fa1246556f7:   movzbl 0x14(%rbp),%r11d             ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
           ││    │   │        ││                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa0ac0caf28::apply@14
           ││    │   │        ││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.04%   ││    │   │        ││  0x00007fa1246556fc:   mov    %r11b,0x14(%rax)             ;*bastore {reexecute=0 rethrow=0 return_oop=0}
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::prepare@24 (line 600)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 590)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 586)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@5 (line 137)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@2 (line 41)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.AbstractSpecies::maskFactory@5 (line 328)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::maskFactory@5 (line 116)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::bTest@68 (line 478)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa0ac0caf28::apply@14
           ││    │   │        ││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.18%   ││    │   │        ││  0x00007fa124655700:   movzbl 0x15(%rbp),%r10d             ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
           ││    │   │        ││                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa0ac0caf28::apply@14
           ││    │   │        ││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.05%   ││    │   │        ││  0x00007fa124655705:   mov    %r10b,0x15(%rax)             ;*bastore {reexecute=0 rethrow=0 return_oop=0}
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::prepare@24 (line 600)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 590)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 586)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@5 (line 137)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@2 (line 41)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.AbstractSpecies::maskFactory@5 (line 328)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::maskFactory@5 (line 116)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::bTest@68 (line 478)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa0ac0caf28::apply@14
           ││    │   │        ││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.13%   ││    │   │        ││  0x00007fa124655709:   movzbl 0x16(%rbp),%r11d             ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
           ││    │   │        ││                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa0ac0caf28::apply@14
           ││    │   │        ││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.02%   ││    │   │        ││  0x00007fa12465570e:   mov    %r11b,0x16(%rax)             ;*bastore {reexecute=0 rethrow=0 return_oop=0}
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::prepare@24 (line 600)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 590)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 586)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@5 (line 137)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@2 (line 41)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.AbstractSpecies::maskFactory@5 (line 328)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::maskFactory@5 (line 116)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::bTest@68 (line 478)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa0ac0caf28::apply@14
           ││    │   │        ││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.17%   ││    │   │        ││  0x00007fa124655712:   movzbl 0x17(%rbp),%r10d             ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
           ││    │   │        ││                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa0ac0caf28::apply@14
           ││    │   │        ││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.02%   ││    │   │        ││  0x00007fa124655717:   mov    %r10b,0x17(%rax)             ;*bastore {reexecute=0 rethrow=0 return_oop=0}
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::prepare@24 (line 600)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 590)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 586)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@5 (line 137)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@2 (line 41)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.AbstractSpecies::maskFactory@5 (line 328)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::maskFactory@5 (line 116)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::bTest@68 (line 478)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa0ac0caf28::apply@14
           ││    │   │        ││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.16%   ││    │   │        ││  0x00007fa12465571b:   movzbl 0x18(%rbp),%r11d             ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
           ││    │   │        ││                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa0ac0caf28::apply@14
           ││    │   │        ││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.02%   ││    │   │        ││  0x00007fa124655720:   mov    %r11b,0x18(%rax)             ;*bastore {reexecute=0 rethrow=0 return_oop=0}
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::prepare@24 (line 600)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 590)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 586)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@5 (line 137)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@2 (line 41)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.AbstractSpecies::maskFactory@5 (line 328)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::maskFactory@5 (line 116)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::bTest@68 (line 478)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa0ac0caf28::apply@14
           ││    │   │        ││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.20%   ││    │   │        ││  0x00007fa124655724:   movzbl 0x19(%rbp),%r10d             ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
           ││    │   │        ││                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa0ac0caf28::apply@14
           ││    │   │        ││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.01%   ││    │   │        ││  0x00007fa124655729:   mov    %r10b,0x19(%rax)             ;*bastore {reexecute=0 rethrow=0 return_oop=0}
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::prepare@24 (line 600)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 590)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 586)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@5 (line 137)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@2 (line 41)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.AbstractSpecies::maskFactory@5 (line 328)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::maskFactory@5 (line 116)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::bTest@68 (line 478)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa0ac0caf28::apply@14
           ││    │   │        ││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.19%   ││    │   │        ││  0x00007fa12465572d:   movzbl 0x1a(%rbp),%r11d             ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
           ││    │   │        ││                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa0ac0caf28::apply@14
           ││    │   │        ││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.02%   ││    │   │        ││  0x00007fa124655732:   mov    %r11b,0x1a(%rax)             ;*bastore {reexecute=0 rethrow=0 return_oop=0}
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::prepare@24 (line 600)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 590)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 586)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@5 (line 137)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@2 (line 41)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.AbstractSpecies::maskFactory@5 (line 328)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::maskFactory@5 (line 116)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::bTest@68 (line 478)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa0ac0caf28::apply@14
           ││    │   │        ││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.23%   ││    │   │        ││  0x00007fa124655736:   movzbl 0x1b(%rbp),%r10d             ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
           ││    │   │        ││                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa0ac0caf28::apply@14
           ││    │   │        ││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.00%   ││    │   │        ││  0x00007fa12465573b:   mov    %r10b,0x1b(%rax)             ;*bastore {reexecute=0 rethrow=0 return_oop=0}
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::prepare@24 (line 600)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 590)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 586)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@5 (line 137)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@2 (line 41)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.AbstractSpecies::maskFactory@5 (line 328)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::maskFactory@5 (line 116)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::bTest@68 (line 478)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa0ac0caf28::apply@14
           ││    │   │        ││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.24%   ││    │   │        ││  0x00007fa12465573f:   movzbl 0x1c(%rbp),%r11d             ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
           ││    │   │        ││                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa0ac0caf28::apply@14
           ││    │   │        ││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.01%   ││    │   │        ││  0x00007fa124655744:   mov    %r11b,0x1c(%rax)             ;*bastore {reexecute=0 rethrow=0 return_oop=0}
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::prepare@24 (line 600)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 590)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 586)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@5 (line 137)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@2 (line 41)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.AbstractSpecies::maskFactory@5 (line 328)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::maskFactory@5 (line 116)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::bTest@68 (line 478)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa0ac0caf28::apply@14
           ││    │   │        ││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.30%   ││    │   │        ││  0x00007fa124655748:   movzbl 0x1d(%rbp),%r10d             ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
           ││    │   │        ││                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa0ac0caf28::apply@14
           ││    │   │        ││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
           ││    │   │        ││  0x00007fa12465574d:   mov    %r10b,0x1d(%rax)             ;*bastore {reexecute=0 rethrow=0 return_oop=0}
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::prepare@24 (line 600)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 590)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 586)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@5 (line 137)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@2 (line 41)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.AbstractSpecies::maskFactory@5 (line 328)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::maskFactory@5 (line 116)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::bTest@68 (line 478)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa0ac0caf28::apply@14
           ││    │   │        ││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.25%   ││    │   │        ││  0x00007fa124655751:   movzbl 0x1e(%rbp),%r11d             ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
           ││    │   │        ││                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa0ac0caf28::apply@14
           ││    │   │        ││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.00%   ││    │   │        ││  0x00007fa124655756:   mov    %r11b,0x1e(%rax)             ;*bastore {reexecute=0 rethrow=0 return_oop=0}
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::prepare@24 (line 600)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 590)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 586)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@5 (line 137)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@2 (line 41)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.AbstractSpecies::maskFactory@5 (line 328)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::maskFactory@5 (line 116)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::bTest@68 (line 478)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa0ac0caf28::apply@14
           ││    │   │        ││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.26%   ││    │   │        ││  0x00007fa12465575a:   movzbl 0x1f(%rbp),%r10d             ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
           ││    │   │        ││                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa0ac0caf28::apply@14
           ││    │   │        ││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.00%   ││    │   │        ││  0x00007fa12465575f:   mov    %r10b,0x1f(%rax)             ;*bastore {reexecute=0 rethrow=0 return_oop=0}
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::prepare@24 (line 600)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 590)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 586)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@5 (line 137)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@2 (line 41)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.AbstractSpecies::maskFactory@5 (line 328)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::maskFactory@5 (line 116)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::bTest@68 (line 478)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa0ac0caf28::apply@14
           ││    │   │        ││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.26%   ││    │   │        ││  0x00007fa124655763:   mov    %rbx,%r10                    ;*putfield payload {reexecute=0 rethrow=0 return_oop=0}
           ││    │   │        ││                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::&lt;init&gt;@6 (line 160)
           ││    │   │        ││                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorMask::&lt;init&gt;@2 (line 190)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.VectorMask::&lt;init&gt;@2 (line 134)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.AbstractMask::&lt;init&gt;@2 (line 39)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@6 (line 590)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 586)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@5 (line 137)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@2 (line 41)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.AbstractSpecies::maskFactory@5 (line 328)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::maskFactory@5 (line 116)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::bTest@68 (line 478)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa0ac0caf28::apply@14
           ││    │   │        ││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.00%   ││    │   │        ││  0x00007fa124655766:   mov    %rax,%r11
   0.02%   ││    │   │        ││  0x00007fa124655769:   xor    %r10,%r11
           ││    │   │        ││  0x00007fa12465576c:   mov    %rax,%r8
   0.27%   ││    │   │        ││  0x00007fa12465576f:   shr    $0x3,%r8                     ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
           ││    │   │        ││                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa0ac0caf28::apply@14
           ││    │   │        ││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
           ││    │   │        ││  0x00007fa124655773:   mov    %r8d,0xc(%rbx)               ;*putfield payload {reexecute=0 rethrow=0 return_oop=0}
           ││    │   │        ││                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::&lt;init&gt;@6 (line 160)
           ││    │   │        ││                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorMask::&lt;init&gt;@2 (line 190)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.VectorMask::&lt;init&gt;@2 (line 134)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.AbstractMask::&lt;init&gt;@2 (line 39)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@6 (line 590)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 586)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@5 (line 137)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@2 (line 41)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.AbstractSpecies::maskFactory@5 (line 328)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::maskFactory@5 (line 116)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::bTest@68 (line 478)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa0ac0caf28::apply@14
           ││    │   │        ││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.01%   ││    │   │        ││  0x00007fa124655777:   shr    $0x15,%r11
   0.00%   ││    │   │        ││  0x00007fa12465577b:   nopl   0x0(%rax,%rax,1)
   0.28%   ││    │   │        ││  0x00007fa124655780:   test   %r11,%r11
           ││    │ ╭ │        ││  0x00007fa124655783:   je     0x00007fa12465579f
           ││    │ │ │        ││  0x00007fa124655785:   shr    $0x9,%r10
           ││    │ │ │        ││  0x00007fa124655789:   movabs $0x7fa118b3f000,%rdi
           ││    │ │ │        ││  0x00007fa124655793:   add    %r10,%rdi
           ││    │ │ │        ││  0x00007fa124655796:   cmpb   $0x2,(%rdi)                  ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
           ││    │ │ │        ││                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
           ││    │ │ │        ││                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
           ││    │ │ │        ││                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
           ││    │ │ │        ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││    │ │ │        ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa0ac0caf28::apply@14
           ││    │ │ │        ││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.00%   ││    │ │╭│        ││  0x00007fa124655799:   jne    0x00007fa1246558a5           ;*synchronization entry
           ││    │ │││        ││                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::&lt;init&gt;@-1 (line 159)
           ││    │ │││        ││                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorMask::&lt;init&gt;@2 (line 190)
           ││    │ │││        ││                                                            ; - jdk.incubator.vector.VectorMask::&lt;init&gt;@2 (line 134)
           ││    │ │││        ││                                                            ; - jdk.incubator.vector.AbstractMask::&lt;init&gt;@2 (line 39)
           ││    │ │││        ││                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@6 (line 590)
           ││    │ │││        ││                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 586)
           ││    │ │││        ││                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@5 (line 137)
           ││    │ │││        ││                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@2 (line 41)
           ││    │ │││        ││                                                            ; - jdk.incubator.vector.AbstractSpecies::maskFactory@5 (line 328)
           ││    │ │││        ││                                                            ; - jdk.incubator.vector.IntVector::maskFactory@5 (line 116)
           ││    │ │││        ││                                                            ; - jdk.incubator.vector.IntVector::bTest@68 (line 478)
           ││    │ │││        ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││    │ │││        ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa0ac0caf28::apply@14
           ││    │ │││        ││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.00%   ││    │ ↘││        ││  0x00007fa12465579f:   mov    %rbx,%rax
   0.00%   ││    │  ││        ││  0x00007fa1246557a2:   add    $0x20,%rsp
   0.00%   ││    │  ││        ││  0x00007fa1246557a6:   pop    %rbp
   0.29%   ││    │  ││        ││  0x00007fa1246557a7:   cmp    0x450(%r15),%rsp             ;   {poll_return}
           ││    │  ││        ││  0x00007fa1246557ae:   ja     0x00007fa124655b5b
   0.03%   ││    │  ││        ││  0x00007fa1246557b4:   ret    
           ││    │  ││        ││  0x00007fa1246557b5:   data16 data16 nopw 0x0(%rax,%rax,1)
   0.06%   ││    │  ││   ↗    ││  0x00007fa1246557c0:   xor    %r9d,%r9d                    ;*goto {reexecute=0 rethrow=0 return_oop=0}
           ││    │  ││   │    ││                                                            ; - jdk.incubator.vector.IntVector::compareWithOp@148 (line 2069)
           ││    │  ││   │    ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$58@4 (line 2035)
           ││    │  ││   │    ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa0ac0cb338::apply@9
           ││    │  ││   │    ││                                                            ; - jdk.incubator.vector.IntVector::bTest@53 (line 476)
           ││    │  ││   │    ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││    │  ││   │    ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa0ac0caf28::apply@14
           ││    │  ││   │    ││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.07%   ││    │  ││   │↗   ││  0x00007fa1246557c3:   mov    %bl,0x10(%rbp,%rdi,1)
   0.13%   ││    │  ││   ││   ││  0x00007fa1246557c7:   mov    %r10b,0x11(%rbp,%rdi,1)
   0.05%   ││    │  ││   ││   ││  0x00007fa1246557cc:   mov    %r11b,0x12(%rbp,%rdi,1)
   0.04%   ││    │  ││   ││   ││  0x00007fa1246557d1:   mov    %r9b,0x13(%rbp,%rdi,1)       ;*bastore {reexecute=0 rethrow=0 return_oop=0}
           ││    │  ││   ││   ││                                                            ; - jdk.incubator.vector.IntVector::bTest@58 (line 476)
           ││    │  ││   ││   ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││    │  ││   ││   ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa0ac0caf28::apply@14
           ││    │  ││   ││   ││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.07%   ││    │  ││   ││   ││  0x00007fa1246557d6:   lea    0x4(%rcx),%r10d
   0.05%   ││    │  ││   ││   ││  0x00007fa1246557da:   nopw   0x0(%rax,%rax,1)
   0.05%   ││    │  ││   ││   ││  0x00007fa1246557e0:   cmp    $0xd,%r10d
           ││    │  │╰   ││   ││  0x00007fa1246557e4:   jge    0x00007fa124655608
   0.02%   ││    │  │    ││   ││  0x00007fa1246557ea:   mov    %r10d,%ecx                   ;*aload {reexecute=0 rethrow=0 return_oop=0}
           ││    │  │    ││   ││                                                            ; - jdk.incubator.vector.IntVector::bTest@35 (line 476)
           ││    │  │    ││   ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││    │  │    ││   ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa0ac0caf28::apply@14
           ││    │  │    ││   ││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.04%   │↘    │  │    ││   ││  0x00007fa1246557ed:   movslq %ecx,%rdi                    ;*bastore {reexecute=0 rethrow=0 return_oop=0}
           │     │  │    ││   ││                                                            ; - jdk.incubator.vector.IntVector::bTest@58 (line 476)
           │     │  │    ││   ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           │     │  │    ││   ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa0ac0caf28::apply@14
           │     │  │    ││   ││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.06%   │     │  │    ││   ││  0x00007fa1246557f0:   mov    0x10(%rdx,%rdi,4),%r11d      ;*iaload {reexecute=0 rethrow=0 return_oop=0}
           │     │  │    ││   ││                                                            ; - jdk.incubator.vector.IntVector::bTest@47 (line 476)
           │     │  │    ││   ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           │     │  │    ││   ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa0ac0caf28::apply@14
           │     │  │    ││   ││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.09%   │     │  │    ││   ││  0x00007fa1246557f5:   mov    0x40(%rsp),%r10              ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
           │     │  │    ││   ││                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
           │     │  │    ││   ││                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
           │     │  │    ││   ││                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
           │     │  │    ││   ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           │     │  │    ││   ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa0ac0caf28::apply@14
           │     │  │    ││   ││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.03%   │     │  │    ││   ││  0x00007fa1246557fa:   mov    0x10(%r10,%rdi,4),%r10d      ;*iaload {reexecute=0 rethrow=0 return_oop=0}
           │     │  │    ││   ││                                                            ; - jdk.incubator.vector.IntVector::bTest@52 (line 476)
           │     │  │    ││   ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           │     │  │    ││   ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa0ac0caf28::apply@14
           │     │  │    ││   ││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.09%   │     │  │    ││   ││  0x00007fa1246557ff:   nop
   0.08%   │     │  │    ││   ││  0x00007fa124655800:   cmp    %r10d,%r11d                  ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
           │     │  │    ││   ││                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
           │     │  │    ││   ││                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
           │     │  │    ││   ││                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
           │     │  │    ││   ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           │     │  │    ││   ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa0ac0caf28::apply@14
           │     │  │    ││   ││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
           │     │  │ ╭  ││   ││  0x00007fa124655803:   je     0x00007fa124655874
   0.06%   │     │  │ │  ││   ││  0x00007fa124655809:   xor    %ebx,%ebx                    ;*goto {reexecute=0 rethrow=0 return_oop=0}
           │     │  │ │  ││   ││                                                            ; - jdk.incubator.vector.IntVector::compareWithOp@148 (line 2069)
           │     │  │ │  ││   ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$58@4 (line 2035)
           │     │  │ │  ││   ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa0ac0cb338::apply@9
           │     │  │ │  ││   ││                                                            ; - jdk.incubator.vector.IntVector::bTest@53 (line 476)
           │     │  │ │  ││   ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           │     │  │ │  ││   ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa0ac0caf28::apply@14
           │     │  │ │  ││   ││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.02%   │     │  │ │  ││↗  ││  0x00007fa12465580b:   mov    0x40(%rsp),%r10              ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
           │     │  │ │  │││  ││                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
           │     │  │ │  │││  ││                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
           │     │  │ │  │││  ││                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
           │     │  │ │  │││  ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           │     │  │ │  │││  ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa0ac0caf28::apply@14
           │     │  │ │  │││  ││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.05%   │     │  │ │  │││  ││  0x00007fa124655810:   mov    0x14(%r10,%rdi,4),%r11d      ;*iaload {reexecute=0 rethrow=0 return_oop=0}
           │     │  │ │  │││  ││                                                            ; - jdk.incubator.vector.IntVector::bTest@52 (line 476)
           │     │  │ │  │││  ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           │     │  │ │  │││  ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa0ac0caf28::apply@14
           │     │  │ │  │││  ││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.09%   │     │  │ │  │││  ││  0x00007fa124655815:   mov    0x14(%rdx,%rdi,4),%r8d       ;*iaload {reexecute=0 rethrow=0 return_oop=0}
           │     │  │ │  │││  ││                                                            ; - jdk.incubator.vector.IntVector::bTest@47 (line 476)
           │     │  │ │  │││  ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           │     │  │ │  │││  ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa0ac0caf28::apply@14
           │     │  │ │  │││  ││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.08%   │     │  │ │  │││  ││  0x00007fa12465581a:   nopw   0x0(%rax,%rax,1)
   0.04%   │     │  │ │  │││  ││  0x00007fa124655820:   cmp    %r11d,%r8d                   ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
           │     │  │ │  │││  ││                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
           │     │  │ │  │││  ││                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
           │     │  │ │  │││  ││                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
           │     │  │ │  │││  ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           │     │  │ │  │││  ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa0ac0caf28::apply@14
           │     │  │ │  │││  ││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
           │     │  │ │╭ │││  ││  0x00007fa124655823:   je     0x00007fa12465587b
   0.06%   │     │  │ ││ │││  ││  0x00007fa124655829:   xor    %r10d,%r10d                  ;*goto {reexecute=0 rethrow=0 return_oop=0}
           │     │  │ ││ │││  ││                                                            ; - jdk.incubator.vector.IntVector::compareWithOp@148 (line 2069)
           │     │  │ ││ │││  ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$58@4 (line 2035)
           │     │  │ ││ │││  ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa0ac0cb338::apply@9
           │     │  │ ││ │││  ││                                                            ; - jdk.incubator.vector.IntVector::bTest@53 (line 476)
           │     │  │ ││ │││  ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           │     │  │ ││ │││  ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa0ac0caf28::apply@14
           │     │  │ ││ │││  ││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.08%   │     │  │ ││ │││↗ ││  0x00007fa12465582c:   mov    0x40(%rsp),%r11              ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
           │     │  │ ││ ││││ ││                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
           │     │  │ ││ ││││ ││                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
           │     │  │ ││ ││││ ││                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
           │     │  │ ││ ││││ ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           │     │  │ ││ ││││ ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa0ac0caf28::apply@14
           │     │  │ ││ ││││ ││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.08%   │     │  │ ││ ││││ ││  0x00007fa124655831:   mov    0x18(%r11,%rdi,4),%r8d       ;*iaload {reexecute=0 rethrow=0 return_oop=0}
           │     │  │ ││ ││││ ││                                                            ; - jdk.incubator.vector.IntVector::bTest@52 (line 476)
           │     │  │ ││ ││││ ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           │     │  │ ││ ││││ ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa0ac0caf28::apply@14
           │     │  │ ││ ││││ ││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.09%   │     │  │ ││ ││││ ││  0x00007fa124655836:   mov    0x18(%rdx,%rdi,4),%r11d      ;*iaload {reexecute=0 rethrow=0 return_oop=0}
           │     │  │ ││ ││││ ││                                                            ; - jdk.incubator.vector.IntVector::bTest@47 (line 476)
           │     │  │ ││ ││││ ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           │     │  │ ││ ││││ ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa0ac0caf28::apply@14
           │     │  │ ││ ││││ ││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.06%   │     │  │ ││ ││││ ││  0x00007fa12465583b:   nopl   0x0(%rax,%rax,1)
   0.04%   │     │  │ ││ ││││ ││  0x00007fa124655840:   cmp    %r8d,%r11d                   ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
           │     │  │ ││ ││││ ││                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
           │     │  │ ││ ││││ ││                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
           │     │  │ ││ ││││ ││                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
           │     │  │ ││ ││││ ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           │     │  │ ││ ││││ ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa0ac0caf28::apply@14
           │     │  │ ││ ││││ ││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
           │     │  │ ││╭││││ ││  0x00007fa124655843:   je     0x00007fa124655883
   0.08%   │     │  │ │││││││ ││  0x00007fa124655849:   xor    %r11d,%r11d                  ;*goto {reexecute=0 rethrow=0 return_oop=0}
           │     │  │ │││││││ ││                                                            ; - jdk.incubator.vector.IntVector::compareWithOp@148 (line 2069)
           │     │  │ │││││││ ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$58@4 (line 2035)
           │     │  │ │││││││ ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa0ac0cb338::apply@9
           │     │  │ │││││││ ││                                                            ; - jdk.incubator.vector.IntVector::bTest@53 (line 476)
           │     │  │ │││││││ ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           │     │  │ │││││││ ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa0ac0caf28::apply@14
           │     │  │ │││││││ ││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.04%   │     │  │ │││││││↗││  0x00007fa12465584c:   mov    0x40(%rsp),%r8               ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
           │     │  │ ││││││││││                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
           │     │  │ ││││││││││                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
           │     │  │ ││││││││││                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
           │     │  │ ││││││││││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           │     │  │ ││││││││││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa0ac0caf28::apply@14
           │     │  │ ││││││││││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.06%   │     │  │ ││││││││││  0x00007fa124655851:   mov    0x1c(%r8,%rdi,4),%r9d        ;*iaload {reexecute=0 rethrow=0 return_oop=0}
           │     │  │ ││││││││││                                                            ; - jdk.incubator.vector.IntVector::bTest@52 (line 476)
           │     │  │ ││││││││││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           │     │  │ ││││││││││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa0ac0caf28::apply@14
           │     │  │ ││││││││││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.07%   │     │  │ ││││││││││  0x00007fa124655856:   mov    0x1c(%rdx,%rdi,4),%r8d       ;*iaload {reexecute=0 rethrow=0 return_oop=0}
           │     │  │ ││││││││││                                                            ; - jdk.incubator.vector.IntVector::bTest@47 (line 476)
           │     │  │ ││││││││││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           │     │  │ ││││││││││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa0ac0caf28::apply@14
           │     │  │ ││││││││││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.09%   │     │  │ ││││││││││  0x00007fa12465585b:   nopl   0x0(%rax,%rax,1)
   0.06%   │     │  │ ││││││││││  0x00007fa124655860:   cmp    %r9d,%r8d                    ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
           │     │  │ ││││││││││                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
           │     │  │ ││││││││││                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
           │     │  │ ││││││││││                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
           │     │  │ ││││││││││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           │     │  │ ││││││││││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa0ac0caf28::apply@14
           │     │  │ ││││││││││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
           │     │  │ │││╰││││││  0x00007fa124655863:   jne    0x00007fa1246557c0
   0.02%   │     │  │ │││ ││││││  0x00007fa124655869:   mov    $0x1,%r9d
   0.01%   │     │  │ │││ ╰│││││  0x00007fa12465586f:   jmp    0x00007fa1246557c3
   0.01%   │     │  │ ↘││  │││││  0x00007fa124655874:   mov    $0x1,%ebx
   0.01%   │     │  │  ││  ╰││││  0x00007fa124655879:   jmp    0x00007fa12465580b
   0.05%   │     │  │  ↘│   ││││  0x00007fa12465587b:   mov    $0x1,%r10d
   0.01%   │     │  │   │   ╰│││  0x00007fa124655881:   jmp    0x00007fa12465582c
   0.00%   │     │  │   ↘    │││  0x00007fa124655883:   mov    $0x1,%r11d
           │     │  │        ╰││  0x00007fa124655889:   jmp    0x00007fa12465584c
   0.02%   │     ↘  │         ││  0x00007fa12465588b:   mov    $0x1,%r8d
   0.00%   │        │         ╰│  0x00007fa124655891:   jmp    0x00007fa12465562c
   0.02%   ↘        │          │  0x00007fa124655896:   mov    $0x1,%r10d
   0.01%            │          │  0x00007fa12465589c:   nopl   0x0(%rax)
                    │          ╰  0x00007fa1246558a0:   jmp    0x00007fa12465552c
                    ↘             0x00007fa1246558a5:   mov    0x48(%r15),%r10              ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                                                            ; - jdk.incubator.vector.IntVector::bTest@62 (line 475)
                                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007fa0ac0caf28::apply@14
                                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
                                                                                            ;   {no_reloc}
                                  0x00007fa1246558a9:   mov    0x58(%r15),%r11
                                  0x00007fa1246558ad:   lock addl $0x0,-0x40(%rsp)          ;*putfield payload {reexecute=0 rethrow=0 return_oop=0}
                                                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::&lt;init&gt;@6 (line 160)
....................................................................................................
  23.06%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, level 4, com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector, version 4, compile id 963 

                                                                                     ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
                           0x00007fa124674699:   mov    $0xe,%r9d
                           0x00007fa12467469f:   movabs $0x7f3188a50,%rdi            ;   {oop(a &apos;jdk/incubator/vector/Int512Vector$$Lambda+0x00007fa0ac0c7480&apos;{0x00000007f3188a50})}
                           0x00007fa1246746a9:   xchg   %ax,%ax
                           0x00007fa1246746ab:   call   0x00007fa1246612a0           ; ImmutableOopMap {[24]=Oop [48]=Oop [56]=Oop [64]=Oop [80]=Oop [88]=Oop [96]=Oop }
                                                                                     ;*invokestatic extract {reexecute=0 rethrow=0 return_oop=0}
                                                                                     ; - jdk.incubator.vector.Int512Vector::laneHelper@16 (line 535)
                                                                                     ; - jdk.incubator.vector.Int512Vector::lane@175 (line 528)
                                                                                     ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@79 (line 80)
                                                                                     ;   {static_call}
   0.03%                   0x00007fa1246746b0:   nopl   0x9000a20(%rax,%rax,1)       ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                                     ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                                     ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
                                                                                     ;   {other}
                           0x00007fa1246746b8:   mov    %eax,%r11d                   ;*l2i {reexecute=0 rethrow=0 return_oop=0}
                                                                                     ; - jdk.incubator.vector.Int512Vector::laneHelper@19 (line 535)
                                                                                     ; - jdk.incubator.vector.Int512Vector::lane@175 (line 528)
                                                                                     ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@79 (line 80)
                           0x00007fa1246746bb:   nopl   0x0(%rax,%rax,1)
          ╭                0x00007fa1246746c0:   jmp    0x00007fa124674b1b
   0.09%  │                0x00007fa1246746c5:   mov    %r11d,0x68(%rsp)
   0.04%  │                0x00007fa1246746ca:   movabs $0x7f3010058,%rsi            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f3010058} = &apos;jdk/incubator/vector/Int512Vector&apos;)}
          │                0x00007fa1246746d4:   movabs $0x7ffe7f600,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffe7f600} = int)}
          │                0x00007fa1246746de:   mov    $0x10,%ecx
          │                0x00007fa1246746e3:   mov    0x58(%rsp),%r8               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │                                                                          ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          │                                                                          ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.00%  │                0x00007fa1246746e8:   mov    $0xd,%r9d
          │                0x00007fa1246746ee:   movabs $0x7f3188a50,%rdi            ;   {oop(a &apos;jdk/incubator/vector/Int512Vector$$Lambda+0x00007fa0ac0c7480&apos;{0x00000007f3188a50})}
          │                0x00007fa1246746f8:   data16 xchg %ax,%ax
          │                0x00007fa1246746fb:   call   0x00007fa1246612a0           ; ImmutableOopMap {[24]=Oop [48]=Oop [56]=Oop [64]=Oop [80]=Oop [88]=Oop [96]=Oop }
          │                                                                          ;*invokestatic extract {reexecute=0 rethrow=0 return_oop=0}
          │                                                                          ; - jdk.incubator.vector.Int512Vector::laneHelper@16 (line 535)
          │                                                                          ; - jdk.incubator.vector.Int512Vector::lane@168 (line 527)
          │                                                                          ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@79 (line 80)
          │                                                                          ;   {static_call}
   0.05%  │                0x00007fa124674700:   nopl   0xa000a70(%rax,%rax,1)       ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │                                                                          ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          │                                                                          ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
          │                                                                          ;   {other}
          │                0x00007fa124674708:   mov    %eax,%r11d                   ;*l2i {reexecute=0 rethrow=0 return_oop=0}
          │                                                                          ; - jdk.incubator.vector.Int512Vector::laneHelper@19 (line 535)
          │                                                                          ; - jdk.incubator.vector.Int512Vector::lane@168 (line 527)
          │                                                                          ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@79 (line 80)
          │╭               0x00007fa12467470b:   jmp    0x00007fa124674b1b
   0.09%  ││               0x00007fa124674710:   mov    %r11d,0x68(%rsp)
   0.05%  ││               0x00007fa124674715:   movabs $0x7f3010058,%rsi            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f3010058} = &apos;jdk/incubator/vector/Int512Vector&apos;)}
          ││               0x00007fa12467471f:   movabs $0x7ffe7f600,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffe7f600} = int)}
          ││               0x00007fa124674729:   mov    $0x10,%ecx
          ││               0x00007fa12467472e:   mov    0x58(%rsp),%r8               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││                                                                         ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          ││                                                                         ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.01%  ││               0x00007fa124674733:   mov    $0xc,%r9d
          ││               0x00007fa124674739:   movabs $0x7f3188a50,%rdi            ;   {oop(a &apos;jdk/incubator/vector/Int512Vector$$Lambda+0x00007fa0ac0c7480&apos;{0x00000007f3188a50})}
          ││               0x00007fa124674743:   call   0x00007fa1246612a0           ; ImmutableOopMap {[24]=Oop [48]=Oop [56]=Oop [64]=Oop [80]=Oop [88]=Oop [96]=Oop }
          ││                                                                         ;*invokestatic extract {reexecute=0 rethrow=0 return_oop=0}
          ││                                                                         ; - jdk.incubator.vector.Int512Vector::laneHelper@16 (line 535)
          ││                                                                         ; - jdk.incubator.vector.Int512Vector::lane@161 (line 526)
          ││                                                                         ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@79 (line 80)
          ││                                                                         ;   {static_call}
   0.03%  ││               0x00007fa124674748:   nopl   0xb000ab8(%rax,%rax,1)       ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││                                                                         ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          ││                                                                         ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
          ││                                                                         ;   {other}
          ││               0x00007fa124674750:   mov    %eax,%r11d                   ;*l2i {reexecute=0 rethrow=0 return_oop=0}
          ││                                                                         ; - jdk.incubator.vector.Int512Vector::laneHelper@19 (line 535)
          ││                                                                         ; - jdk.incubator.vector.Int512Vector::lane@161 (line 526)
          ││                                                                         ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@79 (line 80)
          ││╭              0x00007fa124674753:   jmp    0x00007fa124674b1b
   0.07%  │││              0x00007fa124674758:   mov    %r11d,0x68(%rsp)
   0.06%  │││              0x00007fa12467475d:   movabs $0x7f3010058,%rsi            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f3010058} = &apos;jdk/incubator/vector/Int512Vector&apos;)}
          │││              0x00007fa124674767:   movabs $0x7ffe7f600,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffe7f600} = int)}
          │││              0x00007fa124674771:   mov    $0x10,%ecx
          │││              0x00007fa124674776:   mov    0x58(%rsp),%r8               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││                                                                        ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          │││                                                                        ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.01%  │││              0x00007fa12467477b:   mov    $0xb,%r9d
          │││              0x00007fa124674781:   movabs $0x7f3188a50,%rdi            ;   {oop(a &apos;jdk/incubator/vector/Int512Vector$$Lambda+0x00007fa0ac0c7480&apos;{0x00000007f3188a50})}
          │││              0x00007fa12467478b:   call   0x00007fa1246612a0           ; ImmutableOopMap {[24]=Oop [48]=Oop [56]=Oop [64]=Oop [80]=Oop [88]=Oop [96]=Oop }
          │││                                                                        ;*invokestatic extract {reexecute=0 rethrow=0 return_oop=0}
          │││                                                                        ; - jdk.incubator.vector.Int512Vector::laneHelper@16 (line 535)
          │││                                                                        ; - jdk.incubator.vector.Int512Vector::lane@154 (line 525)
          │││                                                                        ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@79 (line 80)
          │││                                                                        ;   {static_call}
   0.03%  │││              0x00007fa124674790:   nopl   0xc000b00(%rax,%rax,1)       ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││                                                                        ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          │││                                                                        ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
          │││                                                                        ;   {other}
          │││              0x00007fa124674798:   mov    %eax,%r11d                   ;*l2i {reexecute=0 rethrow=0 return_oop=0}
          │││                                                                        ; - jdk.incubator.vector.Int512Vector::laneHelper@19 (line 535)
          │││                                                                        ; - jdk.incubator.vector.Int512Vector::lane@154 (line 525)
          │││                                                                        ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@79 (line 80)
          │││              0x00007fa12467479b:   nopl   0x0(%rax,%rax,1)
          │││╭             0x00007fa1246747a0:   jmp    0x00007fa124674b1b
   0.10%  ││││             0x00007fa1246747a5:   mov    %r11d,0x68(%rsp)
   0.05%  ││││             0x00007fa1246747aa:   movabs $0x7f3010058,%rsi            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f3010058} = &apos;jdk/incubator/vector/Int512Vector&apos;)}
          ││││             0x00007fa1246747b4:   movabs $0x7ffe7f600,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffe7f600} = int)}
          ││││             0x00007fa1246747be:   mov    $0x10,%ecx
          ││││             0x00007fa1246747c3:   mov    0x58(%rsp),%r8               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││││                                                                       ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          ││││                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.01%  ││││             0x00007fa1246747c8:   mov    $0xa,%r9d
          ││││             0x00007fa1246747ce:   movabs $0x7f3188a50,%rdi            ;   {oop(a &apos;jdk/incubator/vector/Int512Vector$$Lambda+0x00007fa0ac0c7480&apos;{0x00000007f3188a50})}
          ││││             0x00007fa1246747d8:   data16 xchg %ax,%ax
          ││││             0x00007fa1246747db:   call   0x00007fa1246612a0           ; ImmutableOopMap {[24]=Oop [48]=Oop [56]=Oop [64]=Oop [80]=Oop [88]=Oop [96]=Oop }
          ││││                                                                       ;*invokestatic extract {reexecute=0 rethrow=0 return_oop=0}
          ││││                                                                       ; - jdk.incubator.vector.Int512Vector::laneHelper@16 (line 535)
          ││││                                                                       ; - jdk.incubator.vector.Int512Vector::lane@147 (line 524)
          ││││                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@79 (line 80)
          ││││                                                                       ;   {static_call}
   0.03%  ││││             0x00007fa1246747e0:   nopl   0xd000b50(%rax,%rax,1)       ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││││                                                                       ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          ││││                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
          ││││                                                                       ;   {other}
          ││││             0x00007fa1246747e8:   mov    %eax,%r11d                   ;*l2i {reexecute=0 rethrow=0 return_oop=0}
          ││││                                                                       ; - jdk.incubator.vector.Int512Vector::laneHelper@19 (line 535)
          ││││                                                                       ; - jdk.incubator.vector.Int512Vector::lane@147 (line 524)
          ││││                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@79 (line 80)
          ││││╭            0x00007fa1246747eb:   jmp    0x00007fa124674b1b
   0.08%  │││││            0x00007fa1246747f0:   mov    %r11d,0x68(%rsp)
   0.04%  │││││            0x00007fa1246747f5:   movabs $0x7f3010058,%rsi            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f3010058} = &apos;jdk/incubator/vector/Int512Vector&apos;)}
          │││││            0x00007fa1246747ff:   movabs $0x7ffe7f600,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffe7f600} = int)}
          │││││            0x00007fa124674809:   mov    $0x10,%ecx
          │││││            0x00007fa12467480e:   mov    0x58(%rsp),%r8               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                                      ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          │││││                                                                      ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.01%  │││││            0x00007fa124674813:   mov    $0x9,%r9d
          │││││            0x00007fa124674819:   movabs $0x7f3188a50,%rdi            ;   {oop(a &apos;jdk/incubator/vector/Int512Vector$$Lambda+0x00007fa0ac0c7480&apos;{0x00000007f3188a50})}
          │││││            0x00007fa124674823:   call   0x00007fa1246612a0           ; ImmutableOopMap {[24]=Oop [48]=Oop [56]=Oop [64]=Oop [80]=Oop [88]=Oop [96]=Oop }
          │││││                                                                      ;*invokestatic extract {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                                      ; - jdk.incubator.vector.Int512Vector::laneHelper@16 (line 535)
          │││││                                                                      ; - jdk.incubator.vector.Int512Vector::lane@140 (line 523)
          │││││                                                                      ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@79 (line 80)
          │││││                                                                      ;   {static_call}
   0.03%  │││││            0x00007fa124674828:   nopl   0xe000b98(%rax,%rax,1)       ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                                      ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          │││││                                                                      ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
          │││││                                                                      ;   {other}
          │││││            0x00007fa124674830:   mov    %eax,%r11d                   ;*l2i {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                                      ; - jdk.incubator.vector.Int512Vector::laneHelper@19 (line 535)
          │││││                                                                      ; - jdk.incubator.vector.Int512Vector::lane@140 (line 523)
          │││││                                                                      ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@79 (line 80)
          │││││╭           0x00007fa124674833:   jmp    0x00007fa124674b1b
   0.04%  ││││││           0x00007fa124674838:   mov    %r11d,0x68(%rsp)
   0.06%  ││││││           0x00007fa12467483d:   movabs $0x7f3010058,%rsi            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f3010058} = &apos;jdk/incubator/vector/Int512Vector&apos;)}
          ││││││           0x00007fa124674847:   movabs $0x7ffe7f600,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffe7f600} = int)}
   0.00%  ││││││           0x00007fa124674851:   mov    $0x10,%ecx
          ││││││           0x00007fa124674856:   mov    0x58(%rsp),%r8               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││││││                                                                     ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          ││││││                                                                     ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.01%  ││││││           0x00007fa12467485b:   mov    $0x8,%r9d
          ││││││           0x00007fa124674861:   movabs $0x7f3188a50,%rdi            ;   {oop(a &apos;jdk/incubator/vector/Int512Vector$$Lambda+0x00007fa0ac0c7480&apos;{0x00000007f3188a50})}
          ││││││           0x00007fa12467486b:   call   0x00007fa1246612a0           ; ImmutableOopMap {[24]=Oop [48]=Oop [56]=Oop [64]=Oop [80]=Oop [88]=Oop [96]=Oop }
          ││││││                                                                     ;*invokestatic extract {reexecute=0 rethrow=0 return_oop=0}
          ││││││                                                                     ; - jdk.incubator.vector.Int512Vector::laneHelper@16 (line 535)
          ││││││                                                                     ; - jdk.incubator.vector.Int512Vector::lane@133 (line 522)
          ││││││                                                                     ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@79 (line 80)
          ││││││                                                                     ;   {static_call}
   0.02%  ││││││           0x00007fa124674870:   nopl   0xf000be0(%rax,%rax,1)       ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││││││                                                                     ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          ││││││                                                                     ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
          ││││││                                                                     ;   {other}
          ││││││           0x00007fa124674878:   mov    %eax,%r11d                   ;*l2i {reexecute=0 rethrow=0 return_oop=0}
          ││││││                                                                     ; - jdk.incubator.vector.Int512Vector::laneHelper@19 (line 535)
          ││││││                                                                     ; - jdk.incubator.vector.Int512Vector::lane@133 (line 522)
          ││││││                                                                     ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@79 (line 80)
   0.00%  ││││││           0x00007fa12467487b:   nopl   0x0(%rax,%rax,1)
          ││││││╭          0x00007fa124674880:   jmp    0x00007fa124674b1b
   0.10%  │││││││          0x00007fa124674885:   mov    %r11d,0x68(%rsp)
   0.05%  │││││││          0x00007fa12467488a:   movabs $0x7f3010058,%rsi            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f3010058} = &apos;jdk/incubator/vector/Int512Vector&apos;)}
          │││││││          0x00007fa124674894:   movabs $0x7ffe7f600,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffe7f600} = int)}
          │││││││          0x00007fa12467489e:   mov    $0x10,%ecx
          │││││││          0x00007fa1246748a3:   mov    0x58(%rsp),%r8               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││││││                                                                    ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          │││││││                                                                    ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.01%  │││││││          0x00007fa1246748a8:   mov    $0x7,%r9d
          │││││││          0x00007fa1246748ae:   movabs $0x7f3188a50,%rdi            ;   {oop(a &apos;jdk/incubator/vector/Int512Vector$$Lambda+0x00007fa0ac0c7480&apos;{0x00000007f3188a50})}
          │││││││          0x00007fa1246748b8:   data16 xchg %ax,%ax
          │││││││          0x00007fa1246748bb:   call   0x00007fa1246612a0           ; ImmutableOopMap {[24]=Oop [48]=Oop [56]=Oop [64]=Oop [80]=Oop [88]=Oop [96]=Oop }
          │││││││                                                                    ;*invokestatic extract {reexecute=0 rethrow=0 return_oop=0}
          │││││││                                                                    ; - jdk.incubator.vector.Int512Vector::laneHelper@16 (line 535)
          │││││││                                                                    ; - jdk.incubator.vector.Int512Vector::lane@126 (line 521)
          │││││││                                                                    ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@79 (line 80)
          │││││││                                                                    ;   {static_call}
   0.05%  │││││││          0x00007fa1246748c0:   nopl   0x10000c30(%rax,%rax,1)      ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││││││                                                                    ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          │││││││                                                                    ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
          │││││││                                                                    ;   {other}
          │││││││          0x00007fa1246748c8:   mov    %eax,%r11d                   ;*l2i {reexecute=0 rethrow=0 return_oop=0}
          │││││││                                                                    ; - jdk.incubator.vector.Int512Vector::laneHelper@19 (line 535)
          │││││││                                                                    ; - jdk.incubator.vector.Int512Vector::lane@126 (line 521)
          │││││││                                                                    ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@79 (line 80)
          │││││││╭         0x00007fa1246748cb:   jmp    0x00007fa124674b1b
   0.07%  ││││││││         0x00007fa1246748d0:   mov    %r11d,0x68(%rsp)
   0.05%  ││││││││         0x00007fa1246748d5:   movabs $0x7f3010058,%rsi            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f3010058} = &apos;jdk/incubator/vector/Int512Vector&apos;)}
          ││││││││         0x00007fa1246748df:   movabs $0x7ffe7f600,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffe7f600} = int)}
          ││││││││         0x00007fa1246748e9:   mov    $0x10,%ecx
          ││││││││         0x00007fa1246748ee:   mov    0x58(%rsp),%r8               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││││││││                                                                   ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          ││││││││                                                                   ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.00%  ││││││││         0x00007fa1246748f3:   mov    $0x6,%r9d
          ││││││││         0x00007fa1246748f9:   movabs $0x7f3188a50,%rdi            ;   {oop(a &apos;jdk/incubator/vector/Int512Vector$$Lambda+0x00007fa0ac0c7480&apos;{0x00000007f3188a50})}
          ││││││││         0x00007fa124674903:   call   0x00007fa1246612a0           ; ImmutableOopMap {[24]=Oop [48]=Oop [56]=Oop [64]=Oop [80]=Oop [88]=Oop [96]=Oop }
          ││││││││                                                                   ;*invokestatic extract {reexecute=0 rethrow=0 return_oop=0}
          ││││││││                                                                   ; - jdk.incubator.vector.Int512Vector::laneHelper@16 (line 535)
          ││││││││                                                                   ; - jdk.incubator.vector.Int512Vector::lane@119 (line 520)
          ││││││││                                                                   ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@79 (line 80)
          ││││││││                                                                   ;   {static_call}
   0.01%  ││││││││         0x00007fa124674908:   nopl   0x11000c78(%rax,%rax,1)      ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││││││││                                                                   ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          ││││││││                                                                   ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
          ││││││││                                                                   ;   {other}
          ││││││││         0x00007fa124674910:   mov    %eax,%r11d                   ;*l2i {reexecute=0 rethrow=0 return_oop=0}
          ││││││││                                                                   ; - jdk.incubator.vector.Int512Vector::laneHelper@19 (line 535)
          ││││││││                                                                   ; - jdk.incubator.vector.Int512Vector::lane@119 (line 520)
          ││││││││                                                                   ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@79 (line 80)
          ││││││││╭        0x00007fa124674913:   jmp    0x00007fa124674b1b
   0.07%  │││││││││        0x00007fa124674918:   mov    %r11d,0x68(%rsp)
   0.05%  │││││││││        0x00007fa12467491d:   movabs $0x7f3010058,%rsi            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f3010058} = &apos;jdk/incubator/vector/Int512Vector&apos;)}
          │││││││││        0x00007fa124674927:   movabs $0x7ffe7f600,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffe7f600} = int)}
          │││││││││        0x00007fa124674931:   mov    $0x10,%ecx
          │││││││││        0x00007fa124674936:   mov    0x58(%rsp),%r8               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││││││││                                                                  ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          │││││││││                                                                  ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.01%  │││││││││        0x00007fa12467493b:   mov    $0x5,%r9d
          │││││││││        0x00007fa124674941:   movabs $0x7f3188a50,%rdi            ;   {oop(a &apos;jdk/incubator/vector/Int512Vector$$Lambda+0x00007fa0ac0c7480&apos;{0x00000007f3188a50})}
          │││││││││        0x00007fa12467494b:   call   0x00007fa1246612a0           ; ImmutableOopMap {[24]=Oop [48]=Oop [56]=Oop [64]=Oop [80]=Oop [88]=Oop [96]=Oop }
          │││││││││                                                                  ;*invokestatic extract {reexecute=0 rethrow=0 return_oop=0}
          │││││││││                                                                  ; - jdk.incubator.vector.Int512Vector::laneHelper@16 (line 535)
          │││││││││                                                                  ; - jdk.incubator.vector.Int512Vector::lane@112 (line 519)
          │││││││││                                                                  ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@79 (line 80)
          │││││││││                                                                  ;   {static_call}
   0.01%  │││││││││        0x00007fa124674950:   nopl   0x12000cc0(%rax,%rax,1)      ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││││││││                                                                  ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          │││││││││                                                                  ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
          │││││││││                                                                  ;   {other}
          │││││││││        0x00007fa124674958:   mov    %eax,%r11d                   ;*l2i {reexecute=0 rethrow=0 return_oop=0}
          │││││││││                                                                  ; - jdk.incubator.vector.Int512Vector::laneHelper@19 (line 535)
          │││││││││                                                                  ; - jdk.incubator.vector.Int512Vector::lane@112 (line 519)
          │││││││││                                                                  ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@79 (line 80)
   0.00%  │││││││││        0x00007fa12467495b:   nopl   0x0(%rax,%rax,1)
          │││││││││╭       0x00007fa124674960:   jmp    0x00007fa124674b1b
   0.06%  ││││││││││       0x00007fa124674965:   mov    %r11d,0x68(%rsp)
   0.06%  ││││││││││       0x00007fa12467496a:   movabs $0x7f3010058,%rsi            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f3010058} = &apos;jdk/incubator/vector/Int512Vector&apos;)}
          ││││││││││       0x00007fa124674974:   movabs $0x7ffe7f600,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffe7f600} = int)}
          ││││││││││       0x00007fa12467497e:   mov    $0x10,%ecx
          ││││││││││       0x00007fa124674983:   mov    0x58(%rsp),%r8               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││││││││││                                                                 ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          ││││││││││                                                                 ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.02%  ││││││││││       0x00007fa124674988:   mov    $0x4,%r9d
          ││││││││││       0x00007fa12467498e:   movabs $0x7f3188a50,%rdi            ;   {oop(a &apos;jdk/incubator/vector/Int512Vector$$Lambda+0x00007fa0ac0c7480&apos;{0x00000007f3188a50})}
          ││││││││││       0x00007fa124674998:   data16 xchg %ax,%ax
          ││││││││││       0x00007fa12467499b:   call   0x00007fa1246612a0           ; ImmutableOopMap {[24]=Oop [48]=Oop [56]=Oop [64]=Oop [80]=Oop [88]=Oop [96]=Oop }
          ││││││││││                                                                 ;*invokestatic extract {reexecute=0 rethrow=0 return_oop=0}
          ││││││││││                                                                 ; - jdk.incubator.vector.Int512Vector::laneHelper@16 (line 535)
          ││││││││││                                                                 ; - jdk.incubator.vector.Int512Vector::lane@106 (line 518)
          ││││││││││                                                                 ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@79 (line 80)
          ││││││││││                                                                 ;   {static_call}
   0.01%  ││││││││││       0x00007fa1246749a0:   nopl   0x13000d10(%rax,%rax,1)      ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││││││││││                                                                 ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          ││││││││││                                                                 ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
          ││││││││││                                                                 ;   {other}
          ││││││││││       0x00007fa1246749a8:   mov    %eax,%r11d                   ;*l2i {reexecute=0 rethrow=0 return_oop=0}
          ││││││││││                                                                 ; - jdk.incubator.vector.Int512Vector::laneHelper@19 (line 535)
          ││││││││││                                                                 ; - jdk.incubator.vector.Int512Vector::lane@106 (line 518)
          ││││││││││                                                                 ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@79 (line 80)
          ││││││││││╭      0x00007fa1246749ab:   jmp    0x00007fa124674b1b
   0.08%  │││││││││││      0x00007fa1246749b0:   mov    %r11d,0x68(%rsp)
   0.04%  │││││││││││      0x00007fa1246749b5:   movabs $0x7f3010058,%rsi            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f3010058} = &apos;jdk/incubator/vector/Int512Vector&apos;)}
          │││││││││││      0x00007fa1246749bf:   movabs $0x7ffe7f600,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffe7f600} = int)}
          │││││││││││      0x00007fa1246749c9:   mov    $0x10,%ecx
          │││││││││││      0x00007fa1246749ce:   mov    0x58(%rsp),%r8               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││││││││││                                                                ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          │││││││││││                                                                ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.01%  │││││││││││      0x00007fa1246749d3:   mov    $0x3,%r9d
          │││││││││││      0x00007fa1246749d9:   movabs $0x7f3188a50,%rdi            ;   {oop(a &apos;jdk/incubator/vector/Int512Vector$$Lambda+0x00007fa0ac0c7480&apos;{0x00000007f3188a50})}
          │││││││││││      0x00007fa1246749e3:   call   0x00007fa1246612a0           ; ImmutableOopMap {[24]=Oop [48]=Oop [56]=Oop [64]=Oop [80]=Oop [88]=Oop [96]=Oop }
          │││││││││││                                                                ;*invokestatic extract {reexecute=0 rethrow=0 return_oop=0}
          │││││││││││                                                                ; - jdk.incubator.vector.Int512Vector::laneHelper@16 (line 535)
          │││││││││││                                                                ; - jdk.incubator.vector.Int512Vector::lane@100 (line 517)
          │││││││││││                                                                ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@79 (line 80)
          │││││││││││                                                                ;   {static_call}
   0.03%  │││││││││││      0x00007fa1246749e8:   nopl   0x14000d58(%rax,%rax,1)      ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││││││││││                                                                ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          │││││││││││                                                                ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
          │││││││││││                                                                ;   {other}
          │││││││││││      0x00007fa1246749f0:   mov    %eax,%r11d                   ;*l2i {reexecute=0 rethrow=0 return_oop=0}
          │││││││││││                                                                ; - jdk.incubator.vector.Int512Vector::laneHelper@19 (line 535)
          │││││││││││                                                                ; - jdk.incubator.vector.Int512Vector::lane@100 (line 517)
          │││││││││││                                                                ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@79 (line 80)
          │││││││││││╭     0x00007fa1246749f3:   jmp    0x00007fa124674b1b
   0.08%  ││││││││││││     0x00007fa1246749f8:   mov    %r11d,0x68(%rsp)
   0.04%  ││││││││││││     0x00007fa1246749fd:   movabs $0x7f3010058,%rsi            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f3010058} = &apos;jdk/incubator/vector/Int512Vector&apos;)}
          ││││││││││││     0x00007fa124674a07:   movabs $0x7ffe7f600,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffe7f600} = int)}
   0.01%  ││││││││││││     0x00007fa124674a11:   mov    $0x10,%ecx
          ││││││││││││     0x00007fa124674a16:   mov    0x58(%rsp),%r8               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││││││││││││                                                               ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          ││││││││││││                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.02%  ││││││││││││     0x00007fa124674a1b:   mov    $0x2,%r9d
          ││││││││││││     0x00007fa124674a21:   movabs $0x7f3188a50,%rdi            ;   {oop(a &apos;jdk/incubator/vector/Int512Vector$$Lambda+0x00007fa0ac0c7480&apos;{0x00000007f3188a50})}
          ││││││││││││     0x00007fa124674a2b:   call   0x00007fa1246612a0           ; ImmutableOopMap {[24]=Oop [48]=Oop [56]=Oop [64]=Oop [80]=Oop [88]=Oop [96]=Oop }
          ││││││││││││                                                               ;*invokestatic extract {reexecute=0 rethrow=0 return_oop=0}
          ││││││││││││                                                               ; - jdk.incubator.vector.Int512Vector::laneHelper@16 (line 535)
          ││││││││││││                                                               ; - jdk.incubator.vector.Int512Vector::lane@94 (line 516)
          ││││││││││││                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@79 (line 80)
          ││││││││││││                                                               ;   {static_call}
   0.02%  ││││││││││││     0x00007fa124674a30:   nopl   0x15000da0(%rax,%rax,1)      ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││││││││││││                                                               ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          ││││││││││││                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
          ││││││││││││                                                               ;   {other}
          ││││││││││││     0x00007fa124674a38:   mov    %eax,%r11d                   ;*l2i {reexecute=0 rethrow=0 return_oop=0}
          ││││││││││││                                                               ; - jdk.incubator.vector.Int512Vector::laneHelper@19 (line 535)
          ││││││││││││                                                               ; - jdk.incubator.vector.Int512Vector::lane@94 (line 516)
          ││││││││││││                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@79 (line 80)
          ││││││││││││     0x00007fa124674a3b:   nopl   0x0(%rax,%rax,1)
          ││││││││││││╭    0x00007fa124674a40:   jmp    0x00007fa124674b1b
   0.10%  │││││││││││││    0x00007fa124674a45:   mov    %r11d,0x68(%rsp)
   0.05%  │││││││││││││    0x00007fa124674a4a:   movabs $0x7f3010058,%rsi            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f3010058} = &apos;jdk/incubator/vector/Int512Vector&apos;)}
          │││││││││││││    0x00007fa124674a54:   movabs $0x7ffe7f600,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffe7f600} = int)}
          │││││││││││││    0x00007fa124674a5e:   mov    $0x10,%ecx
          │││││││││││││    0x00007fa124674a63:   mov    0x58(%rsp),%r8               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││││││││││││                                                              ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          │││││││││││││                                                              ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.01%  │││││││││││││    0x00007fa124674a68:   mov    $0x1,%r9d
          │││││││││││││    0x00007fa124674a6e:   movabs $0x7f3188a50,%rdi            ;   {oop(a &apos;jdk/incubator/vector/Int512Vector$$Lambda+0x00007fa0ac0c7480&apos;{0x00000007f3188a50})}
          │││││││││││││    0x00007fa124674a78:   data16 xchg %ax,%ax
          │││││││││││││    0x00007fa124674a7b:   call   0x00007fa1246612a0           ; ImmutableOopMap {[24]=Oop [48]=Oop [56]=Oop [64]=Oop [80]=Oop [88]=Oop [96]=Oop }
          │││││││││││││                                                              ;*invokestatic extract {reexecute=0 rethrow=0 return_oop=0}
          │││││││││││││                                                              ; - jdk.incubator.vector.Int512Vector::laneHelper@16 (line 535)
          │││││││││││││                                                              ; - jdk.incubator.vector.Int512Vector::lane@88 (line 515)
          │││││││││││││                                                              ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@79 (line 80)
          │││││││││││││                                                              ;   {static_call}
   0.03%  │││││││││││││    0x00007fa124674a80:   nopl   0x16000df0(%rax,%rax,1)      ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││││││││││││                                                              ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          │││││││││││││                                                              ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
          │││││││││││││                                                              ;   {other}
          │││││││││││││    0x00007fa124674a88:   mov    %eax,%r11d                   ;*l2i {reexecute=0 rethrow=0 return_oop=0}
          │││││││││││││                                                              ; - jdk.incubator.vector.Int512Vector::laneHelper@19 (line 535)
          │││││││││││││                                                              ; - jdk.incubator.vector.Int512Vector::lane@88 (line 515)
          │││││││││││││                                                              ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@79 (line 80)
          │││││││││││││╭   0x00007fa124674a8b:   jmp    0x00007fa124674b1b
   0.05%  ││││││││││││││   0x00007fa124674a90:   mov    %r11d,0x68(%rsp)
   0.04%  ││││││││││││││   0x00007fa124674a95:   movabs $0x7f3010058,%rsi            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f3010058} = &apos;jdk/incubator/vector/Int512Vector&apos;)}
          ││││││││││││││   0x00007fa124674a9f:   movabs $0x7ffe7f600,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffe7f600} = int)}
          ││││││││││││││   0x00007fa124674aa9:   mov    $0x10,%ecx
          ││││││││││││││   0x00007fa124674aae:   mov    0x58(%rsp),%r8
   0.01%  ││││││││││││││   0x00007fa124674ab3:   xor    %r9d,%r9d                    ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││││││││││││││                                                             ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          ││││││││││││││                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
          ││││││││││││││   0x00007fa124674ab6:   movabs $0x7f3188a50,%rdi            ;   {oop(a &apos;jdk/incubator/vector/Int512Vector$$Lambda+0x00007fa0ac0c7480&apos;{0x00000007f3188a50})}
          ││││││││││││││   0x00007fa124674ac0:   data16 xchg %ax,%ax
          ││││││││││││││   0x00007fa124674ac3:   call   0x00007fa1246612a0           ; ImmutableOopMap {[24]=Oop [48]=Oop [56]=Oop [64]=Oop [80]=Oop [88]=Oop [96]=Oop }
          ││││││││││││││                                                             ;*invokestatic extract {reexecute=0 rethrow=0 return_oop=0}
          ││││││││││││││                                                             ; - jdk.incubator.vector.Int512Vector::laneHelper@16 (line 535)
          ││││││││││││││                                                             ; - jdk.incubator.vector.Int512Vector::lane@82 (line 514)
          ││││││││││││││                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@79 (line 80)
          ││││││││││││││                                                             ;   {static_call}
   0.03%  ││││││││││││││   0x00007fa124674ac8:   nopl   0x17000e38(%rax,%rax,1)      ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││││││││││││││                                                             ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          ││││││││││││││                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
          ││││││││││││││                                                             ;   {other}
          ││││││││││││││   0x00007fa124674ad0:   mov    %eax,%r11d                   ;*l2i {reexecute=0 rethrow=0 return_oop=0}
          ││││││││││││││                                                             ; - jdk.incubator.vector.Int512Vector::laneHelper@19 (line 535)
          ││││││││││││││                                                             ; - jdk.incubator.vector.Int512Vector::lane@82 (line 514)
          ││││││││││││││                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@79 (line 80)
          ││││││││││││││╭  0x00007fa124674ad3:   jmp    0x00007fa124674b1b
   0.06%  │││││││││││││││  0x00007fa124674ad5:   mov    %r11d,0x68(%rsp)
   0.05%  │││││││││││││││  0x00007fa124674ada:   movabs $0x7f3010058,%rsi            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f3010058} = &apos;jdk/incubator/vector/Int512Vector&apos;)}
          │││││││││││││││  0x00007fa124674ae4:   movabs $0x7ffe7f600,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffe7f600} = int)}
          │││││││││││││││  0x00007fa124674aee:   mov    $0x10,%ecx
          │││││││││││││││  0x00007fa124674af3:   mov    0x58(%rsp),%r8               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││││││││││││││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          │││││││││││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.00%  │││││││││││││││  0x00007fa124674af8:   mov    $0xf,%r9d
          │││││││││││││││  0x00007fa124674afe:   movabs $0x7f3188a50,%rdi            ;   {oop(a &apos;jdk/incubator/vector/Int512Vector$$Lambda+0x00007fa0ac0c7480&apos;{0x00000007f3188a50})}
          │││││││││││││││  0x00007fa124674b08:   data16 xchg %ax,%ax
          │││││││││││││││  0x00007fa124674b0b:   call   0x00007fa1246612a0           ; ImmutableOopMap {[24]=Oop [48]=Oop [56]=Oop [64]=Oop [80]=Oop [88]=Oop [96]=Oop }
          │││││││││││││││                                                            ;*invokestatic extract {reexecute=0 rethrow=0 return_oop=0}
          │││││││││││││││                                                            ; - jdk.incubator.vector.Int512Vector::laneHelper@16 (line 535)
          │││││││││││││││                                                            ; - jdk.incubator.vector.Int512Vector::lane@182 (line 529)
          │││││││││││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@79 (line 80)
          │││││││││││││││                                                            ;   {static_call}
   0.02%  │││││││││││││││  0x00007fa124674b10:   nopl   0x18000e80(%rax,%rax,1)      ;   {other}
          │││││││││││││││  0x00007fa124674b18:   mov    %eax,%r11d
   0.04%  ↘↘↘↘↘↘↘↘↘↘↘↘↘↘↘  0x00007fa124674b1b:   mov    0x50(%rsp),%r10
   0.16%                   0x00007fa124674b20:   mov    0x2c(%r10),%r10d
   0.21%                   0x00007fa124674b24:   mov    0x50(%rsp),%r8               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                                     ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                                     ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.02%                   0x00007fa124674b29:   mov    0xc(%r8),%ecx                ;*getfield laneCount {reexecute=0 rethrow=0 return_oop=0}
                                                                                     ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@8 (line 3847)
                                                                                     ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3857)
                                                                                     ; - jdk.incubator.vector.IntVector::broadcast@7 (line 611)
                                                                                     ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@87 (line 81)
   0.04%                   0x00007fa124674b2d:   movslq %r11d,%r8                    ;*i2l {reexecute=0 rethrow=0 return_oop=0}
                                                                                     ; - jdk.incubator.vector.IntVector::toBits@1 (line 500)
                                                                                     ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@2 (line 3857)
                                                                                     ; - jdk.incubator.vector.IntVector::broadcast@7 (line 611)
                                                                                     ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@87 (line 81)
                           0x00007fa124674b30:   mov    %r10,%rsi
                           0x00007fa124674b33:   shl    $0x3,%rsi
   0.02%                   0x00007fa124674b37:   movabs $0x7ffe7f600,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffe7f600} = int)}
   0.04%                   0x00007fa124674b41:   xor    %r9d,%r9d
                           0x00007fa124674b44:   mov    0x50(%rsp),%rdi
                           0x00007fa124674b49:   movabs $0x7f3010490,%r10            ;   {oop(a &apos;jdk/incubator/vector/IntVector$IntSpecies$$Lambda+0x00007fa0ac0c6c60&apos;{0x00000007f3010490})}
   0.02%                   0x00007fa124674b53:   mov    %r10,(%rsp)
   0.12%                   0x00007fa124674b57:   call   0x00007fa124652ce0           ; ImmutableOopMap {[24]=Oop [48]=Oop [56]=Oop [64]=Oop [80]=Oop [88]=Oop [96]=Oop }
                                                                                     ;*invokestatic fromBitsCoerced {reexecute=0 rethrow=0 return_oop=1}
                                                                                     ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@19 (line 3848)
                                                                                     ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3857)
                                                                                     ; - jdk.incubator.vector.IntVector::broadcast@7 (line 611)
                                                                                     ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@87 (line 81)
                                                                                     ;   {static_call}
   0.01%                   0x00007fa124674b5c:   nopl   0x19000ecc(%rax,%rax,1)      ;   {other}
                           0x00007fa124674b64:   mov    0x8(%rax),%r10d              ; implicit exception: dispatches to 0x00007fa1246756e0
   0.07%                   0x00007fa124674b68:   cmp    $0x103ef90,%r10d             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                                     ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                                     ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
                                                                                     ;   {metadata(&apos;jdk/incubator/vector/Int512Vector&apos;)}
                           0x00007fa124674b6f:   jne    0x00007fa124675328           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                                                     ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@22 (line 3848)
                                                                                     ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3857)
                                                                                     ; - jdk.incubator.vector.IntVector::broadcast@7 (line 611)
                                                                                     ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@87 (line 81)
   0.06%                   0x00007fa124674b75:   mov    %rax,0x70(%rsp)
   0.19%                   0x00007fa124674b7a:   mov    $0x3,%esi
   0.00%                   0x00007fa124674b7f:   movabs $0x7f3010058,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f3010058} = &apos;jdk/incubator/vector/Int512Vector&apos;)}
   0.03%                   0x00007fa124674b89:   movabs $0x7f30081d8,%rcx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f30081d8} = &apos;jdk/incubator/vector/Int512Vector$Int512Mask&apos;)}
                           0x00007fa124674b93:   movabs $0x7ffe7f600,%r8             ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffe7f600} = int)}
   0.04%                   0x00007fa124674b9d:   mov    $0x10,%r9d
                           0x00007fa124674ba3:   mov    0x58(%rsp),%rdi
   0.05%                   0x00007fa124674ba8:   mov    %rax,(%rsp)
   0.01%                   0x00007fa124674bac:   xor    %r10d,%r10d
   0.04%                   0x00007fa124674baf:   mov    %r10,0x8(%rsp)
                           0x00007fa124674bb4:   movabs $0x7f3008258,%r10            ;   {oop(a &apos;jdk/incubator/vector/IntVector$$Lambda+0x00007fa0ac0caf28&apos;{0x00000007f3008258})}
   0.03%                   0x00007fa124674bbe:   mov    %r10,0x10(%rsp)
   0.00%                   0x00007fa124674bc3:   call   0x00007fa124655380           ; ImmutableOopMap {[24]=Oop [48]=Oop [56]=Oop [64]=Oop [80]=Oop [88]=Oop [96]=Oop [112]=Oop }
                                                                                     ;*invokestatic compare {reexecute=0 rethrow=0 return_oop=1}
                                                                                     ; - jdk.incubator.vector.IntVector::compareTemplate@42 (line 2029)
                                                                                     ; - jdk.incubator.vector.Int512Vector::compare@5 (line 384)
                                                                                     ; - jdk.incubator.vector.Int512Vector::compare@3 (line 41)
                                                                                     ; - jdk.incubator.vector.IntVector::lt@5 (line 1933)
                                                                                     ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@96 (line 82)
                                                                                     ;   {static_call}
   0.00%                   0x00007fa124674bc8:   nopl   0x1a000f38(%rax,%rax,1)      ;   {other}
   0.06%                   0x00007fa124674bd0:   mov    0x8(%rax),%r10d              ; implicit exception: dispatches to 0x00007fa124675720
                           0x00007fa124674bd4:   nopl   0x0(%rax,%rax,1)
   0.01%                   0x00007fa124674bdc:   data16 data16 xchg %ax,%ax
   0.00%                   0x00007fa124674be0:   cmp    $0x103f610,%r10d             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                                     ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                                     ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
                                                                                     ;   {metadata(&apos;jdk/incubator/vector/Int512Vector$Int512Mask&apos;)}
                           0x00007fa124674be7:   jne    0x00007fa124675378
   0.09%                   0x00007fa124674bed:   mov    %rax,%r9                     ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                                                     ; - jdk.incubator.vector.IntVector::compareTemplate@45 (line 2029)
                                                                                     ; - jdk.incubator.vector.Int512Vector::compare@5 (line 384)
                                                                                     ; - jdk.incubator.vector.Int512Vector::compare@3 (line 41)
                                                                                     ; - jdk.incubator.vector.IntVector::lt@5 (line 1933)
                                                                                     ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@96 (line 82)
   0.00%                   0x00007fa124674bf0:   mov    $0x14,%esi
                           0x00007fa124674bf5:   movabs $0x7f30081d8,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f30081d8} = &apos;jdk/incubator/vector/Int512Vector$Int512Mask&apos;)}
                           0x00007fa124674bff:   movabs $0x7ffe7f600,%rcx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffe7f600} = int)}
   0.08%                   0x00007fa124674c09:   mov    $0x10,%r8d
   0.00%                   0x00007fa124674c0f:   movabs $0x7f3008540,%rdi            ;   {oop(a &apos;jdk/incubator/vector/Int512Vector$Int512Mask$$Lambda+0x00007fa0ac0cb748&apos;{0x00000007f3008540})}
   0.00%                   0x00007fa124674c19:   xchg   %ax,%ax
                           0x00007fa124674c1b:   call   0x00007fa12465a3c0           ; ImmutableOopMap {[24]=Oop [48]=Oop [56]=Oop [64]=Oop [80]=Oop [88]=Oop [96]=Oop [112]=Oop }
                                                                                     ;*invokestatic maskReductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                                                                                     ; - jdk.incubator.vector.Int512Vector$Int512Mask::trueCount@16 (line 743)
                                                                                     ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@99 (line 82)
                                                                                     ;   {static_call}
   0.10%                   0x00007fa124674c20:   nopl   0x1b000f90(%rax,%rax,1)      ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                                     ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                                     ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
                                                                                     ;   {other}
                           0x00007fa124674c28:   mov    %eax,%ebp                    ;*l2i {reexecute=0 rethrow=0 return_oop=0}
                                                                                     ; - jdk.incubator.vector.Int512Vector$Int512Mask::trueCount@19 (line 743)
                                                                                     ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@99 (line 82)
                           0x00007fa124674c2a:   xor    %esi,%esi
                           0x00007fa124674c2c:   movabs $0x7f3010058,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f3010058} = &apos;jdk/incubator/vector/Int512Vector&apos;)}
   0.24%                   0x00007fa124674c36:   movabs $0x7f30081d8,%rcx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f30081d8} = &apos;jdk/incubator/vector/Int512Vector$Int512Mask&apos;)}
                           0x00007fa124674c40:   movabs $0x7ffe7f600,%r8             ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffe7f600} = int)}
   0.02%                   0x00007fa124674c4a:   mov    $0x10,%r9d
                           0x00007fa124674c50:   mov    0x58(%rsp),%rdi
   0.57%                   0x00007fa124674c55:   mov    0x70(%rsp),%r10
   0.01%                   0x00007fa124674c5a:   mov    %r10,(%rsp)
   0.29%                   0x00007fa124674c5e:   xor    %r10d,%r10d
                           0x00007fa124674c61:   mov    %r10,0x8(%rsp)
   0.12%                   0x00007fa124674c66:   movabs $0x7f3008258,%r10            ;   {oop(a &apos;jdk/incubator/vector/IntVector$$Lambda+0x00007fa0ac0caf28&apos;{0x00000007f3008258})}
                           0x00007fa124674c70:   mov    %r10,0x10(%rsp)              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                                     ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                                     ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.01%                   0x00007fa124674c75:   xchg   %ax,%ax
                           0x00007fa124674c77:   call   0x00007fa124655380           ; ImmutableOopMap {[24]=Oop [48]=Oop [56]=Oop [64]=Oop [80]=Oop [88]=Oop [96]=Oop [112]=Oop }
                                                                                     ;*invokestatic compare {reexecute=0 rethrow=0 return_oop=1}
                                                                                     ; - jdk.incubator.vector.IntVector::compareTemplate@42 (line 2029)
                                                                                     ; - jdk.incubator.vector.Int512Vector::compare@5 (line 384)
                                                                                     ; - jdk.incubator.vector.Int512Vector::compare@3 (line 41)
                                                                                     ; - jdk.incubator.vector.IntVector::eq@5 (line 1905)
                                                                                     ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@108 (line 83)
                                                                                     ;   {static_call}
   0.01%                   0x00007fa124674c7c:   nopl   0x1c000fec(%rax,%rax,1)      ;   {other}
   0.07%                   0x00007fa124674c84:   mov    0x8(%rax),%r10d              ; implicit exception: dispatches to 0x00007fa12467576c
                           0x00007fa124674c88:   cmp    $0x103f610,%r10d             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                                     ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                                     ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
                                                                                     ;   {metadata(&apos;jdk/incubator/vector/Int512Vector$Int512Mask&apos;)}
                           0x00007fa124674c8f:   jne    0x00007fa1246753d0
   0.00%                   0x00007fa124674c95:   mov    %rax,%r9                     ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                                                     ; - jdk.incubator.vector.IntVector::compareTemplate@45 (line 2029)
                                                                                     ; - jdk.incubator.vector.Int512Vector::compare@5 (line 384)
                                                                                     ; - jdk.incubator.vector.Int512Vector::compare@3 (line 41)
                                                                                     ; - jdk.incubator.vector.IntVector::eq@5 (line 1905)
                                                                                     ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@108 (line 83)
                           0x00007fa124674c98:   mov    $0x14,%esi
   0.07%                   0x00007fa124674c9d:   movabs $0x7f30081d8,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f30081d8} = &apos;jdk/incubator/vector/Int512Vector$Int512Mask&apos;)}
                           0x00007fa124674ca7:   movabs $0x7ffe7f600,%rcx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffe7f600} = int)}
   0.00%                   0x00007fa124674cb1:   mov    $0x10,%r8d
                           0x00007fa124674cb7:   movabs $0x7f3008540,%rdi            ;   {oop(a &apos;jdk/incubator/vector/Int512Vector$Int512Mask$$Lambda+0x00007fa0ac0cb748&apos;{0x00000007f3008540})}
   0.05%                   0x00007fa124674cc1:   xchg   %ax,%ax
   0.00%                   0x00007fa124674cc3:   call   0x00007fa12465a3c0           ; ImmutableOopMap {[24]=Oop [48]=Oop [56]=Oop [64]=Oop [80]=Oop [88]=Oop [96]=Oop [112]=Oop }
                                                                                     ;*invokestatic maskReductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                                                                                     ; - jdk.incubator.vector.Int512Vector$Int512Mask::trueCount@16 (line 743)
                                                                                     ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@111 (line 83)
                                                                                     ;   {static_call}
   0.08%                   0x00007fa124674cc8:   nopl   0x1d001038(%rax,%rax,1)      ;   {other}
   0.01%                   0x00007fa124674cd0:   mov    0x50(%rsp),%r10
   0.58%                   0x00007fa124674cd5:   mov    0x2c(%r10),%r10d
   0.29%                   0x00007fa124674cd9:   mov    0x50(%rsp),%r11              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                                     ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                                     ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
                           0x00007fa124674cde:   mov    0xc(%r11),%ecx               ;*getfield laneCount {reexecute=0 rethrow=0 return_oop=0}
                                                                                     ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@8 (line 3847)
                                                                                     ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@6 (line 3863)
                                                                                     ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@2 (line 3804)
                                                                                     ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@124 (line 86)
   0.04%                   0x00007fa124674ce2:   mov    %eax,%r11d
                           0x00007fa124674ce5:   add    %ebp,%r11d
   0.03%                   0x00007fa124674ce8:   mov    %r10,%rsi
                           0x00007fa124674ceb:   shl    $0x3,%rsi                    ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                                     ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                                     ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.04%                   0x00007fa124674cef:   movslq %r11d,%r8                    ;*i2l {reexecute=0 rethrow=0 return_oop=0}
                                                                                     ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@123 (line 84)
                           0x00007fa124674cf2:   movabs $0x7ffe7f600,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffe7f600} = int)}
   0.05%                   0x00007fa124674cfc:   xor    %r9d,%r9d
                           0x00007fa124674cff:   mov    0x50(%rsp),%rdi
   0.04%                   0x00007fa124674d04:   movabs $0x7f3010490,%r10            ;   {oop(a &apos;jdk/incubator/vector/IntVector$IntSpecies$$Lambda+0x00007fa0ac0c6c60&apos;{0x00000007f3010490})}
                           0x00007fa124674d0e:   mov    %r10,(%rsp)                  ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                                     ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                                     ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.03%                   0x00007fa124674d12:   nop
                           0x00007fa124674d13:   call   0x00007fa124652ce0           ; ImmutableOopMap {[24]=Oop [48]=Oop [56]=Oop [64]=Oop [80]=Oop [88]=Oop [96]=Oop [112]=Oop }
                                                                                     ;*invokestatic fromBitsCoerced {reexecute=0 rethrow=0 return_oop=1}
                                                                                     ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@19 (line 3848)
                                                                                     ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@6 (line 3863)
                                                                                     ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@2 (line 3804)
                                                                                     ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@124 (line 86)
                                                                                     ;   {static_call}
   0.00%                   0x00007fa124674d18:   nopl   0x1e001088(%rax,%rax,1)      ;   {other}
                           0x00007fa124674d20:   mov    0x8(%rax),%r11d              ; implicit exception: dispatches to 0x00007fa124675794
   0.10%                   0x00007fa124674d24:   cmp    $0x103ef90,%r11d             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                                     ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                                     ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
                                                                                     ;   {metadata(&apos;jdk/incubator/vector/Int512Vector&apos;)}
                           0x00007fa124674d2b:   jne    0x00007fa124675408           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                                                     ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@22 (line 3848)
                                                                                     ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@6 (line 3863)
                                                                                     ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@2 (line 3804)
                                                                                     ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@124 (line 86)
   0.07%                   0x00007fa124674d31:   mov    $0x3,%esi
                           0x00007fa124674d36:   movabs $0x7f3010058,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f3010058} = &apos;jdk/incubator/vector/Int512Vector&apos;)}
                           0x00007fa124674d40:   movabs $0x7f30081d8,%rcx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f30081d8} = &apos;jdk/incubator/vector/Int512Vector$Int512Mask&apos;)}
   0.01%                   0x00007fa124674d4a:   movabs $0x7ffe7f600,%r8             ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffe7f600} = int)}
   0.06%                   0x00007fa124674d54:   mov    $0x10,%r9d
                           0x00007fa124674d5a:   mov    0x60(%rsp),%rdi
   0.04%                   0x00007fa124674d5f:   mov    %rax,(%rsp)
   0.10%                   0x00007fa124674d63:   xor    %r10d,%r10d
                           0x00007fa124674d66:   mov    %r10,0x8(%rsp)
   0.06%                   0x00007fa124674d6b:   movabs $0x7f3008258,%r10            ;   {oop(a &apos;jdk/incubator/vector/IntVector$$Lambda+0x00007fa0ac0caf28&apos;{0x00000007f3008258})}
   0.00%                   0x00007fa124674d75:   mov    %r10,0x10(%rsp)              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                                     ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                                     ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.11%                   0x00007fa124674d7a:   nop
                           0x00007fa124674d7b:   call   0x00007fa124655380           ; ImmutableOopMap {[24]=Oop [48]=Oop [56]=Oop [64]=Oop [80]=Oop [88]=Oop [96]=Oop [112]=Oop }
                                                                                     ;*invokestatic compare {reexecute=0 rethrow=0 return_oop=1}
                                                                                     ; - jdk.incubator.vector.IntVector::compareTemplate@42 (line 2029)
                                                                                     ; - jdk.incubator.vector.Int512Vector::compare@5 (line 384)
                                                                                     ; - jdk.incubator.vector.Int512Vector::compare@3 (line 41)
                                                                                     ; - jdk.incubator.vector.IntVector::lt@5 (line 1933)
                                                                                     ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@129 (line 86)
                                                                                     ;   {static_call}
   0.00%                   0x00007fa124674d80:   nopl   0x1f0010f0(%rax,%rax,1)      ;   {other}
   0.08%                   0x00007fa124674d88:   mov    0x8(%rax),%r11d              ; implicit exception: dispatches to 0x00007fa1246757bc
                           0x00007fa124674d8c:   cmp    $0x103f610,%r11d             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                                     ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                                     ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
                                                                                     ;   {metadata(&apos;jdk/incubator/vector/Int512Vector$Int512Mask&apos;)}
                           0x00007fa124674d93:   jne    0x00007fa124675440           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                                                     ; - jdk.incubator.vector.IntVector::compareTemplate@45 (line 2029)
                                                                                     ; - jdk.incubator.vector.Int512Vector::compare@5 (line 384)
                                                                                     ; - jdk.incubator.vector.Int512Vector::compare@3 (line 41)
                                                                                     ; - jdk.incubator.vector.IntVector::lt@5 (line 1933)
                                                                                     ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@129 (line 86)
   0.00%                   0x00007fa124674d99:   mov    %rax,0x78(%rsp)
   0.06%                   0x00007fa124674d9e:   mov    0x50(%rsp),%r10
   0.01%                   0x00007fa124674da3:   mov    0x2c(%r10),%r11d             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                                     ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                                     ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.02%                   0x00007fa124674da7:   mov    0xc(%r10),%ecx               ;*getfield laneCount {reexecute=0 rethrow=0 return_oop=0}
                                                                                     ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@8 (line 3847)
                                                                                     ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@6 (line 3863)
                                                                                     ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@2 (line 3804)
                                                                                     ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@137 (line 87)
   0.00%                   0x00007fa124674dab:   movslq %ebp,%r8                     ;*i2l {reexecute=0 rethrow=0 return_oop=0}
                                                                                     ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@136 (line 86)
   0.05%                   0x00007fa124674dae:   mov    %r11,%rsi
                           0x00007fa124674db1:   shl    $0x3,%rsi
   0.01%                   0x00007fa124674db5:   movabs $0x7ffe7f600,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffe7f600} = int)}
   0.00%                   0x00007fa124674dbf:   xor    %r9d,%r9d
   0.05%                   0x00007fa124674dc2:   mov    %r10,%rdi
                           0x00007fa124674dc5:   movabs $0x7f3010490,%r10            ;   {oop(a &apos;jdk/incubator/vector/IntVector$IntSpecies$$Lambda+0x00007fa0ac0c6c60&apos;{0x00000007f3010490})}
   0.01%                   0x00007fa124674dcf:   mov    %r10,(%rsp)
                           0x00007fa124674dd3:   call   0x00007fa124652ce0           ; ImmutableOopMap {[24]=Oop [48]=Oop [56]=Oop [64]=Oop [80]=Oop [88]=Oop [96]=Oop [112]=Oop [120]=Oop }
                                                                                     ;*invokestatic fromBitsCoerced {reexecute=0 rethrow=0 return_oop=1}
                                                                                     ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@19 (line 3848)
                                                                                     ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@6 (line 3863)
                                                                                     ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@2 (line 3804)
                                                                                     ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@137 (line 87)
                                                                                     ;   {static_call}
   0.00%                   0x00007fa124674dd8:   nopl   0x20001148(%rax,%rax,1)      ;   {other}
                           0x00007fa124674de0:   mov    0x8(%rax),%r11d              ; implicit exception: dispatches to 0x00007fa1246757e4
   0.19%                   0x00007fa124674de4:   cmp    $0x103ef90,%r11d             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                                     ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                                     ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
                                                                                     ;   {metadata(&apos;jdk/incubator/vector/Int512Vector&apos;)}
                           0x00007fa124674deb:   jne    0x00007fa124675478           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                                                     ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@22 (line 3848)
                                                                                     ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@6 (line 3863)
                                                                                     ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@2 (line 3804)
                                                                                     ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@137 (line 87)
   0.06%                   0x00007fa124674df1:   mov    $0x3,%esi
   0.00%                   0x00007fa124674df6:   movabs $0x7f3010058,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f3010058} = &apos;jdk/incubator/vector/Int512Vector&apos;)}
                           0x00007fa124674e00:   movabs $0x7f30081d8,%rcx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f30081d8} = &apos;jdk/incubator/vector/Int512Vector$Int512Mask&apos;)}
   0.01%                   0x00007fa124674e0a:   movabs $0x7ffe7f600,%r8             ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffe7f600} = int)}
   0.08%                   0x00007fa124674e14:   mov    $0x10,%r9d
   0.00%                   0x00007fa124674e1a:   mov    0x60(%rsp),%rdi
   0.06%                   0x00007fa124674e1f:   mov    %rax,(%rsp)
   0.12%                   0x00007fa124674e23:   xor    %r10d,%r10d
   0.00%                   0x00007fa124674e26:   mov    %r10,0x8(%rsp)
   0.04%                   0x00007fa124674e2b:   movabs $0x7f3008258,%r10            ;   {oop(a &apos;jdk/incubator/vector/IntVector$$Lambda+0x00007fa0ac0caf28&apos;{0x00000007f3008258})}
   0.00%                   0x00007fa124674e35:   mov    %r10,0x10(%rsp)              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                                     ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                                     ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.12%                   0x00007fa124674e3a:   nop
   0.00%                   0x00007fa124674e3b:   call   0x00007fa124655380           ; ImmutableOopMap {[24]=Oop [48]=Oop [56]=Oop [64]=Oop [80]=Oop [88]=Oop [96]=Oop [112]=Oop [120]=Oop }
                                                                                     ;*invokestatic compare {reexecute=0 rethrow=0 return_oop=1}
                                                                                     ; - jdk.incubator.vector.IntVector::compareTemplate@42 (line 2029)
                                                                                     ; - jdk.incubator.vector.Int512Vector::compare@5 (line 384)
                                                                                     ; - jdk.incubator.vector.Int512Vector::compare@3 (line 41)
                                                                                     ; - jdk.incubator.vector.IntVector::lt@5 (line 1933)
                                                                                     ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@142 (line 87)
                                                                                     ;   {static_call}
   0.01%                   0x00007fa124674e40:   nopl   0x210011b0(%rax,%rax,1)      ;   {other}
   0.06%                   0x00007fa124674e48:   mov    0x8(%rax),%r11d              ; implicit exception: dispatches to 0x00007fa124675838
                           0x00007fa124674e4c:   cmp    $0x103f610,%r11d             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                                     ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                                     ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
                                                                                     ;   {metadata(&apos;jdk/incubator/vector/Int512Vector$Int512Mask&apos;)}
                           0x00007fa124674e53:   jne    0x00007fa1246754dc           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                                                     ; - jdk.incubator.vector.IntVector::compareTemplate@45 (line 2029)
                                                                                     ; - jdk.incubator.vector.Int512Vector::compare@5 (line 384)
                                                                                     ; - jdk.incubator.vector.Int512Vector::compare@3 (line 41)
                                                                                     ; - jdk.incubator.vector.IntVector::lt@5 (line 1933)
                                                                                     ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@142 (line 87)
   0.01%                   0x00007fa124674e59:   mov    %rax,0x80(%rsp)
   0.06%                   0x00007fa124674e61:   movabs $0x7f30081d8,%rsi            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f30081d8} = &apos;jdk/incubator/vector/Int512Vector$Int512Mask&apos;)}
                           0x00007fa124674e6b:   movabs $0x7ffe7f600,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffe7f600} = int)}
                           0x00007fa124674e75:   mov    $0x10,%ecx
                           0x00007fa124674e7a:   mov    $0xffffffffffffffff,%r8
   0.07%                   0x00007fa124674e81:   xor    %r9d,%r9d
                           0x00007fa124674e84:   xor    %edi,%edi
                           0x00007fa124674e86:   movabs $0x7f3008578,%r10            ;   {oop(a &apos;jdk/incubator/vector/Int512Vector$Int512Mask$$Lambda+0x00007fa0ac0cb960&apos;{0x00000007f3008578})}
                           0x00007fa124674e90:   mov    %r10,(%rsp)                  ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                                     ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                                     ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.06%                   0x00007fa124674e94:   data16 xchg %ax,%ax
                           0x00007fa124674e97:   call   0x00007fa124652ce0           ; ImmutableOopMap {[24]=Oop [48]=Oop [56]=Oop [64]=Oop [80]=Oop [88]=Oop [96]=Oop [112]=Oop [120]=Oop [128]=Oop }
                                                                                     ;*invokestatic fromBitsCoerced {reexecute=0 rethrow=0 return_oop=1}
                                                                                     ; - jdk.incubator.vector.Int512Vector$Int512Mask::maskAll@25 (line 792)
                                                                                     ; - jdk.incubator.vector.Int512Vector$Int512Mask::not@2 (line 694)
                                                                                     ; - jdk.incubator.vector.Int512Vector$Int512Mask::not@1 (line 581)
                                                                                     ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@145 (line 87)
                                                                                     ;   {static_call}
   0.36%                   0x00007fa124674e9c:   nopl   0x2200120c(%rax,%rax,1)      ;   {other}
                           0x00007fa124674ea4:   mov    0x8(%rax),%r11d              ; implicit exception: dispatches to 0x00007fa12467588c
                           0x00007fa124674ea8:   cmp    $0x103f610,%r11d             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                                     ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                                     ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
                                                                                     ;   {metadata(&apos;jdk/incubator/vector/Int512Vector$Int512Mask&apos;)}
                           0x00007fa124674eaf:   jne    0x00007fa124675540           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                                                     ; - jdk.incubator.vector.Int512Vector$Int512Mask::maskAll@28 (line 792)
                                                                                     ; - jdk.incubator.vector.Int512Vector$Int512Mask::not@2 (line 694)
                                                                                     ; - jdk.incubator.vector.Int512Vector$Int512Mask::not@1 (line 581)
                                                                                     ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@145 (line 87)
   0.00%                   0x00007fa124674eb5:   mov    $0xc,%esi
   0.07%                   0x00007fa124674eba:   movabs $0x7f30081d8,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f30081d8} = &apos;jdk/incubator/vector/Int512Vector$Int512Mask&apos;)}
                           0x00007fa124674ec4:   xor    %ecx,%ecx
                           0x00007fa124674ec6:   movabs $0x7ffe7f600,%r8             ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffe7f600} = int)}
   0.00%                   0x00007fa124674ed0:   mov    $0x10,%r9d
   0.09%                   0x00007fa124674ed6:   mov    0x80(%rsp),%rdi
   0.05%                   0x00007fa124674ede:   mov    %rax,(%rsp)
   0.06%                   0x00007fa124674ee2:   xor    %r10d,%r10d
   0.03%                   0x00007fa124674ee5:   mov    %r10,0x8(%rsp)
   0.06%                   0x00007fa124674eea:   movabs $0x7f30085b0,%r10            ;   {oop(a &apos;jdk/incubator/vector/Int512Vector$Int512Mask$$Lambda+0x00007fa0ac0cbd70&apos;{0x00000007f30085b0})}
   0.00%                   0x00007fa124674ef4:   mov    %r10,0x10(%rsp)              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                                     ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                                     ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.10%                   0x00007fa124674ef9:   xchg   %ax,%ax
   0.03%                   0x00007fa124674efb:   call   0x00007fa12465af00           ; ImmutableOopMap {[24]=Oop [48]=Oop [56]=Oop [64]=Oop [80]=Oop [88]=Oop [96]=Oop [112]=Oop [120]=Oop }
                                                                                     ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=1}
                                                                                     ; - jdk.incubator.vector.Int512Vector$Int512Mask::xor@29 (line 733)
                                                                                     ; - jdk.incubator.vector.Int512Vector$Int512Mask::not@5 (line 694)
                                                                                     ; - jdk.incubator.vector.Int512Vector$Int512Mask::not@1 (line 581)
                                                                                     ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@145 (line 87)
                                                                                     ;   {static_call}
   0.00%                   0x00007fa124674f00:   nopl   0x23001270(%rax,%rax,1)      ;   {other}
                           0x00007fa124674f08:   mov    0x8(%rax),%r11d              ; implicit exception: dispatches to 0x00007fa1246758ec
   0.07%                   0x00007fa124674f0c:   cmp    $0x103f610,%r11d             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                                     ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                                     ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
                                                                                     ;   {metadata(&apos;jdk/incubator/vector/Int512Vector$Int512Mask&apos;)}
                           0x00007fa124674f13:   jne    0x00007fa1246755ac           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                                                     ; - jdk.incubator.vector.Int512Vector$Int512Mask::xor@32 (line 733)
                                                                                     ; - jdk.incubator.vector.Int512Vector$Int512Mask::not@5 (line 694)
                                                                                     ; - jdk.incubator.vector.Int512Vector$Int512Mask::not@1 (line 581)
                                                                                     ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@145 (line 87)
                           0x00007fa124674f19:   mov    $0xa,%esi
   0.01%                   0x00007fa124674f1e:   movabs $0x7f30081d8,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f30081d8} = &apos;jdk/incubator/vector/Int512Vector$Int512Mask&apos;)}
                           0x00007fa124674f28:   xor    %ecx,%ecx
   0.06%                   0x00007fa124674f2a:   movabs $0x7ffe7f600,%r8             ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffe7f600} = int)}
                           0x00007fa124674f34:   mov    $0x10,%r9d
   0.01%                   0x00007fa124674f3a:   mov    0x78(%rsp),%rdi
   0.11%                   0x00007fa124674f3f:   mov    %rax,(%rsp)
   0.01%                   0x00007fa124674f43:   xor    %r10d,%r10d
   0.01%                   0x00007fa124674f46:   mov    %r10,0x8(%rsp)
   0.02%                   0x00007fa124674f4b:   movabs $0x7f30085e8,%r10            ;   {oop(a &apos;jdk/incubator/vector/Int512Vector$Int512Mask$$Lambda+0x00007fa0ac0cc398&apos;{0x00000007f30085e8})}
   0.05%                   0x00007fa124674f55:   mov    %r10,0x10(%rsp)              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                                     ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                                     ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.03%                   0x00007fa124674f5a:   nop
   0.00%                   0x00007fa124674f5b:   call   0x00007fa12465af00           ; ImmutableOopMap {[24]=Oop [48]=Oop [56]=Oop [64]=Oop [80]=Oop [88]=Oop [96]=Oop [112]=Oop }
                                                                                     ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=1}
                                                                                     ; - jdk.incubator.vector.Int512Vector$Int512Mask::and@29 (line 713)
                                                                                     ; - jdk.incubator.vector.Int512Vector$Int512Mask::and@2 (line 581)
                                                                                     ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@148 (line 87)
                                                                                     ;   {static_call}
   0.01%                   0x00007fa124674f60:   nopl   0x240012d0(%rax,%rax,1)      ;   {other}
   0.01%                   0x00007fa124674f68:   mov    0x8(%rax),%r11d              ; implicit exception: dispatches to 0x00007fa124675940
   0.02%                   0x00007fa124674f6c:   cmp    $0x103f610,%r11d             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                                     ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                                     ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
                                                                                     ;   {metadata(&apos;jdk/incubator/vector/Int512Vector$Int512Mask&apos;)}
                           0x00007fa124674f73:   jne    0x00007fa124675610           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                                                     ; - jdk.incubator.vector.Int512Vector$Int512Mask::and@32 (line 713)
                                                                                     ; - jdk.incubator.vector.Int512Vector$Int512Mask::and@2 (line 581)
                                                                                     ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@148 (line 87)
   0.05%                   0x00007fa124674f79:   movabs $0x7f3010058,%rsi            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f3010058} = &apos;jdk/incubator/vector/Int512Vector&apos;)}
                           0x00007fa124674f83:   movabs $0x7f30081d8,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f30081d8} = &apos;jdk/incubator/vector/Int512Vector$Int512Mask&apos;)}
   0.01%                   0x00007fa124674f8d:   movabs $0x7ffe7f600,%rcx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffe7f600} = int)}
   0.01%                   0x00007fa124674f97:   mov    $0x10,%r8d
   0.05%                   0x00007fa124674f9d:   mov    0x30(%rsp),%r9
   0.04%                   0x00007fa124674fa2:   mov    0x70(%rsp),%rdi
   0.02%                   0x00007fa124674fa7:   mov    %rax,(%rsp)
   0.14%                   0x00007fa124674fab:   movabs $0x7f318ee18,%r10            ;   {oop(a &apos;jdk/incubator/vector/IntVector$$Lambda+0x00007fa0ac0cc9c0&apos;{0x00000007f318ee18})}
   0.01%                   0x00007fa124674fb5:   mov    %r10,0x8(%rsp)               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                                     ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                                     ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.05%                   0x00007fa124674fba:   nop
   0.00%                   0x00007fa124674fbb:   call   0x00007fa124661f80           ; ImmutableOopMap {[24]=Oop [56]=Oop [64]=Oop [80]=Oop [88]=Oop [96]=Oop }
                                                                                     ;*invokestatic blend {reexecute=0 rethrow=0 return_oop=1}
                                                                                     ; - jdk.incubator.vector.IntVector::blendTemplate@26 (line 2182)
                                                                                     ; - jdk.incubator.vector.Int512Vector::blend@11 (line 410)
                                                                                     ; - jdk.incubator.vector.Int512Vector::blend@3 (line 41)
                                                                                     ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@158 (line 88)
                                                                                     ;   {static_call}
   0.02%                   0x00007fa124674fc0:   nopl   0x25001330(%rax,%rax,1)      ;   {other}
   0.01%                   0x00007fa124674fc8:   mov    0x8(%rax),%r11d              ; implicit exception: dispatches to 0x00007fa12467598c
   0.10%                   0x00007fa124674fcc:   cmp    $0x103ef90,%r11d             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                                     ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                                     ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
                                                                                     ;   {metadata(&apos;jdk/incubator/vector/Int512Vector&apos;)}
                           0x00007fa124674fd3:   jne    0x00007fa124675668           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                                                     ; - jdk.incubator.vector.IntVector::blendTemplate@29 (line 2182)
                                                                                     ; - jdk.incubator.vector.Int512Vector::blend@11 (line 410)
                                                                                     ; - jdk.incubator.vector.Int512Vector::blend@3 (line 41)
                                                                                     ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@158 (line 88)
   0.05%                   0x00007fa124674fd9:   mov    %rax,0x30(%rsp)
   0.08%                   0x00007fa124674fde:   mov    $0x4,%esi
   0.01%                   0x00007fa124674fe3:   movabs $0x7f3010058,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f3010058} = &apos;jdk/incubator/vector/Int512Vector&apos;)}
   0.02%                   0x00007fa124674fed:   xor    %ecx,%ecx
                           0x00007fa124674fef:   movabs $0x7ffe7f600,%r8             ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffe7f600} = int)}
   0.02%                   0x00007fa124674ff9:   mov    $0x10,%r9d
   0.01%                   0x00007fa124674fff:   mov    0x38(%rsp),%rdi
   0.03%                   0x00007fa124675004:   mov    0x40(%rsp),%r10
   0.00%                   0x00007fa124675009:   mov    %r10,(%rsp)
   0.06%                   0x00007fa12467500d:   xor    %r10d,%r10d
   0.01%                   0x00007fa124675010:   mov    %r10,0x8(%rsp)
   0.05%                   0x00007fa124675015:   movabs $0x7f318ee38,%r10            ;   {oop(a &apos;jdk/incubator/vector/IntVector$$Lambda+0x00007fa0ac0cd200&apos;{0x00000007f318ee38})}
                           0x00007fa12467501f:   mov    %r10,0x10(%rsp)              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                                     ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                                     ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.10%                   0x00007fa124675024:   data16 xchg %ax,%ax
   0.01%                   0x00007fa124675027:   call   0x00007fa12465af00           ; ImmutableOopMap {[24]=Oop [48]=Oop [64]=Oop [80]=Oop [88]=Oop [96]=Oop }
                                                                                     ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=1}
                                                                                     ; - jdk.incubator.vector.IntVector::lanewiseTemplate@154 (line 784)
                                                                                     ; - jdk.incubator.vector.Int512Vector::lanewise@3 (line 285)
                                                                                     ; - jdk.incubator.vector.Int512Vector::lanewise@3 (line 41)
                                                                                     ; - jdk.incubator.vector.IntVector::add@5 (line 1352)
                                                                                     ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@166 (line 89)
                                                                                     ;   {static_call}
   0.04%                   0x00007fa12467502c:   nopl   0x2600139c(%rax,%rax,1)      ;   {other}
   0.01%                   0x00007fa124675034:   mov    0x8(%rax),%r11d              ; implicit exception: dispatches to 0x00007fa1246759b8
   0.14%                   0x00007fa124675038:   nopl   0x0(%rax,%rax,1)
   0.02%                   0x00007fa124675040:   cmp    $0x103ef90,%r11d             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                                     ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                                     ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
                                                                                     ;   {metadata(&apos;jdk/incubator/vector/Int512Vector&apos;)}
                           0x00007fa124675047:   jne    0x00007fa1246756a4           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                                                     ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@174 (line 79)
   0.05%                   0x00007fa12467504d:   mov    0x458(%r15),%r10
   0.10%                   0x00007fa124675054:   mov    0x50(%rsp),%r11              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                                     ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                                     ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.14%                   0x00007fa124675059:   mov    0xc(%r11),%r9d               ;*getfield laneCount {reexecute=0 rethrow=0 return_oop=0}
                                                                                     ; - jdk.incubator.vector.AbstractSpecies::length@1 (line 117)
                                                                                     ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@67 (line 79)
   0.23%                   0x00007fa12467505d:   mov    0x68(%rsp),%r11d             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                                     ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                                     ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
                           0x00007fa124675062:   inc    %r11d                        ; ImmutableOopMap {rax=Oop [24]=Oop [48]=Oop [64]=Oop [80]=Oop [88]=Oop [96]=Oop }
                                                                                     ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                                                     ; - (reexecute) com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@174 (line 79)
   0.00%                   0x00007fa124675065:   test   %eax,(%r10)                  ;   {poll}
   0.00%                   0x00007fa124675068:   cmp    %r9d,%r11d                   ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                                     ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                                     ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
                           0x00007fa12467506b:   jge    0x00007fa1246744c5
   0.06%                   0x00007fa124675071:   mov    %rax,0x38(%rsp)              ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                                                     ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@75 (line 80)
                           0x00007fa124675076:   cmp    $0x10,%r11d
                           0x00007fa12467507a:   jae    0x00007fa1246750a7
   0.00%                   0x00007fa12467507c:   movslq %r11d,%r10
   0.00%                   0x00007fa12467507f:   shl    $0x3,%r10                    ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                                     ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                                     ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.05%                   0x00007fa124675083:   movabs $0x7fa1246741c0,%r8          ;   {section_word}
                           0x00007fa12467508d:   jmp    *(%r8,%r10,1)                ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                                                     ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@46 (line 77)
                           0x00007fa124675091:   add    $0xa0,%rsp
                           0x00007fa124675098:   pop    %rbp
                           0x00007fa124675099:   cmp    0x450(%r15),%rsp             ;   {poll_return}
                           0x00007fa1246750a0:   ja     0x00007fa124675c5c
                           0x00007fa1246750a6:   ret    
                           0x00007fa1246750a7:   mov    $0xffffff45,%esi
....................................................................................................
  11.45%  <total for region 2>

....[Hottest Regions]...............................................................................
  23.06%         c2, level 4  jdk.internal.vm.vector.VectorSupport::compare, version 2, compile id 872 
  11.45%         c2, level 4  com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector, version 4, compile id 963 
   8.81%         c2, level 4  jdk.incubator.vector.Int512Vector$Int512Mask$$Lambda.0x00007fa0ac0cbd70::apply, version 2, compile id 920 
   7.86%         c2, level 4  jdk.internal.vm.vector.VectorSupport::blend, version 2, compile id 915 
   7.70%         c2, level 4  jdk.internal.vm.vector.VectorSupport::fromBitsCoerced, version 2, compile id 864 
   6.82%         c2, level 4  jdk.internal.vm.vector.VectorSupport::maskReductionCoerced, version 2, compile id 901 
   6.48%         c2, level 4  jdk.internal.vm.vector.VectorSupport::fromBitsCoerced, version 2, compile id 864 
   5.56%         c2, level 4  jdk.incubator.vector.Int512Vector$Int512Mask$$Lambda.0x00007fa0ac0cc398::apply, version 2, compile id 925 
   3.32%         c2, level 4  jdk.incubator.vector.IntVector$$Lambda.0x00007fa0ac0cd200::apply, version 2, compile id 932 
   2.70%         c2, level 4  jdk.incubator.vector.IntVector$$Lambda.0x00007fa0ac0cd200::apply, version 2, compile id 932 
   2.68%                      <unknown> 
   2.46%         c2, level 4  jdk.internal.vm.vector.VectorSupport::compare, version 2, compile id 872 
   2.27%         c2, level 4  jdk.incubator.vector.Int512Vector$Int512Mask$$Lambda.0x00007fa0ac0cc398::apply, version 2, compile id 925 
   1.60%         c2, level 4  jdk.internal.vm.vector.VectorSupport::binaryOp, version 2, compile id 900 
   1.50%    perf-1956478.map  [unknown] 
   1.33%         c2, level 4  jdk.internal.vm.vector.VectorSupport::extract, version 2, compile id 914 
   0.72%              kernel  [unknown] 
   0.28%         c2, level 4  jdk.incubator.vector.IntVector$$Lambda.0x00007fa0ac0cd200::apply, version 2, compile id 932 
   0.24%         c2, level 4  jdk.internal.vm.vector.VectorSupport::load, version 2, compile id 952 
   0.23%         c2, level 4  com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector, version 4, compile id 963 
   2.94%  <...other 487 warm regions...>
....................................................................................................
 100.00%  <totals>

....[Hottest Methods (after inlining)]..............................................................
  25.53%         c2, level 4  jdk.internal.vm.vector.VectorSupport::compare, version 2, compile id 872 
  14.18%         c2, level 4  jdk.internal.vm.vector.VectorSupport::fromBitsCoerced, version 2, compile id 864 
  11.89%         c2, level 4  com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector, version 4, compile id 963 
   8.81%         c2, level 4  jdk.incubator.vector.Int512Vector$Int512Mask$$Lambda.0x00007fa0ac0cbd70::apply, version 2, compile id 920 
   7.86%         c2, level 4  jdk.internal.vm.vector.VectorSupport::blend, version 2, compile id 915 
   7.82%         c2, level 4  jdk.incubator.vector.Int512Vector$Int512Mask$$Lambda.0x00007fa0ac0cc398::apply, version 2, compile id 925 
   6.82%         c2, level 4  jdk.internal.vm.vector.VectorSupport::maskReductionCoerced, version 2, compile id 901 
   6.37%         c2, level 4  jdk.incubator.vector.IntVector$$Lambda.0x00007fa0ac0cd200::apply, version 2, compile id 932 
   2.79%                      <unknown> 
   2.02%              kernel  [unknown] 
   1.60%         c2, level 4  jdk.internal.vm.vector.VectorSupport::binaryOp, version 2, compile id 900 
   1.50%    perf-1956478.map  [unknown] 
   1.33%         c2, level 4  jdk.internal.vm.vector.VectorSupport::extract, version 2, compile id 914 
   0.29%         c2, level 4  jdk.internal.vm.vector.VectorSupport::load, version 2, compile id 952 
   0.17%         c2, level 4  jdk.internal.vm.vector.VectorSupport::store, version 2, compile id 955 
   0.05%           libjvm.so  G1MergeHeapRootsTask::G1MergeCardSetClosure::do_heap_region 
   0.04%        libc-2.31.so  __memset_avx2_erms 
   0.04%           libjvm.so  G1CardSet::reset_table_scanner 
   0.03%           libjvm.so  ElfSymbolTable::lookup 
   0.03%              [vdso]  __vdso_clock_gettime 
   0.81%  <...other 179 warm methods...>
....................................................................................................
 100.00%  <totals>

....[Distribution by Source]........................................................................
  92.69%         c2, level 4
   2.79%                    
   2.02%              kernel
   1.50%    perf-1956478.map
   0.68%           libjvm.so
   0.16%        libc-2.31.so
   0.07%  libpthread-2.31.so
   0.03%              [vdso]
   0.02%         interpreter
   0.02%          ld-2.31.so
   0.02%      hsdis-amd64.so
   0.00%         c1, level 3
   0.00%    Unknown, level 0
....................................................................................................
 100.00%  <totals>



# JMH version: 1.37
# VM version: JDK 21, OpenJDK 64-Bit Server VM, 21+35-2513
# VM invoker: /home/gogu/bench_jdks/jdk-21/bin/java
# VM options: -Xms4g -Xmx4g -XX:+AlwaysPreTouch --add-modules=jdk.incubator.vector
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark.sortVector
# Parameters: (arraySize = 65536, vectorSize = 64)

# Run progress: 66.67% complete, ETA 00:07:20
# Fork: 1 of 1
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 23659.942 us/op
# Warmup Iteration   2: 17579.754 us/op
# Warmup Iteration   3: 17559.993 us/op
# Warmup Iteration   4: 17541.478 us/op
# Warmup Iteration   5: 17542.775 us/op
Iteration   1: 17542.487 us/op
Iteration   2: 17552.771 us/op
Iteration   3: 17554.061 us/op
Iteration   4: 17555.025 us/op
Iteration   5: 17549.681 us/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark.sortVector":
  17550.805 ±(99.9%) 19.514 us/op [Average]
  (min, avg, max) = (17542.487, 17550.805, 17555.025), stdev = 5.068
  CI (99.9%): [17531.291, 17570.319] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark.sortVector:asm":
PrintAssembly processed: 190292 total address lines.
Perf output processed (skipped 56.810 seconds):
 Column 1: cycles (51184 events)

Hottest code regions (>10.00% "cycles" events):
 Event counts are percents of total event count.

....[Hottest Region 1]..............................................................................
c2, level 4, com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector, version 3, compile id 949 

                   0x00007f5be466bd36:   data16 nopw 0x0(%rax,%rax,1)
                   0x00007f5be466bd40:   mov    0xc(%r12,%rcx,8),%r10d       ; implicit exception: dispatches to 0x00007f5be466cfc0
                   0x00007f5be466bd45:   test   %r10d,%r10d                  ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                             ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
                   0x00007f5be466bd48:   jbe    0x00007f5be466c646
                   0x00007f5be466bd4e:   mov    %rax,%r10
                   0x00007f5be466bd51:   xor    %r11d,%r11d
          ╭        0x00007f5be466bd54:   jmp    0x00007f5be466c410
          │        0x00007f5be466bd59:   nopl   0x0(%rax)
   0.00%  │    ↗   0x00007f5be466bd60:   mov    %r8d,%r10d                   ;*invokevirtual lane {reexecute=0 rethrow=0 return_oop=0}
          │    │                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@79 (line 80)
   0.04%  │    │↗  0x00007f5be466bd63:   vmovq  %xmm0,0x78(%rsp)
   0.07%  │    ││  0x00007f5be466bd69:   mov    %r11d,0x68(%rsp)
   0.01%  │    ││  0x00007f5be466bd6e:   mov    %ecx,0x24(%rsp)
   0.02%  │    ││  0x00007f5be466bd72:   mov    %r8d,0x20(%rsp)
   0.03%  │    ││  0x00007f5be466bd77:   mov    %rax,0x18(%rsp)
   0.10%  │    ││  0x00007f5be466bd7c:   mov    0x50(%rsp),%r11
   0.01%  │    ││  0x00007f5be466bd81:   mov    0x2c(%r11),%r11d
   0.03%  │    ││  0x00007f5be466bd85:   mov    0x50(%rsp),%r8               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.04%  │    ││  0x00007f5be466bd8a:   mov    0xc(%r8),%ecx                ;*getfield laneCount {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@8 (line 3847)
          │    ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3857)
          │    ││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 611)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@87 (line 81)
   0.07%  │    ││  0x00007f5be466bd8e:   movslq %r10d,%r8                    ;*i2l {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - jdk.incubator.vector.IntVector::toBits@1 (line 500)
          │    ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@2 (line 3857)
          │    ││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 611)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@87 (line 81)
   0.00%  │    ││  0x00007f5be466bd91:   mov    %r11,%rsi
   0.02%  │    ││  0x00007f5be466bd94:   shl    $0x3,%rsi
   0.03%  │    ││  0x00007f5be466bd98:   movabs $0x7ffe7f600,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffe7f600} = int)}
   0.08%  │    ││  0x00007f5be466bda2:   xor    %r9d,%r9d
   0.00%  │    ││  0x00007f5be466bda5:   mov    0x50(%rsp),%rdi
   0.02%  │    ││  0x00007f5be466bdaa:   movabs $0x7f3018250,%r10            ;   {oop(a &apos;jdk/incubator/vector/IntVector$IntSpecies$$Lambda+0x00007f5b680c6c60&apos;{0x00000007f3018250})}
   0.04%  │    ││  0x00007f5be466bdb4:   mov    %r10,(%rsp)                  ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.06%  │    ││  0x00007f5be466bdb8:   data16 xchg %ax,%ax
   0.01%  │    ││  0x00007f5be466bdbb:   call   0x00007f5be40c4980           ; ImmutableOopMap {[24]=Oop [56]=Oop [64]=Oop [72]=Oop [80]=Oop [88]=Oop [96]=Oop }
          │    ││                                                            ;*invokestatic fromBitsCoerced {reexecute=0 rethrow=0 return_oop=1}
          │    ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@19 (line 3848)
          │    ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3857)
          │    ││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 611)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@87 (line 81)
          │    ││                                                            ;   {static_call}
   0.02%  │    ││  0x00007f5be466bdc0:   nopl   0x60006b0(%rax,%rax,1)       ;   {other}
   0.01%  │    ││  0x00007f5be466bdc8:   mov    0x8(%rax),%r10d              ; implicit exception: dispatches to 0x00007f5be466cbac
   0.10%  │    ││  0x00007f5be466bdcc:   cmp    $0x103c620,%r10d             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
          │    ││                                                            ;   {metadata(&apos;jdk/incubator/vector/Int64Vector&apos;)}
          │    ││  0x00007f5be466bdd3:   jne    0x00007f5be466c878           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@22 (line 3848)
          │    ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3857)
          │    ││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 611)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@87 (line 81)
   0.02%  │    ││  0x00007f5be466bdd9:   mov    %rax,0x80(%rsp)
   0.37%  │    ││  0x00007f5be466bde1:   mov    $0x3,%esi
   0.01%  │    ││  0x00007f5be466bde6:   movabs $0x7f30180e8,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f30180e8} = &apos;jdk/incubator/vector/Int64Vector&apos;)}
   0.02%  │    ││  0x00007f5be466bdf0:   movabs $0x7f301b0a8,%rcx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f301b0a8} = &apos;jdk/incubator/vector/Int64Vector$Int64Mask&apos;)}
   0.01%  │    ││  0x00007f5be466bdfa:   movabs $0x7ffe7f600,%r8             ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffe7f600} = int)}
   0.10%  │    ││  0x00007f5be466be04:   mov    $0x2,%r9d
   0.01%  │    ││  0x00007f5be466be0a:   mov    0x18(%rsp),%rdi
   0.02%  │    ││  0x00007f5be466be0f:   mov    %rax,(%rsp)
   0.01%  │    ││  0x00007f5be466be13:   xor    %r10d,%r10d
   0.09%  │    ││  0x00007f5be466be16:   mov    %r10,0x8(%rsp)
   0.01%  │    ││  0x00007f5be466be1b:   movabs $0x7f301b1d8,%r10            ;   {oop(a &apos;jdk/incubator/vector/IntVector$$Lambda+0x00007f5b680caf28&apos;{0x00000007f301b1d8})}
   0.02%  │    ││  0x00007f5be466be25:   mov    %r10,0x10(%rsp)              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.31%  │    ││  0x00007f5be466be2a:   nop
   0.01%  │    ││  0x00007f5be466be2b:   call   0x00007f5be40c4980           ; ImmutableOopMap {[24]=Oop [56]=Oop [64]=Oop [72]=Oop [80]=Oop [88]=Oop [96]=Oop [128]=Oop }
          │    ││                                                            ;*invokestatic compare {reexecute=0 rethrow=0 return_oop=1}
          │    ││                                                            ; - jdk.incubator.vector.IntVector::compareTemplate@42 (line 2029)
          │    ││                                                            ; - jdk.incubator.vector.Int64Vector::compare@5 (line 384)
          │    ││                                                            ; - jdk.incubator.vector.Int64Vector::compare@3 (line 41)
          │    ││                                                            ; - jdk.incubator.vector.IntVector::lt@5 (line 1933)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@96 (line 82)
          │    ││                                                            ;   {static_call}
   0.04%  │    ││  0x00007f5be466be30:   nopl   0x7000720(%rax,%rax,1)       ;   {other}
   0.04%  │    ││  0x00007f5be466be38:   nopl   0x0(%rax,%rax,1)
   0.08%  │    ││  0x00007f5be466be40:   mov    0x8(%rax),%r10d              ; implicit exception: dispatches to 0x00007f5be466cbd8
   0.01%  │    ││  0x00007f5be466be44:   cmp    $0x103d288,%r10d             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
          │    ││                                                            ;   {metadata(&apos;jdk/incubator/vector/Int64Vector$Int64Mask&apos;)}
          │    ││  0x00007f5be466be4b:   jne    0x00007f5be466c8b4
   0.03%  │    ││  0x00007f5be466be51:   mov    %rax,%r9                     ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - jdk.incubator.vector.IntVector::compareTemplate@45 (line 2029)
          │    ││                                                            ; - jdk.incubator.vector.Int64Vector::compare@5 (line 384)
          │    ││                                                            ; - jdk.incubator.vector.Int64Vector::compare@3 (line 41)
          │    ││                                                            ; - jdk.incubator.vector.IntVector::lt@5 (line 1933)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@96 (line 82)
   0.03%  │    ││  0x00007f5be466be54:   mov    $0x14,%esi
   0.09%  │    ││  0x00007f5be466be59:   movabs $0x7f301b0a8,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f301b0a8} = &apos;jdk/incubator/vector/Int64Vector$Int64Mask&apos;)}
   0.01%  │    ││  0x00007f5be466be63:   movabs $0x7ffe7f600,%rcx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffe7f600} = int)}
   0.02%  │    ││  0x00007f5be466be6d:   mov    $0x2,%r8d
   0.04%  │    ││  0x00007f5be466be73:   movabs $0x7f301b210,%rdi            ;   {oop(a &apos;jdk/incubator/vector/Int64Vector$Int64Mask$$Lambda+0x00007f5b680cb748&apos;{0x00000007f301b210})}
   0.08%  │    ││  0x00007f5be466be7d:   xchg   %ax,%ax
   0.01%  │    ││  0x00007f5be466be7f:   call   0x00007f5be4655140           ; ImmutableOopMap {[24]=Oop [56]=Oop [64]=Oop [72]=Oop [80]=Oop [88]=Oop [96]=Oop [128]=Oop }
          │    ││                                                            ;*invokestatic maskReductionCoerced {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - jdk.incubator.vector.Int64Vector$Int64Mask::trueCount@16 (line 715)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@99 (line 82)
          │    ││                                                            ;   {static_call}
   0.07%  │    ││  0x00007f5be466be84:   nopl   0x8000774(%rax,%rax,1)       ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
          │    ││                                                            ;   {other}
   0.07%  │    ││  0x00007f5be466be8c:   mov    %eax,%ebp                    ;*l2i {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - jdk.incubator.vector.Int64Vector$Int64Mask::trueCount@19 (line 715)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@99 (line 82)
   0.00%  │    ││  0x00007f5be466be8e:   xor    %esi,%esi
   0.00%  │    ││  0x00007f5be466be90:   movabs $0x7f30180e8,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f30180e8} = &apos;jdk/incubator/vector/Int64Vector&apos;)}
   0.05%  │    ││  0x00007f5be466be9a:   movabs $0x7f301b0a8,%rcx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f301b0a8} = &apos;jdk/incubator/vector/Int64Vector$Int64Mask&apos;)}
   0.15%  │    ││  0x00007f5be466bea4:   movabs $0x7ffe7f600,%r8             ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffe7f600} = int)}
   0.01%  │    ││  0x00007f5be466beae:   mov    $0x2,%r9d
   0.04%  │    ││  0x00007f5be466beb4:   mov    0x18(%rsp),%rdi
   0.74%  │    ││  0x00007f5be466beb9:   mov    0x80(%rsp),%r10
   0.10%  │    ││  0x00007f5be466bec1:   mov    %r10,(%rsp)
   0.38%  │    ││  0x00007f5be466bec5:   xor    %r10d,%r10d
          │    ││  0x00007f5be466bec8:   mov    %r10,0x8(%rsp)
   0.06%  │    ││  0x00007f5be466becd:   movabs $0x7f301b1d8,%r10            ;   {oop(a &apos;jdk/incubator/vector/IntVector$$Lambda+0x00007f5b680caf28&apos;{0x00000007f301b1d8})}
          │    ││  0x00007f5be466bed7:   mov    %r10,0x10(%rsp)              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.24%  │    ││  0x00007f5be466bedc:   data16 xchg %ax,%ax
          │    ││  0x00007f5be466bedf:   call   0x00007f5be464dde0           ; ImmutableOopMap {[24]=Oop [56]=Oop [64]=Oop [72]=Oop [80]=Oop [88]=Oop [96]=Oop [128]=Oop }
          │    ││                                                            ;*invokestatic compare {reexecute=0 rethrow=0 return_oop=1}
          │    ││                                                            ; - jdk.incubator.vector.IntVector::compareTemplate@42 (line 2029)
          │    ││                                                            ; - jdk.incubator.vector.Int64Vector::compare@5 (line 384)
          │    ││                                                            ; - jdk.incubator.vector.Int64Vector::compare@3 (line 41)
          │    ││                                                            ; - jdk.incubator.vector.IntVector::eq@5 (line 1905)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@108 (line 83)
          │    ││                                                            ;   {static_call}
   0.09%  │    ││  0x00007f5be466bee4:   nopl   0x90007d4(%rax,%rax,1)       ;   {other}
   0.02%  │    ││  0x00007f5be466beec:   mov    0x8(%rax),%r10d              ; implicit exception: dispatches to 0x00007f5be466cc10
   0.05%  │    ││  0x00007f5be466bef0:   cmp    $0x103d288,%r10d             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
          │    ││                                                            ;   {metadata(&apos;jdk/incubator/vector/Int64Vector$Int64Mask&apos;)}
          │    ││  0x00007f5be466bef7:   jne    0x00007f5be466c8f8
   0.01%  │    ││  0x00007f5be466befd:   mov    %rax,%r9                     ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - jdk.incubator.vector.IntVector::compareTemplate@45 (line 2029)
          │    ││                                                            ; - jdk.incubator.vector.Int64Vector::compare@5 (line 384)
          │    ││                                                            ; - jdk.incubator.vector.Int64Vector::compare@3 (line 41)
          │    ││                                                            ; - jdk.incubator.vector.IntVector::eq@5 (line 1905)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@108 (line 83)
   0.05%  │    ││  0x00007f5be466bf00:   mov    $0x14,%esi
   0.01%  │    ││  0x00007f5be466bf05:   movabs $0x7f301b0a8,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f301b0a8} = &apos;jdk/incubator/vector/Int64Vector$Int64Mask&apos;)}
   0.03%  │    ││  0x00007f5be466bf0f:   movabs $0x7ffe7f600,%rcx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffe7f600} = int)}
   0.01%  │    ││  0x00007f5be466bf19:   mov    $0x2,%r8d
   0.06%  │    ││  0x00007f5be466bf1f:   movabs $0x7f301b210,%rdi            ;   {oop(a &apos;jdk/incubator/vector/Int64Vector$Int64Mask$$Lambda+0x00007f5b680cb748&apos;{0x00000007f301b210})}
   0.01%  │    ││  0x00007f5be466bf29:   xchg   %ax,%ax
   0.04%  │    ││  0x00007f5be466bf2b:   call   0x00007f5be4655140           ; ImmutableOopMap {[24]=Oop [56]=Oop [64]=Oop [72]=Oop [80]=Oop [88]=Oop [96]=Oop [128]=Oop }
          │    ││                                                            ;*invokestatic maskReductionCoerced {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - jdk.incubator.vector.Int64Vector$Int64Mask::trueCount@16 (line 715)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@111 (line 83)
          │    ││                                                            ;   {static_call}
   0.28%  │    ││  0x00007f5be466bf30:   nopl   0xa000820(%rax,%rax,1)       ;   {other}
   0.03%  │    ││  0x00007f5be466bf38:   mov    0x50(%rsp),%r10
   0.50%  │    ││  0x00007f5be466bf3d:   mov    0x2c(%r10),%r10d
   0.59%  │    ││  0x00007f5be466bf41:   mov    0x50(%rsp),%r11              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.00%  │    ││  0x00007f5be466bf46:   mov    0xc(%r11),%ecx               ;*getfield laneCount {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@8 (line 3847)
          │    ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@6 (line 3863)
          │    ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@2 (line 3804)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@124 (line 86)
   0.15%  │    ││  0x00007f5be466bf4a:   mov    %eax,%r11d
          │    ││  0x00007f5be466bf4d:   add    %ebp,%r11d
          │    ││  0x00007f5be466bf50:   mov    %r10,%rsi
          │    ││  0x00007f5be466bf53:   shl    $0x3,%rsi                    ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.16%  │    ││  0x00007f5be466bf57:   movslq %r11d,%r8                    ;*i2l {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@123 (line 84)
          │    ││  0x00007f5be466bf5a:   movabs $0x7ffe7f600,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffe7f600} = int)}
          │    ││  0x00007f5be466bf64:   xor    %r9d,%r9d
          │    ││  0x00007f5be466bf67:   mov    0x50(%rsp),%rdi
   0.13%  │    ││  0x00007f5be466bf6c:   movabs $0x7f3018250,%r10            ;   {oop(a &apos;jdk/incubator/vector/IntVector$IntSpecies$$Lambda+0x00007f5b680c6c60&apos;{0x00000007f3018250})}
          │    ││  0x00007f5be466bf76:   mov    %r10,(%rsp)                  ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.32%  │    ││  0x00007f5be466bf7a:   nop
   0.00%  │    ││  0x00007f5be466bf7b:   call   0x00007f5be464aa60           ; ImmutableOopMap {[24]=Oop [56]=Oop [64]=Oop [72]=Oop [80]=Oop [88]=Oop [96]=Oop [128]=Oop }
          │    ││                                                            ;*invokestatic fromBitsCoerced {reexecute=0 rethrow=0 return_oop=1}
          │    ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@19 (line 3848)
          │    ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@6 (line 3863)
          │    ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@2 (line 3804)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@124 (line 86)
          │    ││                                                            ;   {static_call}
   0.01%  │    ││  0x00007f5be466bf80:   nopl   0xb000870(%rax,%rax,1)       ;   {other}
   0.00%  │    ││  0x00007f5be466bf88:   mov    0x8(%rax),%r11d              ; implicit exception: dispatches to 0x00007f5be466cc4c
   0.11%  │    ││  0x00007f5be466bf8c:   cmp    $0x103c620,%r11d             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
          │    ││                                                            ;   {metadata(&apos;jdk/incubator/vector/Int64Vector&apos;)}
          │    ││  0x00007f5be466bf93:   jne    0x00007f5be466c944           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@22 (line 3848)
          │    ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@6 (line 3863)
          │    ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@2 (line 3804)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@124 (line 86)
   0.05%  │    ││  0x00007f5be466bf99:   mov    $0x3,%esi
   0.01%  │    ││  0x00007f5be466bf9e:   movabs $0x7f30180e8,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f30180e8} = &apos;jdk/incubator/vector/Int64Vector&apos;)}
   0.00%  │    ││  0x00007f5be466bfa8:   movabs $0x7f301b0a8,%rcx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f301b0a8} = &apos;jdk/incubator/vector/Int64Vector$Int64Mask&apos;)}
   0.09%  │    ││  0x00007f5be466bfb2:   movabs $0x7ffe7f600,%r8             ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffe7f600} = int)}
   0.10%  │    ││  0x00007f5be466bfbc:   mov    $0x2,%r9d
   0.00%  │    ││  0x00007f5be466bfc2:   mov    0x58(%rsp),%rdi
   0.50%  │    ││  0x00007f5be466bfc7:   mov    %rax,(%rsp)
   0.70%  │    ││  0x00007f5be466bfcb:   xor    %r10d,%r10d
          │    ││  0x00007f5be466bfce:   mov    %r10,0x8(%rsp)
   0.04%  │    ││  0x00007f5be466bfd3:   movabs $0x7f301b1d8,%r10            ;   {oop(a &apos;jdk/incubator/vector/IntVector$$Lambda+0x00007f5b680caf28&apos;{0x00000007f301b1d8})}
   0.00%  │    ││  0x00007f5be466bfdd:   mov    %r10,0x10(%rsp)              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.12%  │    ││  0x00007f5be466bfe2:   nop
          │    ││  0x00007f5be466bfe3:   call   0x00007f5be464dde0           ; ImmutableOopMap {[24]=Oop [56]=Oop [64]=Oop [72]=Oop [80]=Oop [88]=Oop [96]=Oop [128]=Oop }
          │    ││                                                            ;*invokestatic compare {reexecute=0 rethrow=0 return_oop=1}
          │    ││                                                            ; - jdk.incubator.vector.IntVector::compareTemplate@42 (line 2029)
          │    ││                                                            ; - jdk.incubator.vector.Int64Vector::compare@5 (line 384)
          │    ││                                                            ; - jdk.incubator.vector.Int64Vector::compare@3 (line 41)
          │    ││                                                            ; - jdk.incubator.vector.IntVector::lt@5 (line 1933)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@129 (line 86)
          │    ││                                                            ;   {static_call}
   0.02%  │    ││  0x00007f5be466bfe8:   nopl   0xc0008d8(%rax,%rax,1)       ;   {other}
   0.02%  │    ││  0x00007f5be466bff0:   mov    0x8(%rax),%r11d              ; implicit exception: dispatches to 0x00007f5be466cc88
   0.09%  │    ││  0x00007f5be466bff4:   nopl   0x0(%rax,%rax,1)
   0.01%  │    ││  0x00007f5be466bffc:   data16 data16 xchg %ax,%ax
   0.02%  │    ││  0x00007f5be466c000:   cmp    $0x103d288,%r11d             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
          │    ││                                                            ;   {metadata(&apos;jdk/incubator/vector/Int64Vector$Int64Mask&apos;)}
          │    ││  0x00007f5be466c007:   jne    0x00007f5be466c998           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - jdk.incubator.vector.IntVector::compareTemplate@45 (line 2029)
          │    ││                                                            ; - jdk.incubator.vector.Int64Vector::compare@5 (line 384)
          │    ││                                                            ; - jdk.incubator.vector.Int64Vector::compare@3 (line 41)
          │    ││                                                            ; - jdk.incubator.vector.IntVector::lt@5 (line 1933)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@129 (line 86)
   0.01%  │    ││  0x00007f5be466c00d:   mov    %rax,0x88(%rsp)
   0.09%  │    ││  0x00007f5be466c015:   mov    0x50(%rsp),%r10              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.02%  │    ││  0x00007f5be466c01a:   mov    0xc(%r10),%ecx               ;*getfield laneCount {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@8 (line 3847)
          │    ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@6 (line 3863)
          │    ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@2 (line 3804)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@137 (line 87)
   0.02%  │    ││  0x00007f5be466c01e:   mov    0x2c(%r10),%r10d             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.13%  │    ││  0x00007f5be466c022:   movslq %ebp,%r8                     ;*i2l {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@136 (line 86)
   0.01%  │    ││  0x00007f5be466c025:   mov    %r10,%rsi
   0.02%  │    ││  0x00007f5be466c028:   shl    $0x3,%rsi
   0.03%  │    ││  0x00007f5be466c02c:   movabs $0x7ffe7f600,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffe7f600} = int)}
   0.13%  │    ││  0x00007f5be466c036:   xor    %r9d,%r9d
   0.01%  │    ││  0x00007f5be466c039:   mov    0x50(%rsp),%rdi
   0.02%  │    ││  0x00007f5be466c03e:   movabs $0x7f3018250,%r10            ;   {oop(a &apos;jdk/incubator/vector/IntVector$IntSpecies$$Lambda+0x00007f5b680c6c60&apos;{0x00000007f3018250})}
   0.01%  │    ││  0x00007f5be466c048:   mov    %r10,(%rsp)                  ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.09%  │    ││  0x00007f5be466c04c:   data16 xchg %ax,%ax
   0.00%  │    ││  0x00007f5be466c04f:   call   0x00007f5be464aa60           ; ImmutableOopMap {[24]=Oop [56]=Oop [64]=Oop [72]=Oop [80]=Oop [88]=Oop [96]=Oop [128]=Oop [136]=Oop }
          │    ││                                                            ;*invokestatic fromBitsCoerced {reexecute=0 rethrow=0 return_oop=1}
          │    ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@19 (line 3848)
          │    ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@6 (line 3863)
          │    ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@2 (line 3804)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@137 (line 87)
          │    ││                                                            ;   {static_call}
   0.02%  │    ││  0x00007f5be466c054:   nopl   0xd000944(%rax,%rax,1)       ;   {other}
   0.00%  │    ││  0x00007f5be466c05c:   nopl   0x0(%rax)
   0.12%  │    ││  0x00007f5be466c060:   mov    0x8(%rax),%r10d              ; implicit exception: dispatches to 0x00007f5be466ccc4
   0.02%  │    ││  0x00007f5be466c064:   cmp    $0x103c620,%r10d             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
          │    ││                                                            ;   {metadata(&apos;jdk/incubator/vector/Int64Vector&apos;)}
          │    ││  0x00007f5be466c06b:   jne    0x00007f5be466c9e4           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@22 (line 3848)
          │    ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@6 (line 3863)
          │    ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@2 (line 3804)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@137 (line 87)
   0.01%  │    ││  0x00007f5be466c071:   mov    $0x3,%esi
          │    ││  0x00007f5be466c076:   movabs $0x7f30180e8,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f30180e8} = &apos;jdk/incubator/vector/Int64Vector&apos;)}
   0.10%  │    ││  0x00007f5be466c080:   movabs $0x7f301b0a8,%rcx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f301b0a8} = &apos;jdk/incubator/vector/Int64Vector$Int64Mask&apos;)}
   0.02%  │    ││  0x00007f5be466c08a:   movabs $0x7ffe7f600,%r8             ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffe7f600} = int)}
   0.02%  │    ││  0x00007f5be466c094:   mov    $0x2,%r9d
          │    ││  0x00007f5be466c09a:   mov    0x58(%rsp),%rdi
   0.35%  │    ││  0x00007f5be466c09f:   mov    %rax,(%rsp)
   0.17%  │    ││  0x00007f5be466c0a3:   xor    %r10d,%r10d
   0.00%  │    ││  0x00007f5be466c0a6:   mov    %r10,0x8(%rsp)
   0.23%  │    ││  0x00007f5be466c0ab:   movabs $0x7f301b1d8,%r10            ;   {oop(a &apos;jdk/incubator/vector/IntVector$$Lambda+0x00007f5b680caf28&apos;{0x00000007f301b1d8})}
   0.01%  │    ││  0x00007f5be466c0b5:   mov    %r10,0x10(%rsp)              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.31%  │    ││  0x00007f5be466c0ba:   nop
          │    ││  0x00007f5be466c0bb:   call   0x00007f5be464dde0           ; ImmutableOopMap {[24]=Oop [56]=Oop [64]=Oop [72]=Oop [80]=Oop [88]=Oop [96]=Oop [128]=Oop [136]=Oop }
          │    ││                                                            ;*invokestatic compare {reexecute=0 rethrow=0 return_oop=1}
          │    ││                                                            ; - jdk.incubator.vector.IntVector::compareTemplate@42 (line 2029)
          │    ││                                                            ; - jdk.incubator.vector.Int64Vector::compare@5 (line 384)
          │    ││                                                            ; - jdk.incubator.vector.Int64Vector::compare@3 (line 41)
          │    ││                                                            ; - jdk.incubator.vector.IntVector::lt@5 (line 1933)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@142 (line 87)
          │    ││                                                            ;   {static_call}
   0.02%  │    ││  0x00007f5be466c0c0:   nopl   0xe0009b0(%rax,%rax,1)       ;   {other}
   0.03%  │    ││  0x00007f5be466c0c8:   mov    0x8(%rax),%r10d              ; implicit exception: dispatches to 0x00007f5be466cd04
   0.09%  │    ││  0x00007f5be466c0cc:   cmp    $0x103d288,%r10d             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
          │    ││                                                            ;   {metadata(&apos;jdk/incubator/vector/Int64Vector$Int64Mask&apos;)}
          │    ││  0x00007f5be466c0d3:   jne    0x00007f5be466ca3c           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - jdk.incubator.vector.IntVector::compareTemplate@45 (line 2029)
          │    ││                                                            ; - jdk.incubator.vector.Int64Vector::compare@5 (line 384)
          │    ││                                                            ; - jdk.incubator.vector.Int64Vector::compare@3 (line 41)
          │    ││                                                            ; - jdk.incubator.vector.IntVector::lt@5 (line 1933)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@142 (line 87)
   0.00%  │    ││  0x00007f5be466c0d9:   mov    %rax,0x90(%rsp)
   0.06%  │    ││  0x00007f5be466c0e1:   movabs $0x7f301b0a8,%rsi            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f301b0a8} = &apos;jdk/incubator/vector/Int64Vector$Int64Mask&apos;)}
   0.10%  │    ││  0x00007f5be466c0eb:   movabs $0x7ffe7f600,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffe7f600} = int)}
   0.00%  │    ││  0x00007f5be466c0f5:   mov    $0x2,%ecx
   0.02%  │    ││  0x00007f5be466c0fa:   mov    $0xffffffffffffffff,%r8
   0.01%  │    ││  0x00007f5be466c101:   xor    %r9d,%r9d
   0.12%  │    ││  0x00007f5be466c104:   xor    %edi,%edi
   0.01%  │    ││  0x00007f5be466c106:   movabs $0x7f301b248,%r10            ;   {oop(a &apos;jdk/incubator/vector/Int64Vector$Int64Mask$$Lambda+0x00007f5b680cb960&apos;{0x00000007f301b248})}
   0.03%  │    ││  0x00007f5be466c110:   mov    %r10,(%rsp)                  ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.03%  │    ││  0x00007f5be466c114:   data16 xchg %ax,%ax
   0.07%  │    ││  0x00007f5be466c117:   call   0x00007f5be464aa60           ; ImmutableOopMap {[24]=Oop [56]=Oop [64]=Oop [72]=Oop [80]=Oop [88]=Oop [96]=Oop [128]=Oop [136]=Oop [144]=Oop }
          │    ││                                                            ;*invokestatic fromBitsCoerced {reexecute=0 rethrow=0 return_oop=1}
          │    ││                                                            ; - jdk.incubator.vector.Int64Vector$Int64Mask::maskAll@25 (line 764)
          │    ││                                                            ; - jdk.incubator.vector.Int64Vector$Int64Mask::not@2 (line 666)
          │    ││                                                            ; - jdk.incubator.vector.Int64Vector$Int64Mask::not@1 (line 553)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@145 (line 87)
          │    ││                                                            ;   {static_call}
   0.04%  │    ││  0x00007f5be466c11c:   nopl   0xf000a0c(%rax,%rax,1)       ;   {other}
   0.00%  │    ││  0x00007f5be466c124:   mov    0x8(%rax),%r10d              ; implicit exception: dispatches to 0x00007f5be466cd44
   0.14%  │    ││  0x00007f5be466c128:   cmp    $0x103d288,%r10d             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
          │    ││                                                            ;   {metadata(&apos;jdk/incubator/vector/Int64Vector$Int64Mask&apos;)}
          │    ││  0x00007f5be466c12f:   jne    0x00007f5be466ca8c           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - jdk.incubator.vector.Int64Vector$Int64Mask::maskAll@28 (line 764)
          │    ││                                                            ; - jdk.incubator.vector.Int64Vector$Int64Mask::not@2 (line 666)
          │    ││                                                            ; - jdk.incubator.vector.Int64Vector$Int64Mask::not@1 (line 553)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@145 (line 87)
   0.01%  │    ││  0x00007f5be466c135:   mov    $0xc,%esi
   0.01%  │    ││  0x00007f5be466c13a:   movabs $0x7f301b0a8,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f301b0a8} = &apos;jdk/incubator/vector/Int64Vector$Int64Mask&apos;)}
   0.01%  │    ││  0x00007f5be466c144:   xor    %ecx,%ecx
   0.11%  │    ││  0x00007f5be466c146:   movabs $0x7ffe7f600,%r8             ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffe7f600} = int)}
   0.02%  │    ││  0x00007f5be466c150:   mov    $0x2,%r9d
   0.03%  │    ││  0x00007f5be466c156:   mov    0x90(%rsp),%rdi
   0.38%  │    ││  0x00007f5be466c15e:   mov    %rax,(%rsp)
   0.19%  │    ││  0x00007f5be466c162:   xor    %r10d,%r10d
   0.00%  │    ││  0x00007f5be466c165:   mov    %r10,0x8(%rsp)
   0.14%  │    ││  0x00007f5be466c16a:   movabs $0x7f301b280,%r10            ;   {oop(a &apos;jdk/incubator/vector/Int64Vector$Int64Mask$$Lambda+0x00007f5b680cbd70&apos;{0x00000007f301b280})}
   0.01%  │    ││  0x00007f5be466c174:   mov    %r10,0x10(%rsp)              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.34%  │    ││  0x00007f5be466c179:   xchg   %ax,%ax
          │    ││  0x00007f5be466c17b:   call   0x00007f5be4654980           ; ImmutableOopMap {[24]=Oop [56]=Oop [64]=Oop [72]=Oop [80]=Oop [88]=Oop [96]=Oop [128]=Oop [136]=Oop }
          │    ││                                                            ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=1}
          │    ││                                                            ; - jdk.incubator.vector.Int64Vector$Int64Mask::xor@29 (line 705)
          │    ││                                                            ; - jdk.incubator.vector.Int64Vector$Int64Mask::not@5 (line 666)
          │    ││                                                            ; - jdk.incubator.vector.Int64Vector$Int64Mask::not@1 (line 553)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@145 (line 87)
          │    ││                                                            ;   {static_call}
   0.05%  │    ││  0x00007f5be466c180:   nopl   0x10000a70(%rax,%rax,1)      ;   {other}
          │    ││  0x00007f5be466c188:   mov    0x8(%rax),%r10d              ; implicit exception: dispatches to 0x00007f5be466cd90
   0.38%  │    ││  0x00007f5be466c18c:   cmp    $0x103d288,%r10d             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
          │    ││                                                            ;   {metadata(&apos;jdk/incubator/vector/Int64Vector$Int64Mask&apos;)}
          │    ││  0x00007f5be466c193:   jne    0x00007f5be466caf0           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - jdk.incubator.vector.Int64Vector$Int64Mask::xor@32 (line 705)
          │    ││                                                            ; - jdk.incubator.vector.Int64Vector$Int64Mask::not@5 (line 666)
          │    ││                                                            ; - jdk.incubator.vector.Int64Vector$Int64Mask::not@1 (line 553)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@145 (line 87)
   0.13%  │    ││  0x00007f5be466c199:   mov    $0xa,%esi
   0.00%  │    ││  0x00007f5be466c19e:   movabs $0x7f301b0a8,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f301b0a8} = &apos;jdk/incubator/vector/Int64Vector$Int64Mask&apos;)}
          │    ││  0x00007f5be466c1a8:   xor    %ecx,%ecx
          │    ││  0x00007f5be466c1aa:   movabs $0x7ffe7f600,%r8             ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffe7f600} = int)}
   0.22%  │    ││  0x00007f5be466c1b4:   mov    $0x2,%r9d
   0.00%  │    ││  0x00007f5be466c1ba:   mov    0x88(%rsp),%rdi
   0.66%  │    ││  0x00007f5be466c1c2:   mov    %rax,(%rsp)
   0.14%  │    ││  0x00007f5be466c1c6:   xor    %r10d,%r10d
   0.00%  │    ││  0x00007f5be466c1c9:   mov    %r10,0x8(%rsp)
   0.55%  │    ││  0x00007f5be466c1ce:   movabs $0x7f301b2b8,%r10            ;   {oop(a &apos;jdk/incubator/vector/Int64Vector$Int64Mask$$Lambda+0x00007f5b680cc398&apos;{0x00000007f301b2b8})}
          │    ││  0x00007f5be466c1d8:   mov    %r10,0x10(%rsp)              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.10%  │    ││  0x00007f5be466c1dd:   xchg   %ax,%ax
          │    ││  0x00007f5be466c1df:   call   0x00007f5be4654980           ; ImmutableOopMap {[24]=Oop [56]=Oop [64]=Oop [72]=Oop [80]=Oop [88]=Oop [96]=Oop [128]=Oop }
          │    ││                                                            ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=1}
          │    ││                                                            ; - jdk.incubator.vector.Int64Vector$Int64Mask::and@29 (line 685)
          │    ││                                                            ; - jdk.incubator.vector.Int64Vector$Int64Mask::and@2 (line 553)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@148 (line 87)
          │    ││                                                            ;   {static_call}
   0.15%  │    ││  0x00007f5be466c1e4:   nopl   0x11000ad4(%rax,%rax,1)      ;   {other}
          │    ││  0x00007f5be466c1ec:   mov    0x8(%rax),%r10d              ; implicit exception: dispatches to 0x00007f5be466cdd0
   0.20%  │    ││  0x00007f5be466c1f0:   cmp    $0x103d288,%r10d             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
          │    ││                                                            ;   {metadata(&apos;jdk/incubator/vector/Int64Vector$Int64Mask&apos;)}
          │    ││  0x00007f5be466c1f7:   jne    0x00007f5be466cb40           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - jdk.incubator.vector.Int64Vector$Int64Mask::and@32 (line 685)
          │    ││                                                            ; - jdk.incubator.vector.Int64Vector$Int64Mask::and@2 (line 553)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@148 (line 87)
   0.09%  │    ││  0x00007f5be466c1fd:   movabs $0x7f30180e8,%rsi            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f30180e8} = &apos;jdk/incubator/vector/Int64Vector&apos;)}
   0.06%  │    ││  0x00007f5be466c207:   movabs $0x7f301b0a8,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f301b0a8} = &apos;jdk/incubator/vector/Int64Vector$Int64Mask&apos;)}
          │    ││  0x00007f5be466c211:   movabs $0x7ffe7f600,%rcx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffe7f600} = int)}
   0.00%  │    ││  0x00007f5be466c21b:   mov    $0x2,%r8d
   0.14%  │    ││  0x00007f5be466c221:   mov    0x48(%rsp),%r9
   0.48%  │    ││  0x00007f5be466c226:   mov    0x80(%rsp),%rdi
   0.01%  │    ││  0x00007f5be466c22e:   mov    %rax,(%rsp)
   0.11%  │    ││  0x00007f5be466c232:   movabs $0x7f301b2f0,%r10            ;   {oop(a &apos;jdk/incubator/vector/IntVector$$Lambda+0x00007f5b680cc9c0&apos;{0x00000007f301b2f0})}
   0.00%  │    ││  0x00007f5be466c23c:   mov    %r10,0x8(%rsp)               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.12%  │    ││  0x00007f5be466c241:   xchg   %ax,%ax
          │    ││  0x00007f5be466c243:   call   0x00007f5be465e100           ; ImmutableOopMap {[24]=Oop [56]=Oop [64]=Oop [80]=Oop [88]=Oop [96]=Oop }
          │    ││                                                            ;*invokestatic blend {reexecute=0 rethrow=0 return_oop=1}
          │    ││                                                            ; - jdk.incubator.vector.IntVector::blendTemplate@26 (line 2182)
          │    ││                                                            ; - jdk.incubator.vector.Int64Vector::blend@11 (line 410)
          │    ││                                                            ; - jdk.incubator.vector.Int64Vector::blend@3 (line 41)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@158 (line 88)
          │    ││                                                            ;   {static_call}
   0.01%  │    ││  0x00007f5be466c248:   nopl   0x12000b38(%rax,%rax,1)      ;   {other}
          │    ││  0x00007f5be466c250:   mov    0x8(%rax),%r10d              ; implicit exception: dispatches to 0x00007f5be466ce08
   0.31%  │    ││  0x00007f5be466c254:   nopl   0x0(%rax,%rax,1)
   0.01%  │    ││  0x00007f5be466c25c:   data16 data16 xchg %ax,%ax
   0.01%  │    ││  0x00007f5be466c260:   cmp    $0x103c620,%r10d             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
          │    ││                                                            ;   {metadata(&apos;jdk/incubator/vector/Int64Vector&apos;)}
          │    ││  0x00007f5be466c267:   jne    0x00007f5be466cb84           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
          │    ││                                                            ; - jdk.incubator.vector.IntVector::blendTemplate@29 (line 2182)
          │    ││                                                            ; - jdk.incubator.vector.Int64Vector::blend@11 (line 410)
          │    ││                                                            ; - jdk.incubator.vector.Int64Vector::blend@3 (line 41)
          │    ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@158 (line 88)
   0.09%  │    ││  0x00007f5be466c26d:   mov    %rax,0x48(%rsp)
   1.12%  │    ││  0x00007f5be466c272:   mov    0x1b8(%r15),%r11
   0.00%  │    ││  0x00007f5be466c279:   mov    %r11,%r10
   0.00%  │    ││  0x00007f5be466c27c:   add    $0x18,%r10
   0.00%  │    ││  0x00007f5be466c280:   cmp    0x1c8(%r15),%r10
          │╭   ││  0x00007f5be466c287:   jae    0x00007f5be466c598
   0.14%  ││   ││  0x00007f5be466c28d:   mov    %r10,0x1b8(%r15)
   0.00%  ││   ││  0x00007f5be466c294:   prefetchw 0xc0(%r10)
   0.04%  ││   ││  0x00007f5be466c29c:   movq   $0x1,(%r11)
   0.00%  ││   ││  0x00007f5be466c2a3:   prefetchw 0x100(%r10)
   0.12%  ││   ││  0x00007f5be466c2ab:   movl   $0x26a0,0x8(%r11)            ;   {metadata({type array int})}
   0.34%  ││   ││  0x00007f5be466c2b3:   prefetchw 0x140(%r10)
          ││   ││  0x00007f5be466c2bb:   movl   $0x2,0xc(%r11)
   0.05%  ││   ││  0x00007f5be466c2c3:   prefetchw 0x180(%r10)
   0.03%  ││   ││  0x00007f5be466c2cb:   mov    %r12,0x10(%r11)
   0.10%  ││   ││  0x00007f5be466c2cf:   mov    %r11,0x28(%rsp)
   0.02%  ││   ││  0x00007f5be466c2d4:   mov    0x38(%rsp),%r10
   0.05%  ││   ││  0x00007f5be466c2d9:   mov    0xc(%r10),%r10d              ;*goto {reexecute=0 rethrow=0 return_oop=0}
          ││   ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@174 (line 79)
   0.02%  ││   ││  0x00007f5be466c2dd:   mov    0x1b8(%r15),%rax
   0.08%  ││   ││  0x00007f5be466c2e4:   vmovq  0x10(%r12,%r10,8),%xmm0
   0.62%  ││   ││  0x00007f5be466c2eb:   mov    %rax,%r10
          ││   ││  0x00007f5be466c2ee:   add    $0x10,%r10
          ││   ││  0x00007f5be466c2f2:   mov    0x60(%rsp),%r11
   0.00%  ││   ││  0x00007f5be466c2f7:   mov    0xc(%r11),%r11d
   0.14%  ││   ││  0x00007f5be466c2fb:   vmovq  0x10(%r12,%r11,8),%xmm1      ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││   ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          ││   ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.16%  ││   ││  0x00007f5be466c302:   vpaddd %xmm1,%xmm0,%xmm0            ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
          ││   ││                                                            ; - jdk.incubator.vector.IntVector::lanewiseTemplate@154 (line 784)
          ││   ││                                                            ; - jdk.incubator.vector.Int64Vector::lanewise@3 (line 285)
          ││   ││                                                            ; - jdk.incubator.vector.Int64Vector::lanewise@3 (line 41)
          ││   ││                                                            ; - jdk.incubator.vector.IntVector::add@5 (line 1352)
          ││   ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@166 (line 89)
   0.46%  ││   ││  0x00007f5be466c306:   mov    0x28(%rsp),%r11
          ││   ││  0x00007f5be466c30b:   vmovq  %xmm0,0x10(%r11)
   0.09%  ││   ││  0x00007f5be466c311:   cmp    0x1c8(%r15),%r10
          ││   ││  0x00007f5be466c318:   jae    0x00007f5be466c5c5           ;*goto {reexecute=0 rethrow=0 return_oop=0}
          ││   ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@174 (line 79)
   0.00%  ││   ││  0x00007f5be466c31e:   mov    %r10,0x1b8(%r15)
   0.06%  ││   ││  0x00007f5be466c325:   prefetchw 0xc0(%r10)
   0.00%  ││   ││  0x00007f5be466c32d:   movq   $0x1,(%rax)
   0.10%  ││   ││  0x00007f5be466c334:   movl   $0x103c620,0x8(%rax)         ;   {metadata(&apos;jdk/incubator/vector/Int64Vector&apos;)}
   0.00%  ││   ││  0x00007f5be466c33b:   mov    0x50(%rsp),%r10              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││   ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          ││   ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.06%  ││   ││  0x00007f5be466c340:   mov    0xc(%r10),%r10d              ;*getfield laneCount {reexecute=0 rethrow=0 return_oop=0}
          ││   ││                                                            ; - jdk.incubator.vector.AbstractSpecies::length@1 (line 117)
          ││   ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@67 (line 79)
          ││   ││  0x00007f5be466c344:   mov    0x68(%rsp),%r11d             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││   ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          ││   ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.09%  ││   ││  0x00007f5be466c349:   inc    %r11d
          ││   ││  0x00007f5be466c34c:   mov    0x28(%rsp),%r8
   0.05%  ││   ││  0x00007f5be466c351:   shr    $0x3,%r8
          ││   ││  0x00007f5be466c355:   mov    %r8d,0xc(%rax)               ;*goto {reexecute=0 rethrow=0 return_oop=0}
          ││   ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@174 (line 79)
   0.09%  ││   ││  0x00007f5be466c359:   mov    0x458(%r15),%r8              ; ImmutableOopMap {rax=Oop [24]=Oop [64]=Oop [72]=Oop [80]=Oop [88]=Oop [96]=Oop }
          ││   ││                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
          ││   ││                                                            ; - (reexecute) com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@174 (line 79)
   0.00%  ││   ││  0x00007f5be466c360:   test   %eax,(%r8)                   ;   {poll}
   0.05%  ││   ││  0x00007f5be466c363:   cmp    %r10d,%r11d                  ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││   ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          ││   ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
          ││╭  ││  0x00007f5be466c366:   jge    0x00007f5be466c38b
   0.00%  │││  ││  0x00007f5be466c368:   mov    %rax,0x38(%rsp)
   0.04%  │││  ││  0x00007f5be466c36d:   vmovq  0x78(%rsp),%xmm0
   0.00%  │││  ││  0x00007f5be466c373:   mov    0x18(%rsp),%rax
   0.02%  │││  ││  0x00007f5be466c378:   mov    0x20(%rsp),%r8d
          │││  ││  0x00007f5be466c37d:   mov    0x24(%rsp),%ecx
   0.05%  │││╭ ││  0x00007f5be466c381:   jmp    0x00007f5be466c577
          ││││↗││  0x00007f5be466c386:   mov    0x38(%rsp),%rax              ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
          │││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@72 (line 79)
          ││↘││││  0x00007f5be466c38b:   mov    0x40(%rsp),%rcx              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││ ││││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          ││ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.04%  ││ ││││  0x00007f5be466c390:   mov    0x1c(%rcx),%r10d             ;*getfield result {reexecute=0 rethrow=0 return_oop=0}
          ││ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@179 (line 91)
          ││ ││││  0x00007f5be466c394:   mov    0xc(%r12,%r10,8),%r8d        ; implicit exception: dispatches to 0x00007f5be466ce40
   0.15%  ││ ││││  0x00007f5be466c399:   dec    %r8d
   0.04%  ││ ││││  0x00007f5be466c39c:   nopl   0x0(%rax)
   0.00%  ││ ││││  0x00007f5be466c3a0:   test   %r8d,%r8d
          ││ ││││  0x00007f5be466c3a3:   jl     0x00007f5be466c758
   0.08%  ││ ││││  0x00007f5be466c3a9:   mov    0x6c(%rsp),%r11d
   0.01%  ││ ││││  0x00007f5be466c3ae:   cmp    %r8d,%r11d
          ││ ││││  0x00007f5be466c3b1:   jae    0x00007f5be466c69c
   0.06%  ││ ││││  0x00007f5be466c3b7:   mov    %rcx,%r8
          ││ ││││  0x00007f5be466c3ba:   mov    0x50(%rsp),%r9               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││ ││││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          ││ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.00%  ││ ││││  0x00007f5be466c3bf:   add    0xc(%r9),%r11d               ;*goto {reexecute=0 rethrow=0 return_oop=0}
          ││ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@174 (line 79)
   0.01%  ││ ││││  0x00007f5be466c3c3:   mov    0x458(%r15),%r9              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││ ││││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          ││ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.04%  ││ ││││  0x00007f5be466c3ca:   mov    0x18(%r8),%ecx               ;*getfield input {reexecute=0 rethrow=0 return_oop=0}
          ││ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@42 (line 77)
          ││ ││││  0x00007f5be466c3ce:   mov    0x48(%rsp),%rbx
   0.02%  ││ ││││  0x00007f5be466c3d3:   mov    0xc(%rbx),%ebx
   0.01%  ││ ││││  0x00007f5be466c3d6:   vmovq  0x10(%r12,%rbx,8),%xmm0
   0.05%  ││ ││││  0x00007f5be466c3dd:   shl    $0x3,%r10
          ││ ││││  0x00007f5be466c3e1:   mov    0x70(%rsp),%rbx
   0.01%  ││ ││││  0x00007f5be466c3e6:   vmovq  %xmm0,0x10(%r10,%rbx,1)      ; ImmutableOopMap {r8=Oop rcx=NarrowOop rax=Oop [72]=Oop [80]=Oop [88]=Oop [96]=Oop }
          ││ ││││                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
          ││ ││││                                                            ; - (reexecute) com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@198 (line 77)
   0.12%  ││ ││││  0x00007f5be466c3ed:   test   %eax,(%r9)                   ;   {poll}
   0.01%  ││ ││││  0x00007f5be466c3f0:   mov    0xc(%r12,%rcx,8),%r9d        ; implicit exception: dispatches to 0x00007f5be466ce54
   0.03%  ││ ││││  0x00007f5be466c3f5:   cmp    %r9d,%r11d
          ││ ││││  0x00007f5be466c3f8:   jge    0x00007f5be466c646
   0.01%  ││ ││││  0x00007f5be466c3fe:   mov    %rax,0x38(%rsp)
   0.04%  ││ ││││  0x00007f5be466c403:   mov    %r8,%r9
   0.00%  ││ ││││  0x00007f5be466c406:   mov    0x50(%rsp),%rbp
          ││ ││││  0x00007f5be466c40b:   mov    0x60(%rsp),%r10
   0.01%  ↘│ ││││  0x00007f5be466c410:   mov    0xc(%r12,%rcx,8),%r8d        ; implicit exception: dispatches to 0x00007f5be466ce2c
           │ ││││                                                            ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           │ ││││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
           │ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.06%   │ ││││  0x00007f5be466c415:   mov    0xc(%rbp),%ebx               ;*getfield laneCount {reexecute=0 rethrow=0 return_oop=0}
           │ ││││                                                            ; - jdk.incubator.vector.AbstractSpecies::length@1 (line 117)
           │ ││││                                                            ; - jdk.incubator.vector.IntVector::fromArray@2 (line 2953)
           │ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@56 (line 78)
   0.01%   │ ││││  0x00007f5be466c418:   sub    %ebx,%r8d
   0.00%   │ ││││  0x00007f5be466c41b:   inc    %r8d
   0.03%   │ ││││  0x00007f5be466c41e:   xchg   %ax,%ax
   0.05%   │ ││││  0x00007f5be466c420:   test   %r8d,%r8d
           │ ││││  0x00007f5be466c423:   jl     0x00007f5be466c6d0
   0.01%   │ ││││  0x00007f5be466c429:   cmp    %r8d,%r11d
           │ ││││  0x00007f5be466c42c:   jae    0x00007f5be466c65c
   0.00%   │ ││││  0x00007f5be466c432:   mov    %ebx,0x1c(%rsp)
   0.01%   │ ││││  0x00007f5be466c436:   mov    %r10,0x60(%rsp)
   0.05%   │ ││││  0x00007f5be466c43b:   mov    %r9,0x40(%rsp)               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           │ ││││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
           │ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.00%   │ ││││  0x00007f5be466c440:   mov    0x44(%rbp),%r10d             ;*getfield dummyVector {reexecute=0 rethrow=0 return_oop=0}
           │ ││││                                                            ; - jdk.incubator.vector.AbstractSpecies::dummyVector@1 (line 308)
           │ ││││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::dummyVector@1 (line 3918)
           │ ││││                                                            ; - jdk.incubator.vector.IntVector::fromArray@19 (line 2955)
           │ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@56 (line 78)
           │ ││││  0x00007f5be466c444:   mov    %rbp,0x50(%rsp)
   0.01%   │ ││││  0x00007f5be466c449:   mov    %r11d,0x68(%rsp)             ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
           │ ││││                                                            ; - java.util.Objects::checkIndex@3 (line 385)
           │ ││││                                                            ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 61)
           │ ││││                                                            ; - jdk.incubator.vector.IntVector::fromArray@9 (line 2953)
           │ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@56 (line 78)
   0.05%   │ ││││  0x00007f5be466c44e:   mov    %r11d,0x6c(%rsp)
   0.00%   │ ││││  0x00007f5be466c453:   mov    0x8(%r12,%r10,8),%r11d       ; implicit exception: dispatches to 0x00007f5be466ce68
   0.01%   │ ││││  0x00007f5be466c458:   nopl   0x0(%rax,%rax,1)
   0.01%   │ ││││  0x00007f5be466c460:   cmp    $0x103c620,%r11d             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           │ ││││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
           │ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
           │ ││││                                                            ;   {metadata(&apos;jdk/incubator/vector/Int64Vector&apos;)}
           │ ││││  0x00007f5be466c467:   jne    0x00007f5be466c844           ;*goto {reexecute=0 rethrow=0 return_oop=0}
           │ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@174 (line 79)
   0.05%   │ ││││  0x00007f5be466c46d:   mov    0x1b8(%r15),%rax
           │ ││││  0x00007f5be466c474:   mov    %rax,%r10
   0.00%   │ ││││  0x00007f5be466c477:   add    $0x18,%r10
   0.01%   │ ││││  0x00007f5be466c47b:   lea    (%r12,%rcx,8),%r11
   0.03%   │ ││││  0x00007f5be466c47f:   mov    %r11,0x20(%rsp)              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           │ ││││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
           │ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.01%   │ ││││  0x00007f5be466c484:   movslq 0x6c(%rsp),%r11              ;*i2l {reexecute=0 rethrow=0 return_oop=0}
           │ ││││                                                            ; - jdk.incubator.vector.IntVector::arrayAddress@4 (line 3691)
           │ ││││                                                            ; - jdk.incubator.vector.IntVector::fromArray0Template@20 (line 3444)
           │ ││││                                                            ; - jdk.incubator.vector.Int64Vector::fromArray0@3 (line 848)
           │ ││││                                                            ; - jdk.incubator.vector.IntVector::fromArray@24 (line 2955)
           │ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@56 (line 78)
   0.02%   │ ││││  0x00007f5be466c489:   mov    %r11,0x30(%rsp)              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           │ ││││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
           │ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.02%   │ ││││  0x00007f5be466c48e:   shl    $0x2,%r11
   0.04%   │ ││││  0x00007f5be466c492:   mov    %r11,0x70(%rsp)
   0.00%   │ ││││  0x00007f5be466c497:   lea    0x10(%r11),%rbp
   0.00%   │ ││││  0x00007f5be466c49b:   nopl   0x0(%rax,%rax,1)
   0.00%   │ ││││  0x00007f5be466c4a0:   cmp    0x1c8(%r15),%r10
           │ ││││  0x00007f5be466c4a7:   jae    0x00007f5be466c5f3           ;*goto {reexecute=0 rethrow=0 return_oop=0}
           │ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@174 (line 79)
   0.06%   │ ││││  0x00007f5be466c4ad:   mov    %r10,0x1b8(%r15)
   0.00%   │ ││││  0x00007f5be466c4b4:   prefetchw 0xc0(%r10)
   0.00%   │ ││││  0x00007f5be466c4bc:   movq   $0x1,(%rax)
   0.02%   │ ││││  0x00007f5be466c4c3:   prefetchw 0x100(%r10)
   0.05%   │ ││││  0x00007f5be466c4cb:   movl   $0x26a0,0x8(%rax)            ;   {metadata({type array int})}
   0.01%   │ ││││  0x00007f5be466c4d2:   prefetchw 0x140(%r10)
           │ ││││  0x00007f5be466c4da:   movl   $0x2,0xc(%rax)
   0.01%   │ ││││  0x00007f5be466c4e1:   prefetchw 0x180(%r10)
   0.06%   │ ││││  0x00007f5be466c4e9:   mov    %r12,0x10(%rax)
   0.01%   │ ││││  0x00007f5be466c4ed:   mov    %rax,0x78(%rsp)
   0.01%   │ ││││  0x00007f5be466c4f2:   mov    0x20(%rsp),%r10
   0.01%   │ ││││  0x00007f5be466c4f7:   mov    0x70(%rsp),%r11              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           │ ││││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
           │ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.05%   │ ││││  0x00007f5be466c4fc:   vmovq  0x10(%r10,%r11,1),%xmm0      ;*invokestatic load {reexecute=0 rethrow=0 return_oop=0}
           │ ││││                                                            ; - jdk.incubator.vector.IntVector::fromArray0Template@32 (line 3442)
           │ ││││                                                            ; - jdk.incubator.vector.Int64Vector::fromArray0@3 (line 848)
           │ ││││                                                            ; - jdk.incubator.vector.IntVector::fromArray@24 (line 2955)
           │ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@56 (line 78)
   0.21%   │ ││││  0x00007f5be466c503:   vmovq  %xmm0,0x10(%rax)
   0.11%   │ ││││  0x00007f5be466c508:   mov    0x1b8(%r15),%rax
   0.01%   │ ││││  0x00007f5be466c50f:   mov    %rax,%r10
   0.01%   │ ││││  0x00007f5be466c512:   add    $0x10,%r10
           │ ││││  0x00007f5be466c516:   data16 nopw 0x0(%rax,%rax,1)
   0.05%   │ ││││  0x00007f5be466c520:   cmp    0x1c8(%r15),%r10
           │ ││││  0x00007f5be466c527:   jae    0x00007f5be466c615           ;*goto {reexecute=0 rethrow=0 return_oop=0}
           │ ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@174 (line 79)
   0.02%   │ ││││  0x00007f5be466c52d:   mov    %r10,0x1b8(%r15)
   0.01%   │ ││││  0x00007f5be466c534:   prefetchw 0xc0(%r10)
   0.00%   │ ││││  0x00007f5be466c53c:   movq   $0x1,(%rax)
   0.06%   │ ││││  0x00007f5be466c543:   movl   $0x103c620,0x8(%rax)         ;   {metadata(&apos;jdk/incubator/vector/Int64Vector&apos;)}
   0.03%   │ ││││  0x00007f5be466c54a:   mov    0x78(%rsp),%r10
   0.01%   │ ││││  0x00007f5be466c54f:   mov    %r10,%r11
           │ ││││  0x00007f5be466c552:   shr    $0x3,%r11
   0.04%   │ ││││  0x00007f5be466c556:   mov    %r11d,0xc(%rax)
   0.02%   │ ││││  0x00007f5be466c55a:   mov    0x1c(%rsp),%r10d
   0.01%   │ ││││  0x00007f5be466c55f:   nop
   0.00%   │ ││││  0x00007f5be466c560:   test   %r10d,%r10d
           │ │╰││  0x00007f5be466c563:   jle    0x00007f5be466c386           ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           │ │ ││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
           │ │ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.04%   │ │ ││  0x00007f5be466c569:   vmovd  %xmm0,%r8d                   ;*invokestatic extract {reexecute=0 rethrow=0 return_oop=0}
           │ │ ││                                                            ; - jdk.incubator.vector.Int64Vector::laneHelper@16 (line 521)
           │ │ ││                                                            ; - jdk.incubator.vector.Int64Vector::lane@30 (line 514)
           │ │ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@79 (line 80)
   0.02%   │ │ ││  0x00007f5be466c56e:   vpextrd $0x1,%xmm0,%ecx             ;*invokestatic extract {reexecute=0 rethrow=0 return_oop=0}
           │ │ ││                                                            ; - jdk.incubator.vector.Int64Vector::laneHelper@16 (line 521)
           │ │ ││                                                            ; - jdk.incubator.vector.Int64Vector::lane@36 (line 515)
           │ │ ││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@79 (line 80)
   0.01%   │ │ ││  0x00007f5be466c574:   xor    %r11d,%r11d
   0.05%   │ ↘ ││  0x00007f5be466c577:   test   %r11d,%r11d
   0.04%   │   ││  0x00007f5be466c57a:   nopw   0x0(%rax,%rax,1)
   0.01%   │   ╰│  0x00007f5be466c580:   je     0x00007f5be466bd60
   0.06%   │    │  0x00007f5be466c586:   cmp    $0x1,%r11d
           │    │  0x00007f5be466c58a:   jne    0x00007f5be466c710
           │    │  0x00007f5be466c590:   mov    %ecx,%r10d
   0.03%   │    ╰  0x00007f5be466c593:   jmp    0x00007f5be466bd63
           ↘       0x00007f5be466c598:   movabs $0x7f5b670026a0,%rsi         ;   {metadata({type array int})}
                   0x00007f5be466c5a2:   mov    $0x2,%edx
                   0x00007f5be466c5a7:   mov    0x40(%rsp),%rbp              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                             ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
                   0x00007f5be466c5ac:   data16 xchg %ax,%ax
                   0x00007f5be466c5af:   call   0x00007f5be418f200           ; ImmutableOopMap {rbp=Oop [24]=Oop [56]=Oop [64]=Oop [72]=Oop [80]=Oop [88]=Oop [96]=Oop }
                                                                             ;*invokestatic binaryOp {reexecute=1 rethrow=0 return_oop=1}
                                                                             ; - (reexecute) jdk.incubator.vector.IntVector::lanewiseTemplate@154 (line 784)
                                                                             ; - jdk.incubator.vector.Int64Vector::lanewise@3 (line 285)
....................................................................................................
  23.25%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, level 4, jdk.internal.vm.vector.VectorSupport::compare, version 2, compile id 876 

                          0x00007f5be464de72:   mov    0x48(%r9),%r8
                          0x00007f5be464de76:   cmp    %r11,%r8
                          0x00007f5be464de79:   jne    0x00007f5be464e1b0           ;*invokevirtual loadFence {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::maybeRebox@3 (line 702)
                                                                                    ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
                                                                                    ; - jdk.incubator.vector.Int64Vector::vec@1 (line 117)
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f5b680caf28::apply@14
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.02%                  0x00007f5be464de7f:   mov    0xc(%rdi),%r11d              ;*getfield payload {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@4 (line 164)
                                                                                    ; - jdk.incubator.vector.Int64Vector::vec@1 (line 117)
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f5b680caf28::apply@14
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.01%                  0x00007f5be464de83:   mov    0x8(%r12,%r11,8),%r8d        ; implicit exception: dispatches to 0x00007f5be464e30c
   0.25%                  0x00007f5be464de88:   cmp    $0x26a0,%r8d                 ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
                                                                                    ; - jdk.incubator.vector.Int64Vector::vec@1 (line 117)
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f5b680caf28::apply@14
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
                                                                                    ;   {metadata({type array int})}
                          0x00007f5be464de8f:   jne    0x00007f5be464e260           ;*invokevirtual loadFence {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::maybeRebox@3 (line 702)
                                                                                    ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
                                                                                    ; - jdk.incubator.vector.Int64Vector::vec@1 (line 117)
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@10 (line 473)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f5b680caf28::apply@14
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.44%                  0x00007f5be464de95:   mov    0xc(%r10),%r8d               ;*getfield payload {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@4 (line 164)
                                                                                    ; - jdk.incubator.vector.Int64Vector::vec@1 (line 117)
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@10 (line 473)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f5b680caf28::apply@14
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.00%                  0x00007f5be464de99:   shl    $0x3,%r11                    ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.incubator.vector.Int64Vector::vec@4 (line 117)
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f5b680caf28::apply@14
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
                          0x00007f5be464de9d:   data16 xchg %ax,%ax
   0.01%                  0x00007f5be464dea0:   mov    0x8(%r12,%r8,8),%r9d         ; implicit exception: dispatches to 0x00007f5be464e32c
   1.47%                  0x00007f5be464dea5:   cmp    $0x26a0,%r9d                 ;   {metadata({type array int})}
                          0x00007f5be464deac:   jne    0x00007f5be464e284           ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
                                                                                    ; - jdk.incubator.vector.Int64Vector::vec@1 (line 117)
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f5b680caf28::apply@14
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.55%                  0x00007f5be464deb2:   mov    0xc(%r11),%ebx               ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@47 (line 476)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f5b680caf28::apply@14
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.00%                  0x00007f5be464deb6:   lea    (%r12,%r8,8),%rcx            ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.incubator.vector.Int64Vector::vec@4 (line 117)
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@10 (line 473)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f5b680caf28::apply@14
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.01%                  0x00007f5be464deba:   test   %ebx,%ebx
   0.06%                  0x00007f5be464debc:   nopl   0x0(%rax)
   0.48%                  0x00007f5be464dec0:   jbe    0x00007f5be464e120           ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
                                                                                    ; - jdk.incubator.vector.Int64Vector::vec@1 (line 117)
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f5b680caf28::apply@14
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.01%                  0x00007f5be464dec6:   mov    0xc(%rcx),%r8d               ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@52 (line 476)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f5b680caf28::apply@14
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.01%                  0x00007f5be464deca:   mov    0x10(%r11),%r9d              ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@47 (line 476)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f5b680caf28::apply@14
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.03%                  0x00007f5be464dece:   test   %r8d,%r8d
                          0x00007f5be464ded1:   jbe    0x00007f5be464e164           ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
                                                                                    ; - jdk.incubator.vector.Int64Vector::vec@1 (line 117)
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f5b680caf28::apply@14
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.49%                  0x00007f5be464ded7:   mov    0x10(%rcx),%r10d             ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@52 (line 476)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f5b680caf28::apply@14
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.01%                  0x00007f5be464dedb:   nopl   0x0(%rax,%rax,1)
   0.01%                  0x00007f5be464dee0:   cmp    $0x3,%esi
          ╭               0x00007f5be464dee3:   je     0x00007f5be464df09
          │               0x00007f5be464dee5:   test   %esi,%esi
          │               0x00007f5be464dee7:   jne    0x00007f5be464e1c4
   0.16%  │               0x00007f5be464deed:   cmp    %r10d,%r9d
          │╭              0x00007f5be464def0:   jne    0x00007f5be464deff
          ││              0x00007f5be464def2:   mov    $0x1,%r9d
          ││              0x00007f5be464def8:   mov    %r9d,0x20(%rsp)
          ││╭             0x00007f5be464defd:   jmp    0x00007f5be464df23
          │↘│             0x00007f5be464deff:   xor    %r10d,%r10d
          │ │             0x00007f5be464df02:   mov    %r10d,0x20(%rsp)
   0.00%  │ │╭            0x00007f5be464df07:   jmp    0x00007f5be464df23
   0.05%  ↘ ││            0x00007f5be464df09:   cmp    %r10d,%r9d                   ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
            ││                                                                      ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
            ││                                                                      ; - jdk.incubator.vector.Int64Vector::vec@1 (line 117)
            ││                                                                      ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
            ││                                                                      ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
            ││                                                                      ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f5b680caf28::apply@14
            ││                                                                      ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
            ││╭           0x00007f5be464df0c:   jl     0x00007f5be464df18
   0.17%    │││           0x00007f5be464df0e:   xor    %r9d,%r9d
   0.01%    │││           0x00007f5be464df11:   mov    %r9d,0x20(%rsp)
   0.00%    │││╭          0x00007f5be464df16:   jmp    0x00007f5be464df23
   0.25%    ││↘│          0x00007f5be464df18:   mov    $0x1,%r10d
            ││ │          0x00007f5be464df1e:   mov    %r10d,0x20(%rsp)             ;*goto {reexecute=0 rethrow=0 return_oop=0}
            ││ │                                                                    ; - jdk.incubator.vector.IntVector::compareWithOp@148 (line 2069)
            ││ │                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$58@4 (line 2035)
            ││ │                                                                    ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f5b680cb338::apply@9
            ││ │                                                                    ; - jdk.incubator.vector.IntVector::bTest@53 (line 476)
            ││ │                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
            ││ │                                                                    ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f5b680caf28::apply@14
            ││ │                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.16%    ↘↘ ↘          0x00007f5be464df23:   cmp    $0x1,%ebx
                          0x00007f5be464df26:   jbe    0x00007f5be464e12d           ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
                                                                                    ; - jdk.incubator.vector.Int64Vector::vec@1 (line 117)
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f5b680caf28::apply@14
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.17%                  0x00007f5be464df2c:   mov    0x14(%r11),%r9d              ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@47 (line 476)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f5b680caf28::apply@14
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.22%                  0x00007f5be464df30:   cmp    $0x1,%r8d
                          0x00007f5be464df34:   jbe    0x00007f5be464e171           ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
                                                                                    ; - jdk.incubator.vector.Int64Vector::vec@1 (line 117)
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f5b680caf28::apply@14
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.01%                  0x00007f5be464df3a:   mov    0x14(%rcx),%r10d             ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@52 (line 476)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f5b680caf28::apply@14
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.17%                  0x00007f5be464df3e:   xchg   %ax,%ax
   0.14%                  0x00007f5be464df40:   cmp    $0x3,%esi
                ╭         0x00007f5be464df43:   je     0x00007f5be464df5d
                │         0x00007f5be464df45:   test   %esi,%esi
                │         0x00007f5be464df47:   jne    0x00007f5be464e1cf
   0.03%        │         0x00007f5be464df4d:   cmp    %r10d,%r9d
                │╭        0x00007f5be464df50:   jne    0x00007f5be464df59
   0.08%        ││        0x00007f5be464df52:   mov    $0x1,%ebp
                ││╭       0x00007f5be464df57:   jmp    0x00007f5be464df6e
   0.06%        │↘│       0x00007f5be464df59:   xor    %ebp,%ebp
                │ │╭      0x00007f5be464df5b:   jmp    0x00007f5be464df6e
   0.29%        ↘ ││      0x00007f5be464df5d:   data16 xchg %ax,%ax
   0.01%          ││      0x00007f5be464df60:   cmp    %r10d,%r9d
                  ││╭     0x00007f5be464df63:   jl     0x00007f5be464df69
   0.17%          │││     0x00007f5be464df65:   xor    %ebp,%ebp
   0.12%          │││╭    0x00007f5be464df67:   jmp    0x00007f5be464df6e           ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
                  ││││                                                              ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
                  ││││                                                              ; - jdk.incubator.vector.Int64Vector::vec@1 (line 117)
                  ││││                                                              ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
                  ││││                                                              ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                  ││││                                                              ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f5b680caf28::apply@14
                  ││││                                                              ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.28%          ││↘│    0x00007f5be464df69:   mov    $0x1,%ebp
   0.48%          ↘↘ ↘    0x00007f5be464df6e:   mov    0x1b8(%r15),%rbx
   0.14%                  0x00007f5be464df75:   mov    %rbx,%r10
   0.07%                  0x00007f5be464df78:   add    $0x10,%r10
   0.23%                  0x00007f5be464df7c:   nopl   0x0(%rax)
   0.27%                  0x00007f5be464df80:   cmp    0x1c8(%r15),%r10
                          0x00007f5be464df87:   jae    0x00007f5be464e0b1
   0.08%                  0x00007f5be464df8d:   mov    %r10,0x1b8(%r15)
   0.17%                  0x00007f5be464df94:   prefetchw 0xc0(%r10)
   0.59%                  0x00007f5be464df9c:   movq   $0x1,(%rbx)
   0.84%                  0x00007f5be464dfa3:   movl   $0x103d288,0x8(%rbx)         ;   {metadata(&apos;jdk/incubator/vector/Int64Vector$Int64Mask&apos;)}
   0.10%                  0x00007f5be464dfaa:   mov    %r12d,0xc(%rbx)
   0.14%                  0x00007f5be464dfae:   mov    0x1b8(%r15),%rax
   0.21%                  0x00007f5be464dfb5:   mov    %rax,%r10
   0.34%                  0x00007f5be464dfb8:   add    $0x18,%r10
   0.08%                  0x00007f5be464dfbc:   nopl   0x0(%rax)
   0.05%                  0x00007f5be464dfc0:   cmp    0x1c8(%r15),%r10
                          0x00007f5be464dfc7:   jae    0x00007f5be464e0d0           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@62 (line 475)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f5b680caf28::apply@14
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.26%                  0x00007f5be464dfcd:   mov    %r10,0x1b8(%r15)
   0.36%                  0x00007f5be464dfd4:   prefetchw 0xc0(%r10)
   0.62%                  0x00007f5be464dfdc:   movq   $0x1,(%rax)
   1.21%                  0x00007f5be464dfe3:   prefetchw 0x100(%r10)
   0.13%                  0x00007f5be464dfeb:   movl   $0x1b00,0x8(%rax)            ;   {metadata({type array bool})}
   0.49%                  0x00007f5be464dff2:   prefetchw 0x140(%r10)
   0.01%                  0x00007f5be464dffa:   movl   $0x2,0xc(%rax)
   0.60%                  0x00007f5be464e001:   prefetchw 0x180(%r10)
   0.21%                  0x00007f5be464e009:   mov    %r12d,0x10(%rax)
   0.45%                  0x00007f5be464e00d:   mov    %r12d,0x14(%rax)             ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.incubator.vector.Int64Vector$Int64Mask::prepare@6 (line 570)
                                                                                    ; - jdk.incubator.vector.Int64Vector$Int64Mask::&lt;init&gt;@3 (line 562)
                                                                                    ; - jdk.incubator.vector.Int64Vector$Int64Mask::&lt;init&gt;@3 (line 558)
                                                                                    ; - jdk.incubator.vector.Int64Vector::maskFromArray@5 (line 137)
                                                                                    ; - jdk.incubator.vector.Int64Vector::maskFromArray@2 (line 41)
                                                                                    ; - jdk.incubator.vector.AbstractSpecies::maskFactory@5 (line 328)
                                                                                    ; - jdk.incubator.vector.IntVector::maskFactory@5 (line 116)
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@68 (line 478)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f5b680caf28::apply@14
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.19%                  0x00007f5be464e011:   mov    0x20(%rsp),%r11d             ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
                                                                                    ; - jdk.incubator.vector.Int64Vector::vec@1 (line 117)
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f5b680caf28::apply@14
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.19%                  0x00007f5be464e016:   mov    %r11b,0x10(%rax)
   0.37%                  0x00007f5be464e01a:   mov    %bpl,0x11(%rax)              ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.incubator.vector.Int64Vector$Int64Mask::prepare@6 (line 570)
                                                                                    ; - jdk.incubator.vector.Int64Vector$Int64Mask::&lt;init&gt;@3 (line 562)
                                                                                    ; - jdk.incubator.vector.Int64Vector$Int64Mask::&lt;init&gt;@3 (line 558)
                                                                                    ; - jdk.incubator.vector.Int64Vector::maskFromArray@5 (line 137)
                                                                                    ; - jdk.incubator.vector.Int64Vector::maskFromArray@2 (line 41)
                                                                                    ; - jdk.incubator.vector.AbstractSpecies::maskFactory@5 (line 328)
                                                                                    ; - jdk.incubator.vector.IntVector::maskFactory@5 (line 116)
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@68 (line 478)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f5b680caf28::apply@14
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.37%                  0x00007f5be464e01e:   mov    %rbx,%r10                    ;*putfield payload {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::&lt;init&gt;@6 (line 160)
                                                                                    ; - jdk.internal.vm.vector.VectorSupport$VectorMask::&lt;init&gt;@2 (line 190)
                                                                                    ; - jdk.incubator.vector.VectorMask::&lt;init&gt;@2 (line 134)
                                                                                    ; - jdk.incubator.vector.AbstractMask::&lt;init&gt;@2 (line 39)
                                                                                    ; - jdk.incubator.vector.Int64Vector$Int64Mask::&lt;init&gt;@6 (line 562)
                                                                                    ; - jdk.incubator.vector.Int64Vector$Int64Mask::&lt;init&gt;@3 (line 558)
                                                                                    ; - jdk.incubator.vector.Int64Vector::maskFromArray@5 (line 137)
                                                                                    ; - jdk.incubator.vector.Int64Vector::maskFromArray@2 (line 41)
                                                                                    ; - jdk.incubator.vector.AbstractSpecies::maskFactory@5 (line 328)
                                                                                    ; - jdk.incubator.vector.IntVector::maskFactory@5 (line 116)
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@68 (line 478)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f5b680caf28::apply@14
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.02%                  0x00007f5be464e021:   mov    %rax,%r11
   0.14%                  0x00007f5be464e024:   shr    $0x3,%r11                    ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
                                                                                    ; - jdk.incubator.vector.Int64Vector::vec@1 (line 117)
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f5b680caf28::apply@14
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.10%                  0x00007f5be464e028:   mov    %r11d,0xc(%rbx)              ;*putfield payload {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::&lt;init&gt;@6 (line 160)
                                                                                    ; - jdk.internal.vm.vector.VectorSupport$VectorMask::&lt;init&gt;@2 (line 190)
                                                                                    ; - jdk.incubator.vector.VectorMask::&lt;init&gt;@2 (line 134)
                                                                                    ; - jdk.incubator.vector.AbstractMask::&lt;init&gt;@2 (line 39)
                                                                                    ; - jdk.incubator.vector.Int64Vector$Int64Mask::&lt;init&gt;@6 (line 562)
                                                                                    ; - jdk.incubator.vector.Int64Vector$Int64Mask::&lt;init&gt;@3 (line 558)
                                                                                    ; - jdk.incubator.vector.Int64Vector::maskFromArray@5 (line 137)
                                                                                    ; - jdk.incubator.vector.Int64Vector::maskFromArray@2 (line 41)
                                                                                    ; - jdk.incubator.vector.AbstractSpecies::maskFactory@5 (line 328)
                                                                                    ; - jdk.incubator.vector.IntVector::maskFactory@5 (line 116)
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@68 (line 478)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f5b680caf28::apply@14
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.30%                  0x00007f5be464e02c:   mov    %rax,%r11
   0.02%                  0x00007f5be464e02f:   xor    %r10,%r11
   0.12%                  0x00007f5be464e032:   shr    $0x15,%r11
   0.10%                  0x00007f5be464e036:   test   %r11,%r11
                      ╭   0x00007f5be464e039:   je     0x00007f5be464e051
                      │   0x00007f5be464e03b:   shr    $0x9,%r10
                      │   0x00007f5be464e03f:   movabs $0x7f5bd8b3f000,%rdi
                      │   0x00007f5be464e049:   add    %r10,%rdi
                      │   0x00007f5be464e04c:   cmpb   $0x2,(%rdi)                  ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
                      │                                                             ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
                      │                                                             ; - jdk.incubator.vector.Int64Vector::vec@1 (line 117)
                      │                                                             ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
                      │                                                             ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                      │                                                             ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f5b680caf28::apply@14
                      │                                                             ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.00%              │╭  0x00007f5be464e04f:   jne    0x00007f5be464e067           ;*synchronization entry
                      ││                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::&lt;init&gt;@-1 (line 159)
                      ││                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorMask::&lt;init&gt;@2 (line 190)
                      ││                                                            ; - jdk.incubator.vector.VectorMask::&lt;init&gt;@2 (line 134)
                      ││                                                            ; - jdk.incubator.vector.AbstractMask::&lt;init&gt;@2 (line 39)
                      ││                                                            ; - jdk.incubator.vector.Int64Vector$Int64Mask::&lt;init&gt;@6 (line 562)
                      ││                                                            ; - jdk.incubator.vector.Int64Vector$Int64Mask::&lt;init&gt;@3 (line 558)
                      ││                                                            ; - jdk.incubator.vector.Int64Vector::maskFromArray@5 (line 137)
                      ││                                                            ; - jdk.incubator.vector.Int64Vector::maskFromArray@2 (line 41)
                      ││                                                            ; - jdk.incubator.vector.AbstractSpecies::maskFactory@5 (line 328)
                      ││                                                            ; - jdk.incubator.vector.IntVector::maskFactory@5 (line 116)
                      ││                                                            ; - jdk.incubator.vector.IntVector::bTest@68 (line 478)
                      ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                      ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f5b680caf28::apply@14
                      ││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.34%              ↘│  0x00007f5be464e051:   mov    %rbx,%rax
   0.02%               │  0x00007f5be464e054:   add    $0x40,%rsp
   0.12%               │  0x00007f5be464e058:   pop    %rbp
   0.11%               │  0x00007f5be464e059:   cmp    0x450(%r15),%rsp             ;   {poll_return}
                       │  0x00007f5be464e060:   ja     0x00007f5be464e35e
   0.39%               │  0x00007f5be464e066:   ret    
                       ↘  0x00007f5be464e067:   mov    0x48(%r15),%r10              ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.incubator.vector.IntVector::bTest@62 (line 475)
                                                                                    ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                                    ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f5b680caf28::apply@14
                                                                                    ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
                          0x00007f5be464e06b:   mov    0x58(%r15),%r11
                          0x00007f5be464e06f:   lock addl $0x0,-0x40(%rsp)          ;*putfield payload {reexecute=0 rethrow=0 return_oop=0}
                                                                                    ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::&lt;init&gt;@6 (line 160)
                                                                                    ; - jdk.internal.vm.vector.VectorSupport$VectorMask::&lt;init&gt;@2 (line 190)
                                                                                    ; - jdk.incubator.vector.VectorMask::&lt;init&gt;@2 (line 134)
....................................................................................................
  17.40%  <total for region 2>

....[Hottest Regions]...............................................................................
  23.25%         c2, level 4  com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector, version 3, compile id 949 
  17.40%         c2, level 4  jdk.internal.vm.vector.VectorSupport::compare, version 2, compile id 876 
   8.43%         c2, level 4  jdk.incubator.vector.Int64Vector$Int64Mask$$Lambda.0x00007f5b680cc398::apply, version 2, compile id 936 
   7.97%         c2, level 4  jdk.incubator.vector.Int64Vector$Int64Mask$$Lambda.0x00007f5b680cbd70::apply, version 2, compile id 934 
   7.95%         c2, level 4  jdk.internal.vm.vector.VectorSupport::fromBitsCoerced, version 2, compile id 841 
   7.85%         c2, level 4  jdk.internal.vm.vector.VectorSupport::fromBitsCoerced, version 2, compile id 841 
   6.24%         c2, level 4  jdk.internal.vm.vector.VectorSupport::blend, version 2, compile id 938 
   4.83%         c2, level 4  jdk.internal.vm.vector.VectorSupport::compare, version 2, compile id 876 
   4.77%         c2, level 4  jdk.internal.vm.vector.VectorSupport::maskReductionCoerced, version 2, compile id 904 
   3.48%                      <unknown> 
   2.00%                      <unknown> 
   1.94%         c2, level 4  jdk.internal.vm.vector.VectorSupport::binaryOp, version 2, compile id 900 
   0.68%         c2, level 4  jdk.incubator.vector.Int64Vector$Int64Mask::lambda$maskAll$15, version 2, compile id 933 
   0.60%              kernel  [unknown] 
   0.16%              kernel  [unknown] 
   0.11%              kernel  [unknown] 
   0.09%              kernel  [unknown] 
   0.08%              kernel  [unknown] 
   0.06%              kernel  [unknown] 
   0.05%           libjvm.so  ElfSymbolTable::lookup 
   2.06%  <...other 548 warm regions...>
....................................................................................................
 100.00%  <totals>

....[Hottest Methods (after inlining)]..............................................................
  23.25%         c2, level 4  com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector, version 3, compile id 949 
  22.23%         c2, level 4  jdk.internal.vm.vector.VectorSupport::compare, version 2, compile id 876 
  15.80%         c2, level 4  jdk.internal.vm.vector.VectorSupport::fromBitsCoerced, version 2, compile id 841 
   8.43%         c2, level 4  jdk.incubator.vector.Int64Vector$Int64Mask$$Lambda.0x00007f5b680cc398::apply, version 2, compile id 936 
   7.97%         c2, level 4  jdk.incubator.vector.Int64Vector$Int64Mask$$Lambda.0x00007f5b680cbd70::apply, version 2, compile id 934 
   6.24%         c2, level 4  jdk.internal.vm.vector.VectorSupport::blend, version 2, compile id 938 
   5.58%                      <unknown> 
   4.77%         c2, level 4  jdk.internal.vm.vector.VectorSupport::maskReductionCoerced, version 2, compile id 904 
   2.05%              kernel  [unknown] 
   1.94%         c2, level 4  jdk.internal.vm.vector.VectorSupport::binaryOp, version 2, compile id 900 
   0.68%         c2, level 4  jdk.incubator.vector.Int64Vector$Int64Mask::lambda$maskAll$15, version 2, compile id 933 
   0.05%           libjvm.so  ElfSymbolTable::lookup 
   0.03%           libjvm.so  G1MergeHeapRootsTask::G1MergeCardSetClosure::do_heap_region 
   0.03%          ld-2.31.so  __tls_get_addr 
   0.02%           libjvm.so  G1CardSet::reset_table_scanner 
   0.02%        libc-2.31.so  __vfprintf_internal 
   0.02%           libjvm.so  xmlStream::write_text 
   0.02%        libc-2.31.so  _IO_default_xsputn 
   0.02%        libc-2.31.so  __memset_avx2_unaligned_erms 
   0.02%           libjvm.so  fileStream::write 
   0.86%  <...other 234 warm methods...>
....................................................................................................
 100.00%  <totals>

....[Distribution by Source]........................................................................
  91.30%         c2, level 4
   5.58%                    
   2.05%              kernel
   0.66%           libjvm.so
   0.18%        libc-2.31.so
   0.09%         interpreter
   0.06%  libpthread-2.31.so
   0.03%          ld-2.31.so
   0.02%      hsdis-amd64.so
   0.01%              [vdso]
   0.01%         c1, level 3
   0.01%         c1, level 1
....................................................................................................
 100.00%  <totals>



# JMH version: 1.37
# VM version: JDK 21, OpenJDK 64-Bit Server VM, 21+35-2513
# VM invoker: /home/gogu/bench_jdks/jdk-21/bin/java
# VM options: -Xms4g -Xmx4g -XX:+AlwaysPreTouch --add-modules=jdk.incubator.vector
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark.sortVector
# Parameters: (arraySize = 65536, vectorSize = 128)

# Run progress: 75.00% complete, ETA 00:05:30
# Fork: 1 of 1
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 7753.439 us/op
# Warmup Iteration   2: 5563.069 us/op
# Warmup Iteration   3: 5556.685 us/op
# Warmup Iteration   4: 5556.171 us/op
# Warmup Iteration   5: 5554.961 us/op
Iteration   1: 5557.480 us/op
Iteration   2: 5558.757 us/op
Iteration   3: 5553.585 us/op
Iteration   4: 5555.911 us/op
Iteration   5: 5566.132 us/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark.sortVector":
  5558.373 ±(99.9%) 18.278 us/op [Average]
  (min, avg, max) = (5553.585, 5558.373, 5566.132), stdev = 4.747
  CI (99.9%): [5540.095, 5576.651] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark.sortVector:asm":
PrintAssembly processed: 188296 total address lines.
Perf output processed (skipped 56.701 seconds):
 Column 1: cycles (51038 events)

Hottest code regions (>10.00% "cycles" events):
 Event counts are percents of total event count.

....[Hottest Region 1]..............................................................................
c2, level 4, com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector, version 4, compile id 945 

                       0x00007f690066e962:   mov    0x18(%r8),%r11d              ;*getfield input {reexecute=0 rethrow=0 return_oop=0}
                                                                                 ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@42 (line 77)
                       0x00007f690066e966:   mov    0xc(%r12,%r11,8),%r10d       ; implicit exception: dispatches to 0x00007f690066f804
                       0x00007f690066e96b:   test   %r10d,%r10d                  ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                                 ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                                 ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
                       0x00007f690066e96e:   jbe    0x00007f690066f056
                       0x00007f690066e974:   xor    %r9d,%r9d
          ╭            0x00007f690066e977:   jmp    0x00007f690066ee2a
          │            0x00007f690066e97c:   nopl   0x0(%rax)
   0.10%  │        ↗   0x00007f690066e980:   mov    0x48(%rsp),%r10d             ;*invokevirtual lane {reexecute=0 rethrow=0 return_oop=0}
          │        │                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@79 (line 80)
   0.12%  │     ↗ ↗│↗  0x00007f690066e985:   mov    %r8d,0x4c(%rsp)
   0.07%  │     │ │││  0x00007f690066e98a:   vmovdqu %xmm1,0x50(%rsp)
   0.04%  │     │ │││  0x00007f690066e990:   mov    0x38(%rsp),%r11              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │     │ │││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          │     │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.25%  │     │ │││  0x00007f690066e995:   mov    0xc(%r11),%ecx               ;*getfield laneCount {reexecute=0 rethrow=0 return_oop=0}
          │     │ │││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@8 (line 3847)
          │     │ │││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3857)
          │     │ │││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 611)
          │     │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@87 (line 81)
   0.12%  │     │ │││  0x00007f690066e999:   mov    0x2c(%r11),%r11d             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │     │ │││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          │     │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.09%  │     │ │││  0x00007f690066e99d:   movslq %r10d,%r8                    ;*i2l {reexecute=0 rethrow=0 return_oop=0}
          │     │ │││                                                            ; - jdk.incubator.vector.IntVector::toBits@1 (line 500)
          │     │ │││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@2 (line 3857)
          │     │ │││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 611)
          │     │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@87 (line 81)
   0.06%  │     │ │││  0x00007f690066e9a0:   mov    %r11,%rsi
   0.24%  │     │ │││  0x00007f690066e9a3:   shl    $0x3,%rsi
   0.14%  │     │ │││  0x00007f690066e9a7:   movabs $0x7ffe7f600,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffe7f600} = int)}
   0.07%  │     │ │││  0x00007f690066e9b1:   xor    %r9d,%r9d
   0.03%  │     │ │││  0x00007f690066e9b4:   mov    0x38(%rsp),%rdi
   0.22%  │     │ │││  0x00007f690066e9b9:   movabs $0x7f3018250,%r10            ;   {oop(a &apos;jdk/incubator/vector/IntVector$IntSpecies$$Lambda+0x00007f68880c6c60&apos;{0x00000007f3018250})}
   0.09%  │     │ │││  0x00007f690066e9c3:   mov    %r10,(%rsp)
   0.08%  │     │ │││  0x00007f690066e9c7:   vmovd  0x90(%rsp),%xmm0             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │     │ │││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          │     │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.04%  │     │ │││  0x00007f690066e9d0:   vpmovsxbd %xmm0,%xmm0               ;*invokestatic shuffleToVector {reexecute=0 rethrow=0 return_oop=0}
          │     │ │││                                                            ; - jdk.incubator.vector.Int128Vector$Int128Shuffle::toVector@17 (line 815)
          │     │ │││                                                            ; - jdk.incubator.vector.Int128Vector$Int128Shuffle::toVector@1 (line 779)
          │     │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@12 (line 73)
   0.27%  │     │ │││  0x00007f690066e9d5:   vmovdqu %xmm0,0x60(%rsp)
   0.13%  │     │ │││  0x00007f690066e9db:   call   0x00007f690064f4e0           ; ImmutableOopMap {[24]=Oop [32]=Oop [40]=Oop [48]=Oop [56]=Oop }
          │     │ │││                                                            ;*invokestatic fromBitsCoerced {reexecute=0 rethrow=0 return_oop=1}
          │     │ │││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@19 (line 3848)
          │     │ │││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3857)
          │     │ │││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 611)
          │     │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@87 (line 81)
          │     │ │││                                                            ;   {static_call}
   0.04%  │     │ │││  0x00007f690066e9e0:   nopl   0x5000550(%rax,%rax,1)       ;   {other}
          │     │ │││  0x00007f690066e9e8:   mov    0x8(%rax),%r10d              ; implicit exception: dispatches to 0x00007f690066f51c
   0.49%  │     │ │││  0x00007f690066e9ec:   cmp    $0x103d7e0,%r10d             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │     │ │││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          │     │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
          │     │ │││                                                            ;   {metadata(&apos;jdk/incubator/vector/Int128Vector&apos;)}
          │     │ │││  0x00007f690066e9f3:   jne    0x00007f690066f3d4           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
          │     │ │││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@22 (line 3848)
          │     │ │││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3857)
          │     │ │││                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 611)
          │     │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@87 (line 81)
   0.28%  │     │ │││  0x00007f690066e9f9:   mov    %rax,0x60(%rsp)
   1.69%  │     │ │││  0x00007f690066e9fe:   mov    0x38(%rsp),%r10              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │     │ │││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          │     │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.07%  │     │ │││  0x00007f690066ea03:   mov    0xc(%r10),%ecx               ;*getfield laneCount {reexecute=0 rethrow=0 return_oop=0}
          │     │ │││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@8 (line 3847)
          │     │ │││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@6 (line 3863)
          │     │ │││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@2 (line 3804)
          │     │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@124 (line 86)
   1.77%  │     │ │││  0x00007f690066ea07:   mov    0xc(%rax),%r10d
   0.02%  │     │ │││  0x00007f690066ea0b:   mov    0x38(%rsp),%r11
          │     │ │││  0x00007f690066ea10:   mov    0x2c(%r11),%r8d
   0.06%  │     │ │││  0x00007f690066ea14:   vmovdqu 0x10(%r12,%r10,8),%xmm0
   0.58%  │     │ │││  0x00007f690066ea1b:   vmovdqu 0x50(%rsp),%xmm2
   0.01%  │     │ │││  0x00007f690066ea21:   vpcmpeqd %xmm0,%xmm2,%xmm1
   1.36%  │     │ │││  0x00007f690066ea25:   vpcmpgtd %xmm2,%xmm0,%xmm0
   0.00%  │     │ │││  0x00007f690066ea29:   mov    %r8,%rsi
   0.01%  │     │ │││  0x00007f690066ea2c:   shl    $0x3,%rsi
   0.00%  │     │ │││  0x00007f690066ea30:   vmovmskps %xmm1,%r8d
   1.35%  │     │ │││  0x00007f690066ea34:   popcnt %r8,%r11
   0.01%  │     │ │││  0x00007f690066ea39:   vmovmskps %xmm0,%r10d
   0.01%  │     │ │││  0x00007f690066ea3d:   popcnt %r10,%rbp
          │     │ │││  0x00007f690066ea42:   add    %ebp,%r11d                   ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │     │ │││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          │     │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.45%  │     │ │││  0x00007f690066ea45:   movslq %r11d,%r8                    ;*i2l {reexecute=0 rethrow=0 return_oop=0}
          │     │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@123 (line 84)
   0.45%  │     │ │││  0x00007f690066ea48:   movabs $0x7ffe7f600,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffe7f600} = int)}
          │     │ │││  0x00007f690066ea52:   xor    %r9d,%r9d
   0.01%  │     │ │││  0x00007f690066ea55:   mov    0x38(%rsp),%rdi
          │     │ │││  0x00007f690066ea5a:   movabs $0x7f3018250,%r10            ;   {oop(a &apos;jdk/incubator/vector/IntVector$IntSpecies$$Lambda+0x00007f68880c6c60&apos;{0x00000007f3018250})}
   0.44%  │     │ │││  0x00007f690066ea64:   mov    %r10,(%rsp)
   0.00%  │     │ │││  0x00007f690066ea68:   vmovd  0x90(%rsp),%xmm0             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │     │ │││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          │     │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
          │     │ │││  0x00007f690066ea71:   vpmovsxbd %xmm0,%xmm0               ;*invokestatic shuffleToVector {reexecute=0 rethrow=0 return_oop=0}
          │     │ │││                                                            ; - jdk.incubator.vector.Int128Vector$Int128Shuffle::toVector@17 (line 815)
          │     │ │││                                                            ; - jdk.incubator.vector.Int128Vector$Int128Shuffle::toVector@1 (line 779)
          │     │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@12 (line 73)
          │     │ │││  0x00007f690066ea76:   vmovdqu %xmm0,0x70(%rsp)            ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │     │ │││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          │     │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.43%  │     │ │││  0x00007f690066ea7c:   data16 xchg %ax,%ax
          │     │ │││  0x00007f690066ea7f:   call   0x00007f690064f4e0           ; ImmutableOopMap {[24]=Oop [32]=Oop [40]=Oop [48]=Oop [56]=Oop [96]=Oop }
          │     │ │││                                                            ;*invokestatic fromBitsCoerced {reexecute=0 rethrow=0 return_oop=1}
          │     │ │││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@19 (line 3848)
          │     │ │││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@6 (line 3863)
          │     │ │││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@2 (line 3804)
          │     │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@124 (line 86)
          │     │ │││                                                            ;   {static_call}
   0.05%  │     │ │││  0x00007f690066ea84:   nopl   0x60005f4(%rax,%rax,1)       ;   {other}
          │     │ │││  0x00007f690066ea8c:   mov    0x8(%rax),%r10d              ; implicit exception: dispatches to 0x00007f690066f584
   0.73%  │     │ │││  0x00007f690066ea90:   cmp    $0x103d7e0,%r10d             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │     │ │││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          │     │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
          │     │ │││                                                            ;   {metadata(&apos;jdk/incubator/vector/Int128Vector&apos;)}
          │     │ │││  0x00007f690066ea97:   jne    0x00007f690066f444           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
          │     │ │││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@22 (line 3848)
          │     │ │││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@6 (line 3863)
          │     │ │││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@2 (line 3804)
          │     │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@124 (line 86)
   0.39%  │     │ │││  0x00007f690066ea9d:   mov    0x38(%rsp),%r10
   1.58%  │     │ │││  0x00007f690066eaa2:   mov    0x2c(%r10),%r10d
   1.66%  │     │ │││  0x00007f690066eaa6:   mov    0xc(%rax),%r8d
   0.01%  │     │ │││  0x00007f690066eaaa:   mov    0x38(%rsp),%r11              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │     │ │││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          │     │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.00%  │     │ │││  0x00007f690066eaaf:   mov    0xc(%r11),%ecx               ;*getfield laneCount {reexecute=0 rethrow=0 return_oop=0}
          │     │ │││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@8 (line 3847)
          │     │ │││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@6 (line 3863)
          │     │ │││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@2 (line 3804)
          │     │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@137 (line 87)
   0.27%  │     │ │││  0x00007f690066eab3:   vmovdqu 0x10(%r12,%r8,8),%xmm1
   0.24%  │     │ │││  0x00007f690066eaba:   vmovd  0x90(%rsp),%xmm0             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │     │ │││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          │     │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.00%  │     │ │││  0x00007f690066eac3:   vpmovsxbd %xmm0,%xmm2               ;*invokestatic shuffleToVector {reexecute=0 rethrow=0 return_oop=0}
          │     │ │││                                                            ; - jdk.incubator.vector.Int128Vector$Int128Shuffle::toVector@17 (line 815)
          │     │ │││                                                            ; - jdk.incubator.vector.Int128Vector$Int128Shuffle::toVector@1 (line 779)
          │     │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@12 (line 73)
   0.00%  │     │ │││  0x00007f690066eac8:   vpcmpgtd %xmm2,%xmm1,%xmm3          ;*invokestatic compare {reexecute=0 rethrow=0 return_oop=0}
          │     │ │││                                                            ; - jdk.incubator.vector.IntVector::compareTemplate@42 (line 2029)
          │     │ │││                                                            ; - jdk.incubator.vector.Int128Vector::compare@5 (line 384)
          │     │ │││                                                            ; - jdk.incubator.vector.Int128Vector::compare@3 (line 41)
          │     │ │││                                                            ; - jdk.incubator.vector.IntVector::lt@5 (line 1933)
          │     │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@129 (line 86)
   1.32%  │     │ │││  0x00007f690066eacc:   mov    %r10,%rsi
   0.00%  │     │ │││  0x00007f690066eacf:   shl    $0x3,%rsi
          │     │ │││  0x00007f690066ead3:   movslq %ebp,%r8
          │     │ │││  0x00007f690066ead6:   vpxor  %xmm1,%xmm1,%xmm1
   0.46%  │     │ │││  0x00007f690066eada:   vpabsd %xmm3,%xmm2
   0.00%  │     │ │││  0x00007f690066eadf:   vpackusdw %xmm1,%xmm2,%xmm2
          │     │ │││  0x00007f690066eae4:   vpackuswb %xmm1,%xmm2,%xmm2
   0.00%  │     │ │││  0x00007f690066eae8:   vmovd  %xmm2,0x68(%rsp)
   0.46%  │     │ │││  0x00007f690066eaee:   vmovdqu %xmm3,0x70(%rsp)
          │     │ │││  0x00007f690066eaf4:   movabs $0x7ffe7f600,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffe7f600} = int)}
          │     │ │││  0x00007f690066eafe:   xor    %r9d,%r9d
          │     │ │││  0x00007f690066eb01:   mov    %r11,%rdi
   0.46%  │     │ │││  0x00007f690066eb04:   movabs $0x7f3018250,%r10            ;   {oop(a &apos;jdk/incubator/vector/IntVector$IntSpecies$$Lambda+0x00007f68880c6c60&apos;{0x00000007f3018250})}
   0.00%  │     │ │││  0x00007f690066eb0e:   mov    %r10,(%rsp)                  ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │     │ │││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          │     │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
          │     │ │││  0x00007f690066eb12:   vpmovsxbd %xmm0,%xmm0               ;*invokestatic shuffleToVector {reexecute=0 rethrow=0 return_oop=0}
          │     │ │││                                                            ; - jdk.incubator.vector.Int128Vector$Int128Shuffle::toVector@17 (line 815)
          │     │ │││                                                            ; - jdk.incubator.vector.Int128Vector$Int128Shuffle::toVector@1 (line 779)
          │     │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@12 (line 73)
          │     │ │││  0x00007f690066eb17:   vmovdqu %xmm0,0x80(%rsp)            ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │     │ │││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          │     │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.43%  │     │ │││  0x00007f690066eb20:   data16 xchg %ax,%ax
          │     │ │││  0x00007f690066eb23:   call   0x00007f690064f4e0           ; ImmutableOopMap {[24]=Oop [32]=Oop [40]=Oop [48]=Oop [56]=Oop [96]=Oop }
          │     │ │││                                                            ;*invokestatic fromBitsCoerced {reexecute=0 rethrow=0 return_oop=1}
          │     │ │││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@19 (line 3848)
          │     │ │││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@6 (line 3863)
          │     │ │││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@2 (line 3804)
          │     │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@137 (line 87)
          │     │ │││                                                            ;   {static_call}
   0.02%  │     │ │││  0x00007f690066eb28:   nopl   0x7000698(%rax,%rax,1)       ;   {other}
          │     │ │││  0x00007f690066eb30:   mov    0x8(%rax),%r11d              ; implicit exception: dispatches to 0x00007f690066f5e8
   1.22%  │     │ │││  0x00007f690066eb34:   nopl   0x0(%rax,%rax,1)
   0.00%  │     │ │││  0x00007f690066eb3c:   data16 data16 xchg %ax,%ax
   0.00%  │     │ │││  0x00007f690066eb40:   cmp    $0x103d7e0,%r11d             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │     │ │││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          │     │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
          │     │ │││                                                            ;   {metadata(&apos;jdk/incubator/vector/Int128Vector&apos;)}
          │     │ │││  0x00007f690066eb47:   jne    0x00007f690066f4a4           ;*goto {reexecute=0 rethrow=0 return_oop=0}
          │     │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@174 (line 79)
   0.34%  │     │ │││  0x00007f690066eb4d:   mov    0x1b8(%r15),%r8
   0.48%  │     │ │││  0x00007f690066eb54:   mov    0xc(%rax),%r11d
   0.00%  │     │ │││  0x00007f690066eb58:   mov    %r8,%r10
   0.00%  │     │ │││  0x00007f690066eb5b:   add    $0x20,%r10
   0.49%  │     │ │││  0x00007f690066eb5f:   vmovdqu 0x10(%r12,%r11,8),%xmm1
   1.72%  │     │ │││  0x00007f690066eb66:   vmovd  0x90(%rsp),%xmm0             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │     │ │││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          │     │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.01%  │     │ │││  0x00007f690066eb6f:   vpmovsxbd %xmm0,%xmm2               ;*invokestatic shuffleToVector {reexecute=0 rethrow=0 return_oop=0}
          │     │ │││                                                            ; - jdk.incubator.vector.Int128Vector$Int128Shuffle::toVector@17 (line 815)
          │     │ │││                                                            ; - jdk.incubator.vector.Int128Vector$Int128Shuffle::toVector@1 (line 779)
          │     │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@12 (line 73)
   2.58%  │     │ │││  0x00007f690066eb74:   vpcmpgtd %xmm2,%xmm1,%xmm1
   0.06%  │     │ │││  0x00007f690066eb78:   vpcmpeqd %xmm2,%xmm2,%xmm2
          │     │ │││  0x00007f690066eb7c:   vpxor  %xmm2,%xmm1,%xmm1
   0.43%  │     │ │││  0x00007f690066eb80:   vmovdqu 0x70(%rsp),%xmm2            ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │     │ │││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          │     │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
          │     │ │││  0x00007f690066eb86:   vpand  %xmm1,%xmm2,%xmm4
   0.40%  │     │ │││  0x00007f690066eb8a:   vpxor  %xmm1,%xmm1,%xmm1
          │     │ │││  0x00007f690066eb8e:   vpabsd %xmm4,%xmm3
   0.50%  │     │ │││  0x00007f690066eb93:   vpackusdw %xmm1,%xmm3,%xmm3
          │     │ │││  0x00007f690066eb98:   vpackuswb %xmm1,%xmm3,%xmm3
   0.01%  │     │ │││  0x00007f690066eb9c:   nopl   0x0(%rax)
          │     │ │││  0x00007f690066eba0:   cmp    0x1c8(%r15),%r10
          │╭    │ │││  0x00007f690066eba7:   jae    0x00007f690066eefe
   0.39%  ││    │ │││  0x00007f690066ebad:   mov    %r10,0x1b8(%r15)
          ││    │ │││  0x00007f690066ebb4:   prefetchw 0xc0(%r10)
   0.00%  ││    │ │││  0x00007f690066ebbc:   movq   $0x1,(%r8)
          ││    │ │││  0x00007f690066ebc3:   prefetchw 0x100(%r10)
   0.45%  ││    │ │││  0x00007f690066ebcb:   movl   $0x26a0,0x8(%r8)             ;   {metadata({type array int})}
          ││    │ │││  0x00007f690066ebd3:   prefetchw 0x140(%r10)
          ││    │ │││  0x00007f690066ebdb:   movl   $0x4,0xc(%r8)
          ││    │ │││  0x00007f690066ebe3:   prefetchw 0x180(%r10)
   0.49%  ││    │ │││  0x00007f690066ebeb:   mov    %r12,0x10(%r8)
   0.00%  ││    │ │││  0x00007f690066ebef:   mov    %r12,0x18(%r8)
   0.15%  ││    │ │││  0x00007f690066ebf3:   mov    %r8,0x68(%rsp)
   0.10%  ││    │ │││  0x00007f690066ebf8:   mov    0x30(%rsp),%r10
   0.20%  ││    │ │││  0x00007f690066ebfd:   mov    0xc(%r10),%r10d              ;*goto {reexecute=0 rethrow=0 return_oop=0}
          ││    │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@174 (line 79)
   0.02%  ││    │ │││  0x00007f690066ec01:   mov    0x1b8(%r15),%rax
   0.18%  ││    │ │││  0x00007f690066ec08:   vmovdqu 0x10(%r12,%r10,8),%xmm1
   1.35%  ││    │ │││  0x00007f690066ec0f:   mov    %rax,%r10
   0.02%  ││    │ │││  0x00007f690066ec12:   add    $0x10,%r10
   0.00%  ││    │ │││  0x00007f690066ec16:   mov    0x60(%rsp),%r11
   0.00%  ││    │ │││  0x00007f690066ec1b:   mov    0xc(%r11),%r11d
   0.43%  ││    │ │││  0x00007f690066ec1f:   vmovdqu 0x10(%r12,%r11,8),%xmm2     ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││    │ │││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          ││    │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.80%  ││    │ │││  0x00007f690066ec26:   vpblendvb %xmm4,%xmm2,%xmm1,%xmm2   ;*invokestatic blend {reexecute=0 rethrow=0 return_oop=0}
          ││    │ │││                                                            ; - jdk.incubator.vector.IntVector::blendTemplate@26 (line 2182)
          ││    │ │││                                                            ; - jdk.incubator.vector.Int128Vector::blend@11 (line 410)
          ││    │ │││                                                            ; - jdk.incubator.vector.Int128Vector::blend@3 (line 41)
          ││    │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@158 (line 88)
   0.88%  ││    │ │││  0x00007f690066ec2c:   vmovdqu %xmm2,0x10(%r8)
   0.43%  ││    │ │││  0x00007f690066ec32:   data16 nopw 0x0(%rax,%rax,1)
          ││    │ │││  0x00007f690066ec3c:   data16 data16 xchg %ax,%ax
   0.01%  ││    │ │││  0x00007f690066ec40:   cmp    0x1c8(%r15),%r10
          ││    │ │││  0x00007f690066ec47:   jae    0x00007f690066ef59
   0.05%  ││    │ │││  0x00007f690066ec4d:   mov    %r10,0x1b8(%r15)
   0.39%  ││    │ │││  0x00007f690066ec54:   prefetchw 0xc0(%r10)
   0.01%  ││    │ │││  0x00007f690066ec5c:   movq   $0x1,(%rax)
   0.01%  ││    │ │││  0x00007f690066ec63:   movl   $0x103d7e0,0x8(%rax)         ;   {metadata(&apos;jdk/incubator/vector/Int128Vector&apos;)}
   0.04%  ││    │ │││  0x00007f690066ec6a:   mov    0x68(%rsp),%r10
   0.38%  ││    │ │││  0x00007f690066ec6f:   shr    $0x3,%r10
   0.00%  ││    │ │││  0x00007f690066ec73:   mov    %r10d,0xc(%rax)
   0.02%  ││    │ │││  0x00007f690066ec77:   mov    %rax,0x30(%rsp)
   0.02%  ││    │ │││  0x00007f690066ec7c:   mov    0x1b8(%r15),%rax
   0.42%  ││    │ │││  0x00007f690066ec83:   mov    %rax,%r10
          ││    │ │││  0x00007f690066ec86:   add    $0x20,%r10
   0.01%  ││    │ │││  0x00007f690066ec8a:   cmp    0x1c8(%r15),%r10
          ││    │ │││  0x00007f690066ec91:   jae    0x00007f690066efb1
   0.04%  ││    │ │││  0x00007f690066ec97:   mov    %r10,0x1b8(%r15)
   0.43%  ││    │ │││  0x00007f690066ec9e:   prefetchw 0xc0(%r10)
   0.01%  ││    │ │││  0x00007f690066eca6:   movq   $0x1,(%rax)
   0.06%  ││    │ │││  0x00007f690066ecad:   prefetchw 0x100(%r10)
   0.02%  ││    │ │││  0x00007f690066ecb5:   movl   $0x26a0,0x8(%rax)            ;   {metadata({type array int})}
   0.64%  ││    │ │││  0x00007f690066ecbc:   prefetchw 0x140(%r10)
   0.07%  ││    │ │││  0x00007f690066ecc4:   movl   $0x4,0xc(%rax)
   0.45%  ││    │ │││  0x00007f690066eccb:   prefetchw 0x180(%r10)
   0.18%  ││    │ │││  0x00007f690066ecd3:   mov    %r12,0x10(%rax)
   0.43%  ││    │ │││  0x00007f690066ecd7:   mov    %r12,0x18(%rax)
   0.02%  ││    │ │││  0x00007f690066ecdb:   mov    %rax,0x8(%rsp)
   0.46%  ││    │ │││  0x00007f690066ece0:   mov    0x28(%rsp),%r10
   0.08%  ││    │ │││  0x00007f690066ece5:   mov    0xc(%r10),%r10d              ;*goto {reexecute=0 rethrow=0 return_oop=0}
          ││    │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@174 (line 79)
   0.21%  ││    │ │││  0x00007f690066ece9:   mov    0x1b8(%r15),%rax
   0.04%  ││    │ │││  0x00007f690066ecf0:   vmovdqu 0x10(%r12,%r10,8),%xmm1
   0.88%  ││    │ │││  0x00007f690066ecf7:   mov    %rax,%r10
   0.01%  ││    │ │││  0x00007f690066ecfa:   add    $0x10,%r10
   0.04%  ││    │ │││  0x00007f690066ecfe:   mov    0x20(%rsp),%r11
   0.02%  ││    │ │││  0x00007f690066ed03:   mov    0xc(%r11),%r11d              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││    │ │││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          ││    │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.41%  ││    │ │││  0x00007f690066ed07:   vpaddd 0x10(%r12,%r11,8),%xmm1,%xmm1;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
          ││    │ │││                                                            ; - jdk.incubator.vector.IntVector::lanewiseTemplate@154 (line 784)
          ││    │ │││                                                            ; - jdk.incubator.vector.Int128Vector::lanewise@3 (line 285)
          ││    │ │││                                                            ; - jdk.incubator.vector.Int128Vector::lanewise@3 (line 41)
          ││    │ │││                                                            ; - jdk.incubator.vector.IntVector::add@5 (line 1352)
          ││    │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@166 (line 89)
   3.35%  ││    │ │││  0x00007f690066ed0e:   mov    0x8(%rsp),%r11
          ││    │ │││  0x00007f690066ed13:   vmovdqu %xmm1,0x10(%r11)
   0.01%  ││    │ │││  0x00007f690066ed19:   nopl   0x0(%rax)
   0.39%  ││    │ │││  0x00007f690066ed20:   cmp    0x1c8(%r15),%r10
          ││    │ │││  0x00007f690066ed27:   jae    0x00007f690066effd           ;*goto {reexecute=0 rethrow=0 return_oop=0}
          ││    │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@174 (line 79)
   0.01%  ││    │ │││  0x00007f690066ed2d:   mov    %r10,0x1b8(%r15)
          ││    │ │││  0x00007f690066ed34:   prefetchw 0xc0(%r10)
   0.02%  ││    │ │││  0x00007f690066ed3c:   movq   $0x1,(%rax)
   0.41%  ││    │ │││  0x00007f690066ed43:   movl   $0x103d7e0,0x8(%rax)         ;   {metadata(&apos;jdk/incubator/vector/Int128Vector&apos;)}
   0.00%  ││    │ │││  0x00007f690066ed4a:   mov    0x38(%rsp),%r10              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││    │ │││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          ││    │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.01%  ││    │ │││  0x00007f690066ed4f:   mov    0xc(%r10),%r10d              ;*getfield laneCount {reexecute=0 rethrow=0 return_oop=0}
          ││    │ │││                                                            ; - jdk.incubator.vector.AbstractSpecies::length@1 (line 117)
          ││    │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@67 (line 79)
   0.03%  ││    │ │││  0x00007f690066ed53:   mov    0x4c(%rsp),%r8d              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││    │ │││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          ││    │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.40%  ││    │ │││  0x00007f690066ed58:   inc    %r8d
   0.00%  ││    │ │││  0x00007f690066ed5b:   mov    0x8(%rsp),%r11
   0.01%  ││    │ │││  0x00007f690066ed60:   shr    $0x3,%r11
   0.02%  ││    │ │││  0x00007f690066ed64:   mov    %r11d,0xc(%rax)
   0.38%  ││    │ │││  0x00007f690066ed68:   mov    %rax,0x20(%rsp)              ;*goto {reexecute=0 rethrow=0 return_oop=0}
          ││    │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@174 (line 79)
   0.00%  ││    │ │││  0x00007f690066ed6d:   mov    0x458(%r15),%r11             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││    │ │││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          ││    │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.00%  ││    │ │││  0x00007f690066ed74:   vpmovsxbd %xmm0,%xmm3               ; ImmutableOopMap {[24]=Oop [32]=Oop [40]=Oop [48]=Oop [56]=Oop }
          ││    │ │││                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
          ││    │ │││                                                            ; - (reexecute) com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@174 (line 79)
   0.02%  ││    │ │││  0x00007f690066ed79:   test   %eax,(%r11)                  ;   {poll}
   0.50%  ││    │ │││  0x00007f690066ed7c:   nopl   0x0(%rax)
          ││    │ │││  0x00007f690066ed80:   cmp    %r10d,%r8d
          ││╭   │ │││  0x00007f690066ed83:   jge    0x00007f690066eda2
          │││   │ │││  0x00007f690066ed85:   vmovdqu 0x50(%rsp),%xmm1
   0.03%  │││   │ │││  0x00007f690066ed8b:   vmovd  %xmm0,0x90(%rsp)
   0.33%  │││╭  │ │││  0x00007f690066ed94:   jmp    0x00007f690066eeb5
          ││││↗ │ │││  0x00007f690066ed99:   vmovd  0x90(%rsp),%xmm0
          ││↘││ │ │││  0x00007f690066eda2:   mov    0x18(%rsp),%r9               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││ ││ │ │││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          ││ ││ │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
          ││ ││ │ │││  0x00007f690066eda7:   mov    0x1c(%r9),%r10d              ;*getfield result {reexecute=0 rethrow=0 return_oop=0}
          ││ ││ │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@179 (line 91)
   0.10%  ││ ││ │ │││  0x00007f690066edab:   mov    0xc(%r12,%r10,8),%r8d        ; implicit exception: dispatches to 0x00007f690066f670
   0.02%  ││ ││ │ │││  0x00007f690066edb0:   add    $0xfffffffd,%r8d
   0.00%  ││ ││ │ │││  0x00007f690066edb4:   test   %r8d,%r8d
          ││ ││ │ │││  0x00007f690066edb7:   jl     0x00007f690066f1d0
   0.01%  ││ ││ │ │││  0x00007f690066edbd:   mov    0x40(%rsp),%r11d
   0.09%  ││ ││ │ │││  0x00007f690066edc2:   cmp    %r8d,%r11d
          ││ ││ │ │││  0x00007f690066edc5:   jae    0x00007f690066f128
   0.00%  ││ ││ │ │││  0x00007f690066edcb:   mov    %r11d,%ecx
          ││ ││ │ │││  0x00007f690066edce:   mov    %r9,%rdi
   0.01%  ││ ││ │ │││  0x00007f690066edd1:   mov    %r11d,%r9d
   0.12%  ││ ││ │ │││  0x00007f690066edd4:   mov    0x38(%rsp),%r11              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││ ││ │ │││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          ││ ││ │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.01%  ││ ││ │ │││  0x00007f690066edd9:   add    0xc(%r11),%r9d               ;*goto {reexecute=0 rethrow=0 return_oop=0}
          ││ ││ │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@174 (line 79)
          ││ ││ │ │││  0x00007f690066eddd:   mov    0x458(%r15),%r8
   0.00%  ││ ││ │ │││  0x00007f690066ede4:   mov    0x30(%rsp),%r11
   0.11%  ││ ││ │ │││  0x00007f690066ede9:   mov    0xc(%r11),%ebx               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││ ││ │ │││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          ││ ││ │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.01%  ││ ││ │ │││  0x00007f690066eded:   mov    0x18(%rdi),%r11d             ;*getfield input {reexecute=0 rethrow=0 return_oop=0}
          ││ ││ │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@42 (line 77)
          ││ ││ │ │││  0x00007f690066edf1:   vmovdqu 0x10(%r12,%rbx,8),%xmm1
   0.02%  ││ ││ │ │││  0x00007f690066edf8:   shl    $0x3,%r10
   0.10%  ││ ││ │ │││  0x00007f690066edfc:   vmovdqu %xmm1,0x10(%r10,%rcx,4)     ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││ ││ │ │││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          ││ ││ │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.04%  ││ ││ │ │││  0x00007f690066ee03:   vpmovsxbd %xmm0,%xmm1               ; ImmutableOopMap {r11=NarrowOop rdi=Oop [32]=Oop [40]=Oop [48]=Oop [56]=Oop }
          ││ ││ │ │││                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
          ││ ││ │ │││                                                            ; - (reexecute) com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@198 (line 77)
          ││ ││ │ │││  0x00007f690066ee08:   test   %eax,(%r8)                   ;   {poll}
   0.00%  ││ ││ │ │││  0x00007f690066ee0b:   mov    0xc(%r12,%r11,8),%r8d        ; implicit exception: dispatches to 0x00007f690066f684
   0.10%  ││ ││ │ │││  0x00007f690066ee10:   cmp    %r8d,%r9d
          ││ ││ │ │││  0x00007f690066ee13:   jge    0x00007f690066f056
   0.01%  ││ ││ │ │││  0x00007f690066ee19:   mov    %rdi,%r8
   0.00%  ││ ││ │ │││  0x00007f690066ee1c:   mov    0x28(%rsp),%rax
   0.01%  ││ ││ │ │││  0x00007f690066ee21:   vmovd  %xmm0,0x90(%rsp)
   0.09%  ↘│ ││ │ │││  0x00007f690066ee2a:   mov    0xc(%r12,%r11,8),%r10d       ; implicit exception: dispatches to 0x00007f690066f65c
   0.02%   │ ││ │ │││  0x00007f690066ee2f:   mov    %rax,0x28(%rsp)
           │ ││ │ │││  0x00007f690066ee34:   mov    %r8,0x18(%rsp)
           │ ││ │ │││  0x00007f690066ee39:   mov    0x38(%rsp),%r8               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           │ ││ │ │││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
           │ ││ │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.08%   │ ││ │ │││  0x00007f690066ee3e:   mov    0xc(%r8),%ecx                ;*getfield laneCount {reexecute=0 rethrow=0 return_oop=0}
           │ ││ │ │││                                                            ; - jdk.incubator.vector.AbstractSpecies::length@1 (line 117)
           │ ││ │ │││                                                            ; - jdk.incubator.vector.IntVector::fromArray@2 (line 2953)
           │ ││ │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@56 (line 78)
   0.01%   │ ││ │ │││  0x00007f690066ee42:   sub    %ecx,%r10d
           │ ││ │ │││  0x00007f690066ee45:   inc    %r10d
   0.01%   │ ││ │ │││  0x00007f690066ee48:   test   %r10d,%r10d
           │ ││ │ │││  0x00007f690066ee4b:   jl     0x00007f690066f178
   0.09%   │ ││ │ │││  0x00007f690066ee51:   cmp    %r10d,%r9d
           │ ││ │ │││  0x00007f690066ee54:   jae    0x00007f690066f0d0
   0.01%   │ ││ │ │││  0x00007f690066ee5a:   mov    %r8,%r10                     ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           │ ││ │ │││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
           │ ││ │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
           │ ││ │ │││  0x00007f690066ee5d:   mov    0x44(%r10),%r10d             ;*getfield dummyVector {reexecute=0 rethrow=0 return_oop=0}
           │ ││ │ │││                                                            ; - jdk.incubator.vector.AbstractSpecies::dummyVector@1 (line 308)
           │ ││ │ │││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::dummyVector@1 (line 3918)
           │ ││ │ │││                                                            ; - jdk.incubator.vector.IntVector::fromArray@19 (line 2955)
           │ ││ │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@56 (line 78)
   0.01%   │ ││ │ │││  0x00007f690066ee61:   mov    %r9d,%ebx                    ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
           │ ││ │ │││                                                            ; - java.util.Objects::checkIndex@3 (line 385)
           │ ││ │ │││                                                            ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 61)
           │ ││ │ │││                                                            ; - jdk.incubator.vector.IntVector::fromArray@9 (line 2953)
           │ ││ │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@56 (line 78)
   0.07%   │ ││ │ │││  0x00007f690066ee64:   mov    %ebx,0x40(%rsp)
   0.02%   │ ││ │ │││  0x00007f690066ee68:   mov    0x8(%r12,%r10,8),%r8d        ; implicit exception: dispatches to 0x00007f690066f698
   0.01%   │ ││ │ │││  0x00007f690066ee6d:   cmp    $0x103d7e0,%r8d              ;   {metadata(&apos;jdk/incubator/vector/Int128Vector&apos;)}
           │ ││ │ │││  0x00007f690066ee74:   jne    0x00007f690066f37c
   0.00%   │ ││ │ │││  0x00007f690066ee7a:   test   %ecx,%ecx
   0.09%   │ ││ │ │││  0x00007f690066ee7c:   nopl   0x0(%rax)
   0.02%   │ │╰ │ │││  0x00007f690066ee80:   jle    0x00007f690066ed99
   0.00%   │ │  │ │││  0x00007f690066ee86:   lea    (%r12,%r11,8),%r10           ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           │ │  │ │││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
           │ │  │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.01%   │ │  │ │││  0x00007f690066ee8a:   vmovdqu 0x10(%r10,%rbx,4),%xmm1     ;*invokestatic load {reexecute=0 rethrow=0 return_oop=0}
           │ │  │ │││                                                            ; - jdk.incubator.vector.IntVector::fromArray0Template@32 (line 3442)
           │ │  │ │││                                                            ; - jdk.incubator.vector.Int128Vector::fromArray0@3 (line 852)
           │ │  │ │││                                                            ; - jdk.incubator.vector.IntVector::fromArray@24 (line 2955)
           │ │  │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@56 (line 78)
   0.19%   │ │  │ │││  0x00007f690066ee91:   vpextrd $0x3,%xmm1,%r10d            ;*invokestatic extract {reexecute=0 rethrow=0 return_oop=0}
           │ │  │ │││                                                            ; - jdk.incubator.vector.Int128Vector::laneHelper@16 (line 523)
           │ │  │ │││                                                            ; - jdk.incubator.vector.Int128Vector::lane@52 (line 517)
           │ │  │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@79 (line 80)
   0.05%   │ │  │ │││  0x00007f690066ee97:   mov    %r10d,0x14(%rsp)             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           │ │  │ │││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
           │ │  │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.05%   │ │  │ │││  0x00007f690066ee9c:   vpextrd $0x1,%xmm1,%r11d            ;*invokestatic extract {reexecute=0 rethrow=0 return_oop=0}
           │ │  │ │││                                                            ; - jdk.incubator.vector.Int128Vector::laneHelper@16 (line 523)
           │ │  │ │││                                                            ; - jdk.incubator.vector.Int128Vector::lane@40 (line 515)
           │ │  │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@79 (line 80)
   0.10%   │ │  │ │││  0x00007f690066eea2:   mov    %r11d,0x44(%rsp)             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           │ │  │ │││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
           │ │  │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.03%   │ │  │ │││  0x00007f690066eea7:   vpextrd $0x2,%xmm1,%r11d            ;*invokestatic extract {reexecute=0 rethrow=0 return_oop=0}
           │ │  │ │││                                                            ; - jdk.incubator.vector.Int128Vector::laneHelper@16 (line 523)
           │ │  │ │││                                                            ; - jdk.incubator.vector.Int128Vector::lane@46 (line 516)
           │ │  │ │││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@79 (line 80)
   0.05%   │ │  │ │││  0x00007f690066eead:   mov    %r11d,0x48(%rsp)
   0.03%   │ │  │ │││  0x00007f690066eeb2:   xor    %r8d,%r8d
           │ ↘  │ │││  0x00007f690066eeb5:   cmp    $0x1,%r8d
           │   ╭│ │││  0x00007f690066eeb9:   jne    0x00007f690066eec5
           │   ││ │││  0x00007f690066eebb:   mov    0x44(%rsp),%r10d
   0.00%   │   │╰ │││  0x00007f690066eec0:   jmp    0x00007f690066e985
   0.21%   │   ↘  │││  0x00007f690066eec5:   cmp    $0x1,%r8d
           │     ╭│││  0x00007f690066eec9:   jge    0x00007f690066eede
   0.08%   │     ││││  0x00007f690066eecb:   test   %r8d,%r8d
           │     ││││  0x00007f690066eece:   jne    0x00007f690066f224           ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           │     ││││                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
           │     ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.04%   │     ││││  0x00007f690066eed4:   vmovd  %xmm1,%r10d                  ;*invokestatic extract {reexecute=0 rethrow=0 return_oop=0}
           │     ││││                                                            ; - jdk.incubator.vector.Int128Vector::laneHelper@16 (line 523)
           │     ││││                                                            ; - jdk.incubator.vector.Int128Vector::lane@34 (line 514)
           │     ││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@79 (line 80)
           │     │╰││  0x00007f690066eed9:   jmp    0x00007f690066e985
   0.23%   │     ↘ ││  0x00007f690066eede:   xchg   %ax,%ax
           │       ││  0x00007f690066eee0:   cmp    $0x2,%r8d
           │       ╰│  0x00007f690066eee4:   je     0x00007f690066e980
           │        │  0x00007f690066eeea:   cmp    $0x3,%r8d
           │        │  0x00007f690066eeee:   jne    0x00007f690066f06c
           │        │  0x00007f690066eef4:   mov    0x14(%rsp),%r10d
   0.08%   │        ╰  0x00007f690066eef9:   jmp    0x00007f690066e985
   0.00%   ↘           0x00007f690066eefe:   vmovd  %xmm3,0x8(%rsp)
                       0x00007f690066ef04:   vmovdqu %xmm4,0x70(%rsp)
                       0x00007f690066ef0a:   movabs $0x7f68870026a0,%rsi         ;   {metadata({type array int})}
                       0x00007f690066ef14:   mov    $0x4,%edx
                       0x00007f690066ef19:   mov    0x18(%rsp),%rbp              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                                 ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                                 ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
                       0x00007f690066ef1e:   vpmovsxbd %xmm0,%xmm0               ;*invokestatic shuffleToVector {reexecute=0 rethrow=0 return_oop=0}
                                                                                 ; - jdk.incubator.vector.Int128Vector$Int128Shuffle::toVector@17 (line 815)
                                                                                 ; - jdk.incubator.vector.Int128Vector$Int128Shuffle::toVector@1 (line 779)
                                                                                 ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@12 (line 73)
....................................................................................................
  48.14%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, level 4, jdk.internal.vm.vector.VectorSupport::fromBitsCoerced, version 2, compile id 865 

               0x00007f690064f641:   jle    0x00007f690064f653
               0x00007f690064f643:   dec    %rcx
          ↗    0x00007f690064f646:   vmovq  %xmm0,(%rdi)
          │    0x00007f690064f64a:   add    $0x8,%rdi
          │    0x00007f690064f64e:   dec    %rcx
          ╰    0x00007f690064f651:   jge    0x00007f690064f646           ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@4 (line 3925)
                                                                         ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
                                                                         ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007f68880c6c60::fromBits@5
                                                                         ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
   0.48%       0x00007f690064f653:   mov    %r8,(%rsp)                   ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@11 (line 3926)
                                                                         ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
                                                                         ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007f68880c6c60::fromBits@5
                                                                         ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
               0x00007f690064f657:   test   %ebp,%ebp
               0x00007f690064f659:   jle    0x00007f690064f73d           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@12 (line 3926)
                                                                         ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
                                                                         ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007f68880c6c60::fromBits@5
                                                                         ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
   0.77%       0x00007f690064f65f:   nop
   0.04%       0x00007f690064f660:   test   %ebp,%ebp
               0x00007f690064f662:   je     0x00007f690064f7f6
   0.50%       0x00007f690064f668:   mov    %ebp,%r11d
               0x00007f690064f66b:   dec    %r11d
   0.79%       0x00007f690064f66e:   cmp    %ebp,%r11d
               0x00007f690064f671:   jae    0x00007f690064f7f6
   0.06%       0x00007f690064f677:   mov    %r8d,%r10d
   0.55%       0x00007f690064f67a:   mov    0x8(%rsp),%rbx
   0.05%       0x00007f690064f67f:   mov    %ebx,%r8d                    ;*l2i {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@22 (line 3927)
                                                                         ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
                                                                         ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007f68880c6c60::fromBits@5
                                                                         ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
   0.76%       0x00007f690064f682:   shr    $0x2,%r10d
   0.05%       0x00007f690064f686:   and    $0x3,%r10d
   0.53%       0x00007f690064f68a:   xor    %ecx,%ecx
   0.00%       0x00007f690064f68c:   mov    $0xffffffff,%r11d
   0.81%       0x00007f690064f692:   sub    %r10d,%r11d
   0.05%       0x00007f690064f695:   and    $0x3,%r11d
   0.48%       0x00007f690064f699:   inc    %r11d
   0.01%       0x00007f690064f69c:   cmp    %ebp,%r11d
   0.78%       0x00007f690064f69f:   cmovg  %ebp,%r11d
   0.05%       0x00007f690064f6a3:   xor    %r9d,%r9d                    ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                                         ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@15 (line 3927)
                                                                         ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
                                                                         ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007f68880c6c60::fromBits@5
                                                                         ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
   1.37%    ↗  0x00007f690064f6a6:   mov    (%rsp),%r10
   1.40%    │  0x00007f690064f6aa:   mov    %r8d,0x10(%r10,%r9,4)        ;*iastore {reexecute=0 rethrow=0 return_oop=0}
            │                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@33 (line 3928)
            │                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
            │                                                            ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007f68880c6c60::fromBits@5
            │                                                            ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
   1.40%    │  0x00007f690064f6af:   mov    %r9d,%r10d
   1.35%    │  0x00007f690064f6b2:   inc    %r10d                        ;*iinc {reexecute=0 rethrow=0 return_oop=0}
            │                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@34 (line 3926)
            │                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
            │                                                            ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007f68880c6c60::fromBits@5
            │                                                            ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
   1.36%    │  0x00007f690064f6b5:   cmp    %r11d,%r10d
           ╭│  0x00007f690064f6b8:   jge    0x00007f690064f6bf           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
           ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@12 (line 3926)
           ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
           ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007f68880c6c60::fromBits@5
           ││                                                            ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
   0.59%   ││  0x00007f690064f6ba:   mov    %r10d,%r9d
   1.25%   │╰  0x00007f690064f6bd:   jmp    0x00007f690064f6a6
   0.77%   ↘   0x00007f690064f6bf:   lea    -0x3(%rbp),%edi
   0.05%       0x00007f690064f6c2:   cmp    %edi,%r10d
               0x00007f690064f6c5:   jge    0x00007f690064f808           ;   {no_reloc}
               0x00007f690064f6cb:   vmovd  %r8d,%xmm0
               0x00007f690064f6d0:   vpbroadcastd %xmm0,%xmm0
               0x00007f690064f6d5:   inc    %r9d
               0x00007f690064f6d8:   mov    $0xfa0,%r11d
               0x00007f690064f6de:   mov    %ebp,%r10d
               0x00007f690064f6e1:   sub    %r9d,%r10d
               0x00007f690064f6e4:   add    $0xfffffffd,%r10d
               0x00007f690064f6e8:   cmp    %r9d,%edi
               0x00007f690064f6eb:   cmovl  %ecx,%r10d
....................................................................................................
  16.29%  <total for region 2>

....[Hottest Region 3]..............................................................................
c2, level 4, jdk.internal.vm.vector.VectorSupport::fromBitsCoerced, version 2, compile id 865 

                0x00007f690064f518:   jne    0x00007f690064f810           ;*invokeinterface fromBits {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
                0x00007f690064f51e:   xchg   %ax,%ax
                0x00007f690064f520:   test   %r8,%r8
                0x00007f690064f523:   je     0x00007f690064f830           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - jdk.incubator.vector.Int128Vector$Int128Mask::lambda$maskAll$15@3 (line 770)
                                                                          ; - jdk.incubator.vector.Int128Vector$Int128Mask$$Lambda/0x00007f68880cb960::fromBits@2
                                                                          ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
                0x00007f690064f529:   movabs $0x7fee806e8,%rax            ;   {oop(a &apos;jdk/incubator/vector/Int128Vector$Int128Mask&apos;{0x00000007fee806e8})}
                0x00007f690064f533:   jmp    0x00007f690064f79f
   0.76%        0x00007f690064f538:   nopl   0x0(%rax,%rax,1)
   0.02%        0x00007f690064f540:   mov    0x8(%rdi),%r11d              ; implicit exception: dispatches to 0x00007f690064f8a4
   0.38%        0x00007f690064f544:   cmp    $0x103c240,%r11d             ;   {metadata(&apos;jdk/incubator/vector/IntVector$IntSpecies&apos;)}
                0x00007f690064f54b:   jne    0x00007f690064f858           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007f68880c6c60::fromBits@2
                                                                          ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
   0.12%        0x00007f690064f551:   mov    %rdi,0x10(%rsp)
   0.90%        0x00007f690064f556:   mov    0xc(%rdi),%ebp               ;*getfield laneCount {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - jdk.incubator.vector.AbstractSpecies::laneCount@1 (line 126)
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@1 (line 3925)
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007f68880c6c60::fromBits@5
                                                                          ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
   0.04%        0x00007f690064f559:   nopl   0x0(%rax)
   0.36%        0x00007f690064f560:   cmp    $0x40000,%ebp
                0x00007f690064f566:   ja     0x00007f690064f7ee
   0.12%        0x00007f690064f56c:   movslq %ebp,%r10                    ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@4 (line 3925)
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007f68880c6c60::fromBits@5
                                                                          ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
   0.88%        0x00007f690064f56f:   cmp    $0x40000,%ebp
                0x00007f690064f575:   ja     0x00007f690064f7b2           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@37 (line 3926)
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007f68880c6c60::fromBits@5
                                                                          ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
   0.05%        0x00007f690064f57b:   mov    0x1b8(%r15),%r8
   0.36%        0x00007f690064f582:   lea    0x17(,%r10,4),%rcx           ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@4 (line 3925)
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007f68880c6c60::fromBits@5
                                                                          ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
   0.12%        0x00007f690064f58a:   mov    %rcx,%r10
   0.79%        0x00007f690064f58d:   and    $0xfffffffffffffff8,%r10
   0.03%        0x00007f690064f591:   mov    %r8,%r11
   0.36%        0x00007f690064f594:   add    %r10,%r11
   0.11%        0x00007f690064f597:   nopw   0x0(%rax,%rax,1)
   0.84%        0x00007f690064f5a0:   cmp    0x1c8(%r15),%r11
                0x00007f690064f5a7:   jae    0x00007f690064f7b2           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@37 (line 3926)
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007f68880c6c60::fromBits@5
                                                                          ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
   0.05%        0x00007f690064f5ad:   mov    %r11,0x1b8(%r15)
   0.36%        0x00007f690064f5b4:   mov    %r8,%rdi
   0.11%        0x00007f690064f5b7:   add    $0x10,%rdi
   0.85%        0x00007f690064f5bb:   movq   $0x1,(%r8)
   0.05%        0x00007f690064f5c2:   prefetchw 0xc0(%r11)
   0.37%        0x00007f690064f5ca:   movl   $0x26a0,0x8(%r8)             ;   {metadata({type array int})}
   0.10%        0x00007f690064f5d2:   mov    %ebp,0xc(%r8)
   0.79%        0x00007f690064f5d6:   prefetchw 0x100(%r11)
   0.09%        0x00007f690064f5de:   prefetchw 0x140(%r11)
   0.42%        0x00007f690064f5e6:   prefetchw 0x180(%r11)
   0.51%        0x00007f690064f5ee:   shr    $0x3,%rcx
   0.76%        0x00007f690064f5f2:   add    $0xfffffffffffffffe,%rcx
   0.04%        0x00007f690064f5f6:   xor    %rax,%rax
   0.33%        0x00007f690064f5f9:   cmp    $0x8,%rcx
          ╭     0x00007f690064f5fd:   jg     0x00007f690064f60f
   0.14%  │     0x00007f690064f5ff:   dec    %rcx
   0.78%  │     0x00007f690064f602:   js     0x00007f690064f653
   0.16%  │↗    0x00007f690064f604:   mov    %rax,(%rdi,%rcx,8)
   1.32%  ││    0x00007f690064f608:   dec    %rcx
          │╰    0x00007f690064f60b:   jge    0x00007f690064f604
   0.05%  │     0x00007f690064f60d:   jmp    0x00007f690064f653
          ↘     0x00007f690064f60f:   vpxor  %ymm0,%ymm0,%ymm0
            ╭   0x00007f690064f613:   jmp    0x00007f690064f625
            │↗  0x00007f690064f618:   vmovdqu %ymm0,(%rdi)
            ││  0x00007f690064f61c:   vmovdqu %ymm0,0x20(%rdi)
            ││  0x00007f690064f621:   add    $0x40,%rdi
            ↘│  0x00007f690064f625:   sub    $0x8,%rcx
             ╰  0x00007f690064f629:   jge    0x00007f690064f618
                0x00007f690064f62b:   add    $0x4,%rcx
                0x00007f690064f62f:   jl     0x00007f690064f63d
                0x00007f690064f631:   vmovdqu %ymm0,(%rdi)
....................................................................................................
  13.49%  <total for region 3>

....[Hottest Region 4]..............................................................................
c2, level 4, jdk.internal.vm.vector.VectorSupport::fromBitsCoerced, version 2, compile id 865 

                                                                        ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
              0x00007f690064f71b:   test   %eax,(%r10)                  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@37 (line 3926)
                                                                        ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
                                                                        ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007f68880c6c60::fromBits@5
                                                                        ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
                                                                        ;   {poll}
              0x00007f690064f71e:   xchg   %ax,%ax
              0x00007f690064f720:   cmp    %edi,%r9d
              0x00007f690064f723:   jl     0x00007f690064f6de
   1.36%      0x00007f690064f725:   cmp    %ebp,%r9d
          ╭   0x00007f690064f728:   jge    0x00007f690064f73d
          │   0x00007f690064f72a:   xchg   %ax,%ax                      ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
          │                                                             ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@15 (line 3927)
          │                                                             ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
          │                                                             ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007f68880c6c60::fromBits@5
          │                                                             ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
          │↗  0x00007f690064f72c:   mov    (%rsp),%r10
          ││  0x00007f690064f730:   mov    %r8d,0x10(%r10,%r9,4)        ;*iastore {reexecute=0 rethrow=0 return_oop=0}
          ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@33 (line 3928)
          ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
          ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007f68880c6c60::fromBits@5
          ││                                                            ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
          ││  0x00007f690064f735:   inc    %r9d                         ;*iinc {reexecute=0 rethrow=0 return_oop=0}
          ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@34 (line 3926)
          ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
          ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007f68880c6c60::fromBits@5
          ││                                                            ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
          ││  0x00007f690064f738:   cmp    %ebp,%r9d
          │╰  0x00007f690064f73b:   jl     0x00007f690064f72c           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
          │                                                             ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@12 (line 3926)
          │                                                             ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
          │                                                             ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007f68880c6c60::fromBits@5
          │                                                             ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
   1.34%  ↘   0x00007f690064f73d:   mov    0x10(%rsp),%r10
   0.00%      0x00007f690064f742:   mov    0x44(%r10),%ebp              ;*getfield dummyVector {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - jdk.incubator.vector.AbstractSpecies::dummyVector@1 (line 308)
                                                                        ; - jdk.incubator.vector.IntVector$IntSpecies::dummyVector@1 (line 3918)
                                                                        ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@41 (line 3930)
                                                                        ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
                                                                        ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007f68880c6c60::fromBits@5
                                                                        ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
   0.01%      0x00007f690064f746:   mov    0x8(%r12,%rbp,8),%r11d       ; implicit exception: dispatches to 0x00007f690064f8bc
   0.53%      0x00007f690064f74b:   cmp    $0x103d7e0,%r11d             ;   {metadata(&apos;jdk/incubator/vector/Int128Vector&apos;)}
              0x00007f690064f752:   jne    0x00007f690064f874
   1.31%      0x00007f690064f758:   mov    0x1b8(%r15),%rax
   0.03%      0x00007f690064f75f:   mov    %rax,%r10
              0x00007f690064f762:   add    $0x10,%r10
              0x00007f690064f766:   cmp    0x1c8(%r15),%r10
              0x00007f690064f76d:   jae    0x00007f690064f7d4           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@37 (line 3926)
                                                                        ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
                                                                        ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007f68880c6c60::fromBits@5
                                                                        ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
   1.33%      0x00007f690064f76f:   mov    %r10,0x1b8(%r15)
   0.01%      0x00007f690064f776:   prefetchw 0xc0(%r10)
   0.34%      0x00007f690064f77e:   movq   $0x1,(%rax)
   0.13%      0x00007f690064f785:   movl   $0x103d7e0,0x8(%rax)         ;   {metadata(&apos;jdk/incubator/vector/Int128Vector&apos;)}
   2.75%      0x00007f690064f78c:   mov    %r12d,0xc(%rax)              ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - jdk.incubator.vector.Int128Vector::vectorFactory@0 (line 171)
                                                                        ; - jdk.incubator.vector.Int128Vector::vectorFactory@2 (line 41)
                                                                        ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@45 (line 3930)
                                                                        ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
                                                                        ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007f68880c6c60::fromBits@5
                                                                        ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
              0x00007f690064f790:   mov    (%rsp),%r10
   0.05%      0x00007f690064f794:   mov    %r10,%r11
              0x00007f690064f797:   shr    $0x3,%r11
   1.31%      0x00007f690064f79b:   mov    %r11d,0xc(%rax)              ;*invokeinterface fromBits {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
   0.11%      0x00007f690064f79f:   add    $0x30,%rsp
   0.00%      0x00007f690064f7a3:   pop    %rbp
   0.02%      0x00007f690064f7a4:   cmp    0x450(%r15),%rsp             ;   {poll_return}
              0x00007f690064f7ab:   ja     0x00007f690064f8ea
   1.25%      0x00007f690064f7b1:   ret    
   0.00%      0x00007f690064f7b2:   movabs $0x7f68870026a0,%rsi         ;   {metadata({type array int})}
              0x00007f690064f7bc:   mov    %ebp,%edx
              0x00007f690064f7be:   nop
   0.00%      0x00007f690064f7bf:   call   0x00007f6900190480           ; ImmutableOopMap {[16]=Oop }
                                                                        ;*newarray {reexecute=0 rethrow=0 return_oop=1}
                                                                        ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@4 (line 3925)
                                                                        ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
                                                                        ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007f68880c6c60::fromBits@5
                                                                        ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
                                                                        ;   {runtime_call _new_array_Java}
              0x00007f690064f7c4:   nopl   0x10004b4(%rax,%rax,1)       ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                                        ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@4 (line 3925)
                                                                        ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
                                                                        ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007f68880c6c60::fromBits@5
....................................................................................................
  11.88%  <total for region 4>

....[Hottest Regions]...............................................................................
  48.14%         c2, level 4  com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector, version 4, compile id 945 
  16.29%         c2, level 4  jdk.internal.vm.vector.VectorSupport::fromBitsCoerced, version 2, compile id 865 
  13.49%         c2, level 4  jdk.internal.vm.vector.VectorSupport::fromBitsCoerced, version 2, compile id 865 
  11.88%         c2, level 4  jdk.internal.vm.vector.VectorSupport::fromBitsCoerced, version 2, compile id 865 
   5.69%         c2, level 4  jdk.internal.vm.vector.VectorSupport::fromBitsCoerced, version 2, compile id 865 
   1.32%         c2, level 4  jdk.internal.vm.vector.VectorSupport::fromBitsCoerced, version 2, compile id 865 
   0.30%              kernel  [unknown] 
   0.22%              kernel  [unknown] 
   0.14%              kernel  [unknown] 
   0.12%              kernel  [unknown] 
   0.11%              kernel  [unknown] 
   0.08%              kernel  [unknown] 
   0.05%           libjvm.so  ElfSymbolTable::lookup 
   0.05%           libjvm.so  G1MergeHeapRootsTask::G1MergeCardSetClosure::do_heap_region 
   0.03%              kernel  [unknown] 
   0.03%          ld-2.31.so  __tls_get_addr 
   0.03%              kernel  [unknown] 
   0.03%           libjvm.so  G1CardSet::reset_table_scanner 
   0.03%        libc-2.31.so  __memset_avx2_erms 
   0.03%              kernel  [unknown] 
   1.94%  <...other 533 warm regions...>
....................................................................................................
 100.00%  <totals>

....[Hottest Methods (after inlining)]..............................................................
  48.67%         c2, level 4  jdk.internal.vm.vector.VectorSupport::fromBitsCoerced, version 2, compile id 865 
  48.15%         c2, level 4  com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector, version 4, compile id 945 
   1.82%              kernel  [unknown] 
   0.11%                      <unknown> 
   0.05%           libjvm.so  ElfSymbolTable::lookup 
   0.05%           libjvm.so  G1MergeHeapRootsTask::G1MergeCardSetClosure::do_heap_region 
   0.04%        libc-2.31.so  __memset_avx2_unaligned_erms 
   0.03%          ld-2.31.so  __tls_get_addr 
   0.03%           libjvm.so  G1CardSet::reset_table_scanner 
   0.03%        libc-2.31.so  __memset_avx2_erms 
   0.03%           libjvm.so  HeapRegionManager::par_iterate 
   0.02%           libjvm.so  G1CollectedHeap::fill_with_dummy_object 
   0.02%           libjvm.so  G1ScanCollectionSetRegionClosure::do_heap_region 
   0.02%           libjvm.so  FreeListAllocator::reset 
   0.02%           libjvm.so  MemAllocator::allocate 
   0.02%           libjvm.so  CardTableBarrierSet::on_slowpath_allocation_exit 
   0.02%              [vdso]  __vdso_clock_gettime 
   0.02%           libjvm.so  TypeArrayKlass::allocate_common 
   0.02%           libjvm.so  ObjArrayAllocator::initialize 
   0.02%        libc-2.31.so  __vfprintf_internal 
   0.84%  <...other 221 warm methods...>
....................................................................................................
 100.00%  <totals>

....[Distribution by Source]........................................................................
  96.81%         c2, level 4
   1.82%              kernel
   0.84%           libjvm.so
   0.19%        libc-2.31.so
   0.11%                    
   0.10%         interpreter
   0.04%  libpthread-2.31.so
   0.03%          ld-2.31.so
   0.02%      hsdis-amd64.so
   0.02%              [vdso]
   0.01%    perf-1956608.map
   0.00%         c1, level 3
   0.00%         c1, level 1
....................................................................................................
 100.00%  <totals>



# JMH version: 1.37
# VM version: JDK 21, OpenJDK 64-Bit Server VM, 21+35-2513
# VM invoker: /home/gogu/bench_jdks/jdk-21/bin/java
# VM options: -Xms4g -Xmx4g -XX:+AlwaysPreTouch --add-modules=jdk.incubator.vector
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark.sortVector
# Parameters: (arraySize = 65536, vectorSize = 256)

# Run progress: 83.33% complete, ETA 00:03:40
# Fork: 1 of 1
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 8738.228 us/op
# Warmup Iteration   2: 6452.610 us/op
# Warmup Iteration   3: 6446.755 us/op
# Warmup Iteration   4: 6446.192 us/op
# Warmup Iteration   5: 6445.597 us/op
Iteration   1: 6448.151 us/op
Iteration   2: 6459.804 us/op
Iteration   3: 6445.919 us/op
Iteration   4: 6446.372 us/op
Iteration   5: 6449.851 us/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark.sortVector":
  6450.019 ±(99.9%) 21.899 us/op [Average]
  (min, avg, max) = (6445.919, 6450.019, 6459.804), stdev = 5.687
  CI (99.9%): [6428.121, 6471.918] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark.sortVector:asm":
PrintAssembly processed: 185381 total address lines.
Perf output processed (skipped 56.820 seconds):
 Column 1: cycles (50819 events)

Hottest code regions (>10.00% "cycles" events):
 Event counts are percents of total event count.

....[Hottest Region 1]..............................................................................
c2, level 4, com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector, version 2, compile id 961 

                                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
                     0x00007f0f1066d552:   mov    0x18(%r10),%r8d              ;*getfield input {reexecute=0 rethrow=0 return_oop=0}
                                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@42 (line 77)
                     0x00007f0f1066d556:   data16 nopw 0x0(%rax,%rax,1)
                     0x00007f0f1066d560:   mov    0xc(%r12,%r8,8),%r11d        ; implicit exception: dispatches to 0x00007f0f1066e534
                     0x00007f0f1066d565:   test   %r11d,%r11d
                     0x00007f0f1066d568:   jbe    0x00007f0f1066dd19
                     0x00007f0f1066d56e:   xor    %r11d,%r11d
          ╭          0x00007f0f1066d571:   jmp    0x00007f0f1066d607
          │↗         0x00007f0f1066d576:   vmovq  0xe0(%rsp),%xmm1
   0.00%  ││         0x00007f0f1066d57f:   mov    0x18(%rsp),%rcx              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││                                                                   ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          ││                                                                   ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.04%  ││         0x00007f0f1066d584:   mov    0x1c(%rcx),%r10d             ;*getfield result {reexecute=0 rethrow=0 return_oop=0}
          ││                                                                   ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@179 (line 91)
   0.01%  ││         0x00007f0f1066d588:   mov    0xc(%r12,%r10,8),%r11d       ; implicit exception: dispatches to 0x00007f0f1066e358
   0.03%  ││         0x00007f0f1066d58d:   add    $0xfffffff9,%r11d
   0.00%  ││         0x00007f0f1066d591:   test   %r11d,%r11d
          ││         0x00007f0f1066d594:   jl     0x00007f0f1066dea8
   0.03%  ││         0x00007f0f1066d59a:   mov    0x40(%rsp),%r8d
   0.01%  ││         0x00007f0f1066d59f:   nop
   0.01%  ││         0x00007f0f1066d5a0:   cmp    %r11d,%r8d
          ││         0x00007f0f1066d5a3:   jae    0x00007f0f1066ddf8
   0.00%  ││         0x00007f0f1066d5a9:   mov    %r8d,%r9d
   0.02%  ││         0x00007f0f1066d5ac:   mov    %rcx,%rdi
   0.01%  ││         0x00007f0f1066d5af:   mov    %r8d,%r11d
   0.00%  ││         0x00007f0f1066d5b2:   mov    0x38(%rsp),%r8               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││                                                                   ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          ││                                                                   ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.02%  ││         0x00007f0f1066d5b7:   add    0xc(%r8),%r11d               ;*goto {reexecute=0 rethrow=0 return_oop=0}
          ││                                                                   ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@174 (line 79)
   0.04%  ││         0x00007f0f1066d5bb:   mov    0x458(%r15),%rcx
   0.01%  ││         0x00007f0f1066d5c2:   mov    0x30(%rsp),%r8
   0.00%  ││         0x00007f0f1066d5c7:   mov    0xc(%r8),%ebx                ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││                                                                   ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          ││                                                                   ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.00%  ││         0x00007f0f1066d5cb:   mov    0x18(%rdi),%r8d              ;*getfield input {reexecute=0 rethrow=0 return_oop=0}
          ││                                                                   ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@42 (line 77)
   0.02%  ││         0x00007f0f1066d5cf:   vmovdqu 0x10(%r12,%rbx,8),%ymm0
   0.03%  ││         0x00007f0f1066d5d6:   shl    $0x3,%r10
   0.00%  ││         0x00007f0f1066d5da:   vmovdqu %ymm0,0x10(%r10,%r9,4)      ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││                                                                   ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          ││                                                                   ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.12%  ││         0x00007f0f1066d5e1:   vpmovsxbd %xmm1,%ymm0               ; ImmutableOopMap {r8=NarrowOop rdi=Oop [32]=Oop [40]=Oop [48]=Oop [56]=Oop }
          ││                                                                   ;*goto {reexecute=1 rethrow=0 return_oop=0}
          ││                                                                   ; - (reexecute) com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@198 (line 77)
   0.01%  ││         0x00007f0f1066d5e6:   test   %eax,(%rcx)                  ;   {poll}
   0.00%  ││         0x00007f0f1066d5e8:   mov    0xc(%r12,%r8,8),%r9d         ; implicit exception: dispatches to 0x00007f0f1066e370
   0.01%  ││         0x00007f0f1066d5ed:   cmp    %r9d,%r11d
          ││         0x00007f0f1066d5f0:   jge    0x00007f0f1066dd19
   0.03%  ││         0x00007f0f1066d5f6:   mov    %rdi,%r10
   0.00%  ││         0x00007f0f1066d5f9:   mov    0x28(%rsp),%rax
   0.01%  ││         0x00007f0f1066d5fe:   vmovq  %xmm1,0xe0(%rsp)
   0.00%  ↘│         0x00007f0f1066d607:   mov    0xc(%r12,%r8,8),%r9d         ; implicit exception: dispatches to 0x00007f0f1066e340
   0.05%   │         0x00007f0f1066d60c:   mov    %rax,0x28(%rsp)
   0.01%   │         0x00007f0f1066d611:   mov    %r10,0x18(%rsp)
   0.01%   │         0x00007f0f1066d616:   mov    0x38(%rsp),%r10              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           │                                                                   ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
           │                                                                   ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
           │         0x00007f0f1066d61b:   mov    0xc(%r10),%r10d              ;*getfield laneCount {reexecute=0 rethrow=0 return_oop=0}
           │                                                                   ; - jdk.incubator.vector.AbstractSpecies::length@1 (line 117)
           │                                                                   ; - jdk.incubator.vector.IntVector::fromArray@2 (line 2953)
           │                                                                   ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@56 (line 78)
   0.02%   │         0x00007f0f1066d61f:   sub    %r10d,%r9d
   0.01%   │         0x00007f0f1066d622:   inc    %r9d
   0.00%   │         0x00007f0f1066d625:   test   %r9d,%r9d
           │         0x00007f0f1066d628:   jl     0x00007f0f1066de48
   0.00%   │         0x00007f0f1066d62e:   cmp    %r9d,%r11d
           │         0x00007f0f1066d631:   jae    0x00007f0f1066dd98
   0.04%   │         0x00007f0f1066d637:   mov    0x38(%rsp),%r9               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
           │                                                                   ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
           │                                                                   ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.00%   │         0x00007f0f1066d63c:   mov    0x44(%r9),%r9d               ;*getfield dummyVector {reexecute=0 rethrow=0 return_oop=0}
           │                                                                   ; - jdk.incubator.vector.AbstractSpecies::dummyVector@1 (line 308)
           │                                                                   ; - jdk.incubator.vector.IntVector$IntSpecies::dummyVector@1 (line 3918)
           │                                                                   ; - jdk.incubator.vector.IntVector::fromArray@19 (line 2955)
           │                                                                   ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@56 (line 78)
   0.01%   │         0x00007f0f1066d640:   mov    %r11d,%ebx                   ;*invokestatic checkIndex {reexecute=0 rethrow=0 return_oop=0}
           │                                                                   ; - java.util.Objects::checkIndex@3 (line 385)
           │                                                                   ; - jdk.incubator.vector.VectorIntrinsics::checkFromIndexSize@43 (line 61)
           │                                                                   ; - jdk.incubator.vector.IntVector::fromArray@9 (line 2953)
           │                                                                   ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@56 (line 78)
   0.01%   │         0x00007f0f1066d643:   mov    %ebx,0x40(%rsp)
   0.03%   │         0x00007f0f1066d647:   mov    0x8(%r12,%r9,8),%ebx         ; implicit exception: dispatches to 0x00007f0f1066e388
   0.02%   │         0x00007f0f1066d64c:   cmp    $0x103e3b8,%ebx              ;   {metadata(&apos;jdk/incubator/vector/Int256Vector&apos;)}
           │         0x00007f0f1066d652:   jne    0x00007f0f1066e024
   0.01%   │         0x00007f0f1066d658:   test   %r10d,%r10d
   0.00%   │         0x00007f0f1066d65b:   nopl   0x0(%rax,%rax,1)
   0.02%   ╰         0x00007f0f1066d660:   jle    0x00007f0f1066d576
   0.00%             0x00007f0f1066d666:   lea    (%r12,%r8,8),%r10
   0.01%             0x00007f0f1066d66a:   mov    0x40(%rsp),%r11d
   0.01%             0x00007f0f1066d66f:   vmovdqu 0x10(%r10,%r11,4),%ymm2     ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                               ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.40%             0x00007f0f1066d676:   vextractf128 $0x1,%ymm2,%xmm0
   0.12%             0x00007f0f1066d67c:   vpextrd $0x1,%xmm0,%r11d            ;*invokestatic extract {reexecute=0 rethrow=0 return_oop=0}
                                                                               ; - jdk.incubator.vector.Int256Vector::laneHelper@16 (line 527)
                                                                               ; - jdk.incubator.vector.Int256Vector::lane@80 (line 519)
                                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@79 (line 80)
   0.19%             0x00007f0f1066d682:   mov    %r11d,0x44(%rsp)             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                               ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.06%             0x00007f0f1066d687:   vextractf128 $0x1,%ymm2,%xmm0
   0.00%             0x00007f0f1066d68d:   vpextrd $0x2,%xmm0,%r10d            ;*invokestatic extract {reexecute=0 rethrow=0 return_oop=0}
                                                                               ; - jdk.incubator.vector.Int256Vector::laneHelper@16 (line 527)
                                                                               ; - jdk.incubator.vector.Int256Vector::lane@87 (line 520)
                                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@79 (line 80)
   0.01%             0x00007f0f1066d693:   mov    %r10d,0x48(%rsp)             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                               ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.05%             0x00007f0f1066d698:   vextractf128 $0x1,%ymm2,%xmm0
   0.00%             0x00007f0f1066d69e:   vpextrd $0x3,%xmm0,%r10d            ;*invokestatic extract {reexecute=0 rethrow=0 return_oop=0}
                                                                               ; - jdk.incubator.vector.Int256Vector::laneHelper@16 (line 527)
                                                                               ; - jdk.incubator.vector.Int256Vector::lane@94 (line 521)
                                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@79 (line 80)
                     0x00007f0f1066d6a4:   mov    %r10d,0x4c(%rsp)             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                               ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.04%             0x00007f0f1066d6a9:   vpextrd $0x2,%xmm2,%r11d            ;*invokestatic extract {reexecute=0 rethrow=0 return_oop=0}
                                                                               ; - jdk.incubator.vector.Int256Vector::laneHelper@16 (line 527)
                                                                               ; - jdk.incubator.vector.Int256Vector::lane@62 (line 516)
                                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@79 (line 80)
   0.00%             0x00007f0f1066d6af:   mov    %r11d,0x50(%rsp)             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                               ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.05%             0x00007f0f1066d6b4:   vpextrd $0x1,%xmm2,%r10d            ;*invokestatic extract {reexecute=0 rethrow=0 return_oop=0}
                                                                               ; - jdk.incubator.vector.Int256Vector::laneHelper@16 (line 527)
                                                                               ; - jdk.incubator.vector.Int256Vector::lane@56 (line 515)
                                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@79 (line 80)
   0.00%             0x00007f0f1066d6ba:   mov    %r10d,0x54(%rsp)             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                               ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.05%             0x00007f0f1066d6bf:   vmovd  %xmm2,%r11d                  ;*invokestatic extract {reexecute=0 rethrow=0 return_oop=0}
                                                                               ; - jdk.incubator.vector.Int256Vector::laneHelper@16 (line 527)
                                                                               ; - jdk.incubator.vector.Int256Vector::lane@50 (line 514)
                                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@79 (line 80)
   0.00%             0x00007f0f1066d6c4:   mov    %r11d,0x58(%rsp)             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                               ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
                     0x00007f0f1066d6c9:   vextractf128 $0x1,%ymm2,%xmm0
   0.00%             0x00007f0f1066d6cf:   vmovd  %xmm0,%r10d                  ;*invokestatic extract {reexecute=0 rethrow=0 return_oop=0}
                                                                               ; - jdk.incubator.vector.Int256Vector::laneHelper@16 (line 527)
                                                                               ; - jdk.incubator.vector.Int256Vector::lane@74 (line 518)
                                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@79 (line 80)
   0.04%             0x00007f0f1066d6d4:   mov    %r10d,0x5c(%rsp)             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                               ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.00%             0x00007f0f1066d6d9:   vpextrd $0x3,%xmm2,%r11d            ;*invokestatic extract {reexecute=0 rethrow=0 return_oop=0}
                                                                               ; - jdk.incubator.vector.Int256Vector::laneHelper@16 (line 527)
                                                                               ; - jdk.incubator.vector.Int256Vector::lane@68 (line 517)
                                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@79 (line 80)
   0.00%             0x00007f0f1066d6df:   mov    %r11d,0x60(%rsp)
   0.04%             0x00007f0f1066d6e4:   xor    %r10d,%r10d
                     0x00007f0f1066d6e7:   jmp    0x00007f0f1066db5e
   0.06%             0x00007f0f1066d6ec:   mov    0x48(%rsp),%r11d
   0.39%    ╭        0x00007f0f1066d6f1:   jmp    0x00007f0f1066d72e
   0.09%    │        0x00007f0f1066d6f6:   mov    0x44(%rsp),%r11d
   0.43%    │        0x00007f0f1066d6fb:   nopl   0x0(%rax,%rax,1)
   0.00%    │╭       0x00007f0f1066d700:   jmp    0x00007f0f1066d72e
   0.25%    ││       0x00007f0f1066d705:   mov    0x5c(%rsp),%r11d
   0.45%    ││╭      0x00007f0f1066d70a:   jmp    0x00007f0f1066d72e
   0.31%    │││      0x00007f0f1066d70c:   mov    0x60(%rsp),%r11d
   0.47%    │││╭     0x00007f0f1066d711:   jmp    0x00007f0f1066d72e
   0.25%    ││││     0x00007f0f1066d713:   mov    0x50(%rsp),%r11d
   0.42%    ││││╭    0x00007f0f1066d718:   jmp    0x00007f0f1066d72e
   0.21%    │││││    0x00007f0f1066d71a:   mov    0x54(%rsp),%r11d
   0.41%    │││││    0x00007f0f1066d71f:   nop
            │││││╭   0x00007f0f1066d720:   jmp    0x00007f0f1066d72e
   0.04%    ││││││   0x00007f0f1066d722:   mov    0x58(%rsp),%r11d
   0.20%    ││││││╭  0x00007f0f1066d727:   jmp    0x00007f0f1066d72e
   0.07%    │││││││  0x00007f0f1066d729:   mov    0x4c(%rsp),%r11d             ;*invokevirtual lane {reexecute=0 rethrow=0 return_oop=0}
            │││││││                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@79 (line 80)
   0.47%    ↘↘↘↘↘↘↘  0x00007f0f1066d72e:   mov    %r10d,0x64(%rsp)
   0.99%             0x00007f0f1066d733:   vmovdqu %ymm2,0x80(%rsp)            ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                               ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   1.25%             0x00007f0f1066d73c:   movslq %r11d,%r8                    ;*i2l {reexecute=0 rethrow=0 return_oop=0}
                                                                               ; - jdk.incubator.vector.IntVector::toBits@1 (line 500)
                                                                               ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@2 (line 3857)
                                                                               ; - jdk.incubator.vector.IntVector::broadcast@7 (line 611)
                                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@87 (line 81)
   0.03%             0x00007f0f1066d73f:   movabs $0x7ffe7f600,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffe7f600} = int)}
   0.01%             0x00007f0f1066d749:   xor    %r9d,%r9d
   0.06%             0x00007f0f1066d74c:   mov    0x38(%rsp),%rdi
   0.49%             0x00007f0f1066d751:   movabs $0x7f3018250,%r10            ;   {oop(a &apos;jdk/incubator/vector/IntVector$IntSpecies$$Lambda+0x00007f0e980c6c60&apos;{0x00000007f3018250})}
   0.02%             0x00007f0f1066d75b:   mov    %r10,(%rsp)
   0.88%             0x00007f0f1066d75f:   vmovq  0xe0(%rsp),%xmm0             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                               ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
                     0x00007f0f1066d768:   vpmovsxbd %xmm0,%ymm0               ;*invokestatic shuffleToVector {reexecute=0 rethrow=0 return_oop=0}
                                                                               ; - jdk.incubator.vector.Int256Vector$Int256Shuffle::toVector@17 (line 823)
                                                                               ; - jdk.incubator.vector.Int256Vector$Int256Shuffle::toVector@1 (line 787)
                                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@12 (line 73)
   0.50%             0x00007f0f1066d76d:   vmovdqu %ymm0,0xa0(%rsp)            ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                               ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.34%             0x00007f0f1066d776:   xchg   %ax,%ax
   0.00%             0x00007f0f1066d778:   vzeroupper 
   0.38%             0x00007f0f1066d77b:   call   0x00007f0f106517e0           ; ImmutableOopMap {[24]=Oop [32]=Oop [40]=Oop [48]=Oop [56]=Oop }
                                                                               ;*invokestatic fromBitsCoerced {reexecute=0 rethrow=0 return_oop=1}
                                                                               ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@19 (line 3848)
                                                                               ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3857)
                                                                               ; - jdk.incubator.vector.IntVector::broadcast@7 (line 611)
                                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@87 (line 81)
                                                                               ;   {static_call}
   0.01%             0x00007f0f1066d780:   nopl   0x6000770(%rax,%rax,1)       ;   {other}
   0.02%             0x00007f0f1066d788:   mov    0x8(%rax),%r11d              ; implicit exception: dispatches to 0x00007f0f1066e200
   0.15%             0x00007f0f1066d78c:   cmp    $0x103e3b8,%r11d             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                               ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
                                                                               ;   {metadata(&apos;jdk/incubator/vector/Int256Vector&apos;)}
                     0x00007f0f1066d793:   jne    0x00007f0f1066e084           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                                               ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@22 (line 3848)
                                                                               ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3857)
                                                                               ; - jdk.incubator.vector.IntVector::broadcast@7 (line 611)
                                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@87 (line 81)
   0.29%             0x00007f0f1066d799:   mov    %rax,0x68(%rsp)
   1.03%             0x00007f0f1066d79e:   mov    0x38(%rsp),%r10              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                               ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.01%             0x00007f0f1066d7a3:   mov    0xc(%r10),%ecx               ;*getfield laneCount {reexecute=0 rethrow=0 return_oop=0}
                                                                               ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@8 (line 3847)
                                                                               ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@6 (line 3863)
                                                                               ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@2 (line 3804)
                                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@124 (line 86)
   1.74%             0x00007f0f1066d7a7:   mov    0xc(%rax),%r10d
   0.01%             0x00007f0f1066d7ab:   mov    0x38(%rsp),%r11
   0.00%             0x00007f0f1066d7b0:   mov    0x2c(%r11),%r8d
   0.00%             0x00007f0f1066d7b4:   vmovdqu 0x10(%r12,%r10,8),%ymm0
   0.55%             0x00007f0f1066d7bb:   vmovdqu 0x80(%rsp),%ymm2
   0.02%             0x00007f0f1066d7c4:   vpcmpeqd %ymm0,%ymm2,%ymm1
   1.30%             0x00007f0f1066d7c8:   vpcmpgtd %ymm2,%ymm0,%ymm0
   0.00%             0x00007f0f1066d7cc:   mov    %r8,%rsi
   0.00%             0x00007f0f1066d7cf:   shl    $0x3,%rsi
                     0x00007f0f1066d7d3:   vmovmskps %ymm1,%r8d
   1.93%             0x00007f0f1066d7d7:   popcnt %r8,%r10
   0.01%             0x00007f0f1066d7dc:   vmovmskps %ymm0,%r11d
   0.02%             0x00007f0f1066d7e0:   popcnt %r11,%rbp
                     0x00007f0f1066d7e5:   add    %ebp,%r10d                   ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                               ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.36%             0x00007f0f1066d7e8:   movslq %r10d,%r8                    ;*i2l {reexecute=0 rethrow=0 return_oop=0}
                                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@123 (line 84)
   0.38%             0x00007f0f1066d7eb:   movabs $0x7ffe7f600,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffe7f600} = int)}
                     0x00007f0f1066d7f5:   xor    %r9d,%r9d
                     0x00007f0f1066d7f8:   mov    0x38(%rsp),%rdi
                     0x00007f0f1066d7fd:   movabs $0x7f3018250,%r10            ;   {oop(a &apos;jdk/incubator/vector/IntVector$IntSpecies$$Lambda+0x00007f0e980c6c60&apos;{0x00000007f3018250})}
   0.38%             0x00007f0f1066d807:   mov    %r10,(%rsp)
   0.00%             0x00007f0f1066d80b:   vmovq  0xe0(%rsp),%xmm0             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                               ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
                     0x00007f0f1066d814:   vpmovsxbd %xmm0,%ymm0               ;*invokestatic shuffleToVector {reexecute=0 rethrow=0 return_oop=0}
                                                                               ; - jdk.incubator.vector.Int256Vector$Int256Shuffle::toVector@17 (line 823)
                                                                               ; - jdk.incubator.vector.Int256Vector$Int256Shuffle::toVector@1 (line 787)
                                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@12 (line 73)
   0.00%             0x00007f0f1066d819:   vmovdqu %ymm0,0xa0(%rsp)            ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                               ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.37%             0x00007f0f1066d822:   xchg   %ax,%ax
   0.01%             0x00007f0f1066d824:   vzeroupper 
   0.44%             0x00007f0f1066d827:   call   0x00007f0f106517e0           ; ImmutableOopMap {[24]=Oop [32]=Oop [40]=Oop [48]=Oop [56]=Oop [104]=Oop }
                                                                               ;*invokestatic fromBitsCoerced {reexecute=0 rethrow=0 return_oop=1}
                                                                               ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@19 (line 3848)
                                                                               ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@6 (line 3863)
                                                                               ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@2 (line 3804)
                                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@124 (line 86)
                                                                               ;   {static_call}
                     0x00007f0f1066d82c:   nopl   0x700081c(%rax,%rax,1)       ;   {other}
                     0x00007f0f1066d834:   mov    0x8(%rax),%r10d              ; implicit exception: dispatches to 0x00007f0f1066e258
   0.02%             0x00007f0f1066d838:   nopl   0x0(%rax,%rax,1)
   0.39%             0x00007f0f1066d840:   cmp    $0x103e3b8,%r10d             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                               ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
                                                                               ;   {metadata(&apos;jdk/incubator/vector/Int256Vector&apos;)}
                     0x00007f0f1066d847:   jne    0x00007f0f1066e0ec           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                                               ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@22 (line 3848)
                                                                               ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@6 (line 3863)
                                                                               ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@2 (line 3804)
                                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@124 (line 86)
   0.00%             0x00007f0f1066d84d:   mov    0x38(%rsp),%r10
   0.16%             0x00007f0f1066d852:   mov    0x2c(%r10),%r10d
   1.29%             0x00007f0f1066d856:   mov    0xc(%rax),%r8d
   0.01%             0x00007f0f1066d85a:   mov    0x38(%rsp),%r11              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                               ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.00%             0x00007f0f1066d85f:   mov    0xc(%r11),%ecx               ;*getfield laneCount {reexecute=0 rethrow=0 return_oop=0}
                                                                               ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@8 (line 3847)
                                                                               ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@6 (line 3863)
                                                                               ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@2 (line 3804)
                                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@137 (line 87)
   0.26%             0x00007f0f1066d863:   vmovdqu 0x10(%r12,%r8,8),%ymm1
   0.44%             0x00007f0f1066d86a:   vmovq  0xe0(%rsp),%xmm0             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                               ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.00%             0x00007f0f1066d873:   vpmovsxbd %xmm0,%ymm2               ;*invokestatic shuffleToVector {reexecute=0 rethrow=0 return_oop=0}
                                                                               ; - jdk.incubator.vector.Int256Vector$Int256Shuffle::toVector@17 (line 823)
                                                                               ; - jdk.incubator.vector.Int256Vector$Int256Shuffle::toVector@1 (line 787)
                                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@12 (line 73)
   0.25%             0x00007f0f1066d878:   vpcmpgtd %ymm2,%ymm1,%ymm3          ;*invokestatic compare {reexecute=0 rethrow=0 return_oop=0}
                                                                               ; - jdk.incubator.vector.IntVector::compareTemplate@42 (line 2029)
                                                                               ; - jdk.incubator.vector.Int256Vector::compare@5 (line 384)
                                                                               ; - jdk.incubator.vector.Int256Vector::compare@3 (line 41)
                                                                               ; - jdk.incubator.vector.IntVector::lt@5 (line 1933)
                                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@129 (line 86)
   1.83%             0x00007f0f1066d87c:   mov    %r10,%rsi
                     0x00007f0f1066d87f:   shl    $0x3,%rsi
                     0x00007f0f1066d883:   movslq %ebp,%r8
                     0x00007f0f1066d886:   vpxor  %xmm1,%xmm1,%xmm1
   0.72%             0x00007f0f1066d88a:   vextracti128 $0x1,%ymm3,%xmm2
                     0x00007f0f1066d890:   vpackssdw %xmm2,%xmm3,%xmm2
                     0x00007f0f1066d894:   vpacksswb %xmm1,%xmm2,%xmm2
                     0x00007f0f1066d898:   vpabsb %xmm2,%xmm2
   1.48%             0x00007f0f1066d89d:   vmovq  %xmm2,0x70(%rsp)
                     0x00007f0f1066d8a3:   vmovdqu %ymm3,0xa0(%rsp)
                     0x00007f0f1066d8ac:   movabs $0x7ffe7f600,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffe7f600} = int)}
                     0x00007f0f1066d8b6:   xor    %r9d,%r9d
   0.34%             0x00007f0f1066d8b9:   mov    %r11,%rdi
                     0x00007f0f1066d8bc:   movabs $0x7f3018250,%r10            ;   {oop(a &apos;jdk/incubator/vector/IntVector$IntSpecies$$Lambda+0x00007f0e980c6c60&apos;{0x00000007f3018250})}
                     0x00007f0f1066d8c6:   mov    %r10,(%rsp)                  ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                               ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
                     0x00007f0f1066d8ca:   vpmovsxbd %xmm0,%ymm0               ;*invokestatic shuffleToVector {reexecute=0 rethrow=0 return_oop=0}
                                                                               ; - jdk.incubator.vector.Int256Vector$Int256Shuffle::toVector@17 (line 823)
                                                                               ; - jdk.incubator.vector.Int256Vector$Int256Shuffle::toVector@1 (line 787)
                                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@12 (line 73)
   0.36%             0x00007f0f1066d8cf:   vmovdqu %ymm0,0xc0(%rsp)
   0.00%             0x00007f0f1066d8d8:   vzeroupper 
   0.37%             0x00007f0f1066d8db:   call   0x00007f0f106517e0           ; ImmutableOopMap {[24]=Oop [32]=Oop [40]=Oop [48]=Oop [56]=Oop [104]=Oop }
                                                                               ;*invokestatic fromBitsCoerced {reexecute=0 rethrow=0 return_oop=1}
                                                                               ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@19 (line 3848)
                                                                               ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@6 (line 3863)
                                                                               ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@2 (line 3804)
                                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@137 (line 87)
                                                                               ;   {static_call}
   0.01%             0x00007f0f1066d8e0:   nopl   0x80008d0(%rax,%rax,1)       ;   {other}
   0.02%             0x00007f0f1066d8e8:   mov    0x8(%rax),%r11d              ; implicit exception: dispatches to 0x00007f0f1066e2c0
   0.02%             0x00007f0f1066d8ec:   cmp    $0x103e3b8,%r11d             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                               ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
                                                                               ;   {metadata(&apos;jdk/incubator/vector/Int256Vector&apos;)}
                     0x00007f0f1066d8f3:   jne    0x00007f0f1066e168           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@174 (line 79)
   0.34%             0x00007f0f1066d8f9:   mov    0x1b8(%r15),%r8
   0.00%             0x00007f0f1066d900:   mov    0xc(%rax),%r11d
   0.02%             0x00007f0f1066d904:   mov    %r8,%r10
   0.01%             0x00007f0f1066d907:   add    $0x30,%r10
   0.36%             0x00007f0f1066d90b:   vmovdqu 0x10(%r12,%r11,8),%ymm0
   1.60%             0x00007f0f1066d912:   vmovq  0xe0(%rsp),%xmm1             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                               ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.01%             0x00007f0f1066d91b:   vpmovsxbd %xmm1,%ymm2               ;*invokestatic shuffleToVector {reexecute=0 rethrow=0 return_oop=0}
                                                                               ; - jdk.incubator.vector.Int256Vector$Int256Shuffle::toVector@17 (line 823)
                                                                               ; - jdk.incubator.vector.Int256Vector$Int256Shuffle::toVector@1 (line 787)
                                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@12 (line 73)
   1.02%             0x00007f0f1066d920:   vpcmpgtd %ymm2,%ymm0,%ymm0
   1.63%             0x00007f0f1066d924:   vpcmpeqd %ymm2,%ymm2,%ymm2
                     0x00007f0f1066d928:   vpxor  %ymm2,%ymm0,%ymm0
   0.19%             0x00007f0f1066d92c:   vmovdqu 0xa0(%rsp),%ymm2            ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                               ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.00%             0x00007f0f1066d935:   vpand  %ymm0,%ymm2,%ymm4
   0.68%             0x00007f0f1066d939:   vpxor  %xmm2,%xmm2,%xmm2
                     0x00007f0f1066d93d:   vextracti128 $0x1,%ymm4,%xmm0
   0.17%             0x00007f0f1066d943:   vpackssdw %xmm0,%xmm4,%xmm0
   0.16%             0x00007f0f1066d947:   vpacksswb %xmm2,%xmm0,%xmm0
   0.40%             0x00007f0f1066d94b:   vpabsb %xmm0,%xmm0
   1.44%             0x00007f0f1066d950:   cmp    0x1c8(%r15),%r10
                     0x00007f0f1066d957:   jae    0x00007f0f1066db98
                     0x00007f0f1066d95d:   mov    %r10,0x1b8(%r15)
                     0x00007f0f1066d964:   prefetchw 0xc0(%r10)
                     0x00007f0f1066d96c:   movq   $0x1,(%r8)
   0.31%             0x00007f0f1066d973:   prefetchw 0x100(%r10)
                     0x00007f0f1066d97b:   movl   $0x26a0,0x8(%r8)             ;   {metadata({type array int})}
                     0x00007f0f1066d983:   prefetchw 0x140(%r10)
                     0x00007f0f1066d98b:   movl   $0x8,0xc(%r8)
   0.35%             0x00007f0f1066d993:   prefetchw 0x180(%r10)
   0.08%             0x00007f0f1066d99b:   mov    %r12,0x10(%r8)
....................................................................................................
  36.40%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, level 4, jdk.internal.vm.vector.VectorSupport::fromBitsCoerced, version 2, compile id 896 

                    0x00007f0f10651941:   jle    0x00007f0f10651953
                    0x00007f0f10651943:   dec    %rcx
          ↗         0x00007f0f10651946:   vmovq  %xmm0,(%rdi)
          │         0x00007f0f1065194a:   add    $0x8,%rdi
          │         0x00007f0f1065194e:   dec    %rcx
          ╰         0x00007f0f10651951:   jge    0x00007f0f10651946           ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@4 (line 3925)
                                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
                                                                              ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007f0e980c6c60::fromBits@5
                                                                              ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
   1.11%            0x00007f0f10651953:   mov    %r8,(%rsp)                   ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@11 (line 3926)
                                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
                                                                              ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007f0e980c6c60::fromBits@5
                                                                              ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
   0.00%            0x00007f0f10651957:   test   %ebp,%ebp
           ╭        0x00007f0f10651959:   jle    0x00007f0f10651a3d           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
           │                                                                  ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@12 (line 3926)
           │                                                                  ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
           │                                                                  ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007f0e980c6c60::fromBits@5
           │                                                                  ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
   0.10%   │        0x00007f0f1065195f:   nop
           │        0x00007f0f10651960:   test   %ebp,%ebp
           │        0x00007f0f10651962:   je     0x00007f0f10651af6
   1.14%   │        0x00007f0f10651968:   mov    %ebp,%r11d
           │        0x00007f0f1065196b:   dec    %r11d
   0.07%   │        0x00007f0f1065196e:   cmp    %ebp,%r11d
           │        0x00007f0f10651971:   jae    0x00007f0f10651af6
           │        0x00007f0f10651977:   mov    %r8d,%r10d
   1.11%   │        0x00007f0f1065197a:   mov    0x8(%rsp),%rbx
   0.05%   │        0x00007f0f1065197f:   mov    %ebx,%r8d                    ;*l2i {reexecute=0 rethrow=0 return_oop=0}
           │                                                                  ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@22 (line 3927)
           │                                                                  ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
           │                                                                  ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007f0e980c6c60::fromBits@5
           │                                                                  ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
   0.11%   │        0x00007f0f10651982:   shr    $0x2,%r10d
           │        0x00007f0f10651986:   and    $0x3,%r10d
   1.08%   │        0x00007f0f1065198a:   xor    %ecx,%ecx
   0.02%   │        0x00007f0f1065198c:   mov    $0xffffffff,%r11d
   0.08%   │        0x00007f0f10651992:   sub    %r10d,%r11d
           │        0x00007f0f10651995:   and    $0x3,%r11d
   0.98%   │        0x00007f0f10651999:   inc    %r11d
   0.01%   │        0x00007f0f1065199c:   cmp    %ebp,%r11d
   0.10%   │        0x00007f0f1065199f:   cmovg  %ebp,%r11d
           │        0x00007f0f106519a3:   xor    %r9d,%r9d                    ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
           │                                                                  ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@15 (line 3927)
           │                                                                  ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
           │                                                                  ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007f0e980c6c60::fromBits@5
           │                                                                  ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
   1.07%   │ ↗      0x00007f0f106519a6:   mov    (%rsp),%r10
   1.09%   │ │      0x00007f0f106519aa:   mov    %r8d,0x10(%r10,%r9,4)        ;*iastore {reexecute=0 rethrow=0 return_oop=0}
           │ │                                                                ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@33 (line 3928)
           │ │                                                                ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
           │ │                                                                ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007f0e980c6c60::fromBits@5
           │ │                                                                ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
   1.28%   │ │      0x00007f0f106519af:   mov    %r9d,%r10d
   1.12%   │ │      0x00007f0f106519b2:   inc    %r10d                        ;*iinc {reexecute=0 rethrow=0 return_oop=0}
           │ │                                                                ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@34 (line 3926)
           │ │                                                                ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
           │ │                                                                ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007f0e980c6c60::fromBits@5
           │ │                                                                ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
   1.17%   │ │      0x00007f0f106519b5:   cmp    %r11d,%r10d
           │╭│      0x00007f0f106519b8:   jge    0x00007f0f106519bf           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
           │││                                                                ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@12 (line 3926)
           │││                                                                ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
           │││                                                                ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007f0e980c6c60::fromBits@5
           │││                                                                ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
   1.00%   │││      0x00007f0f106519ba:   mov    %r10d,%r9d
   1.12%   ││╰      0x00007f0f106519bd:   jmp    0x00007f0f106519a6
   0.08%   │↘       0x00007f0f106519bf:   lea    -0x3(%rbp),%edi
   0.00%   │        0x00007f0f106519c2:   cmp    %edi,%r10d
           │        0x00007f0f106519c5:   jge    0x00007f0f10651b08           ;   {no_reloc}
   1.09%   │        0x00007f0f106519cb:   vmovd  %r8d,%xmm0
   0.02%   │        0x00007f0f106519d0:   vpbroadcastd %xmm0,%xmm0
   0.09%   │        0x00007f0f106519d5:   inc    %r9d
   0.00%   │        0x00007f0f106519d8:   mov    $0xfa0,%r11d
   1.12%   │   ↗    0x00007f0f106519de:   mov    %ebp,%r10d
   0.01%   │   │    0x00007f0f106519e1:   sub    %r9d,%r10d
   0.09%   │   │    0x00007f0f106519e4:   add    $0xfffffffd,%r10d
           │   │    0x00007f0f106519e8:   cmp    %r9d,%edi
   1.06%   │   │    0x00007f0f106519eb:   cmovl  %ecx,%r10d
   0.01%   │   │    0x00007f0f106519ef:   cmp    $0xfa0,%r10d
   0.08%   │   │    0x00007f0f106519f6:   cmova  %r11d,%r10d
   1.08%   │   │    0x00007f0f106519fa:   add    %r9d,%r10d
   0.01%   │   │    0x00007f0f106519fd:   data16 xchg %ax,%ax                 ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
           │   │                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@15 (line 3927)
           │   │                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
           │   │                                                              ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007f0e980c6c60::fromBits@5
           │   │                                                              ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
   0.09%   │  ↗│    0x00007f0f10651a00:   mov    (%rsp),%rdx
   0.01%   │  ││    0x00007f0f10651a04:   vmovdqu %xmm0,0x10(%rdx,%r9,4)      ;*iastore {reexecute=0 rethrow=0 return_oop=0}
           │  ││                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@33 (line 3928)
           │  ││                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
           │  ││                                                              ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007f0e980c6c60::fromBits@5
           │  ││                                                              ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
   1.12%   │  ││    0x00007f0f10651a0b:   add    $0x4,%r9d                    ;*iinc {reexecute=0 rethrow=0 return_oop=0}
           │  ││                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@34 (line 3926)
           │  ││                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
           │  ││                                                              ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007f0e980c6c60::fromBits@5
           │  ││                                                              ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
   0.01%   │  ││    0x00007f0f10651a0f:   cmp    %r10d,%r9d
           │  ╰│    0x00007f0f10651a12:   jl     0x00007f0f10651a00           ;*goto {reexecute=0 rethrow=0 return_oop=0}
           │   │                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@37 (line 3926)
           │   │                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
           │   │                                                              ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007f0e980c6c60::fromBits@5
           │   │                                                              ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
   0.07%   │   │    0x00007f0f10651a14:   mov    0x458(%r15),%r10             ; ImmutableOopMap {[0]=Oop [16]=Oop }
           │   │                                                              ;*goto {reexecute=1 rethrow=0 return_oop=0}
           │   │                                                              ; - (reexecute) jdk.incubator.vector.IntVector$IntSpecies::rvOp@37 (line 3926)
           │   │                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
           │   │                                                              ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007f0e980c6c60::fromBits@5
           │   │                                                              ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
   0.01%   │   │    0x00007f0f10651a1b:   test   %eax,(%r10)                  ;*goto {reexecute=0 rethrow=0 return_oop=0}
           │   │                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@37 (line 3926)
           │   │                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
           │   │                                                              ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007f0e980c6c60::fromBits@5
           │   │                                                              ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
           │   │                                                              ;   {poll}
   1.08%   │   │    0x00007f0f10651a1e:   xchg   %ax,%ax
   0.01%   │   │    0x00007f0f10651a20:   cmp    %edi,%r9d
           │   ╰    0x00007f0f10651a23:   jl     0x00007f0f106519de
   0.06%   │        0x00007f0f10651a25:   cmp    %ebp,%r9d
           │    ╭   0x00007f0f10651a28:   jge    0x00007f0f10651a3d
           │    │   0x00007f0f10651a2a:   xchg   %ax,%ax                      ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
           │    │                                                             ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@15 (line 3927)
           │    │                                                             ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
           │    │                                                             ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007f0e980c6c60::fromBits@5
           │    │                                                             ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
           │    │↗  0x00007f0f10651a2c:   mov    (%rsp),%r10
           │    ││  0x00007f0f10651a30:   mov    %r8d,0x10(%r10,%r9,4)        ;*iastore {reexecute=0 rethrow=0 return_oop=0}
           │    ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@33 (line 3928)
           │    ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
           │    ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007f0e980c6c60::fromBits@5
           │    ││                                                            ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
           │    ││  0x00007f0f10651a35:   inc    %r9d                         ;*iinc {reexecute=0 rethrow=0 return_oop=0}
           │    ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@34 (line 3926)
           │    ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
           │    ││                                                            ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007f0e980c6c60::fromBits@5
           │    ││                                                            ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
           │    ││  0x00007f0f10651a38:   cmp    %ebp,%r9d
           │    │╰  0x00007f0f10651a3b:   jl     0x00007f0f10651a2c           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
           │    │                                                             ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@12 (line 3926)
           │    │                                                             ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
           │    │                                                             ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007f0e980c6c60::fromBits@5
           │    │                                                             ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
   0.00%   ↘    ↘   0x00007f0f10651a3d:   mov    0x10(%rsp),%r10
   1.11%            0x00007f0f10651a42:   mov    0x44(%r10),%ebp              ;*getfield dummyVector {reexecute=0 rethrow=0 return_oop=0}
                                                                              ; - jdk.incubator.vector.AbstractSpecies::dummyVector@1 (line 308)
                                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::dummyVector@1 (line 3918)
                                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@41 (line 3930)
                                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
                                                                              ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007f0e980c6c60::fromBits@5
                                                                              ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
   0.03%            0x00007f0f10651a46:   mov    0x8(%r12,%rbp,8),%r11d       ; implicit exception: dispatches to 0x00007f0f10651bbc
   0.19%            0x00007f0f10651a4b:   cmp    $0x103e3b8,%r11d             ;   {metadata(&apos;jdk/incubator/vector/Int256Vector&apos;)}
                    0x00007f0f10651a52:   jne    0x00007f0f10651b74
   0.17%            0x00007f0f10651a58:   mov    0x1b8(%r15),%rax
   1.04%            0x00007f0f10651a5f:   mov    %rax,%r10
   0.01%            0x00007f0f10651a62:   add    $0x10,%r10
   0.05%            0x00007f0f10651a66:   cmp    0x1c8(%r15),%r10
                    0x00007f0f10651a6d:   jae    0x00007f0f10651ad4           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@37 (line 3926)
                                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
                                                                              ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007f0e980c6c60::fromBits@5
                                                                              ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
   0.27%            0x00007f0f10651a6f:   mov    %r10,0x1b8(%r15)
   0.91%            0x00007f0f10651a76:   prefetchw 0xc0(%r10)
   0.04%            0x00007f0f10651a7e:   movq   $0x1,(%rax)
   0.06%            0x00007f0f10651a85:   movl   $0x103e3b8,0x8(%rax)         ;   {metadata(&apos;jdk/incubator/vector/Int256Vector&apos;)}
   0.18%            0x00007f0f10651a8c:   mov    %r12d,0xc(%rax)              ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                                              ; - jdk.incubator.vector.Int256Vector::vectorFactory@0 (line 171)
                                                                              ; - jdk.incubator.vector.Int256Vector::vectorFactory@2 (line 41)
                                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@45 (line 3930)
                                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
                                                                              ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007f0e980c6c60::fromBits@5
                                                                              ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
   1.00%            0x00007f0f10651a90:   mov    (%rsp),%r10
   0.01%            0x00007f0f10651a94:   mov    %r10,%r11
   0.05%            0x00007f0f10651a97:   shr    $0x3,%r11
   0.20%            0x00007f0f10651a9b:   mov    %r11d,0xc(%rax)              ;*invokeinterface fromBits {reexecute=0 rethrow=0 return_oop=0}
                                                                              ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
   0.91%            0x00007f0f10651a9f:   add    $0x30,%rsp
                    0x00007f0f10651aa3:   pop    %rbp
   0.02%            0x00007f0f10651aa4:   cmp    0x450(%r15),%rsp             ;   {poll_return}
                    0x00007f0f10651aab:   ja     0x00007f0f10651bea
   1.19%            0x00007f0f10651ab1:   ret    
                    0x00007f0f10651ab2:   movabs $0x7f0e970026a0,%rsi         ;   {metadata({type array int})}
                    0x00007f0f10651abc:   mov    %ebp,%edx
                    0x00007f0f10651abe:   nop
                    0x00007f0f10651abf:   call   0x00007f0f1018e880           ; ImmutableOopMap {[16]=Oop }
                                                                              ;*newarray {reexecute=0 rethrow=0 return_oop=1}
                                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@4 (line 3925)
                                                                              ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
                                                                              ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007f0e980c6c60::fromBits@5
                                                                              ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
                                                                              ;   {runtime_call _new_array_Java}
....................................................................................................
  28.48%  <total for region 2>

....[Hottest Region 3]..............................................................................
c2, level 4, jdk.internal.vm.vector.VectorSupport::fromBitsCoerced, version 2, compile id 896 

                0x00007f0f10651818:   jne    0x00007f0f10651b10           ;*invokeinterface fromBits {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
                0x00007f0f1065181e:   xchg   %ax,%ax
                0x00007f0f10651820:   test   %r8,%r8
                0x00007f0f10651823:   je     0x00007f0f10651b30           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - jdk.incubator.vector.Int256Vector$Int256Mask::lambda$maskAll$15@3 (line 778)
                                                                          ; - jdk.incubator.vector.Int256Vector$Int256Mask$$Lambda/0x00007f0e980cb960::fromBits@2
                                                                          ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
                0x00007f0f10651829:   movabs $0x7fee80748,%rax            ;   {oop(a &apos;jdk/incubator/vector/Int256Vector$Int256Mask&apos;{0x00000007fee80748})}
                0x00007f0f10651833:   jmp    0x00007f0f10651a9f
   0.37%        0x00007f0f10651838:   nopl   0x0(%rax,%rax,1)
   0.04%        0x00007f0f10651840:   mov    0x8(%rdi),%r11d              ; implicit exception: dispatches to 0x00007f0f10651ba4
   0.71%        0x00007f0f10651844:   cmp    $0x103c240,%r11d             ;   {metadata(&apos;jdk/incubator/vector/IntVector$IntSpecies&apos;)}
                0x00007f0f1065184b:   jne    0x00007f0f10651b58           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007f0e980c6c60::fromBits@2
                                                                          ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
   0.01%        0x00007f0f10651851:   mov    %rdi,0x10(%rsp)
   0.39%        0x00007f0f10651856:   mov    0xc(%rdi),%ebp               ;*getfield laneCount {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - jdk.incubator.vector.AbstractSpecies::laneCount@1 (line 126)
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@1 (line 3925)
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007f0e980c6c60::fromBits@5
                                                                          ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
   0.03%        0x00007f0f10651859:   nopl   0x0(%rax)
   0.75%        0x00007f0f10651860:   cmp    $0x40000,%ebp
                0x00007f0f10651866:   ja     0x00007f0f10651aee
   0.01%        0x00007f0f1065186c:   movslq %ebp,%r10                    ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@4 (line 3925)
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007f0e980c6c60::fromBits@5
                                                                          ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
   0.33%        0x00007f0f1065186f:   cmp    $0x40000,%ebp
                0x00007f0f10651875:   ja     0x00007f0f10651ab2           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@37 (line 3926)
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007f0e980c6c60::fromBits@5
                                                                          ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
   0.02%        0x00007f0f1065187b:   mov    0x1b8(%r15),%r8
   0.80%        0x00007f0f10651882:   lea    0x17(,%r10,4),%rcx           ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@4 (line 3925)
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007f0e980c6c60::fromBits@5
                                                                          ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
   0.01%        0x00007f0f1065188a:   mov    %rcx,%r10
   0.29%        0x00007f0f1065188d:   and    $0xfffffffffffffff8,%r10
   0.05%        0x00007f0f10651891:   mov    %r8,%r11
   0.79%        0x00007f0f10651894:   add    %r10,%r11
   0.01%        0x00007f0f10651897:   nopw   0x0(%rax,%rax,1)
   0.39%        0x00007f0f106518a0:   cmp    0x1c8(%r15),%r11
                0x00007f0f106518a7:   jae    0x00007f0f10651ab2           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies::rvOp@37 (line 3926)
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies::lambda$broadcastBits$1@7 (line 3851)
                                                                          ; - jdk.incubator.vector.IntVector$IntSpecies$$Lambda/0x00007f0e980c6c60::fromBits@5
                                                                          ; - jdk.internal.vm.vector.VectorSupport::fromBitsCoerced@29 (line 210)
   0.03%        0x00007f0f106518ad:   mov    %r11,0x1b8(%r15)
   0.79%        0x00007f0f106518b4:   mov    %r8,%rdi
   0.02%        0x00007f0f106518b7:   add    $0x10,%rdi
   0.34%        0x00007f0f106518bb:   movq   $0x1,(%r8)
   0.04%        0x00007f0f106518c2:   prefetchw 0xc0(%r11)
   0.81%        0x00007f0f106518ca:   movl   $0x26a0,0x8(%r8)             ;   {metadata({type array int})}
   0.01%        0x00007f0f106518d2:   mov    %ebp,0xc(%r8)
   0.61%        0x00007f0f106518d6:   prefetchw 0x100(%r11)
   0.01%        0x00007f0f106518de:   prefetchw 0x140(%r11)
   0.77%        0x00007f0f106518e6:   prefetchw 0x180(%r11)
   0.47%        0x00007f0f106518ee:   shr    $0x3,%rcx
   0.40%        0x00007f0f106518f2:   add    $0xfffffffffffffffe,%rcx
   0.02%        0x00007f0f106518f6:   xor    %rax,%rax
   0.76%        0x00007f0f106518f9:   cmp    $0x8,%rcx
          ╭     0x00007f0f106518fd:   jg     0x00007f0f1065190f
   0.02%  │     0x00007f0f106518ff:   dec    %rcx
   0.35%  │     0x00007f0f10651902:   js     0x00007f0f10651953
   1.85%  │↗    0x00007f0f10651904:   mov    %rax,(%rdi,%rcx,8)
   1.67%  ││    0x00007f0f10651908:   dec    %rcx
          │╰    0x00007f0f1065190b:   jge    0x00007f0f10651904
          │     0x00007f0f1065190d:   jmp    0x00007f0f10651953
          ↘     0x00007f0f1065190f:   vpxor  %ymm0,%ymm0,%ymm0
            ╭   0x00007f0f10651913:   jmp    0x00007f0f10651925
            │↗  0x00007f0f10651918:   vmovdqu %ymm0,(%rdi)
            ││  0x00007f0f1065191c:   vmovdqu %ymm0,0x20(%rdi)
            ││  0x00007f0f10651921:   add    $0x40,%rdi
            ↘│  0x00007f0f10651925:   sub    $0x8,%rcx
             ╰  0x00007f0f10651929:   jge    0x00007f0f10651918
                0x00007f0f1065192b:   add    $0x4,%rcx
....................................................................................................
  13.98%  <total for region 3>

....[Hottest Region 4]..............................................................................
c2, level 4, com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector, version 2, compile id 961 

   0.68%     0x00007f0f1066d939:   vpxor  %xmm2,%xmm2,%xmm2
             0x00007f0f1066d93d:   vextracti128 $0x1,%ymm4,%xmm0
   0.17%     0x00007f0f1066d943:   vpackssdw %xmm0,%xmm4,%xmm0
   0.16%     0x00007f0f1066d947:   vpacksswb %xmm2,%xmm0,%xmm0
   0.40%     0x00007f0f1066d94b:   vpabsb %xmm0,%xmm0
   1.44%     0x00007f0f1066d950:   cmp    0x1c8(%r15),%r10
          ╭  0x00007f0f1066d957:   jae    0x00007f0f1066db98
          │  0x00007f0f1066d95d:   mov    %r10,0x1b8(%r15)
          │  0x00007f0f1066d964:   prefetchw 0xc0(%r10)
          │  0x00007f0f1066d96c:   movq   $0x1,(%r8)
   0.31%  │  0x00007f0f1066d973:   prefetchw 0x100(%r10)
          │  0x00007f0f1066d97b:   movl   $0x26a0,0x8(%r8)             ;   {metadata({type array int})}
          │  0x00007f0f1066d983:   prefetchw 0x140(%r10)
          │  0x00007f0f1066d98b:   movl   $0x8,0xc(%r8)
   0.35%  │  0x00007f0f1066d993:   prefetchw 0x180(%r10)
   0.08%  │  0x00007f0f1066d99b:   mov    %r12,0x10(%r8)
          │  0x00007f0f1066d99f:   mov    %r12,0x18(%r8)
          │  0x00007f0f1066d9a3:   mov    %r12,0x20(%r8)
   0.36%  │  0x00007f0f1066d9a7:   mov    %r12,0x28(%r8)
   0.01%  │  0x00007f0f1066d9ab:   mov    %r8,0x70(%rsp)
          │  0x00007f0f1066d9b0:   mov    0x30(%rsp),%r10
          │  0x00007f0f1066d9b5:   mov    0xc(%r10),%r10d              ;*goto {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@174 (line 79)
   0.35%  │  0x00007f0f1066d9b9:   mov    0x1b8(%r15),%rax
   0.01%  │  0x00007f0f1066d9c0:   vmovdqu 0x10(%r12,%r10,8),%ymm2
   0.06%  │  0x00007f0f1066d9c7:   mov    %rax,%r10
          │  0x00007f0f1066d9ca:   add    $0x10,%r10
   0.40%  │  0x00007f0f1066d9ce:   mov    0x68(%rsp),%r11
   0.01%  │  0x00007f0f1066d9d3:   mov    0xc(%r11),%r11d
   0.01%  │  0x00007f0f1066d9d7:   vmovdqu 0x10(%r12,%r11,8),%ymm3     ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.02%  │  0x00007f0f1066d9de:   vpblendvb %ymm4,%ymm3,%ymm2,%ymm2   ;*invokestatic blend {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - jdk.incubator.vector.IntVector::blendTemplate@26 (line 2182)
          │                                                            ; - jdk.incubator.vector.Int256Vector::blend@11 (line 410)
          │                                                            ; - jdk.incubator.vector.Int256Vector::blend@3 (line 41)
          │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@158 (line 88)
   1.21%  │  0x00007f0f1066d9e4:   vmovdqu %ymm2,0x10(%r8)
          │  0x00007f0f1066d9ea:   cmp    0x1c8(%r15),%r10
          │  0x00007f0f1066d9f1:   jae    0x00007f0f1066dbfc
   0.04%  │  0x00007f0f1066d9f7:   mov    %r10,0x1b8(%r15)
   0.18%  │  0x00007f0f1066d9fe:   prefetchw 0xc0(%r10)
   0.19%  │  0x00007f0f1066da06:   movq   $0x1,(%rax)
          │  0x00007f0f1066da0d:   movl   $0x103e3b8,0x8(%rax)         ;   {metadata(&apos;jdk/incubator/vector/Int256Vector&apos;)}
   0.00%  │  0x00007f0f1066da14:   mov    0x70(%rsp),%r10
   0.16%  │  0x00007f0f1066da19:   shr    $0x3,%r10
   0.22%  │  0x00007f0f1066da1d:   mov    %r10d,0xc(%rax)
          │  0x00007f0f1066da21:   mov    %rax,0x30(%rsp)
          │  0x00007f0f1066da26:   mov    0x1b8(%r15),%rax
   0.16%  │  0x00007f0f1066da2d:   mov    %rax,%r10
   0.20%  │  0x00007f0f1066da30:   add    $0x30,%r10
   0.00%  │  0x00007f0f1066da34:   nopl   0x0(%rax,%rax,1)
   0.01%  │  0x00007f0f1066da3c:   data16 data16 xchg %ax,%ax
   0.20%  │  0x00007f0f1066da40:   cmp    0x1c8(%r15),%r10
          │  0x00007f0f1066da47:   jae    0x00007f0f1066dc5c
   0.16%  │  0x00007f0f1066da4d:   mov    %r10,0x1b8(%r15)
          │  0x00007f0f1066da54:   prefetchw 0xc0(%r10)
   0.01%  │  0x00007f0f1066da5c:   movq   $0x1,(%rax)
   0.17%  │  0x00007f0f1066da63:   prefetchw 0x100(%r10)
   0.21%  │  0x00007f0f1066da6b:   movl   $0x26a0,0x8(%rax)            ;   {metadata({type array int})}
          │  0x00007f0f1066da72:   prefetchw 0x140(%r10)
   0.00%  │  0x00007f0f1066da7a:   movl   $0x8,0xc(%rax)
   0.25%  │  0x00007f0f1066da81:   prefetchw 0x180(%r10)
   0.29%  │  0x00007f0f1066da89:   mov    %r12,0x10(%rax)
   0.02%  │  0x00007f0f1066da8d:   mov    %r12,0x18(%rax)
   0.06%  │  0x00007f0f1066da91:   mov    %r12,0x20(%rax)
   0.23%  │  0x00007f0f1066da95:   mov    %r12,0x28(%rax)
   0.16%  │  0x00007f0f1066da99:   mov    %rax,0x8(%rsp)
          │  0x00007f0f1066da9e:   mov    0x28(%rsp),%r10
   0.06%  │  0x00007f0f1066daa3:   mov    0xc(%r10),%r10d              ;*goto {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@174 (line 79)
   0.22%  │  0x00007f0f1066daa7:   mov    0x1b8(%r15),%rax
   0.15%  │  0x00007f0f1066daae:   vmovdqu 0x10(%r12,%r10,8),%ymm0
   0.56%  │  0x00007f0f1066dab5:   mov    %rax,%r10
   0.02%  │  0x00007f0f1066dab8:   add    $0x10,%r10
   0.12%  │  0x00007f0f1066dabc:   mov    0x20(%rsp),%r11
   0.07%  │  0x00007f0f1066dac1:   mov    0xc(%r11),%r11d              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.20%  │  0x00007f0f1066dac5:   vpaddd 0x10(%r12,%r11,8),%ymm0,%ymm0;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - jdk.incubator.vector.IntVector::lanewiseTemplate@154 (line 784)
          │                                                            ; - jdk.incubator.vector.Int256Vector::lanewise@3 (line 285)
          │                                                            ; - jdk.incubator.vector.Int256Vector::lanewise@3 (line 41)
          │                                                            ; - jdk.incubator.vector.IntVector::add@5 (line 1352)
          │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@166 (line 89)
   1.80%  │  0x00007f0f1066dacc:   mov    0x8(%rsp),%r11
   0.06%  │  0x00007f0f1066dad1:   vmovdqu %ymm0,0x10(%r11)
   0.25%  │  0x00007f0f1066dad7:   nopw   0x0(%rax,%rax,1)
   0.10%  │  0x00007f0f1066dae0:   cmp    0x1c8(%r15),%r10
          │  0x00007f0f1066dae7:   jae    0x00007f0f1066dcb4           ;*goto {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@174 (line 79)
   0.05%  │  0x00007f0f1066daed:   mov    %r10,0x1b8(%r15)
   0.03%  │  0x00007f0f1066daf4:   prefetchw 0xc0(%r10)
   0.26%  │  0x00007f0f1066dafc:   movq   $0x1,(%rax)
   0.11%  │  0x00007f0f1066db03:   movl   $0x103e3b8,0x8(%rax)         ;   {metadata(&apos;jdk/incubator/vector/Int256Vector&apos;)}
   0.03%  │  0x00007f0f1066db0a:   mov    0x38(%rsp),%r10              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.02%  │  0x00007f0f1066db0f:   mov    0xc(%r10),%r10d              ;*getfield laneCount {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - jdk.incubator.vector.AbstractSpecies::length@1 (line 117)
          │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@67 (line 79)
   0.23%  │  0x00007f0f1066db13:   mov    0x64(%rsp),%r9d              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.09%  │  0x00007f0f1066db18:   inc    %r9d
   0.03%  │  0x00007f0f1066db1b:   mov    0x8(%rsp),%r11
   0.03%  │  0x00007f0f1066db20:   shr    $0x3,%r11
   0.28%  │  0x00007f0f1066db24:   mov    %r11d,0xc(%rax)
   0.13%  │  0x00007f0f1066db28:   mov    %rax,0x20(%rsp)              ;*goto {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@174 (line 79)
   0.04%  │  0x00007f0f1066db2d:   mov    0x458(%r15),%r11             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.06%  │  0x00007f0f1066db34:   vpmovsxbd %xmm1,%ymm3               ; ImmutableOopMap {[24]=Oop [32]=Oop [40]=Oop [48]=Oop [56]=Oop }
          │                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
          │                                                            ; - (reexecute) com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@174 (line 79)
   0.23%  │  0x00007f0f1066db39:   test   %eax,(%r11)                  ;   {poll}
   0.14%  │  0x00007f0f1066db3c:   nopl   0x0(%rax)
   0.02%  │  0x00007f0f1066db40:   cmp    %r10d,%r9d
          │  0x00007f0f1066db43:   jge    0x00007f0f1066d57f
   0.01%  │  0x00007f0f1066db49:   vmovdqu 0x80(%rsp),%ymm2
   0.25%  │  0x00007f0f1066db52:   mov    %r9d,%r10d
   0.13%  │  0x00007f0f1066db55:   vmovq  %xmm1,0xe0(%rsp)
   0.03%  │  0x00007f0f1066db5e:   xchg   %ax,%ax
   0.01%  │  0x00007f0f1066db60:   cmp    $0x8,%r10d
          │  0x00007f0f1066db64:   jae    0x00007f0f1066dd32
   0.21%  │  0x00007f0f1066db6a:   mov    0x38(%rsp),%r11
   0.10%  │  0x00007f0f1066db6f:   mov    0x2c(%r11),%r11d
   0.06%  │  0x00007f0f1066db73:   mov    0x38(%rsp),%r8               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.00%  │  0x00007f0f1066db78:   mov    0xc(%r8),%ecx                ;*getfield laneCount {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@8 (line 3847)
          │                                                            ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3857)
          │                                                            ; - jdk.incubator.vector.IntVector::broadcast@7 (line 611)
          │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@87 (line 81)
   0.25%  │  0x00007f0f1066db7c:   movslq %r10d,%r8
   0.12%  │  0x00007f0f1066db7f:   mov    %r11,%rsi
   0.05%  │  0x00007f0f1066db82:   shl    $0x3,%rsi
   0.01%  │  0x00007f0f1066db86:   shl    $0x3,%r8
   0.23%  │  0x00007f0f1066db8a:   movabs $0x7f0f1066d2c0,%r11         ;   {section_word}
   0.09%  │  0x00007f0f1066db94:   jmp    *(%r11,%r8,1)
          ↘  0x00007f0f1066db98:   vmovq  %xmm0,0x8(%rsp)
             0x00007f0f1066db9e:   vmovdqu %ymm4,0xa0(%rsp)
             0x00007f0f1066dba7:   movabs $0x7f0e970026a0,%rsi         ;   {metadata({type array int})}
             0x00007f0f1066dbb1:   mov    $0x8,%edx
             0x00007f0f1066dbb6:   mov    0x18(%rsp),%rbp              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                       ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
             0x00007f0f1066dbbb:   vpmovsxbd %xmm1,%ymm0               ;*invokestatic shuffleToVector {reexecute=0 rethrow=0 return_oop=0}
                                                                       ; - jdk.incubator.vector.Int256Vector$Int256Shuffle::toVector@17 (line 823)
                                                                       ; - jdk.incubator.vector.Int256Vector$Int256Shuffle::toVector@1 (line 787)
....................................................................................................
  13.02%  <total for region 4>

....[Hottest Regions]...............................................................................
  36.40%         c2, level 4  com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector, version 2, compile id 961 
  28.48%         c2, level 4  jdk.internal.vm.vector.VectorSupport::fromBitsCoerced, version 2, compile id 896 
  13.98%         c2, level 4  jdk.internal.vm.vector.VectorSupport::fromBitsCoerced, version 2, compile id 896 
  13.02%         c2, level 4  com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector, version 2, compile id 961 
   5.28%         c2, level 4  jdk.internal.vm.vector.VectorSupport::fromBitsCoerced, version 2, compile id 896 
   0.11%              kernel  [unknown] 
   0.11%              kernel  [unknown] 
   0.10%              kernel  [unknown] 
   0.10%           libjvm.so  G1MergeHeapRootsTask::G1MergeCardSetClosure::do_heap_region 
   0.09%              kernel  [unknown] 
   0.06%              kernel  [unknown] 
   0.05%              kernel  [unknown] 
   0.05%           libjvm.so  G1CardSet::reset_table_scanner 
   0.04%        libc-2.31.so  __memset_avx2_erms 
   0.04%              kernel  [unknown] 
   0.04%           libjvm.so  ElfSymbolTable::lookup 
   0.04%          ld-2.31.so  __tls_get_addr 
   0.03%              kernel  [unknown] 
   0.03%           libjvm.so  FreeListAllocator::reset 
   0.03%              kernel  [unknown] 
   1.93%  <...other 514 warm regions...>
....................................................................................................
 100.00%  <totals>

....[Hottest Methods (after inlining)]..............................................................
  49.42%         c2, level 4  com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector, version 2, compile id 961 
  47.74%         c2, level 4  jdk.internal.vm.vector.VectorSupport::fromBitsCoerced, version 2, compile id 896 
   1.29%              kernel  [unknown] 
   0.11%           libjvm.so  G1MergeHeapRootsTask::G1MergeCardSetClosure::do_heap_region 
   0.10%                      <unknown> 
   0.05%           libjvm.so  G1CardSet::reset_table_scanner 
   0.04%        libc-2.31.so  __memset_avx2_erms 
   0.04%           libjvm.so  ElfSymbolTable::lookup 
   0.04%          ld-2.31.so  __tls_get_addr 
   0.04%           libjvm.so  FreeListAllocator::reset 
   0.03%           libjvm.so  CardTableBarrierSet::on_slowpath_allocation_exit 
   0.03%        libc-2.31.so  __memset_avx2_unaligned_erms 
   0.03%           libjvm.so  G1CardTable::is_in_young 
   0.03%           libjvm.so  G1ScanCollectionSetRegionClosure::do_heap_region 
   0.02%           libjvm.so  HeapRegionManager::par_iterate 
   0.02%           libjvm.so  MemAllocator::allocate 
   0.02%           libjvm.so  G1CollectedHeap::allocate_new_tlab 
   0.02%           libjvm.so  G1FromCardCache::clear 
   0.02%           libjvm.so  G1CardSet::clear 
   0.02%           libjvm.so  JfrObjectAllocationSample::send_event 
   0.90%  <...other 235 warm methods...>
....................................................................................................
 100.00%  <totals>

....[Distribution by Source]........................................................................
  97.16%         c2, level 4
   1.29%              kernel
   1.06%           libjvm.so
   0.17%        libc-2.31.so
   0.10%                    
   0.08%         interpreter
   0.05%  libpthread-2.31.so
   0.04%          ld-2.31.so
   0.02%      hsdis-amd64.so
   0.01%              [vdso]
   0.00%         c1, level 3
   0.00%    perf-1956674.map
   0.00%         c1, level 1
....................................................................................................
 100.00%  <totals>



# JMH version: 1.37
# VM version: JDK 21, OpenJDK 64-Bit Server VM, 21+35-2513
# VM invoker: /home/gogu/bench_jdks/jdk-21/bin/java
# VM options: -Xms4g -Xmx4g -XX:+AlwaysPreTouch --add-modules=jdk.incubator.vector
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark.sortVector
# Parameters: (arraySize = 65536, vectorSize = 512)

# Run progress: 91.67% complete, ETA 00:01:50
# Fork: 1 of 1
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 46643.982 us/op
# Warmup Iteration   2: 33702.276 us/op
# Warmup Iteration   3: 33677.563 us/op
# Warmup Iteration   4: 33630.505 us/op
# Warmup Iteration   5: 33634.276 us/op
Iteration   1: 33632.233 us/op
Iteration   2: 33642.799 us/op
Iteration   3: 33627.017 us/op
Iteration   4: 33630.932 us/op
Iteration   5: 33646.879 us/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark.sortVector":
  33635.972 ±(99.9%) 32.512 us/op [Average]
  (min, avg, max) = (33627.017, 33635.972, 33646.879), stdev = 8.443
  CI (99.9%): [33603.461, 33668.484] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark.sortVector:asm":
PrintAssembly processed: 195614 total address lines.
Perf output processed (skipped 56.978 seconds):
 Column 1: cycles (51138 events)

Hottest code regions (>10.00% "cycles" events):
 Event counts are percents of total event count.

....[Hottest Region 1]..............................................................................
c2, level 4, jdk.internal.vm.vector.VectorSupport::compare, version 2, compile id 883 

                                  0x00007f69ac654712:   mov    0x48(%rcx),%r9
                                  0x00007f69ac654716:   cmp    %r8,%r9
                                  0x00007f69ac654719:   jne    0x00007f69ac654cf0           ;*invokevirtual loadFence {reexecute=0 rethrow=0 return_oop=0}
                                                                                            ; - jdk.internal.vm.vector.VectorSupport::maybeRebox@3 (line 702)
                                                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
                                                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
                                                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
                                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f69340caf28::apply@14
                                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.01%                          0x00007f69ac65471f:   mov    0xc(%r10),%ecx               ;*getfield payload {reexecute=0 rethrow=0 return_oop=0}
                                                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@4 (line 164)
                                                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
                                                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
                                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f69340caf28::apply@14
                                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.00%                          0x00007f69ac654723:   mov    0x8(%r12,%rcx,8),%r8d        ; implicit exception: dispatches to 0x00007f69ac654dfc
   0.28%                          0x00007f69ac654728:   cmp    $0x26a0,%r8d                 ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
                                                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
                                                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
                                                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
                                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f69340caf28::apply@14
                                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
                                                                                            ;   {metadata({type array int})}
                                  0x00007f69ac65472f:   jne    0x00007f69ac654d50           ;*invokevirtual loadFence {reexecute=0 rethrow=0 return_oop=0}
                                                                                            ; - jdk.internal.vm.vector.VectorSupport::maybeRebox@3 (line 702)
                                                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
                                                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
                                                                                            ; - jdk.incubator.vector.IntVector::bTest@10 (line 473)
                                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f69340caf28::apply@14
                                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.05%                          0x00007f69ac654735:   mov    0xc(%r11),%r11d              ;*getfield payload {reexecute=0 rethrow=0 return_oop=0}
                                                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@4 (line 164)
                                                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
                                                                                            ; - jdk.incubator.vector.IntVector::bTest@10 (line 473)
                                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f69340caf28::apply@14
                                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
                                  0x00007f69ac654739:   lea    (%r12,%rcx,8),%rdx           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                                                            ; - jdk.incubator.vector.Int512Vector::vec@4 (line 117)
                                                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
                                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f69340caf28::apply@14
                                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.00%                          0x00007f69ac65473d:   data16 xchg %ax,%ax
   0.26%                          0x00007f69ac654740:   mov    0x8(%r12,%r11,8),%r9d        ; implicit exception: dispatches to 0x00007f69ac654e20
   0.04%                          0x00007f69ac654745:   cmp    $0x26a0,%r9d                 ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
                                                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
                                                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
                                                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
                                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f69340caf28::apply@14
                                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
                                                                                            ;   {metadata({type array int})}
                                  0x00007f69ac65474c:   jne    0x00007f69ac654d78
   0.09%                          0x00007f69ac654752:   shl    $0x3,%r11                    ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                                                            ; - jdk.incubator.vector.Int512Vector::vec@4 (line 117)
                                                                                            ; - jdk.incubator.vector.IntVector::bTest@10 (line 473)
                                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f69340caf28::apply@14
                                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
                                  0x00007f69ac654756:   mov    %r11,0x40(%rsp)
   0.21%                          0x00007f69ac65475b:   mov    0x1b8(%r15),%rbp
   0.02%                          0x00007f69ac654762:   mov    %rbp,%r11
   0.09%                          0x00007f69ac654765:   add    $0x20,%r11
   0.00%                          0x00007f69ac654769:   cmp    0x1c8(%r15),%r11
                                  0x00007f69ac654770:   jae    0x00007f69ac654bf7           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                                                            ; - jdk.incubator.vector.IntVector::bTest@62 (line 475)
                                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f69340caf28::apply@14
                                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.18%                          0x00007f69ac654776:   mov    %r11,0x1b8(%r15)
   0.01%                          0x00007f69ac65477d:   prefetchw 0xc0(%r11)
   0.09%                          0x00007f69ac654785:   movq   $0x1,0x0(%rbp)
   0.00%                          0x00007f69ac65478d:   prefetchw 0x100(%r11)
   0.20%                          0x00007f69ac654795:   movl   $0x1b00,0x8(%rbp)            ;   {metadata({type array bool})}
   0.12%                          0x00007f69ac65479c:   prefetchw 0x140(%r11)
   0.04%                          0x00007f69ac6547a4:   movl   $0x10,0xc(%rbp)
   0.02%                          0x00007f69ac6547ab:   prefetchw 0x180(%r11)
   0.24%                          0x00007f69ac6547b3:   mov    %r12,0x10(%rbp)
   0.07%                          0x00007f69ac6547b7:   mov    %r12,0x18(%rbp)              ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                                                            ; - jdk.incubator.vector.IntVector::bTest@19 (line 474)
                                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f69340caf28::apply@14
                                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.07%                          0x00007f69ac6547bb:   mov    0xc(%rdx),%r11d              ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                                                            ; - jdk.incubator.vector.IntVector::bTest@47 (line 476)
                                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f69340caf28::apply@14
                                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.02%                          0x00007f69ac6547bf:   nop
   0.22%                          0x00007f69ac6547c0:   test   %r11d,%r11d
                                  0x00007f69ac6547c3:   jbe    0x00007f69ac654cac
   0.04%                          0x00007f69ac6547c9:   cmp    $0xf,%r11d
                                  0x00007f69ac6547cd:   jbe    0x00007f69ac654cb2
   0.07%                          0x00007f69ac6547d3:   mov    0x40(%rsp),%r11              ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
                                                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
                                                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
                                                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
                                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f69340caf28::apply@14
                                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.01%                          0x00007f69ac6547d8:   mov    0xc(%r11),%r8d               ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                                                            ; - jdk.incubator.vector.IntVector::bTest@52 (line 476)
                                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f69340caf28::apply@14
                                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.30%                          0x00007f69ac6547dc:   nopl   0x0(%rax)
   0.02%                          0x00007f69ac6547e0:   test   %r8d,%r8d
                                  0x00007f69ac6547e3:   jbe    0x00007f69ac654cb8
   0.10%                          0x00007f69ac6547e9:   cmp    $0xf,%r8d
                                  0x00007f69ac6547ed:   jbe    0x00007f69ac654cbe
   0.07%                          0x00007f69ac6547f3:   mov    $0x1,%r8d
   0.15%                          0x00007f69ac6547f9:   mov    (%rsp),%r11d
   0.01%                          0x00007f69ac6547fd:   data16 xchg %ax,%ax
   0.04%                          0x00007f69ac654800:   cmp    $0x3,%r11d
          ╭                       0x00007f69ac654804:   je     0x00007f69ac65483a
   0.04%  │                       0x00007f69ac654806:   test   %r11d,%r11d
          │                       0x00007f69ac654809:   jne    0x00007f69ac654cc2
   0.00%  │                       0x00007f69ac65480f:   mov    0x40(%rsp),%r10
          │                       0x00007f69ac654814:   mov    0x10(%r10),%r11d
   0.03%  │                       0x00007f69ac654818:   mov    0x10(%rdx),%r10d
   0.04%  │                       0x00007f69ac65481c:   nopl   0x0(%rax)
          │                       0x00007f69ac654820:   cmp    %r11d,%r10d                  ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
          │                                                                                 ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
          │                                                                                 ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
          │                                                                                 ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
          │                                                                                 ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
          │                                                                                 ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f69340caf28::apply@14
          │                                                                                 ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
          │╭                      0x00007f69ac654823:   je     0x00007f69ac654b96
   0.02%  ││                      0x00007f69ac654829:   xor    %r10d,%r10d                  ;*goto {reexecute=0 rethrow=0 return_oop=0}
          ││                                                                                ; - jdk.incubator.vector.IntVector::compareWithOp@148 (line 2069)
          ││                                                                                ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$58@4 (line 2035)
          ││                                                                                ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f69340cb338::apply@9
          ││                                                                                ; - jdk.incubator.vector.IntVector::bTest@53 (line 476)
          ││                                                                                ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
          ││                                                                                ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f69340caf28::apply@14
          ││                                                                                ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.01%  ││                   ↗  0x00007f69ac65482c:   mov    %r10b,0x10(%rbp)             ;*bastore {reexecute=0 rethrow=0 return_oop=0}
          ││                   │                                                            ; - jdk.incubator.vector.IntVector::bTest@58 (line 476)
          ││                   │                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
          ││                   │                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f69340caf28::apply@14
          ││                   │                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.05%  ││                   │  0x00007f69ac654830:   mov    $0x1,%ecx
   0.00%  ││╭                  │  0x00007f69ac654835:   jmp    0x00007f69ac654aed
   0.03%  ↘││                  │  0x00007f69ac65483a:   mov    0x40(%rsp),%r10              ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
           ││                  │                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
           ││                  │                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
           ││                  │                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
           ││                  │                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││                  │                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f69340caf28::apply@14
           ││                  │                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.16%   ││                  │  0x00007f69ac65483f:   mov    0x10(%r10),%r11d             ;*iaload {reexecute=0 rethrow=0 return_oop=0}
           ││                  │                                                            ; - jdk.incubator.vector.IntVector::bTest@52 (line 476)
           ││                  │                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││                  │                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f69340caf28::apply@14
           ││                  │                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.02%   ││                  │  0x00007f69ac654843:   mov    0x10(%rdx),%r10d             ;*iaload {reexecute=0 rethrow=0 return_oop=0}
           ││                  │                                                            ; - jdk.incubator.vector.IntVector::bTest@47 (line 476)
           ││                  │                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││                  │                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f69340caf28::apply@14
           ││                  │                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.02%   ││                  │  0x00007f69ac654847:   xor    %ecx,%ecx
   0.03%   ││                  │  0x00007f69ac654849:   cmp    %r11d,%r10d
   0.19%   ││                  │  0x00007f69ac65484c:   setl   %cl                          ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
           ││                  │                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
           ││                  │                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
           ││                  │                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
           ││                  │                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││                  │                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f69340caf28::apply@14
           ││                  │                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.03%   ││                  │  0x00007f69ac65484f:   mov    %cl,0x10(%rbp)               ;*bastore {reexecute=0 rethrow=0 return_oop=0}
           ││                  │                                                            ; - jdk.incubator.vector.IntVector::bTest@58 (line 476)
           ││                  │                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││                  │                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f69340caf28::apply@14
           ││                  │                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.07%   ││╭                 │  0x00007f69ac654852:   jmp    0x00007f69ac654863
           │││                 │  0x00007f69ac654854:   nopl   0x0(%rax,%rax,1)
           │││                 │  0x00007f69ac65485c:   data16 data16 xchg %ax,%ax
   0.15%   │││↗                │  0x00007f69ac654860:   mov    %r10d,%r8d                   ;*aload {reexecute=0 rethrow=0 return_oop=0}
           ││││                │                                                            ; - jdk.incubator.vector.IntVector::bTest@35 (line 476)
           ││││                │                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││││                │                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f69340caf28::apply@14
           ││││                │                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.15%   ││↘│                │  0x00007f69ac654863:   movslq %r8d,%rax                    ;*bastore {reexecute=0 rethrow=0 return_oop=0}
           ││ │                │                                                            ; - jdk.incubator.vector.IntVector::bTest@58 (line 476)
           ││ │                │                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││ │                │                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f69340caf28::apply@14
           ││ │                │                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.17%   ││ │                │  0x00007f69ac654866:   mov    0x10(%rdx,%rax,4),%r14d      ;*iaload {reexecute=0 rethrow=0 return_oop=0}
           ││ │                │                                                            ; - jdk.incubator.vector.IntVector::bTest@47 (line 476)
           ││ │                │                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││ │                │                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f69340caf28::apply@14
           ││ │                │                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.08%   ││ │                │  0x00007f69ac65486b:   mov    0x40(%rsp),%rbx              ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
           ││ │                │                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
           ││ │                │                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
           ││ │                │                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
           ││ │                │                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││ │                │                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f69340caf28::apply@14
           ││ │                │                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.20%   ││ │                │  0x00007f69ac654870:   mov    0x1c(%rbx,%rax,4),%r10d      ;*iaload {reexecute=0 rethrow=0 return_oop=0}
           ││ │                │                                                            ; - jdk.incubator.vector.IntVector::bTest@52 (line 476)
           ││ │                │                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││ │                │                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f69340caf28::apply@14
           ││ │                │                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.23%   ││ │                │  0x00007f69ac654875:   mov    0x1c(%rdx,%rax,4),%r13d      ;*iaload {reexecute=0 rethrow=0 return_oop=0}
           ││ │                │                                                            ; - jdk.incubator.vector.IntVector::bTest@47 (line 476)
           ││ │                │                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││ │                │                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f69340caf28::apply@14
           ││ │                │                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.15%   ││ │                │  0x00007f69ac65487a:   mov    0x18(%rbx,%rax,4),%r11d
   0.08%   ││ │                │  0x00007f69ac65487f:   mov    0x10(%rbx,%rax,4),%ecx       ;*iaload {reexecute=0 rethrow=0 return_oop=0}
           ││ │                │                                                            ; - jdk.incubator.vector.IntVector::bTest@52 (line 476)
           ││ │                │                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││ │                │                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f69340caf28::apply@14
           ││ │                │                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.19%   ││ │                │  0x00007f69ac654883:   mov    0x18(%rdx,%rax,4),%r9d
   0.21%   ││ │                │  0x00007f69ac654888:   mov    0x14(%rdx,%rax,4),%edi       ;*iaload {reexecute=0 rethrow=0 return_oop=0}
           ││ │                │                                                            ; - jdk.incubator.vector.IntVector::bTest@47 (line 476)
           ││ │                │                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││ │                │                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f69340caf28::apply@14
           ││ │                │                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.18%   ││ │                │  0x00007f69ac65488c:   mov    0x14(%rbx,%rax,4),%ebx       ;*iaload {reexecute=0 rethrow=0 return_oop=0}
           ││ │                │                                                            ; - jdk.incubator.vector.IntVector::bTest@52 (line 476)
           ││ │                │                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││ │                │                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f69340caf28::apply@14
           ││ │                │                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.07%   ││ │                │  0x00007f69ac654890:   xor    %esi,%esi
   0.21%   ││ │                │  0x00007f69ac654892:   cmp    %r10d,%r13d                  ;   {no_reloc}
   0.24%   ││ │                │  0x00007f69ac654895:   setl   %sil
   0.21%   ││ │                │  0x00007f69ac654899:   xor    %r10d,%r10d
   0.06%   ││ │                │  0x00007f69ac65489c:   cmp    %ebx,%edi
   0.20%   ││ │                │  0x00007f69ac65489e:   setl   %r10b
   0.25%   ││ │                │  0x00007f69ac6548a2:   xor    %r13d,%r13d
   0.15%   ││ │                │  0x00007f69ac6548a5:   cmp    %r11d,%r9d
   0.06%   ││ │                │  0x00007f69ac6548a8:   setl   %r13b
   0.18%   ││ │                │  0x00007f69ac6548ac:   xor    %r9d,%r9d
   0.23%   ││ │                │  0x00007f69ac6548af:   cmp    %ecx,%r14d
   0.19%   ││ │                │  0x00007f69ac6548b2:   setl   %r9b                         ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
           ││ │                │                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
           ││ │                │                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
           ││ │                │                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
           ││ │                │                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││ │                │                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f69340caf28::apply@14
           ││ │                │                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.03%   ││ │                │  0x00007f69ac6548b6:   mov    %r9b,0x10(%rbp,%rax,1)
   0.23%   ││ │                │  0x00007f69ac6548bb:   mov    %r10b,0x11(%rbp,%rax,1)
   0.22%   ││ │                │  0x00007f69ac6548c0:   mov    %r13b,0x12(%rbp,%rax,1)
   0.21%   ││ │                │  0x00007f69ac6548c5:   mov    %sil,0x13(%rbp,%rax,1)       ;*bastore {reexecute=0 rethrow=0 return_oop=0}
           ││ │                │                                                            ; - jdk.incubator.vector.IntVector::bTest@58 (line 476)
           ││ │                │                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││ │                │                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f69340caf28::apply@14
           ││ │                │                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.09%   ││ │                │  0x00007f69ac6548ca:   lea    0x4(%r8),%r10d
   0.23%   ││ │                │  0x00007f69ac6548ce:   cmp    $0xd,%r10d
           ││ ╰                │  0x00007f69ac6548d2:   jl     0x00007f69ac654860
   0.02%   ││                  │  0x00007f69ac6548d4:   add    $0x4,%r8d                    ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
           ││                  │                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
           ││                  │                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
           ││                  │                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
           ││                  │                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││                  │                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f69340caf28::apply@14
           ││                  │                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.19%   ││  ↗               │  0x00007f69ac6548d8:   movslq %r8d,%r10                    ;*bastore {reexecute=0 rethrow=0 return_oop=0}
           ││  │               │                                                            ; - jdk.incubator.vector.IntVector::bTest@58 (line 476)
           ││  │               │                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││  │               │                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f69340caf28::apply@14
           ││  │               │                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.12%   ││  │               │  0x00007f69ac6548db:   mov    0x10(%rdx,%r10,4),%r11d      ;*iaload {reexecute=0 rethrow=0 return_oop=0}
           ││  │               │                                                            ; - jdk.incubator.vector.IntVector::bTest@47 (line 476)
           ││  │               │                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││  │               │                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f69340caf28::apply@14
           ││  │               │                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.21%   ││  │               │  0x00007f69ac6548e0:   mov    0x40(%rsp),%rcx              ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
           ││  │               │                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
           ││  │               │                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
           ││  │               │                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
           ││  │               │                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││  │               │                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f69340caf28::apply@14
           ││  │               │                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.21%   ││  │               │  0x00007f69ac6548e5:   mov    0x10(%rcx,%r10,4),%r9d       ;*iaload {reexecute=0 rethrow=0 return_oop=0}
           ││  │               │                                                            ; - jdk.incubator.vector.IntVector::bTest@52 (line 476)
           ││  │               │                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││  │               │                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f69340caf28::apply@14
           ││  │               │                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.18%   ││  │               │  0x00007f69ac6548ea:   xor    %ebx,%ebx
   0.10%   ││  │               │  0x00007f69ac6548ec:   cmp    %r9d,%r11d
   0.20%   ││  │               │  0x00007f69ac6548ef:   setl   %bl                          ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
           ││  │               │                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
           ││  │               │                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
           ││  │               │                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
           ││  │               │                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││  │               │                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f69340caf28::apply@14
           ││  │               │                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.21%   ││  │               │  0x00007f69ac6548f2:   mov    %bl,0x10(%rbp,%r10,1)        ;*bastore {reexecute=0 rethrow=0 return_oop=0}
           ││  │               │                                                            ; - jdk.incubator.vector.IntVector::bTest@58 (line 476)
           ││  │               │                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││  │               │                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f69340caf28::apply@14
           ││  │               │                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.22%   ││  │               │  0x00007f69ac6548f7:   inc    %r8d
   0.08%   ││  │               │  0x00007f69ac6548fa:   nopw   0x0(%rax,%rax,1)
   0.18%   ││  │               │  0x00007f69ac654900:   cmp    $0x10,%r8d
           ││  ╰               │  0x00007f69ac654904:   jl     0x00007f69ac6548d8
   0.02%   ││   ╭              │  0x00007f69ac654906:   jmp    0x00007f69ac654938
   0.02%   ││   │    ↗         │  0x00007f69ac654908:   add    $0x4,%ecx
   0.02%   ││   │    │         │  0x00007f69ac65490b:   nop                                 ;*aload {reexecute=0 rethrow=0 return_oop=0}
           ││   │    │         │                                                            ; - jdk.incubator.vector.IntVector::bTest@35 (line 476)
           ││   │    │         │                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││   │    │         │                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f69340caf28::apply@14
           ││   │    │         │                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.13%   ││   │ ↗  │         │  0x00007f69ac65490c:   movslq %ecx,%r10                    ;*bastore {reexecute=0 rethrow=0 return_oop=0}
           ││   │ │  │         │                                                            ; - jdk.incubator.vector.IntVector::bTest@58 (line 476)
           ││   │ │  │         │                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││   │ │  │         │                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f69340caf28::apply@14
           ││   │ │  │         │                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.02%   ││   │ │  │         │  0x00007f69ac65490f:   mov    0x10(%rdx,%r10,4),%r11d      ;*iaload {reexecute=0 rethrow=0 return_oop=0}
           ││   │ │  │         │                                                            ; - jdk.incubator.vector.IntVector::bTest@47 (line 476)
           ││   │ │  │         │                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││   │ │  │         │                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f69340caf28::apply@14
           ││   │ │  │         │                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.07%   ││   │ │  │         │  0x00007f69ac654914:   mov    0x40(%rsp),%r8               ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
           ││   │ │  │         │                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
           ││   │ │  │         │                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
           ││   │ │  │         │                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
           ││   │ │  │         │                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││   │ │  │         │                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f69340caf28::apply@14
           ││   │ │  │         │                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.03%   ││   │ │  │         │  0x00007f69ac654919:   mov    0x10(%r8,%r10,4),%r9d        ;*iaload {reexecute=0 rethrow=0 return_oop=0}
           ││   │ │  │         │                                                            ; - jdk.incubator.vector.IntVector::bTest@52 (line 476)
           ││   │ │  │         │                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││   │ │  │         │                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f69340caf28::apply@14
           ││   │ │  │         │                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.15%   ││   │ │  │         │  0x00007f69ac65491e:   xchg   %ax,%ax
   0.02%   ││   │ │  │         │  0x00007f69ac654920:   cmp    %r9d,%r11d                   ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
           ││   │ │  │         │                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
           ││   │ │  │         │                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
           ││   │ │  │         │                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
           ││   │ │  │         │                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││   │ │  │         │                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f69340caf28::apply@14
           ││   │ │  │         │                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
           ││   │╭│  │         │  0x00007f69ac654923:   je     0x00007f69ac654b8b
   0.12%   ││   │││  │         │  0x00007f69ac654929:   xor    %r8d,%r8d                    ;*goto {reexecute=0 rethrow=0 return_oop=0}
           ││   │││  │         │                                                            ; - jdk.incubator.vector.IntVector::compareWithOp@148 (line 2069)
           ││   │││  │         │                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$58@4 (line 2035)
           ││   │││  │         │                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f69340cb338::apply@9
           ││   │││  │         │                                                            ; - jdk.incubator.vector.IntVector::bTest@53 (line 476)
           ││   │││  │         │                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││   │││  │         │                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f69340caf28::apply@14
           ││   │││  │         │                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.03%   ││   │││  │        ↗│  0x00007f69ac65492c:   mov    %r8b,0x10(%rbp,%r10,1)       ;*bastore {reexecute=0 rethrow=0 return_oop=0}
           ││   │││  │        ││                                                            ; - jdk.incubator.vector.IntVector::bTest@58 (line 476)
           ││   │││  │        ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││   │││  │        ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f69340caf28::apply@14
           ││   │││  │        ││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.11%   ││   │││  │        ││  0x00007f69ac654931:   inc    %ecx
   0.02%   ││   │││  │        ││  0x00007f69ac654933:   cmp    $0x10,%ecx
           ││   ││╰  │        ││  0x00007f69ac654936:   jl     0x00007f69ac65490c
   0.14%   ││   ↘│   │        ││  0x00007f69ac654938:   mov    0x1b8(%r15),%rbx
   0.05%   ││    │   │        ││  0x00007f69ac65493f:   mov    %rbx,%r10
   0.09%   ││    │   │        ││  0x00007f69ac654942:   add    $0x10,%r10
   0.03%   ││    │   │        ││  0x00007f69ac654946:   cmp    0x1c8(%r15),%r10
           ││    │   │        ││  0x00007f69ac65494d:   jae    0x00007f69ac654c34
   0.18%   ││    │   │        ││  0x00007f69ac654953:   mov    %r10,0x1b8(%r15)
   0.03%   ││    │   │        ││  0x00007f69ac65495a:   prefetchw 0xc0(%r10)
   0.11%   ││    │   │        ││  0x00007f69ac654962:   movq   $0x1,(%rbx)
   0.05%   ││    │   │        ││  0x00007f69ac654969:   movl   $0x103f610,0x8(%rbx)         ;   {metadata(&apos;jdk/incubator/vector/Int512Vector$Int512Mask&apos;)}
   0.15%   ││    │   │        ││  0x00007f69ac654970:   mov    %r12d,0xc(%rbx)
   0.10%   ││    │   │        ││  0x00007f69ac654974:   mov    0x1b8(%r15),%rax
   0.06%   ││    │   │        ││  0x00007f69ac65497b:   mov    %rax,%r10
   0.03%   ││    │   │        ││  0x00007f69ac65497e:   add    $0x20,%r10
   0.15%   ││    │   │        ││  0x00007f69ac654982:   cmp    0x1c8(%r15),%r10
           ││    │   │        ││  0x00007f69ac654989:   jae    0x00007f69ac654c54           ;*goto {reexecute=0 rethrow=0 return_oop=0}
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::bTest@62 (line 475)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f69340caf28::apply@14
           ││    │   │        ││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.08%   ││    │   │        ││  0x00007f69ac65498f:   mov    %r10,0x1b8(%r15)
   0.12%   ││    │   │        ││  0x00007f69ac654996:   prefetchw 0xc0(%r10)
   0.39%   ││    │   │        ││  0x00007f69ac65499e:   movq   $0x1,(%rax)
   0.47%   ││    │   │        ││  0x00007f69ac6549a5:   prefetchw 0x100(%r10)
   0.02%   ││    │   │        ││  0x00007f69ac6549ad:   movl   $0x1b00,0x8(%rax)            ;   {metadata({type array bool})}
   0.12%   ││    │   │        ││  0x00007f69ac6549b4:   prefetchw 0x140(%r10)
   0.02%   ││    │   │        ││  0x00007f69ac6549bc:   movl   $0x10,0xc(%rax)
   0.62%   ││    │   │        ││  0x00007f69ac6549c3:   prefetchw 0x180(%r10)
   0.08%   ││    │   │        ││  0x00007f69ac6549cb:   mov    %r12,0x10(%rax)
   0.34%   ││    │   │        ││  0x00007f69ac6549cf:   mov    %r12,0x18(%rax)              ;*newarray {reexecute=0 rethrow=0 return_oop=0}
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::prepare@6 (line 598)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 590)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 586)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@5 (line 137)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@2 (line 41)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.AbstractSpecies::maskFactory@5 (line 328)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::maskFactory@5 (line 116)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::bTest@68 (line 478)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f69340caf28::apply@14
           ││    │   │        ││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.10%   ││    │   │        ││  0x00007f69ac6549d3:   movzbl 0x10(%rbp),%r11d             ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
           ││    │   │        ││                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f69340caf28::apply@14
           ││    │   │        ││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.13%   ││    │   │        ││  0x00007f69ac6549d8:   mov    %r11b,0x10(%rax)             ;*bastore {reexecute=0 rethrow=0 return_oop=0}
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::prepare@24 (line 600)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 590)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 586)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@5 (line 137)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@2 (line 41)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.AbstractSpecies::maskFactory@5 (line 328)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::maskFactory@5 (line 116)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::bTest@68 (line 478)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f69340caf28::apply@14
           ││    │   │        ││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.28%   ││    │   │        ││  0x00007f69ac6549dc:   movzbl 0x11(%rbp),%r10d             ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
           ││    │   │        ││                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f69340caf28::apply@14
           ││    │   │        ││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.06%   ││    │   │        ││  0x00007f69ac6549e1:   mov    %r10b,0x11(%rax)             ;*bastore {reexecute=0 rethrow=0 return_oop=0}
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::prepare@24 (line 600)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 590)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 586)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@5 (line 137)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@2 (line 41)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.AbstractSpecies::maskFactory@5 (line 328)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::maskFactory@5 (line 116)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::bTest@68 (line 478)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f69340caf28::apply@14
           ││    │   │        ││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.13%   ││    │   │        ││  0x00007f69ac6549e5:   movzbl 0x12(%rbp),%r11d             ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
           ││    │   │        ││                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f69340caf28::apply@14
           ││    │   │        ││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.06%   ││    │   │        ││  0x00007f69ac6549ea:   mov    %r11b,0x12(%rax)             ;*bastore {reexecute=0 rethrow=0 return_oop=0}
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::prepare@24 (line 600)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 590)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 586)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@5 (line 137)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@2 (line 41)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.AbstractSpecies::maskFactory@5 (line 328)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::maskFactory@5 (line 116)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::bTest@68 (line 478)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f69340caf28::apply@14
           ││    │   │        ││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.22%   ││    │   │        ││  0x00007f69ac6549ee:   movzbl 0x13(%rbp),%r10d             ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
           ││    │   │        ││                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f69340caf28::apply@14
           ││    │   │        ││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.03%   ││    │   │        ││  0x00007f69ac6549f3:   mov    %r10b,0x13(%rax)             ;*bastore {reexecute=0 rethrow=0 return_oop=0}
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::prepare@24 (line 600)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 590)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 586)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@5 (line 137)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@2 (line 41)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.AbstractSpecies::maskFactory@5 (line 328)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::maskFactory@5 (line 116)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::bTest@68 (line 478)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f69340caf28::apply@14
           ││    │   │        ││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.10%   ││    │   │        ││  0x00007f69ac6549f7:   movzbl 0x14(%rbp),%r11d             ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
           ││    │   │        ││                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f69340caf28::apply@14
           ││    │   │        ││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.05%   ││    │   │        ││  0x00007f69ac6549fc:   mov    %r11b,0x14(%rax)             ;*bastore {reexecute=0 rethrow=0 return_oop=0}
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::prepare@24 (line 600)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 590)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 586)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@5 (line 137)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@2 (line 41)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.AbstractSpecies::maskFactory@5 (line 328)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::maskFactory@5 (line 116)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::bTest@68 (line 478)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f69340caf28::apply@14
           ││    │   │        ││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.19%   ││    │   │        ││  0x00007f69ac654a00:   movzbl 0x15(%rbp),%r10d             ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
           ││    │   │        ││                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f69340caf28::apply@14
           ││    │   │        ││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.01%   ││    │   │        ││  0x00007f69ac654a05:   mov    %r10b,0x15(%rax)             ;*bastore {reexecute=0 rethrow=0 return_oop=0}
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::prepare@24 (line 600)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 590)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 586)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@5 (line 137)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@2 (line 41)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.AbstractSpecies::maskFactory@5 (line 328)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::maskFactory@5 (line 116)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::bTest@68 (line 478)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f69340caf28::apply@14
           ││    │   │        ││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.16%   ││    │   │        ││  0x00007f69ac654a09:   movzbl 0x16(%rbp),%r11d             ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
           ││    │   │        ││                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f69340caf28::apply@14
           ││    │   │        ││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.04%   ││    │   │        ││  0x00007f69ac654a0e:   mov    %r11b,0x16(%rax)             ;*bastore {reexecute=0 rethrow=0 return_oop=0}
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::prepare@24 (line 600)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 590)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 586)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@5 (line 137)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@2 (line 41)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.AbstractSpecies::maskFactory@5 (line 328)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::maskFactory@5 (line 116)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::bTest@68 (line 478)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f69340caf28::apply@14
           ││    │   │        ││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.22%   ││    │   │        ││  0x00007f69ac654a12:   movzbl 0x17(%rbp),%r10d             ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
           ││    │   │        ││                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f69340caf28::apply@14
           ││    │   │        ││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.02%   ││    │   │        ││  0x00007f69ac654a17:   mov    %r10b,0x17(%rax)             ;*bastore {reexecute=0 rethrow=0 return_oop=0}
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::prepare@24 (line 600)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 590)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 586)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@5 (line 137)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@2 (line 41)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.AbstractSpecies::maskFactory@5 (line 328)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::maskFactory@5 (line 116)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::bTest@68 (line 478)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f69340caf28::apply@14
           ││    │   │        ││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.14%   ││    │   │        ││  0x00007f69ac654a1b:   movzbl 0x18(%rbp),%r11d             ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
           ││    │   │        ││                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f69340caf28::apply@14
           ││    │   │        ││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.03%   ││    │   │        ││  0x00007f69ac654a20:   mov    %r11b,0x18(%rax)             ;*bastore {reexecute=0 rethrow=0 return_oop=0}
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::prepare@24 (line 600)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 590)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 586)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@5 (line 137)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@2 (line 41)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.AbstractSpecies::maskFactory@5 (line 328)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::maskFactory@5 (line 116)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::bTest@68 (line 478)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f69340caf28::apply@14
           ││    │   │        ││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.18%   ││    │   │        ││  0x00007f69ac654a24:   movzbl 0x19(%rbp),%r10d             ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
           ││    │   │        ││                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f69340caf28::apply@14
           ││    │   │        ││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.02%   ││    │   │        ││  0x00007f69ac654a29:   mov    %r10b,0x19(%rax)             ;*bastore {reexecute=0 rethrow=0 return_oop=0}
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::prepare@24 (line 600)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 590)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 586)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@5 (line 137)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@2 (line 41)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.AbstractSpecies::maskFactory@5 (line 328)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::maskFactory@5 (line 116)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::bTest@68 (line 478)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f69340caf28::apply@14
           ││    │   │        ││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.19%   ││    │   │        ││  0x00007f69ac654a2d:   movzbl 0x1a(%rbp),%r11d             ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
           ││    │   │        ││                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f69340caf28::apply@14
           ││    │   │        ││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.01%   ││    │   │        ││  0x00007f69ac654a32:   mov    %r11b,0x1a(%rax)             ;*bastore {reexecute=0 rethrow=0 return_oop=0}
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::prepare@24 (line 600)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 590)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 586)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@5 (line 137)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@2 (line 41)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.AbstractSpecies::maskFactory@5 (line 328)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::maskFactory@5 (line 116)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::bTest@68 (line 478)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f69340caf28::apply@14
           ││    │   │        ││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.27%   ││    │   │        ││  0x00007f69ac654a36:   movzbl 0x1b(%rbp),%r10d             ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
           ││    │   │        ││                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f69340caf28::apply@14
           ││    │   │        ││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
           ││    │   │        ││  0x00007f69ac654a3b:   mov    %r10b,0x1b(%rax)             ;*bastore {reexecute=0 rethrow=0 return_oop=0}
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::prepare@24 (line 600)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 590)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 586)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@5 (line 137)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@2 (line 41)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.AbstractSpecies::maskFactory@5 (line 328)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::maskFactory@5 (line 116)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::bTest@68 (line 478)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f69340caf28::apply@14
           ││    │   │        ││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.22%   ││    │   │        ││  0x00007f69ac654a3f:   movzbl 0x1c(%rbp),%r11d             ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
           ││    │   │        ││                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f69340caf28::apply@14
           ││    │   │        ││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.02%   ││    │   │        ││  0x00007f69ac654a44:   mov    %r11b,0x1c(%rax)             ;*bastore {reexecute=0 rethrow=0 return_oop=0}
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::prepare@24 (line 600)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 590)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 586)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@5 (line 137)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@2 (line 41)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.AbstractSpecies::maskFactory@5 (line 328)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::maskFactory@5 (line 116)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::bTest@68 (line 478)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f69340caf28::apply@14
           ││    │   │        ││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.27%   ││    │   │        ││  0x00007f69ac654a48:   movzbl 0x1d(%rbp),%r10d             ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
           ││    │   │        ││                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f69340caf28::apply@14
           ││    │   │        ││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.00%   ││    │   │        ││  0x00007f69ac654a4d:   mov    %r10b,0x1d(%rax)             ;*bastore {reexecute=0 rethrow=0 return_oop=0}
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::prepare@24 (line 600)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 590)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 586)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@5 (line 137)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@2 (line 41)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.AbstractSpecies::maskFactory@5 (line 328)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::maskFactory@5 (line 116)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::bTest@68 (line 478)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f69340caf28::apply@14
           ││    │   │        ││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.25%   ││    │   │        ││  0x00007f69ac654a51:   movzbl 0x1e(%rbp),%r11d             ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
           ││    │   │        ││                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f69340caf28::apply@14
           ││    │   │        ││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.01%   ││    │   │        ││  0x00007f69ac654a56:   mov    %r11b,0x1e(%rax)             ;*bastore {reexecute=0 rethrow=0 return_oop=0}
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::prepare@24 (line 600)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 590)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 586)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@5 (line 137)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@2 (line 41)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.AbstractSpecies::maskFactory@5 (line 328)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::maskFactory@5 (line 116)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::bTest@68 (line 478)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f69340caf28::apply@14
           ││    │   │        ││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.27%   ││    │   │        ││  0x00007f69ac654a5a:   movzbl 0x1f(%rbp),%r10d             ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
           ││    │   │        ││                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f69340caf28::apply@14
           ││    │   │        ││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.00%   ││    │   │        ││  0x00007f69ac654a5f:   mov    %r10b,0x1f(%rax)             ;*bastore {reexecute=0 rethrow=0 return_oop=0}
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::prepare@24 (line 600)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 590)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 586)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@5 (line 137)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@2 (line 41)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.AbstractSpecies::maskFactory@5 (line 328)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::maskFactory@5 (line 116)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::bTest@68 (line 478)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f69340caf28::apply@14
           ││    │   │        ││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.24%   ││    │   │        ││  0x00007f69ac654a63:   mov    %rbx,%r10                    ;*putfield payload {reexecute=0 rethrow=0 return_oop=0}
           ││    │   │        ││                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::&lt;init&gt;@6 (line 160)
           ││    │   │        ││                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorMask::&lt;init&gt;@2 (line 190)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.VectorMask::&lt;init&gt;@2 (line 134)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.AbstractMask::&lt;init&gt;@2 (line 39)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@6 (line 590)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 586)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@5 (line 137)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@2 (line 41)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.AbstractSpecies::maskFactory@5 (line 328)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::maskFactory@5 (line 116)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::bTest@68 (line 478)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f69340caf28::apply@14
           ││    │   │        ││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
           ││    │   │        ││  0x00007f69ac654a66:   mov    %rax,%r11
   0.02%   ││    │   │        ││  0x00007f69ac654a69:   xor    %r10,%r11
   0.00%   ││    │   │        ││  0x00007f69ac654a6c:   mov    %rax,%r8
   0.30%   ││    │   │        ││  0x00007f69ac654a6f:   shr    $0x3,%r8                     ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
           ││    │   │        ││                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f69340caf28::apply@14
           ││    │   │        ││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.00%   ││    │   │        ││  0x00007f69ac654a73:   mov    %r8d,0xc(%rbx)               ;*putfield payload {reexecute=0 rethrow=0 return_oop=0}
           ││    │   │        ││                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::&lt;init&gt;@6 (line 160)
           ││    │   │        ││                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorMask::&lt;init&gt;@2 (line 190)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.VectorMask::&lt;init&gt;@2 (line 134)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.AbstractMask::&lt;init&gt;@2 (line 39)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@6 (line 590)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 586)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@5 (line 137)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@2 (line 41)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.AbstractSpecies::maskFactory@5 (line 328)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::maskFactory@5 (line 116)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::bTest@68 (line 478)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││    │   │        ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f69340caf28::apply@14
           ││    │   │        ││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.01%   ││    │   │        ││  0x00007f69ac654a77:   shr    $0x15,%r11
   0.00%   ││    │   │        ││  0x00007f69ac654a7b:   nopl   0x0(%rax,%rax,1)
   0.29%   ││    │   │        ││  0x00007f69ac654a80:   test   %r11,%r11
           ││    │ ╭ │        ││  0x00007f69ac654a83:   je     0x00007f69ac654a9f
           ││    │ │ │        ││  0x00007f69ac654a85:   shr    $0x9,%r10
           ││    │ │ │        ││  0x00007f69ac654a89:   movabs $0x7f69be14f000,%rdi
           ││    │ │ │        ││  0x00007f69ac654a93:   add    %r10,%rdi
           ││    │ │ │        ││  0x00007f69ac654a96:   cmpb   $0x2,(%rdi)                  ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
           ││    │ │ │        ││                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
           ││    │ │ │        ││                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
           ││    │ │ │        ││                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
           ││    │ │ │        ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││    │ │ │        ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f69340caf28::apply@14
           ││    │ │ │        ││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
           ││    │ │╭│        ││  0x00007f69ac654a99:   jne    0x00007f69ac654ba5           ;*synchronization entry
           ││    │ │││        ││                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::&lt;init&gt;@-1 (line 159)
           ││    │ │││        ││                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorMask::&lt;init&gt;@2 (line 190)
           ││    │ │││        ││                                                            ; - jdk.incubator.vector.VectorMask::&lt;init&gt;@2 (line 134)
           ││    │ │││        ││                                                            ; - jdk.incubator.vector.AbstractMask::&lt;init&gt;@2 (line 39)
           ││    │ │││        ││                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@6 (line 590)
           ││    │ │││        ││                                                            ; - jdk.incubator.vector.Int512Vector$Int512Mask::&lt;init&gt;@3 (line 586)
           ││    │ │││        ││                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@5 (line 137)
           ││    │ │││        ││                                                            ; - jdk.incubator.vector.Int512Vector::maskFromArray@2 (line 41)
           ││    │ │││        ││                                                            ; - jdk.incubator.vector.AbstractSpecies::maskFactory@5 (line 328)
           ││    │ │││        ││                                                            ; - jdk.incubator.vector.IntVector::maskFactory@5 (line 116)
           ││    │ │││        ││                                                            ; - jdk.incubator.vector.IntVector::bTest@68 (line 478)
           ││    │ │││        ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││    │ │││        ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f69340caf28::apply@14
           ││    │ │││        ││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.00%   ││    │ ↘││        ││  0x00007f69ac654a9f:   mov    %rbx,%rax
   0.02%   ││    │  ││        ││  0x00007f69ac654aa2:   add    $0x20,%rsp
           ││    │  ││        ││  0x00007f69ac654aa6:   pop    %rbp
   0.30%   ││    │  ││        ││  0x00007f69ac654aa7:   cmp    0x450(%r15),%rsp             ;   {poll_return}
           ││    │  ││        ││  0x00007f69ac654aae:   ja     0x00007f69ac654e5b
   0.03%   ││    │  ││        ││  0x00007f69ac654ab4:   ret    
           ││    │  ││        ││  0x00007f69ac654ab5:   data16 data16 nopw 0x0(%rax,%rax,1)
   0.09%   ││    │  ││   ↗    ││  0x00007f69ac654ac0:   xor    %r9d,%r9d                    ;*goto {reexecute=0 rethrow=0 return_oop=0}
           ││    │  ││   │    ││                                                            ; - jdk.incubator.vector.IntVector::compareWithOp@148 (line 2069)
           ││    │  ││   │    ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$58@4 (line 2035)
           ││    │  ││   │    ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f69340cb338::apply@9
           ││    │  ││   │    ││                                                            ; - jdk.incubator.vector.IntVector::bTest@53 (line 476)
           ││    │  ││   │    ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││    │  ││   │    ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f69340caf28::apply@14
           ││    │  ││   │    ││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.03%   ││    │  ││   │↗   ││  0x00007f69ac654ac3:   mov    %bl,0x10(%rbp,%rdi,1)
   0.16%   ││    │  ││   ││   ││  0x00007f69ac654ac7:   mov    %r10b,0x11(%rbp,%rdi,1)
   0.02%   ││    │  ││   ││   ││  0x00007f69ac654acc:   mov    %r11b,0x12(%rbp,%rdi,1)
   0.11%   ││    │  ││   ││   ││  0x00007f69ac654ad1:   mov    %r9b,0x13(%rbp,%rdi,1)       ;*bastore {reexecute=0 rethrow=0 return_oop=0}
           ││    │  ││   ││   ││                                                            ; - jdk.incubator.vector.IntVector::bTest@58 (line 476)
           ││    │  ││   ││   ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││    │  ││   ││   ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f69340caf28::apply@14
           ││    │  ││   ││   ││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.05%   ││    │  ││   ││   ││  0x00007f69ac654ad6:   lea    0x4(%rcx),%r10d
   0.07%   ││    │  ││   ││   ││  0x00007f69ac654ada:   nopw   0x0(%rax,%rax,1)
   0.02%   ││    │  ││   ││   ││  0x00007f69ac654ae0:   cmp    $0xd,%r10d
           ││    │  │╰   ││   ││  0x00007f69ac654ae4:   jge    0x00007f69ac654908
   0.06%   ││    │  │    ││   ││  0x00007f69ac654aea:   mov    %r10d,%ecx                   ;*aload {reexecute=0 rethrow=0 return_oop=0}
           ││    │  │    ││   ││                                                            ; - jdk.incubator.vector.IntVector::bTest@35 (line 476)
           ││    │  │    ││   ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           ││    │  │    ││   ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f69340caf28::apply@14
           ││    │  │    ││   ││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.06%   │↘    │  │    ││   ││  0x00007f69ac654aed:   movslq %ecx,%rdi                    ;*bastore {reexecute=0 rethrow=0 return_oop=0}
           │     │  │    ││   ││                                                            ; - jdk.incubator.vector.IntVector::bTest@58 (line 476)
           │     │  │    ││   ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           │     │  │    ││   ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f69340caf28::apply@14
           │     │  │    ││   ││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.06%   │     │  │    ││   ││  0x00007f69ac654af0:   mov    0x10(%rdx,%rdi,4),%r11d      ;*iaload {reexecute=0 rethrow=0 return_oop=0}
           │     │  │    ││   ││                                                            ; - jdk.incubator.vector.IntVector::bTest@47 (line 476)
           │     │  │    ││   ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           │     │  │    ││   ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f69340caf28::apply@14
           │     │  │    ││   ││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.11%   │     │  │    ││   ││  0x00007f69ac654af5:   mov    0x40(%rsp),%r10              ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
           │     │  │    ││   ││                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
           │     │  │    ││   ││                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
           │     │  │    ││   ││                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
           │     │  │    ││   ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           │     │  │    ││   ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f69340caf28::apply@14
           │     │  │    ││   ││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.06%   │     │  │    ││   ││  0x00007f69ac654afa:   mov    0x10(%r10,%rdi,4),%r10d      ;*iaload {reexecute=0 rethrow=0 return_oop=0}
           │     │  │    ││   ││                                                            ; - jdk.incubator.vector.IntVector::bTest@52 (line 476)
           │     │  │    ││   ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           │     │  │    ││   ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f69340caf28::apply@14
           │     │  │    ││   ││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.08%   │     │  │    ││   ││  0x00007f69ac654aff:   nop
   0.05%   │     │  │    ││   ││  0x00007f69ac654b00:   cmp    %r10d,%r11d                  ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
           │     │  │    ││   ││                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
           │     │  │    ││   ││                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
           │     │  │    ││   ││                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
           │     │  │    ││   ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           │     │  │    ││   ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f69340caf28::apply@14
           │     │  │    ││   ││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
           │     │  │ ╭  ││   ││  0x00007f69ac654b03:   je     0x00007f69ac654b74
   0.12%   │     │  │ │  ││   ││  0x00007f69ac654b09:   xor    %ebx,%ebx                    ;*goto {reexecute=0 rethrow=0 return_oop=0}
           │     │  │ │  ││   ││                                                            ; - jdk.incubator.vector.IntVector::compareWithOp@148 (line 2069)
           │     │  │ │  ││   ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$58@4 (line 2035)
           │     │  │ │  ││   ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f69340cb338::apply@9
           │     │  │ │  ││   ││                                                            ; - jdk.incubator.vector.IntVector::bTest@53 (line 476)
           │     │  │ │  ││   ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           │     │  │ │  ││   ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f69340caf28::apply@14
           │     │  │ │  ││   ││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.04%   │     │  │ │  ││↗  ││  0x00007f69ac654b0b:   mov    0x40(%rsp),%r10              ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
           │     │  │ │  │││  ││                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
           │     │  │ │  │││  ││                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
           │     │  │ │  │││  ││                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
           │     │  │ │  │││  ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           │     │  │ │  │││  ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f69340caf28::apply@14
           │     │  │ │  │││  ││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.08%   │     │  │ │  │││  ││  0x00007f69ac654b10:   mov    0x14(%r10,%rdi,4),%r11d      ;*iaload {reexecute=0 rethrow=0 return_oop=0}
           │     │  │ │  │││  ││                                                            ; - jdk.incubator.vector.IntVector::bTest@52 (line 476)
           │     │  │ │  │││  ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           │     │  │ │  │││  ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f69340caf28::apply@14
           │     │  │ │  │││  ││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.19%   │     │  │ │  │││  ││  0x00007f69ac654b15:   mov    0x14(%rdx,%rdi,4),%r8d       ;*iaload {reexecute=0 rethrow=0 return_oop=0}
           │     │  │ │  │││  ││                                                            ; - jdk.incubator.vector.IntVector::bTest@47 (line 476)
           │     │  │ │  │││  ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           │     │  │ │  │││  ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f69340caf28::apply@14
           │     │  │ │  │││  ││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.04%   │     │  │ │  │││  ││  0x00007f69ac654b1a:   nopw   0x0(%rax,%rax,1)
   0.02%   │     │  │ │  │││  ││  0x00007f69ac654b20:   cmp    %r11d,%r8d                   ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
           │     │  │ │  │││  ││                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
           │     │  │ │  │││  ││                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
           │     │  │ │  │││  ││                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
           │     │  │ │  │││  ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           │     │  │ │  │││  ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f69340caf28::apply@14
           │     │  │ │  │││  ││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
           │     │  │ │╭ │││  ││  0x00007f69ac654b23:   je     0x00007f69ac654b7b
   0.10%   │     │  │ ││ │││  ││  0x00007f69ac654b29:   xor    %r10d,%r10d                  ;*goto {reexecute=0 rethrow=0 return_oop=0}
           │     │  │ ││ │││  ││                                                            ; - jdk.incubator.vector.IntVector::compareWithOp@148 (line 2069)
           │     │  │ ││ │││  ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$58@4 (line 2035)
           │     │  │ ││ │││  ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f69340cb338::apply@9
           │     │  │ ││ │││  ││                                                            ; - jdk.incubator.vector.IntVector::bTest@53 (line 476)
           │     │  │ ││ │││  ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           │     │  │ ││ │││  ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f69340caf28::apply@14
           │     │  │ ││ │││  ││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.06%   │     │  │ ││ │││↗ ││  0x00007f69ac654b2c:   mov    0x40(%rsp),%r11              ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
           │     │  │ ││ ││││ ││                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
           │     │  │ ││ ││││ ││                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
           │     │  │ ││ ││││ ││                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
           │     │  │ ││ ││││ ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           │     │  │ ││ ││││ ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f69340caf28::apply@14
           │     │  │ ││ ││││ ││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.08%   │     │  │ ││ ││││ ││  0x00007f69ac654b31:   mov    0x18(%r11,%rdi,4),%r8d       ;*iaload {reexecute=0 rethrow=0 return_oop=0}
           │     │  │ ││ ││││ ││                                                            ; - jdk.incubator.vector.IntVector::bTest@52 (line 476)
           │     │  │ ││ ││││ ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           │     │  │ ││ ││││ ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f69340caf28::apply@14
           │     │  │ ││ ││││ ││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.17%   │     │  │ ││ ││││ ││  0x00007f69ac654b36:   mov    0x18(%rdx,%rdi,4),%r11d      ;*iaload {reexecute=0 rethrow=0 return_oop=0}
           │     │  │ ││ ││││ ││                                                            ; - jdk.incubator.vector.IntVector::bTest@47 (line 476)
           │     │  │ ││ ││││ ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           │     │  │ ││ ││││ ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f69340caf28::apply@14
           │     │  │ ││ ││││ ││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.07%   │     │  │ ││ ││││ ││  0x00007f69ac654b3b:   nopl   0x0(%rax,%rax,1)
   0.04%   │     │  │ ││ ││││ ││  0x00007f69ac654b40:   cmp    %r8d,%r11d                   ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
           │     │  │ ││ ││││ ││                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
           │     │  │ ││ ││││ ││                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
           │     │  │ ││ ││││ ││                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
           │     │  │ ││ ││││ ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           │     │  │ ││ ││││ ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f69340caf28::apply@14
           │     │  │ ││ ││││ ││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
           │     │  │ ││╭││││ ││  0x00007f69ac654b43:   je     0x00007f69ac654b83
   0.15%   │     │  │ │││││││ ││  0x00007f69ac654b49:   xor    %r11d,%r11d                  ;*goto {reexecute=0 rethrow=0 return_oop=0}
           │     │  │ │││││││ ││                                                            ; - jdk.incubator.vector.IntVector::compareWithOp@148 (line 2069)
           │     │  │ │││││││ ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$58@4 (line 2035)
           │     │  │ │││││││ ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f69340cb338::apply@9
           │     │  │ │││││││ ││                                                            ; - jdk.incubator.vector.IntVector::bTest@53 (line 476)
           │     │  │ │││││││ ││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           │     │  │ │││││││ ││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f69340caf28::apply@14
           │     │  │ │││││││ ││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.03%   │     │  │ │││││││↗││  0x00007f69ac654b4c:   mov    0x40(%rsp),%r8               ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
           │     │  │ ││││││││││                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
           │     │  │ ││││││││││                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
           │     │  │ ││││││││││                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
           │     │  │ ││││││││││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           │     │  │ ││││││││││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f69340caf28::apply@14
           │     │  │ ││││││││││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.05%   │     │  │ ││││││││││  0x00007f69ac654b51:   mov    0x1c(%r8,%rdi,4),%r9d        ;*iaload {reexecute=0 rethrow=0 return_oop=0}
           │     │  │ ││││││││││                                                            ; - jdk.incubator.vector.IntVector::bTest@52 (line 476)
           │     │  │ ││││││││││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           │     │  │ ││││││││││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f69340caf28::apply@14
           │     │  │ ││││││││││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.10%   │     │  │ ││││││││││  0x00007f69ac654b56:   mov    0x1c(%rdx,%rdi,4),%r8d       ;*iaload {reexecute=0 rethrow=0 return_oop=0}
           │     │  │ ││││││││││                                                            ; - jdk.incubator.vector.IntVector::bTest@47 (line 476)
           │     │  │ ││││││││││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           │     │  │ ││││││││││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f69340caf28::apply@14
           │     │  │ ││││││││││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
   0.08%   │     │  │ ││││││││││  0x00007f69ac654b5b:   nopl   0x0(%rax,%rax,1)
   0.02%   │     │  │ ││││││││││  0x00007f69ac654b60:   cmp    %r9d,%r8d                    ;*invokestatic maybeRebox {reexecute=0 rethrow=0 return_oop=0}
           │     │  │ ││││││││││                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::getPayload@1 (line 164)
           │     │  │ ││││││││││                                                            ; - jdk.incubator.vector.Int512Vector::vec@1 (line 117)
           │     │  │ ││││││││││                                                            ; - jdk.incubator.vector.IntVector::bTest@1 (line 472)
           │     │  │ ││││││││││                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
           │     │  │ ││││││││││                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f69340caf28::apply@14
           │     │  │ ││││││││││                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
           │     │  │ │││╰││││││  0x00007f69ac654b63:   jne    0x00007f69ac654ac0
   0.04%   │     │  │ │││ ││││││  0x00007f69ac654b69:   mov    $0x1,%r9d
   0.02%   │     │  │ │││ ╰│││││  0x00007f69ac654b6f:   jmp    0x00007f69ac654ac3
   0.03%   │     │  │ ↘││  │││││  0x00007f69ac654b74:   mov    $0x1,%ebx
   0.02%   │     │  │  ││  ╰││││  0x00007f69ac654b79:   jmp    0x00007f69ac654b0b
   0.06%   │     │  │  ↘│   ││││  0x00007f69ac654b7b:   mov    $0x1,%r10d
   0.03%   │     │  │   │   ╰│││  0x00007f69ac654b81:   jmp    0x00007f69ac654b2c
   0.02%   │     │  │   ↘    │││  0x00007f69ac654b83:   mov    $0x1,%r11d
   0.01%   │     │  │        ╰││  0x00007f69ac654b89:   jmp    0x00007f69ac654b4c
   0.03%   │     ↘  │         ││  0x00007f69ac654b8b:   mov    $0x1,%r8d
   0.01%   │        │         ╰│  0x00007f69ac654b91:   jmp    0x00007f69ac65492c
   0.01%   ↘        │          │  0x00007f69ac654b96:   mov    $0x1,%r10d
   0.01%            │          │  0x00007f69ac654b9c:   nopl   0x0(%rax)
   0.00%            │          ╰  0x00007f69ac654ba0:   jmp    0x00007f69ac65482c
                    ↘             0x00007f69ac654ba5:   mov    0x48(%r15),%r10              ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                                                            ; - jdk.incubator.vector.IntVector::bTest@62 (line 475)
                                                                                            ; - jdk.incubator.vector.IntVector::lambda$compareTemplate$59@9 (line 2034)
                                                                                            ; - jdk.incubator.vector.IntVector$$Lambda/0x00007f69340caf28::apply@14
                                                                                            ; - jdk.internal.vm.vector.VectorSupport::compare@33 (line 584)
                                                                                            ;   {no_reloc}
                                  0x00007f69ac654ba9:   mov    0x58(%r15),%r11
                                  0x00007f69ac654bad:   lock addl $0x0,-0x40(%rsp)          ;*putfield payload {reexecute=0 rethrow=0 return_oop=0}
                                                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorPayload::&lt;init&gt;@6 (line 160)
                                                                                            ; - jdk.internal.vm.vector.VectorSupport$VectorMask::&lt;init&gt;@2 (line 190)
....................................................................................................
  22.50%  <total for region 1>

....[Hottest Region 2]..............................................................................
c2, level 4, com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector, version 2, compile id 957 

                                                                             ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
                   0x00007f69ac67abbb:   mov    $0x4,%r9d
                   0x00007f69ac67abc1:   movabs $0x7f3028420,%rdi            ;   {oop(a &apos;jdk/incubator/vector/Int512Vector$$Lambda+0x00007f69340c7480&apos;{0x00000007f3028420})}
                   0x00007f69ac67abcb:   call   0x00007f69ac665fa0           ; ImmutableOopMap {[24]=Oop [48]=Oop [56]=Oop [64]=Oop [80]=Oop [88]=Oop [96]=Oop }
                                                                             ;*invokestatic extract {reexecute=0 rethrow=0 return_oop=0}
                                                                             ; - jdk.incubator.vector.Int512Vector::laneHelper@16 (line 535)
                                                                             ; - jdk.incubator.vector.Int512Vector::lane@106 (line 518)
                                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@79 (line 80)
                                                                             ;   {static_call}
   0.04%           0x00007f69ac67abd0:   nopl   0x12000cc0(%rax,%rax,1)      ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                             ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
                                                                             ;   {other}
                   0x00007f69ac67abd8:   mov    %eax,%r11d                   ;*l2i {reexecute=0 rethrow=0 return_oop=0}
                                                                             ; - jdk.incubator.vector.Int512Vector::laneHelper@19 (line 535)
                                                                             ; - jdk.incubator.vector.Int512Vector::lane@106 (line 518)
                                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@79 (line 80)
                   0x00007f69ac67abdb:   nopl   0x0(%rax,%rax,1)
          ╭        0x00007f69ac67abe0:   jmp    0x00007f69ac67ad97
   0.06%  │        0x00007f69ac67abe5:   mov    %r11d,0x68(%rsp)
   0.07%  │        0x00007f69ac67abea:   movabs $0x7f3028390,%rsi            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f3028390} = &apos;jdk/incubator/vector/Int512Vector&apos;)}
          │        0x00007f69ac67abf4:   movabs $0x7ffe7f600,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffe7f600} = int)}
          │        0x00007f69ac67abfe:   mov    $0x10,%ecx
          │        0x00007f69ac67ac03:   mov    0x58(%rsp),%r8               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │                                                                  ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          │                                                                  ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.03%  │        0x00007f69ac67ac08:   mov    $0x3,%r9d
          │        0x00007f69ac67ac0e:   movabs $0x7f3028420,%rdi            ;   {oop(a &apos;jdk/incubator/vector/Int512Vector$$Lambda+0x00007f69340c7480&apos;{0x00000007f3028420})}
          │        0x00007f69ac67ac18:   data16 xchg %ax,%ax
          │        0x00007f69ac67ac1b:   call   0x00007f69ac665fa0           ; ImmutableOopMap {[24]=Oop [48]=Oop [56]=Oop [64]=Oop [80]=Oop [88]=Oop [96]=Oop }
          │                                                                  ;*invokestatic extract {reexecute=0 rethrow=0 return_oop=0}
          │                                                                  ; - jdk.incubator.vector.Int512Vector::laneHelper@16 (line 535)
          │                                                                  ; - jdk.incubator.vector.Int512Vector::lane@100 (line 517)
          │                                                                  ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@79 (line 80)
          │                                                                  ;   {static_call}
   0.03%  │        0x00007f69ac67ac20:   nopl   0x13000d10(%rax,%rax,1)      ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │                                                                  ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          │                                                                  ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
          │                                                                  ;   {other}
          │        0x00007f69ac67ac28:   mov    %eax,%r11d                   ;*l2i {reexecute=0 rethrow=0 return_oop=0}
          │                                                                  ; - jdk.incubator.vector.Int512Vector::laneHelper@19 (line 535)
          │                                                                  ; - jdk.incubator.vector.Int512Vector::lane@100 (line 517)
          │                                                                  ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@79 (line 80)
          │╭       0x00007f69ac67ac2b:   jmp    0x00007f69ac67ad97
   0.07%  ││       0x00007f69ac67ac30:   mov    %r11d,0x68(%rsp)
   0.04%  ││       0x00007f69ac67ac35:   movabs $0x7f3028390,%rsi            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f3028390} = &apos;jdk/incubator/vector/Int512Vector&apos;)}
          ││       0x00007f69ac67ac3f:   movabs $0x7ffe7f600,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffe7f600} = int)}
          ││       0x00007f69ac67ac49:   mov    $0x10,%ecx
          ││       0x00007f69ac67ac4e:   mov    0x58(%rsp),%r8               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││                                                                 ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          ││                                                                 ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.01%  ││       0x00007f69ac67ac53:   mov    $0x2,%r9d
          ││       0x00007f69ac67ac59:   movabs $0x7f3028420,%rdi            ;   {oop(a &apos;jdk/incubator/vector/Int512Vector$$Lambda+0x00007f69340c7480&apos;{0x00000007f3028420})}
          ││       0x00007f69ac67ac63:   call   0x00007f69ac665fa0           ; ImmutableOopMap {[24]=Oop [48]=Oop [56]=Oop [64]=Oop [80]=Oop [88]=Oop [96]=Oop }
          ││                                                                 ;*invokestatic extract {reexecute=0 rethrow=0 return_oop=0}
          ││                                                                 ; - jdk.incubator.vector.Int512Vector::laneHelper@16 (line 535)
          ││                                                                 ; - jdk.incubator.vector.Int512Vector::lane@94 (line 516)
          ││                                                                 ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@79 (line 80)
          ││                                                                 ;   {static_call}
   0.02%  ││       0x00007f69ac67ac68:   nopl   0x14000d58(%rax,%rax,1)      ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││                                                                 ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          ││                                                                 ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
          ││                                                                 ;   {other}
   0.00%  ││       0x00007f69ac67ac70:   mov    %eax,%r11d                   ;*l2i {reexecute=0 rethrow=0 return_oop=0}
          ││                                                                 ; - jdk.incubator.vector.Int512Vector::laneHelper@19 (line 535)
          ││                                                                 ; - jdk.incubator.vector.Int512Vector::lane@94 (line 516)
          ││                                                                 ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@79 (line 80)
          ││╭      0x00007f69ac67ac73:   jmp    0x00007f69ac67ad97
   0.07%  │││      0x00007f69ac67ac78:   mov    %r11d,0x68(%rsp)
   0.07%  │││      0x00007f69ac67ac7d:   movabs $0x7f3028390,%rsi            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f3028390} = &apos;jdk/incubator/vector/Int512Vector&apos;)}
          │││      0x00007f69ac67ac87:   movabs $0x7ffe7f600,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffe7f600} = int)}
          │││      0x00007f69ac67ac91:   mov    $0x10,%ecx
          │││      0x00007f69ac67ac96:   mov    0x58(%rsp),%r8               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││                                                                ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          │││                                                                ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.01%  │││      0x00007f69ac67ac9b:   mov    $0x1,%r9d
          │││      0x00007f69ac67aca1:   movabs $0x7f3028420,%rdi            ;   {oop(a &apos;jdk/incubator/vector/Int512Vector$$Lambda+0x00007f69340c7480&apos;{0x00000007f3028420})}
          │││      0x00007f69ac67acab:   call   0x00007f69ac665fa0           ; ImmutableOopMap {[24]=Oop [48]=Oop [56]=Oop [64]=Oop [80]=Oop [88]=Oop [96]=Oop }
          │││                                                                ;*invokestatic extract {reexecute=0 rethrow=0 return_oop=0}
          │││                                                                ; - jdk.incubator.vector.Int512Vector::laneHelper@16 (line 535)
          │││                                                                ; - jdk.incubator.vector.Int512Vector::lane@88 (line 515)
          │││                                                                ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@79 (line 80)
          │││                                                                ;   {static_call}
   0.03%  │││      0x00007f69ac67acb0:   nopl   0x15000da0(%rax,%rax,1)      ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││                                                                ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          │││                                                                ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
          │││                                                                ;   {other}
          │││      0x00007f69ac67acb8:   mov    %eax,%r11d                   ;*l2i {reexecute=0 rethrow=0 return_oop=0}
          │││                                                                ; - jdk.incubator.vector.Int512Vector::laneHelper@19 (line 535)
          │││                                                                ; - jdk.incubator.vector.Int512Vector::lane@88 (line 515)
          │││                                                                ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@79 (line 80)
   0.00%  │││      0x00007f69ac67acbb:   nopl   0x0(%rax,%rax,1)
          │││╭     0x00007f69ac67acc0:   jmp    0x00007f69ac67ad97
   0.03%  ││││     0x00007f69ac67acc5:   mov    %r11d,0x68(%rsp)
   0.06%  ││││     0x00007f69ac67acca:   movabs $0x7f3028390,%rsi            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f3028390} = &apos;jdk/incubator/vector/Int512Vector&apos;)}
          ││││     0x00007f69ac67acd4:   movabs $0x7ffe7f600,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffe7f600} = int)}
          ││││     0x00007f69ac67acde:   mov    $0x10,%ecx
          ││││     0x00007f69ac67ace3:   mov    0x58(%rsp),%r8
   0.00%  ││││     0x00007f69ac67ace8:   xor    %r9d,%r9d                    ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││││                                                               ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          ││││                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
          ││││     0x00007f69ac67aceb:   movabs $0x7f3028420,%rdi            ;   {oop(a &apos;jdk/incubator/vector/Int512Vector$$Lambda+0x00007f69340c7480&apos;{0x00000007f3028420})}
   0.00%  ││││     0x00007f69ac67acf5:   xchg   %ax,%ax
          ││││     0x00007f69ac67acf7:   call   0x00007f69ac665fa0           ; ImmutableOopMap {[24]=Oop [48]=Oop [56]=Oop [64]=Oop [80]=Oop [88]=Oop [96]=Oop }
          ││││                                                               ;*invokestatic extract {reexecute=0 rethrow=0 return_oop=0}
          ││││                                                               ; - jdk.incubator.vector.Int512Vector::laneHelper@16 (line 535)
          ││││                                                               ; - jdk.incubator.vector.Int512Vector::lane@82 (line 514)
          ││││                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@79 (line 80)
          ││││                                                               ;   {static_call}
   0.04%  ││││     0x00007f69ac67acfc:   nopl   0x16000dec(%rax,%rax,1)      ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││││                                                               ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          ││││                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
          ││││                                                               ;   {other}
          ││││     0x00007f69ac67ad04:   mov    %eax,%r11d                   ;*l2i {reexecute=0 rethrow=0 return_oop=0}
          ││││                                                               ; - jdk.incubator.vector.Int512Vector::laneHelper@19 (line 535)
          ││││                                                               ; - jdk.incubator.vector.Int512Vector::lane@82 (line 514)
          ││││                                                               ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@79 (line 80)
          ││││╭    0x00007f69ac67ad07:   jmp    0x00007f69ac67ad97
   0.09%  │││││    0x00007f69ac67ad0c:   mov    %r11d,0x68(%rsp)
   0.06%  │││││    0x00007f69ac67ad11:   movabs $0x7f3028390,%rsi            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f3028390} = &apos;jdk/incubator/vector/Int512Vector&apos;)}
          │││││    0x00007f69ac67ad1b:   movabs $0x7ffe7f600,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffe7f600} = int)}
          │││││    0x00007f69ac67ad25:   mov    $0x10,%ecx
          │││││    0x00007f69ac67ad2a:   mov    0x58(%rsp),%r8               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                              ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          │││││                                                              ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.00%  │││││    0x00007f69ac67ad2f:   mov    $0xf,%r9d
          │││││    0x00007f69ac67ad35:   movabs $0x7f3028420,%rdi            ;   {oop(a &apos;jdk/incubator/vector/Int512Vector$$Lambda+0x00007f69340c7480&apos;{0x00000007f3028420})}
          │││││    0x00007f69ac67ad3f:   call   0x00007f69ac665fa0           ; ImmutableOopMap {[24]=Oop [48]=Oop [56]=Oop [64]=Oop [80]=Oop [88]=Oop [96]=Oop }
          │││││                                                              ;*invokestatic extract {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                              ; - jdk.incubator.vector.Int512Vector::laneHelper@16 (line 535)
          │││││                                                              ; - jdk.incubator.vector.Int512Vector::lane@182 (line 529)
          │││││                                                              ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@79 (line 80)
          │││││                                                              ;   {static_call}
   0.01%  │││││    0x00007f69ac67ad44:   nopl   0x17000e34(%rax,%rax,1)      ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                              ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          │││││                                                              ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
          │││││                                                              ;   {other}
          │││││    0x00007f69ac67ad4c:   mov    %eax,%r11d                   ;*l2i {reexecute=0 rethrow=0 return_oop=0}
          │││││                                                              ; - jdk.incubator.vector.Int512Vector::laneHelper@19 (line 535)
          │││││                                                              ; - jdk.incubator.vector.Int512Vector::lane@182 (line 529)
          │││││                                                              ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@79 (line 80)
          │││││╭   0x00007f69ac67ad4f:   jmp    0x00007f69ac67ad97
   0.06%  ││││││   0x00007f69ac67ad51:   mov    %r11d,0x68(%rsp)
   0.05%  ││││││   0x00007f69ac67ad56:   movabs $0x7f3028390,%rsi            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f3028390} = &apos;jdk/incubator/vector/Int512Vector&apos;)}
          ││││││   0x00007f69ac67ad60:   movabs $0x7ffe7f600,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffe7f600} = int)}
          ││││││   0x00007f69ac67ad6a:   mov    $0x10,%ecx
          ││││││   0x00007f69ac67ad6f:   mov    0x58(%rsp),%r8               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
          ││││││                                                             ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
          ││││││                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.01%  ││││││   0x00007f69ac67ad74:   mov    $0x5,%r9d
          ││││││   0x00007f69ac67ad7a:   movabs $0x7f3028420,%rdi            ;   {oop(a &apos;jdk/incubator/vector/Int512Vector$$Lambda+0x00007f69340c7480&apos;{0x00000007f3028420})}
          ││││││   0x00007f69ac67ad84:   data16 xchg %ax,%ax
          ││││││   0x00007f69ac67ad87:   call   0x00007f69ac665fa0           ; ImmutableOopMap {[24]=Oop [48]=Oop [56]=Oop [64]=Oop [80]=Oop [88]=Oop [96]=Oop }
          ││││││                                                             ;*invokestatic extract {reexecute=0 rethrow=0 return_oop=0}
          ││││││                                                             ; - jdk.incubator.vector.Int512Vector::laneHelper@16 (line 535)
          ││││││                                                             ; - jdk.incubator.vector.Int512Vector::lane@112 (line 519)
          ││││││                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@79 (line 80)
          ││││││                                                             ;   {static_call}
   0.03%  ││││││   0x00007f69ac67ad8c:   nopl   0x18000e7c(%rax,%rax,1)      ;   {other}
          ││││││   0x00007f69ac67ad94:   mov    %eax,%r11d
   0.07%  ↘↘↘↘↘↘   0x00007f69ac67ad97:   mov    0x50(%rsp),%r10
   0.14%           0x00007f69ac67ad9c:   mov    0x2c(%r10),%r10d
   0.16%           0x00007f69ac67ada0:   mov    0x50(%rsp),%r8               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                             ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.02%           0x00007f69ac67ada5:   mov    0xc(%r8),%ecx                ;*getfield laneCount {reexecute=0 rethrow=0 return_oop=0}
                                                                             ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@8 (line 3847)
                                                                             ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3857)
                                                                             ; - jdk.incubator.vector.IntVector::broadcast@7 (line 611)
                                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@87 (line 81)
   0.07%           0x00007f69ac67ada9:   movslq %r11d,%r8                    ;*i2l {reexecute=0 rethrow=0 return_oop=0}
                                                                             ; - jdk.incubator.vector.IntVector::toBits@1 (line 500)
                                                                             ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@2 (line 3857)
                                                                             ; - jdk.incubator.vector.IntVector::broadcast@7 (line 611)
                                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@87 (line 81)
                   0x00007f69ac67adac:   mov    %r10,%rsi
                   0x00007f69ac67adaf:   shl    $0x3,%rsi
   0.02%           0x00007f69ac67adb3:   movabs $0x7ffe7f600,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffe7f600} = int)}
   0.05%           0x00007f69ac67adbd:   xor    %r9d,%r9d
                   0x00007f69ac67adc0:   mov    0x50(%rsp),%rdi
                   0x00007f69ac67adc5:   movabs $0x7f3028430,%r10            ;   {oop(a &apos;jdk/incubator/vector/IntVector$IntSpecies$$Lambda+0x00007f69340c6c60&apos;{0x00000007f3028430})}
   0.03%           0x00007f69ac67adcf:   mov    %r10,(%rsp)
   0.06%           0x00007f69ac67add3:   call   0x00007f69ac652d60           ; ImmutableOopMap {[24]=Oop [48]=Oop [56]=Oop [64]=Oop [80]=Oop [88]=Oop [96]=Oop }
                                                                             ;*invokestatic fromBitsCoerced {reexecute=0 rethrow=0 return_oop=1}
                                                                             ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@19 (line 3848)
                                                                             ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3857)
                                                                             ; - jdk.incubator.vector.IntVector::broadcast@7 (line 611)
                                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@87 (line 81)
                                                                             ;   {static_call}
   0.01%           0x00007f69ac67add8:   nopl   0x19000ec8(%rax,%rax,1)      ;   {other}
                   0x00007f69ac67ade0:   mov    0x8(%rax),%r10d              ; implicit exception: dispatches to 0x00007f69ac67b960
   0.14%           0x00007f69ac67ade4:   cmp    $0x103ef90,%r10d             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                             ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
                                                                             ;   {metadata(&apos;jdk/incubator/vector/Int512Vector&apos;)}
                   0x00007f69ac67adeb:   jne    0x00007f69ac67b5a8           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                                             ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@22 (line 3848)
                                                                             ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@5 (line 3857)
                                                                             ; - jdk.incubator.vector.IntVector::broadcast@7 (line 611)
                                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@87 (line 81)
   0.04%           0x00007f69ac67adf1:   mov    %rax,0x70(%rsp)
   0.28%           0x00007f69ac67adf6:   mov    $0x3,%esi
   0.01%           0x00007f69ac67adfb:   movabs $0x7f3028390,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f3028390} = &apos;jdk/incubator/vector/Int512Vector&apos;)}
   0.01%           0x00007f69ac67ae05:   movabs $0x7f3028440,%rcx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f3028440} = &apos;jdk/incubator/vector/Int512Vector$Int512Mask&apos;)}
                   0x00007f69ac67ae0f:   movabs $0x7ffe7f600,%r8             ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffe7f600} = int)}
   0.04%           0x00007f69ac67ae19:   mov    $0x10,%r9d
   0.01%           0x00007f69ac67ae1f:   mov    0x58(%rsp),%rdi
   0.03%           0x00007f69ac67ae24:   mov    %rax,(%rsp)
   0.07%           0x00007f69ac67ae28:   xor    %r10d,%r10d
   0.02%           0x00007f69ac67ae2b:   mov    %r10,0x8(%rsp)
   0.04%           0x00007f69ac67ae30:   movabs $0x7f30284c0,%r10            ;   {oop(a &apos;jdk/incubator/vector/IntVector$$Lambda+0x00007f69340caf28&apos;{0x00000007f30284c0})}
   0.02%           0x00007f69ac67ae3a:   mov    %r10,0x10(%rsp)
   0.11%           0x00007f69ac67ae3f:   call   0x00007f69ac654680           ; ImmutableOopMap {[24]=Oop [48]=Oop [56]=Oop [64]=Oop [80]=Oop [88]=Oop [96]=Oop [112]=Oop }
                                                                             ;*invokestatic compare {reexecute=0 rethrow=0 return_oop=1}
                                                                             ; - jdk.incubator.vector.IntVector::compareTemplate@42 (line 2029)
                                                                             ; - jdk.incubator.vector.Int512Vector::compare@5 (line 384)
                                                                             ; - jdk.incubator.vector.Int512Vector::compare@3 (line 41)
                                                                             ; - jdk.incubator.vector.IntVector::lt@5 (line 1933)
                                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@96 (line 82)
                                                                             ;   {static_call}
   0.01%           0x00007f69ac67ae44:   nopl   0x1a000f34(%rax,%rax,1)      ;   {other}
   0.06%           0x00007f69ac67ae4c:   mov    0x8(%rax),%r10d              ; implicit exception: dispatches to 0x00007f69ac67b9a0
   0.00%           0x00007f69ac67ae50:   cmp    $0x103f610,%r10d             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                             ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
                                                                             ;   {metadata(&apos;jdk/incubator/vector/Int512Vector$Int512Mask&apos;)}
                   0x00007f69ac67ae57:   jne    0x00007f69ac67b5f8
   0.00%           0x00007f69ac67ae5d:   mov    %rax,%r9                     ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                                             ; - jdk.incubator.vector.IntVector::compareTemplate@45 (line 2029)
                                                                             ; - jdk.incubator.vector.Int512Vector::compare@5 (line 384)
                                                                             ; - jdk.incubator.vector.Int512Vector::compare@3 (line 41)
                                                                             ; - jdk.incubator.vector.IntVector::lt@5 (line 1933)
                                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@96 (line 82)
                   0x00007f69ac67ae60:   mov    $0x14,%esi
   0.05%           0x00007f69ac67ae65:   movabs $0x7f3028440,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f3028440} = &apos;jdk/incubator/vector/Int512Vector$Int512Mask&apos;)}
                   0x00007f69ac67ae6f:   movabs $0x7ffe7f600,%rcx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffe7f600} = int)}
   0.01%           0x00007f69ac67ae79:   mov    $0x10,%r8d
                   0x00007f69ac67ae7f:   movabs $0x7f30284d0,%rdi            ;   {oop(a &apos;jdk/incubator/vector/Int512Vector$Int512Mask$$Lambda+0x00007f69340cb748&apos;{0x00000007f30284d0})}
   0.04%           0x00007f69ac67ae89:   xchg   %ax,%ax
                   0x00007f69ac67ae8b:   call   0x00007f69ac65f140           ; ImmutableOopMap {[24]=Oop [48]=Oop [56]=Oop [64]=Oop [80]=Oop [88]=Oop [96]=Oop [112]=Oop }
                                                                             ;*invokestatic maskReductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                                                                             ; - jdk.incubator.vector.Int512Vector$Int512Mask::trueCount@16 (line 743)
                                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@99 (line 82)
                                                                             ;   {static_call}
   0.08%           0x00007f69ac67ae90:   nopl   0x1b000f80(%rax,%rax,1)      ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                             ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
                                                                             ;   {other}
   0.00%           0x00007f69ac67ae98:   mov    %eax,%ebp                    ;*l2i {reexecute=0 rethrow=0 return_oop=0}
                                                                             ; - jdk.incubator.vector.Int512Vector$Int512Mask::trueCount@19 (line 743)
                                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@99 (line 82)
   0.00%           0x00007f69ac67ae9a:   xor    %esi,%esi
                   0x00007f69ac67ae9c:   movabs $0x7f3028390,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f3028390} = &apos;jdk/incubator/vector/Int512Vector&apos;)}
   0.18%           0x00007f69ac67aea6:   movabs $0x7f3028440,%rcx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f3028440} = &apos;jdk/incubator/vector/Int512Vector$Int512Mask&apos;)}
   0.00%           0x00007f69ac67aeb0:   movabs $0x7ffe7f600,%r8             ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffe7f600} = int)}
   0.08%           0x00007f69ac67aeba:   mov    $0x10,%r9d
   0.00%           0x00007f69ac67aec0:   mov    0x58(%rsp),%rdi
   0.52%           0x00007f69ac67aec5:   mov    0x70(%rsp),%r10
   0.01%           0x00007f69ac67aeca:   mov    %r10,(%rsp)
   0.28%           0x00007f69ac67aece:   xor    %r10d,%r10d
                   0x00007f69ac67aed1:   mov    %r10,0x8(%rsp)
   0.12%           0x00007f69ac67aed6:   movabs $0x7f30284c0,%r10            ;   {oop(a &apos;jdk/incubator/vector/IntVector$$Lambda+0x00007f69340caf28&apos;{0x00000007f30284c0})}
                   0x00007f69ac67aee0:   mov    %r10,0x10(%rsp)              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                             ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.02%           0x00007f69ac67aee5:   xchg   %ax,%ax
                   0x00007f69ac67aee7:   call   0x00007f69ac654680           ; ImmutableOopMap {[24]=Oop [48]=Oop [56]=Oop [64]=Oop [80]=Oop [88]=Oop [96]=Oop [112]=Oop }
                                                                             ;*invokestatic compare {reexecute=0 rethrow=0 return_oop=1}
                                                                             ; - jdk.incubator.vector.IntVector::compareTemplate@42 (line 2029)
                                                                             ; - jdk.incubator.vector.Int512Vector::compare@5 (line 384)
                                                                             ; - jdk.incubator.vector.Int512Vector::compare@3 (line 41)
                                                                             ; - jdk.incubator.vector.IntVector::eq@5 (line 1905)
                                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@108 (line 83)
                                                                             ;   {static_call}
                   0x00007f69ac67aeec:   nopl   0x1c000fdc(%rax,%rax,1)      ;   {other}
   0.08%           0x00007f69ac67aef4:   mov    0x8(%rax),%r10d              ; implicit exception: dispatches to 0x00007f69ac67b9ec
                   0x00007f69ac67aef8:   nopl   0x0(%rax,%rax,1)
   0.00%           0x00007f69ac67af00:   cmp    $0x103f610,%r10d             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                             ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
                                                                             ;   {metadata(&apos;jdk/incubator/vector/Int512Vector$Int512Mask&apos;)}
                   0x00007f69ac67af07:   jne    0x00007f69ac67b650
                   0x00007f69ac67af0d:   mov    %rax,%r9                     ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                                             ; - jdk.incubator.vector.IntVector::compareTemplate@45 (line 2029)
                                                                             ; - jdk.incubator.vector.Int512Vector::compare@5 (line 384)
                                                                             ; - jdk.incubator.vector.Int512Vector::compare@3 (line 41)
                                                                             ; - jdk.incubator.vector.IntVector::eq@5 (line 1905)
                                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@108 (line 83)
   0.08%           0x00007f69ac67af10:   mov    $0x14,%esi
                   0x00007f69ac67af15:   movabs $0x7f3028440,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f3028440} = &apos;jdk/incubator/vector/Int512Vector$Int512Mask&apos;)}
                   0x00007f69ac67af1f:   movabs $0x7ffe7f600,%rcx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffe7f600} = int)}
                   0x00007f69ac67af29:   mov    $0x10,%r8d
   0.07%           0x00007f69ac67af2f:   movabs $0x7f30284d0,%rdi            ;   {oop(a &apos;jdk/incubator/vector/Int512Vector$Int512Mask$$Lambda+0x00007f69340cb748&apos;{0x00000007f30284d0})}
                   0x00007f69ac67af39:   xchg   %ax,%ax
   0.00%           0x00007f69ac67af3b:   call   0x00007f69ac65f140           ; ImmutableOopMap {[24]=Oop [48]=Oop [56]=Oop [64]=Oop [80]=Oop [88]=Oop [96]=Oop [112]=Oop }
                                                                             ;*invokestatic maskReductionCoerced {reexecute=0 rethrow=0 return_oop=0}
                                                                             ; - jdk.incubator.vector.Int512Vector$Int512Mask::trueCount@16 (line 743)
                                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@111 (line 83)
                                                                             ;   {static_call}
   0.06%           0x00007f69ac67af40:   nopl   0x1d001030(%rax,%rax,1)      ;   {other}
   0.02%           0x00007f69ac67af48:   mov    0x50(%rsp),%r10
   0.55%           0x00007f69ac67af4d:   mov    0x2c(%r10),%r10d
   0.28%           0x00007f69ac67af51:   mov    0x50(%rsp),%r11              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                             ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
                   0x00007f69ac67af56:   mov    0xc(%r11),%ecx               ;*getfield laneCount {reexecute=0 rethrow=0 return_oop=0}
                                                                             ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@8 (line 3847)
                                                                             ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@6 (line 3863)
                                                                             ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@2 (line 3804)
                                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@124 (line 86)
   0.06%           0x00007f69ac67af5a:   mov    %eax,%r11d
                   0x00007f69ac67af5d:   add    %ebp,%r11d
                   0x00007f69ac67af60:   mov    %r10,%rsi
   0.00%           0x00007f69ac67af63:   shl    $0x3,%rsi                    ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                             ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.06%           0x00007f69ac67af67:   movslq %r11d,%r8                    ;*i2l {reexecute=0 rethrow=0 return_oop=0}
                                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@123 (line 84)
                   0x00007f69ac67af6a:   movabs $0x7ffe7f600,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffe7f600} = int)}
                   0x00007f69ac67af74:   xor    %r9d,%r9d
                   0x00007f69ac67af77:   mov    0x50(%rsp),%rdi
   0.08%           0x00007f69ac67af7c:   movabs $0x7f3028430,%r10            ;   {oop(a &apos;jdk/incubator/vector/IntVector$IntSpecies$$Lambda+0x00007f69340c6c60&apos;{0x00000007f3028430})}
                   0x00007f69ac67af86:   mov    %r10,(%rsp)                  ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                             ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.14%           0x00007f69ac67af8a:   nop
                   0x00007f69ac67af8b:   call   0x00007f69ac652d60           ; ImmutableOopMap {[24]=Oop [48]=Oop [56]=Oop [64]=Oop [80]=Oop [88]=Oop [96]=Oop [112]=Oop }
                                                                             ;*invokestatic fromBitsCoerced {reexecute=0 rethrow=0 return_oop=1}
                                                                             ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@19 (line 3848)
                                                                             ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@6 (line 3863)
                                                                             ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@2 (line 3804)
                                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@124 (line 86)
                                                                             ;   {static_call}
                   0x00007f69ac67af90:   nopl   0x1e001080(%rax,%rax,1)      ;   {other}
                   0x00007f69ac67af98:   nopl   0x0(%rax,%rax,1)
   0.03%           0x00007f69ac67afa0:   mov    0x8(%rax),%r11d              ; implicit exception: dispatches to 0x00007f69ac67ba14
   0.10%           0x00007f69ac67afa4:   cmp    $0x103ef90,%r11d             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                             ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
                                                                             ;   {metadata(&apos;jdk/incubator/vector/Int512Vector&apos;)}
                   0x00007f69ac67afab:   jne    0x00007f69ac67b688           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                                             ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@22 (line 3848)
                                                                             ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@6 (line 3863)
                                                                             ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@2 (line 3804)
                                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@124 (line 86)
   0.01%           0x00007f69ac67afb1:   mov    $0x3,%esi
                   0x00007f69ac67afb6:   movabs $0x7f3028390,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f3028390} = &apos;jdk/incubator/vector/Int512Vector&apos;)}
   0.02%           0x00007f69ac67afc0:   movabs $0x7f3028440,%rcx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f3028440} = &apos;jdk/incubator/vector/Int512Vector$Int512Mask&apos;)}
   0.06%           0x00007f69ac67afca:   movabs $0x7ffe7f600,%r8             ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffe7f600} = int)}
   0.00%           0x00007f69ac67afd4:   mov    $0x10,%r9d
                   0x00007f69ac67afda:   mov    0x60(%rsp),%rdi
   0.16%           0x00007f69ac67afdf:   mov    %rax,(%rsp)
   0.05%           0x00007f69ac67afe3:   xor    %r10d,%r10d
                   0x00007f69ac67afe6:   mov    %r10,0x8(%rsp)
   0.06%           0x00007f69ac67afeb:   movabs $0x7f30284c0,%r10            ;   {oop(a &apos;jdk/incubator/vector/IntVector$$Lambda+0x00007f69340caf28&apos;{0x00000007f30284c0})}
   0.02%           0x00007f69ac67aff5:   mov    %r10,0x10(%rsp)              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                             ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.12%           0x00007f69ac67affa:   nop
                   0x00007f69ac67affb:   call   0x00007f69ac654680           ; ImmutableOopMap {[24]=Oop [48]=Oop [56]=Oop [64]=Oop [80]=Oop [88]=Oop [96]=Oop [112]=Oop }
                                                                             ;*invokestatic compare {reexecute=0 rethrow=0 return_oop=1}
                                                                             ; - jdk.incubator.vector.IntVector::compareTemplate@42 (line 2029)
                                                                             ; - jdk.incubator.vector.Int512Vector::compare@5 (line 384)
                                                                             ; - jdk.incubator.vector.Int512Vector::compare@3 (line 41)
                                                                             ; - jdk.incubator.vector.IntVector::lt@5 (line 1933)
                                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@129 (line 86)
                                                                             ;   {static_call}
   0.01%           0x00007f69ac67b000:   nopl   0x1f0010f0(%rax,%rax,1)      ;   {other}
   0.07%           0x00007f69ac67b008:   mov    0x8(%rax),%r11d              ; implicit exception: dispatches to 0x00007f69ac67ba3c
                   0x00007f69ac67b00c:   cmp    $0x103f610,%r11d             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                             ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
                                                                             ;   {metadata(&apos;jdk/incubator/vector/Int512Vector$Int512Mask&apos;)}
                   0x00007f69ac67b013:   jne    0x00007f69ac67b6c0           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                                             ; - jdk.incubator.vector.IntVector::compareTemplate@45 (line 2029)
                                                                             ; - jdk.incubator.vector.Int512Vector::compare@5 (line 384)
                                                                             ; - jdk.incubator.vector.Int512Vector::compare@3 (line 41)
                                                                             ; - jdk.incubator.vector.IntVector::lt@5 (line 1933)
                                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@129 (line 86)
   0.00%           0x00007f69ac67b019:   mov    %rax,0x78(%rsp)
   0.07%           0x00007f69ac67b01e:   mov    0x50(%rsp),%r10
   0.00%           0x00007f69ac67b023:   mov    0x2c(%r10),%r11d             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                             ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.01%           0x00007f69ac67b027:   mov    0xc(%r10),%ecx               ;*getfield laneCount {reexecute=0 rethrow=0 return_oop=0}
                                                                             ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@8 (line 3847)
                                                                             ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@6 (line 3863)
                                                                             ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@2 (line 3804)
                                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@137 (line 87)
                   0x00007f69ac67b02b:   movslq %ebp,%r8                     ;*i2l {reexecute=0 rethrow=0 return_oop=0}
                                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@136 (line 86)
   0.05%           0x00007f69ac67b02e:   mov    %r11,%rsi
                   0x00007f69ac67b031:   shl    $0x3,%rsi
   0.01%           0x00007f69ac67b035:   movabs $0x7ffe7f600,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffe7f600} = int)}
                   0x00007f69ac67b03f:   xor    %r9d,%r9d
   0.05%           0x00007f69ac67b042:   mov    %r10,%rdi
                   0x00007f69ac67b045:   movabs $0x7f3028430,%r10            ;   {oop(a &apos;jdk/incubator/vector/IntVector$IntSpecies$$Lambda+0x00007f69340c6c60&apos;{0x00000007f3028430})}
   0.01%           0x00007f69ac67b04f:   mov    %r10,(%rsp)
                   0x00007f69ac67b053:   call   0x00007f69ac652d60           ; ImmutableOopMap {[24]=Oop [48]=Oop [56]=Oop [64]=Oop [80]=Oop [88]=Oop [96]=Oop [112]=Oop [120]=Oop }
                                                                             ;*invokestatic fromBitsCoerced {reexecute=0 rethrow=0 return_oop=1}
                                                                             ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@19 (line 3848)
                                                                             ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@6 (line 3863)
                                                                             ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@2 (line 3804)
                                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@137 (line 87)
                                                                             ;   {static_call}
   0.01%           0x00007f69ac67b058:   nopl   0x20001148(%rax,%rax,1)      ;   {other}
                   0x00007f69ac67b060:   mov    0x8(%rax),%r11d              ; implicit exception: dispatches to 0x00007f69ac67ba64
   0.06%           0x00007f69ac67b064:   cmp    $0x103ef90,%r11d             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                             ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
                                                                             ;   {metadata(&apos;jdk/incubator/vector/Int512Vector&apos;)}
                   0x00007f69ac67b06b:   jne    0x00007f69ac67b6f8           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                                             ; - jdk.incubator.vector.IntVector$IntSpecies::broadcastBits@22 (line 3848)
                                                                             ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@6 (line 3863)
                                                                             ; - jdk.incubator.vector.IntVector$IntSpecies::broadcast@2 (line 3804)
                                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@137 (line 87)
   0.05%           0x00007f69ac67b071:   mov    $0x3,%esi
   0.00%           0x00007f69ac67b076:   movabs $0x7f3028390,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f3028390} = &apos;jdk/incubator/vector/Int512Vector&apos;)}
                   0x00007f69ac67b080:   movabs $0x7f3028440,%rcx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f3028440} = &apos;jdk/incubator/vector/Int512Vector$Int512Mask&apos;)}
   0.02%           0x00007f69ac67b08a:   movabs $0x7ffe7f600,%r8             ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffe7f600} = int)}
   0.07%           0x00007f69ac67b094:   mov    $0x10,%r9d
   0.00%           0x00007f69ac67b09a:   mov    0x60(%rsp),%rdi
   0.11%           0x00007f69ac67b09f:   mov    %rax,(%rsp)
   0.09%           0x00007f69ac67b0a3:   xor    %r10d,%r10d
                   0x00007f69ac67b0a6:   mov    %r10,0x8(%rsp)
   0.04%           0x00007f69ac67b0ab:   movabs $0x7f30284c0,%r10            ;   {oop(a &apos;jdk/incubator/vector/IntVector$$Lambda+0x00007f69340caf28&apos;{0x00000007f30284c0})}
   0.00%           0x00007f69ac67b0b5:   mov    %r10,0x10(%rsp)              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                             ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.10%           0x00007f69ac67b0ba:   nop
                   0x00007f69ac67b0bb:   call   0x00007f69ac654680           ; ImmutableOopMap {[24]=Oop [48]=Oop [56]=Oop [64]=Oop [80]=Oop [88]=Oop [96]=Oop [112]=Oop [120]=Oop }
                                                                             ;*invokestatic compare {reexecute=0 rethrow=0 return_oop=1}
                                                                             ; - jdk.incubator.vector.IntVector::compareTemplate@42 (line 2029)
                                                                             ; - jdk.incubator.vector.Int512Vector::compare@5 (line 384)
                                                                             ; - jdk.incubator.vector.Int512Vector::compare@3 (line 41)
                                                                             ; - jdk.incubator.vector.IntVector::lt@5 (line 1933)
                                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@142 (line 87)
                                                                             ;   {static_call}
                   0x00007f69ac67b0c0:   nopl   0x210011b0(%rax,%rax,1)      ;   {other}
   0.05%           0x00007f69ac67b0c8:   mov    0x8(%rax),%r11d              ; implicit exception: dispatches to 0x00007f69ac67bab8
                   0x00007f69ac67b0cc:   cmp    $0x103f610,%r11d             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                             ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
                                                                             ;   {metadata(&apos;jdk/incubator/vector/Int512Vector$Int512Mask&apos;)}
                   0x00007f69ac67b0d3:   jne    0x00007f69ac67b75c           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                                             ; - jdk.incubator.vector.IntVector::compareTemplate@45 (line 2029)
                                                                             ; - jdk.incubator.vector.Int512Vector::compare@5 (line 384)
                                                                             ; - jdk.incubator.vector.Int512Vector::compare@3 (line 41)
                                                                             ; - jdk.incubator.vector.IntVector::lt@5 (line 1933)
                                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@142 (line 87)
   0.01%           0x00007f69ac67b0d9:   mov    %rax,0x80(%rsp)
   0.09%           0x00007f69ac67b0e1:   movabs $0x7f3028440,%rsi            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f3028440} = &apos;jdk/incubator/vector/Int512Vector$Int512Mask&apos;)}
   0.00%           0x00007f69ac67b0eb:   movabs $0x7ffe7f600,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffe7f600} = int)}
   0.01%           0x00007f69ac67b0f5:   mov    $0x10,%ecx
   0.00%           0x00007f69ac67b0fa:   mov    $0xffffffffffffffff,%r8
   0.07%           0x00007f69ac67b101:   xor    %r9d,%r9d
   0.00%           0x00007f69ac67b104:   xor    %edi,%edi
   0.00%           0x00007f69ac67b106:   movabs $0x7f30284e0,%r10            ;   {oop(a &apos;jdk/incubator/vector/Int512Vector$Int512Mask$$Lambda+0x00007f69340cb960&apos;{0x00000007f30284e0})}
                   0x00007f69ac67b110:   mov    %r10,(%rsp)                  ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                             ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.07%           0x00007f69ac67b114:   data16 xchg %ax,%ax
   0.00%           0x00007f69ac67b117:   call   0x00007f69ac652d60           ; ImmutableOopMap {[24]=Oop [48]=Oop [56]=Oop [64]=Oop [80]=Oop [88]=Oop [96]=Oop [112]=Oop [120]=Oop [128]=Oop }
                                                                             ;*invokestatic fromBitsCoerced {reexecute=0 rethrow=0 return_oop=1}
                                                                             ; - jdk.incubator.vector.Int512Vector$Int512Mask::maskAll@25 (line 792)
                                                                             ; - jdk.incubator.vector.Int512Vector$Int512Mask::not@2 (line 694)
                                                                             ; - jdk.incubator.vector.Int512Vector$Int512Mask::not@1 (line 581)
                                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@145 (line 87)
                                                                             ;   {static_call}
   0.33%           0x00007f69ac67b11c:   nopl   0x2200120c(%rax,%rax,1)      ;   {other}
                   0x00007f69ac67b124:   mov    0x8(%rax),%r11d              ; implicit exception: dispatches to 0x00007f69ac67bb0c
                   0x00007f69ac67b128:   cmp    $0x103f610,%r11d             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                             ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
                                                                             ;   {metadata(&apos;jdk/incubator/vector/Int512Vector$Int512Mask&apos;)}
                   0x00007f69ac67b12f:   jne    0x00007f69ac67b7c0           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                                             ; - jdk.incubator.vector.Int512Vector$Int512Mask::maskAll@28 (line 792)
                                                                             ; - jdk.incubator.vector.Int512Vector$Int512Mask::not@2 (line 694)
                                                                             ; - jdk.incubator.vector.Int512Vector$Int512Mask::not@1 (line 581)
                                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@145 (line 87)
                   0x00007f69ac67b135:   mov    $0xc,%esi
   0.04%           0x00007f69ac67b13a:   movabs $0x7f3028440,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f3028440} = &apos;jdk/incubator/vector/Int512Vector$Int512Mask&apos;)}
                   0x00007f69ac67b144:   xor    %ecx,%ecx
   0.00%           0x00007f69ac67b146:   movabs $0x7ffe7f600,%r8             ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffe7f600} = int)}
   0.01%           0x00007f69ac67b150:   mov    $0x10,%r9d
   0.09%           0x00007f69ac67b156:   mov    0x80(%rsp),%rdi
   0.04%           0x00007f69ac67b15e:   mov    %rax,(%rsp)
   0.03%           0x00007f69ac67b162:   xor    %r10d,%r10d
   0.06%           0x00007f69ac67b165:   mov    %r10,0x8(%rsp)
   0.04%           0x00007f69ac67b16a:   movabs $0x7f30284f0,%r10            ;   {oop(a &apos;jdk/incubator/vector/Int512Vector$Int512Mask$$Lambda+0x00007f69340cbd70&apos;{0x00000007f30284f0})}
   0.00%           0x00007f69ac67b174:   mov    %r10,0x10(%rsp)              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                             ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.08%           0x00007f69ac67b179:   xchg   %ax,%ax
   0.05%           0x00007f69ac67b17b:   call   0x00007f69ac653e00           ; ImmutableOopMap {[24]=Oop [48]=Oop [56]=Oop [64]=Oop [80]=Oop [88]=Oop [96]=Oop [112]=Oop [120]=Oop }
                                                                             ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=1}
                                                                             ; - jdk.incubator.vector.Int512Vector$Int512Mask::xor@29 (line 733)
                                                                             ; - jdk.incubator.vector.Int512Vector$Int512Mask::not@5 (line 694)
                                                                             ; - jdk.incubator.vector.Int512Vector$Int512Mask::not@1 (line 581)
                                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@145 (line 87)
                                                                             ;   {static_call}
   0.00%           0x00007f69ac67b180:   nopl   0x23001270(%rax,%rax,1)      ;   {other}
                   0x00007f69ac67b188:   mov    0x8(%rax),%r11d              ; implicit exception: dispatches to 0x00007f69ac67bb6c
   0.07%           0x00007f69ac67b18c:   cmp    $0x103f610,%r11d             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                             ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
                                                                             ;   {metadata(&apos;jdk/incubator/vector/Int512Vector$Int512Mask&apos;)}
                   0x00007f69ac67b193:   jne    0x00007f69ac67b82c           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                                             ; - jdk.incubator.vector.Int512Vector$Int512Mask::xor@32 (line 733)
                                                                             ; - jdk.incubator.vector.Int512Vector$Int512Mask::not@5 (line 694)
                                                                             ; - jdk.incubator.vector.Int512Vector$Int512Mask::not@1 (line 581)
                                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@145 (line 87)
                   0x00007f69ac67b199:   mov    $0xa,%esi
                   0x00007f69ac67b19e:   movabs $0x7f3028440,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f3028440} = &apos;jdk/incubator/vector/Int512Vector$Int512Mask&apos;)}
                   0x00007f69ac67b1a8:   xor    %ecx,%ecx
   0.07%           0x00007f69ac67b1aa:   movabs $0x7ffe7f600,%r8             ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffe7f600} = int)}
                   0x00007f69ac67b1b4:   mov    $0x10,%r9d
   0.00%           0x00007f69ac67b1ba:   mov    0x78(%rsp),%rdi
   0.09%           0x00007f69ac67b1bf:   mov    %rax,(%rsp)
                   0x00007f69ac67b1c3:   xor    %r10d,%r10d
   0.00%           0x00007f69ac67b1c6:   mov    %r10,0x8(%rsp)
                   0x00007f69ac67b1cb:   movabs $0x7f3028500,%r10            ;   {oop(a &apos;jdk/incubator/vector/Int512Vector$Int512Mask$$Lambda+0x00007f69340cc398&apos;{0x00000007f3028500})}
   0.05%           0x00007f69ac67b1d5:   mov    %r10,0x10(%rsp)              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                             ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
                   0x00007f69ac67b1da:   nop
   0.01%           0x00007f69ac67b1db:   call   0x00007f69ac653e00           ; ImmutableOopMap {[24]=Oop [48]=Oop [56]=Oop [64]=Oop [80]=Oop [88]=Oop [96]=Oop [112]=Oop }
                                                                             ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=1}
                                                                             ; - jdk.incubator.vector.Int512Vector$Int512Mask::and@29 (line 713)
                                                                             ; - jdk.incubator.vector.Int512Vector$Int512Mask::and@2 (line 581)
                                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@148 (line 87)
                                                                             ;   {static_call}
   0.01%           0x00007f69ac67b1e0:   nopl   0x240012d0(%rax,%rax,1)      ;   {other}
   0.01%           0x00007f69ac67b1e8:   mov    0x8(%rax),%r11d              ; implicit exception: dispatches to 0x00007f69ac67bbc0
   0.02%           0x00007f69ac67b1ec:   cmp    $0x103f610,%r11d             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                             ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
                                                                             ;   {metadata(&apos;jdk/incubator/vector/Int512Vector$Int512Mask&apos;)}
                   0x00007f69ac67b1f3:   jne    0x00007f69ac67b890           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                                             ; - jdk.incubator.vector.Int512Vector$Int512Mask::and@32 (line 713)
                                                                             ; - jdk.incubator.vector.Int512Vector$Int512Mask::and@2 (line 581)
                                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@148 (line 87)
   0.06%           0x00007f69ac67b1f9:   movabs $0x7f3028390,%rsi            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f3028390} = &apos;jdk/incubator/vector/Int512Vector&apos;)}
   0.00%           0x00007f69ac67b203:   movabs $0x7f3028440,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f3028440} = &apos;jdk/incubator/vector/Int512Vector$Int512Mask&apos;)}
   0.01%           0x00007f69ac67b20d:   movabs $0x7ffe7f600,%rcx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffe7f600} = int)}
   0.01%           0x00007f69ac67b217:   mov    $0x10,%r8d
   0.07%           0x00007f69ac67b21d:   mov    0x30(%rsp),%r9
   0.08%           0x00007f69ac67b222:   mov    0x70(%rsp),%rdi
   0.02%           0x00007f69ac67b227:   mov    %rax,(%rsp)
   0.22%           0x00007f69ac67b22b:   movabs $0x7f3028510,%r10            ;   {oop(a &apos;jdk/incubator/vector/IntVector$$Lambda+0x00007f69340cc9c0&apos;{0x00000007f3028510})}
                   0x00007f69ac67b235:   mov    %r10,0x8(%rsp)               ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                             ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.04%           0x00007f69ac67b23a:   nop
   0.00%           0x00007f69ac67b23b:   call   0x00007f69ac66b300           ; ImmutableOopMap {[24]=Oop [56]=Oop [64]=Oop [80]=Oop [88]=Oop [96]=Oop }
                                                                             ;*invokestatic blend {reexecute=0 rethrow=0 return_oop=1}
                                                                             ; - jdk.incubator.vector.IntVector::blendTemplate@26 (line 2182)
                                                                             ; - jdk.incubator.vector.Int512Vector::blend@11 (line 410)
                                                                             ; - jdk.incubator.vector.Int512Vector::blend@3 (line 41)
                                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@158 (line 88)
                                                                             ;   {static_call}
   0.01%           0x00007f69ac67b240:   nopl   0x25001330(%rax,%rax,1)      ;   {other}
   0.01%           0x00007f69ac67b248:   mov    0x8(%rax),%r11d              ; implicit exception: dispatches to 0x00007f69ac67bc0c
   0.19%           0x00007f69ac67b24c:   cmp    $0x103ef90,%r11d             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                             ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
                                                                             ;   {metadata(&apos;jdk/incubator/vector/Int512Vector&apos;)}
                   0x00007f69ac67b253:   jne    0x00007f69ac67b8e8           ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                                                                             ; - jdk.incubator.vector.IntVector::blendTemplate@29 (line 2182)
                                                                             ; - jdk.incubator.vector.Int512Vector::blend@11 (line 410)
                                                                             ; - jdk.incubator.vector.Int512Vector::blend@3 (line 41)
                                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@158 (line 88)
   0.03%           0x00007f69ac67b259:   mov    %rax,0x30(%rsp)
   0.12%           0x00007f69ac67b25e:   mov    $0x4,%esi
   0.01%           0x00007f69ac67b263:   movabs $0x7f3028390,%rdx            ;   {oop(a &apos;java/lang/Class&apos;{0x00000007f3028390} = &apos;jdk/incubator/vector/Int512Vector&apos;)}
   0.01%           0x00007f69ac67b26d:   xor    %ecx,%ecx
                   0x00007f69ac67b26f:   movabs $0x7ffe7f600,%r8             ;   {oop(a &apos;java/lang/Class&apos;{0x00000007ffe7f600} = int)}
   0.04%           0x00007f69ac67b279:   mov    $0x10,%r9d
   0.01%           0x00007f69ac67b27f:   mov    0x38(%rsp),%rdi
   0.01%           0x00007f69ac67b284:   mov    0x40(%rsp),%r10
   0.00%           0x00007f69ac67b289:   mov    %r10,(%rsp)
   0.09%           0x00007f69ac67b28d:   xor    %r10d,%r10d
   0.01%           0x00007f69ac67b290:   mov    %r10,0x8(%rsp)
   0.04%           0x00007f69ac67b295:   movabs $0x7f3028520,%r10            ;   {oop(a &apos;jdk/incubator/vector/IntVector$$Lambda+0x00007f69340cd200&apos;{0x00000007f3028520})}
   0.00%           0x00007f69ac67b29f:   mov    %r10,0x10(%rsp)              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                             ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.13%           0x00007f69ac67b2a4:   data16 xchg %ax,%ax
   0.01%           0x00007f69ac67b2a7:   call   0x00007f69ac653e00           ; ImmutableOopMap {[24]=Oop [48]=Oop [64]=Oop [80]=Oop [88]=Oop [96]=Oop }
                                                                             ;*invokestatic binaryOp {reexecute=0 rethrow=0 return_oop=1}
                                                                             ; - jdk.incubator.vector.IntVector::lanewiseTemplate@154 (line 784)
                                                                             ; - jdk.incubator.vector.Int512Vector::lanewise@3 (line 285)
                                                                             ; - jdk.incubator.vector.Int512Vector::lanewise@3 (line 41)
                                                                             ; - jdk.incubator.vector.IntVector::add@5 (line 1352)
                                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@166 (line 89)
                                                                             ;   {static_call}
   0.04%           0x00007f69ac67b2ac:   nopl   0x2600139c(%rax,%rax,1)      ;   {other}
   0.01%           0x00007f69ac67b2b4:   mov    0x8(%rax),%r11d              ; implicit exception: dispatches to 0x00007f69ac67bc38
   0.28%           0x00007f69ac67b2b8:   nopl   0x0(%rax,%rax,1)
   0.01%           0x00007f69ac67b2c0:   cmp    $0x103ef90,%r11d             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                             ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
                                                                             ;   {metadata(&apos;jdk/incubator/vector/Int512Vector&apos;)}
                   0x00007f69ac67b2c7:   jne    0x00007f69ac67b924           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@174 (line 79)
   0.08%           0x00007f69ac67b2cd:   mov    0x458(%r15),%r10
   0.13%           0x00007f69ac67b2d4:   mov    0x50(%rsp),%r11              ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                             ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.15%           0x00007f69ac67b2d9:   mov    0xc(%r11),%r9d               ;*getfield laneCount {reexecute=0 rethrow=0 return_oop=0}
                                                                             ; - jdk.incubator.vector.AbstractSpecies::length@1 (line 117)
                                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@67 (line 79)
   0.32%           0x00007f69ac67b2dd:   mov    0x68(%rsp),%r11d             ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                             ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
                   0x00007f69ac67b2e2:   inc    %r11d                        ; ImmutableOopMap {rax=Oop [24]=Oop [48]=Oop [64]=Oop [80]=Oop [88]=Oop [96]=Oop }
                                                                             ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                                             ; - (reexecute) com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@174 (line 79)
                   0x00007f69ac67b2e5:   test   %eax,(%r10)                  ;   {poll}
   0.01%           0x00007f69ac67b2e8:   cmp    %r9d,%r11d                   ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                                                                             ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
                   0x00007f69ac67b2eb:   jge    0x00007f69ac67a745
   0.07%           0x00007f69ac67b2f1:   mov    %rax,0x38(%rsp)              ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                                             ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@75 (line 80)
   0.00%           0x00007f69ac67b2f6:   cmp    $0x10,%r11d
                ╭  0x00007f69ac67b2fa:   jae    0x00007f69ac67b327
   0.01%        │  0x00007f69ac67b2fc:   movslq %r11d,%r10
   0.00%        │  0x00007f69ac67b2ff:   shl    $0x3,%r10                    ;*invokestatic store {reexecute=0 rethrow=0 return_oop=0}
                │                                                            ; - jdk.incubator.vector.IntVector::intoArray@43 (line 3228)
                │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@184 (line 91)
   0.07%        │  0x00007f69ac67b303:   movabs $0x7f69ac67a440,%r8          ;   {section_word}
   0.00%        │  0x00007f69ac67b30d:   jmp    *(%r8,%r10,1)                ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                │                                                            ; - com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector@46 (line 77)
                │  0x00007f69ac67b311:   add    $0xa0,%rsp
                │  0x00007f69ac67b318:   pop    %rbp
                │  0x00007f69ac67b319:   cmp    0x450(%r15),%rsp             ;   {poll_return}
                │  0x00007f69ac67b320:   ja     0x00007f69ac67bedc
                │  0x00007f69ac67b326:   ret    
                ↘  0x00007f69ac67b327:   mov    $0xffffff45,%esi
                   0x00007f69ac67b32c:   mov    0x18(%rsp),%rbp
                   0x00007f69ac67b331:   mov    0x50(%rsp),%r10
                   0x00007f69ac67b336:   mov    %r10,0x18(%rsp)
....................................................................................................
  10.73%  <total for region 2>

....[Hottest Regions]...............................................................................
  22.50%         c2, level 4  jdk.internal.vm.vector.VectorSupport::compare, version 2, compile id 883 
  10.73%         c2, level 4  com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector, version 2, compile id 957 
   8.75%         c2, level 4  jdk.incubator.vector.Int512Vector$Int512Mask$$Lambda.0x00007f69340cbd70::apply, version 2, compile id 919 
   7.45%         c2, level 4  jdk.internal.vm.vector.VectorSupport::blend, version 2, compile id 930 
   7.15%         c2, level 4  jdk.internal.vm.vector.VectorSupport::fromBitsCoerced, version 2, compile id 853 
   6.40%         c2, level 4  jdk.internal.vm.vector.VectorSupport::maskReductionCoerced, version 2, compile id 907 
   6.21%         c2, level 4  jdk.internal.vm.vector.VectorSupport::fromBitsCoerced, version 2, compile id 853 
   3.92%         c2, level 4  jdk.internal.vm.vector.VectorSupport::compare, version 2, compile id 883 
   3.20%         c2, level 4  jdk.incubator.vector.IntVector$$Lambda.0x00007f69340cd200::apply, version 2, compile id 942 
   3.19%         c2, level 4  jdk.incubator.vector.Int512Vector$Int512Mask$$Lambda.0x00007f69340cc398::apply, version 2, compile id 924 
   2.97%         c2, level 4  jdk.internal.vm.vector.VectorSupport::binaryOp, version 2, compile id 860 
   2.68%         c2, level 4  jdk.incubator.vector.IntVector$$Lambda.0x00007f69340cd200::apply, version 2, compile id 942 
   2.49%         c2, level 4  jdk.incubator.vector.Int512Vector$Int512Mask$$Lambda.0x00007f69340cc398::apply, version 2, compile id 924 
   2.24%         c2, level 4  jdk.incubator.vector.Int512Vector$Int512Mask$$Lambda.0x00007f69340cc398::apply, version 2, compile id 924 
   2.15%         c2, level 4  com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector, version 2, compile id 957 
   1.51%    perf-1956738.map  [unknown] 
   1.36%                      <unknown> 
   1.25%         c2, level 4  jdk.internal.vm.vector.VectorSupport::extract, version 2, compile id 918 
   0.66%              kernel  [unknown] 
   0.35%         c2, level 4  jdk.incubator.vector.IntVector$$Lambda.0x00007f69340cd200::apply, version 2, compile id 942 
   2.84%  <...other 509 warm regions...>
....................................................................................................
 100.00%  <totals>

....[Hottest Methods (after inlining)]..............................................................
  26.42%         c2, level 4  jdk.internal.vm.vector.VectorSupport::compare, version 2, compile id 883 
  13.36%         c2, level 4  jdk.internal.vm.vector.VectorSupport::fromBitsCoerced, version 2, compile id 853 
  12.88%         c2, level 4  com.ionutbalosin.jvm.performance.benchmarks.api.vector.SortVectorApiBenchmark::sortVector, version 2, compile id 957 
   8.75%         c2, level 4  jdk.incubator.vector.Int512Vector$Int512Mask$$Lambda.0x00007f69340cbd70::apply, version 2, compile id 919 
   7.92%         c2, level 4  jdk.incubator.vector.Int512Vector$Int512Mask$$Lambda.0x00007f69340cc398::apply, version 2, compile id 924 
   7.45%         c2, level 4  jdk.internal.vm.vector.VectorSupport::blend, version 2, compile id 930 
   6.40%         c2, level 4  jdk.internal.vm.vector.VectorSupport::maskReductionCoerced, version 2, compile id 907 
   6.29%         c2, level 4  jdk.incubator.vector.IntVector$$Lambda.0x00007f69340cd200::apply, version 2, compile id 942 
   2.97%         c2, level 4  jdk.internal.vm.vector.VectorSupport::binaryOp, version 2, compile id 860 
   1.85%              kernel  [unknown] 
   1.52%    perf-1956738.map  [unknown] 
   1.44%                      <unknown> 
   1.25%         c2, level 4  jdk.internal.vm.vector.VectorSupport::extract, version 2, compile id 918 
   0.27%         c2, level 4  jdk.internal.vm.vector.VectorSupport::load, version 2, compile id 951 
   0.17%         c2, level 4  jdk.internal.vm.vector.VectorSupport::store, version 2, compile id 954 
   0.04%           libjvm.so  ElfSymbolTable::lookup 
   0.03%           libjvm.so  G1MergeHeapRootsTask::G1MergeCardSetClosure::do_heap_region 
   0.03%        libc-2.31.so  __memset_avx2_unaligned_erms 
   0.02%           libjvm.so  fileStream::write 
   0.02%           libjvm.so  TypeArrayKlass::allocate_common 
   0.90%  <...other 226 warm methods...>
....................................................................................................
 100.00%  <totals>

....[Distribution by Source]........................................................................
  94.14%         c2, level 4
   1.85%              kernel
   1.52%    perf-1956738.map
   1.44%                    
   0.70%           libjvm.so
   0.17%        libc-2.31.so
   0.06%         interpreter
   0.05%  libpthread-2.31.so
   0.03%          ld-2.31.so
   0.01%      hsdis-amd64.so
   0.01%         c1, level 3
   0.01%              [vdso]
   0.00%         c1, level 1
   0.00%          libjava.so
....................................................................................................
 100.00%  <totals>



# Run complete. Total time: 00:22:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                              (arraySize)  (vectorSize)  Mode  Cnt      Score    Error  Units
SortVectorApiBenchmark.sortVector               64            64  avgt    5     16.952 ±  0.038  us/op
SortVectorApiBenchmark.sortVector:asm           64            64  avgt             NaN             ---
SortVectorApiBenchmark.sortVector               64           128  avgt    5      5.543 ±  0.004  us/op
SortVectorApiBenchmark.sortVector:asm           64           128  avgt             NaN             ---
SortVectorApiBenchmark.sortVector               64           256  avgt    5      5.713 ±  0.055  us/op
SortVectorApiBenchmark.sortVector:asm           64           256  avgt             NaN             ---
SortVectorApiBenchmark.sortVector               64           512  avgt    5     33.288 ±  0.024  us/op
SortVectorApiBenchmark.sortVector:asm           64           512  avgt             NaN             ---
SortVectorApiBenchmark.sortVector             1024            64  avgt    5    274.883 ±  0.503  us/op
SortVectorApiBenchmark.sortVector:asm         1024            64  avgt             NaN             ---
SortVectorApiBenchmark.sortVector             1024           128  avgt    5     88.839 ±  0.139  us/op
SortVectorApiBenchmark.sortVector:asm         1024           128  avgt             NaN             ---
SortVectorApiBenchmark.sortVector             1024           256  avgt    5     90.192 ±  0.498  us/op
SortVectorApiBenchmark.sortVector:asm         1024           256  avgt             NaN             ---
SortVectorApiBenchmark.sortVector             1024           512  avgt    5    524.405 ±  0.602  us/op
SortVectorApiBenchmark.sortVector:asm         1024           512  avgt             NaN             ---
SortVectorApiBenchmark.sortVector            65536            64  avgt    5  17550.805 ± 19.514  us/op
SortVectorApiBenchmark.sortVector:asm        65536            64  avgt             NaN             ---
SortVectorApiBenchmark.sortVector            65536           128  avgt    5   5558.373 ± 18.278  us/op
SortVectorApiBenchmark.sortVector:asm        65536           128  avgt             NaN             ---
SortVectorApiBenchmark.sortVector            65536           256  avgt    5   6450.019 ± 21.899  us/op
SortVectorApiBenchmark.sortVector:asm        65536           256  avgt             NaN             ---
SortVectorApiBenchmark.sortVector            65536           512  avgt    5  33635.972 ± 32.512  us/op
SortVectorApiBenchmark.sortVector:asm        65536           512  avgt             NaN             ---

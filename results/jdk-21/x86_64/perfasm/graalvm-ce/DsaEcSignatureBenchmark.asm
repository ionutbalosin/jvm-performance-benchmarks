# JMH version: 1.37
# VM version: JDK 21, OpenJDK 64-Bit Server VM, 21+35-jvmci-23.1-b15
# VM invoker: /home/gogu/bench_jdks/graalvm-community-openjdk-21+35.1/bin/java
# VM options: -XX:ThreadPriorityPolicy=1 -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCIProduct -XX:-UnlockExperimentalVMOptions -Xms4g -Xmx4g -XX:+AlwaysPreTouch
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.performance.benchmarks.api.signature.DsaEcSignatureBenchmark.sign
# Parameters: (algorithm = secp256r1, messageLength = 64)

# Run progress: 0.00% complete, ETA 00:20:00
# Fork: 1 of 1
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 1081.005 us/op
# Warmup Iteration   2: 320.306 us/op
# Warmup Iteration   3: 313.933 us/op
# Warmup Iteration   4: 313.661 us/op
# Warmup Iteration   5: 313.629 us/op
Iteration   1: 313.727 us/op
Iteration   2: 313.643 us/op
Iteration   3: 314.223 us/op
Iteration   4: 313.926 us/op
Iteration   5: 314.134 us/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "com.ionutbalosin.jvm.performance.benchmarks.api.signature.DsaEcSignatureBenchmark.sign":
  313.931 ±(99.9%) 0.964 us/op [Average]
  (min, avg, max) = (313.643, 313.931, 314.223), stdev = 0.250
  CI (99.9%): [312.966, 314.895] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.signature.DsaEcSignatureBenchmark.sign:asm":
PrintAssembly processed: 413440 total address lines.
Perf output processed (skipped 62.558 seconds):
 Column 1: cycles (50933 events)

Hottest code regions (>10.00% "cycles" events):
 Event counts are percents of total event count.

....[Hottest Region 1]..............................................................................
jvmci, level 4, sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce, version 2, compile id 1059 

             # parm18:   [sp+0xb8]   = long
             # parm19:   [sp+0xc0]   = long
             0x00007fc40b24a0a0:   mov    0x8(%rsi),%r10d
             0x00007fc40b24a0a4:   movabs $0x7fc38f000000,%r12
             0x00007fc40b24a0ae:   add    %r12,%r10
             0x00007fc40b24a0b1:   xor    %r12,%r12
             0x00007fc40b24a0b4:   cmp    %r10,%rax
             0x00007fc40b24a0b7:   jne    0x00007fc40ac2f080           ;   {runtime_call ic_miss_stub}
             0x00007fc40b24a0bd:   data16 xchg %ax,%ax
           [Verified Entry Point]
   0.18%     0x00007fc40b24a0c0:   mov    %eax,-0x14000(%rsp)
   0.16%     0x00007fc40b24a0c7:   sub    $0x48,%rsp
             0x00007fc40b24a0cb:   nop
             0x00007fc40b24a0cc:   cmpl   $0x0,0x20(%r15)
   0.02%     0x00007fc40b24a0d4:   jne    0x00007fc40b24a77b
   0.12%     0x00007fc40b24a0da:   mov    %rbp,0x40(%rsp)
   0.04%     0x00007fc40b24a0df:   mov    %r8,0x30(%rsp)
   0.12%     0x00007fc40b24a0e4:   mov    %r9,0x28(%rsp)
   0.20%     0x00007fc40b24a0e9:   mov    %rdi,0x20(%rsp)              ; ImmutableOopMap {rdx=Oop rsi=Oop }
                                                                       ;*lconst_0 {reexecute=1 rethrow=0 return_oop=0}
                                                                       ; - (reexecute) sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@0 (line 81)
   0.14%     0x00007fc40b24a0ee:   cmpl   $0xa,0xc(%rdx)               ; implicit exception: dispatches to 0x00007fc40b24a79f
   0.02%  ╭  0x00007fc40b24a0f2:   jb     0x00007fc40b24a70e           ;*lastore {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@400 (line 223)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.00%  │  0x00007fc40b24a0f8:   mov    0xc0(%rsp),%r10
   0.04%  │  0x00007fc40b24a100:   mov    0xb8(%rsp),%r11
   0.11%  │  0x00007fc40b24a108:   mov    0xb0(%rsp),%rax
          │  0x00007fc40b24a110:   mov    0xa8(%rsp),%r13
          │  0x00007fc40b24a118:   mov    0xa0(%rsp),%r14
   0.03%  │  0x00007fc40b24a120:   mov    0x98(%rsp),%rbp
   0.11%  │  0x00007fc40b24a128:   mov    0x90(%rsp),%rsi
          │  0x00007fc40b24a130:   mov    0x80(%rsp),%rbx
   0.00%  │  0x00007fc40b24a138:   mov    %rdx,(%rsp)
   0.05%  │  0x00007fc40b24a13c:   mov    0x88(%rsp),%rdi
   0.10%  │  0x00007fc40b24a144:   mov    0x78(%rsp),%r9
          │  0x00007fc40b24a149:   mov    0x70(%rsp),%r8
   0.00%  │  0x00007fc40b24a14e:   mov    %r10,%rdx
   0.02%  │  0x00007fc40b24a151:   sar    $0x6,%rdx                    ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@23 (line 84)
   0.14%  │  0x00007fc40b24a155:   add    %rdx,%r11                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@24 (line 84)
          │  0x00007fc40b24a158:   mov    %r11,%rdx
   0.00%  │  0x00007fc40b24a15b:   shl    $0x16,%rdx                   ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@151 (line 96)
   0.04%  │  0x00007fc40b24a15f:   and    $0x3ffffff,%rdx              ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@155 (line 96)
   0.14%  │  0x00007fc40b24a166:   sub    %rdx,%rbx                    ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@156 (line 96)
          │  0x00007fc40b24a169:   mov    %r10,%rdx
          │  0x00007fc40b24a16c:   shl    $0x14,%rdx                   ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@9 (line 83)
   0.05%  │  0x00007fc40b24a170:   and    $0x3ffffff,%rdx              ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@13 (line 83)
   0.16%  │  0x00007fc40b24a177:   add    %rdx,%rax                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@14 (line 83)
          │  0x00007fc40b24a17a:   mov    %r10,%rdx
   0.00%  │  0x00007fc40b24a17d:   sar    $0xc,%rdx                    ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@47 (line 86)
   0.05%  │  0x00007fc40b24a181:   sub    %rdx,%rax                    ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@48 (line 86)
   0.12%  │  0x00007fc40b24a184:   mov    %r11,%rdx
          │  0x00007fc40b24a187:   sar    $0x6,%rdx                    ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@117 (line 93)
   0.00%  │  0x00007fc40b24a18b:   add    %rdx,%rax                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@118 (line 93)
   0.03%  │  0x00007fc40b24a18e:   mov    %rax,%rdx
   0.15%  │  0x00007fc40b24a191:   sar    $0x4,%rdx                    ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@258 (line 106)
   0.00%  │  0x00007fc40b24a195:   sub    %rdx,%rbx                    ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@259 (line 106)
   0.00%  │  0x00007fc40b24a198:   mov    %rax,%rdx
   0.05%  │  0x00007fc40b24a19b:   shl    $0xe,%rdx                    ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@221 (line 103)
   0.13%  │  0x00007fc40b24a19f:   and    $0x3ffffff,%rdx              ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@225 (line 103)
          │  0x00007fc40b24a1a6:   sub    %rdx,%rbp                    ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@226 (line 103)
   0.00%  │  0x00007fc40b24a1a9:   mov    %r10,%rdx
   0.03%  │  0x00007fc40b24a1ac:   shl    $0xe,%rdx                    ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@33 (line 85)
   0.11%  │  0x00007fc40b24a1b0:   and    $0x3ffffff,%rdx              ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@37 (line 85)
          │                                                            ;   {no_reloc}
          │  0x00007fc40b24a1b7:   sub    %rdx,%r13                    ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@38 (line 85)
   0.00%  │  0x00007fc40b24a1ba:   mov    %r11,%rdx
   0.03%  │  0x00007fc40b24a1bd:   shl    $0x14,%rdx                   ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@103 (line 92)
   0.09%  │  0x00007fc40b24a1c1:   and    $0x3ffffff,%rdx              ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@107 (line 92)
          │  0x00007fc40b24a1c8:   add    %rdx,%r13                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@108 (line 92)
          │  0x00007fc40b24a1cb:   mov    %r11,%rdx
   0.03%  │  0x00007fc40b24a1ce:   sar    $0xc,%rdx                    ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@141 (line 95)
   0.13%  │  0x00007fc40b24a1d2:   sub    %rdx,%r13                    ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@142 (line 95)
          │  0x00007fc40b24a1d5:   mov    %rax,%rdx
   0.00%  │  0x00007fc40b24a1d8:   sar    $0x6,%rdx                    ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@211 (line 102)
   0.05%  │  0x00007fc40b24a1dc:   add    %rdx,%r13                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@212 (line 102)
   0.12%  │  0x00007fc40b24a1df:   mov    %r13,%rdx
          │  0x00007fc40b24a1e2:   shl    $0x14,%rdx                   ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@291 (line 110)
   0.00%  │  0x00007fc40b24a1e6:   and    $0x3ffffff,%rdx              ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@295 (line 110)
   0.04%  │  0x00007fc40b24a1ed:   add    %rdx,%rbp                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@296 (line 110)
   0.09%  │  0x00007fc40b24a1f0:   mov    %r13,%rdx
          │  0x00007fc40b24a1f3:   sar    $0xc,%rdx                    ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@329 (line 113)
   0.00%  │  0x00007fc40b24a1f7:   sub    %rdx,%rbp                    ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@330 (line 113)
   0.05%  │  0x00007fc40b24a1fa:   mov    %r11,%rdx
   0.12%  │  0x00007fc40b24a1fd:   shl    $0xe,%rdx                    ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@127 (line 94)
          │  0x00007fc40b24a201:   and    $0x3ffffff,%rdx              ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@131 (line 94)
          │  0x00007fc40b24a208:   sub    %rdx,%r14                    ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@132 (line 94)
   0.04%  │  0x00007fc40b24a20b:   mov    %rax,%rdx
   0.12%  │  0x00007fc40b24a20e:   shl    $0x14,%rdx                   ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@197 (line 101)
          │  0x00007fc40b24a212:   and    $0x3ffffff,%rdx              ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@201 (line 101)
   0.00%  │  0x00007fc40b24a219:   add    %rdx,%r14                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@202 (line 101)
   0.05%  │  0x00007fc40b24a21c:   mov    %rax,%rdx
   0.14%  │  0x00007fc40b24a21f:   sar    $0xc,%rdx                    ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@235 (line 104)
   0.00%  │  0x00007fc40b24a223:   sub    %rdx,%r14                    ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@236 (line 104)
   0.00%  │  0x00007fc40b24a226:   mov    %r13,%rdx
   0.04%  │  0x00007fc40b24a229:   sar    $0x6,%rdx                    ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@305 (line 111)
   0.12%  │  0x00007fc40b24a22d:   add    %rdx,%r14                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@306 (line 111)
          │  0x00007fc40b24a230:   mov    %r14,%rdx
   0.00%  │  0x00007fc40b24a233:   sar    $0x6,%rdx                    ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@399 (line 120)
   0.05%  │  0x00007fc40b24a237:   add    %rdx,%rbp                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@400 (line 120)
   0.16%  │  0x00007fc40b24a23a:   mov    %rbp,%rdx
   0.00%  │  0x00007fc40b24a23d:   shl    $0xe,%rdx                    ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@503 (line 130)
   0.00%  │  0x00007fc40b24a241:   and    $0x3ffffff,%rdx              ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@507 (line 130)
   0.04%  │  0x00007fc40b24a248:   sub    %rdx,%rbx                    ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@508 (line 130)
   0.12%  │  0x00007fc40b24a24b:   mov    %r10,%rdx
          │  0x00007fc40b24a24e:   sar    $0x4,%rdx                    ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@70 (line 88)
   0.01%  │  0x00007fc40b24a252:   sub    %rdx,%rsi                    ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@71 (line 88)
   0.03%  │  0x00007fc40b24a255:   mov    %r13,%rdx
   0.12%  │  0x00007fc40b24a258:   shl    $0xe,%rdx                    ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@315 (line 112)
          │  0x00007fc40b24a25c:   and    $0x3ffffff,%rdx              ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@319 (line 112)
   0.00%  │  0x00007fc40b24a263:   sub    %rdx,%rsi                    ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@320 (line 112)
   0.04%  │  0x00007fc40b24a266:   mov    %r14,%rdx
   0.12%  │  0x00007fc40b24a269:   shl    $0x14,%rdx                   ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@385 (line 119)
          │  0x00007fc40b24a26d:   and    $0x3ffffff,%rdx              ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@389 (line 119)
   0.00%  │  0x00007fc40b24a274:   add    %rdx,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@390 (line 119)
   0.03%  │  0x00007fc40b24a277:   mov    %r14,%rdx
   0.14%  │  0x00007fc40b24a27a:   sar    $0xc,%rdx                    ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@423 (line 122)
   0.00%  │  0x00007fc40b24a27e:   sub    %rdx,%rsi                    ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@424 (line 122)
   0.01%  │  0x00007fc40b24a281:   mov    %rbp,%rdx
   0.05%  │  0x00007fc40b24a284:   sar    $0x6,%rdx                    ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@493 (line 129)
   0.12%  │  0x00007fc40b24a288:   add    %rdx,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@494 (line 129)
          │  0x00007fc40b24a28b:   mov    %rsi,%rdx
   0.01%  │  0x00007fc40b24a28e:   shl    $0x14,%rdx                   ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@573 (line 137)
   0.03%  │  0x00007fc40b24a292:   and    $0x3ffffff,%rdx              ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@577 (line 137)
   0.14%  │  0x00007fc40b24a299:   add    %rdx,%rbx                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@578 (line 137)
   0.00%  │  0x00007fc40b24a29c:   mov    %rsi,%rdx
   0.00%  │  0x00007fc40b24a29f:   sar    $0xc,%rdx                    ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@611 (line 140)
   0.03%  │  0x00007fc40b24a2a3:   sub    %rdx,%rbx                    ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@612 (line 140)
   0.12%  │  0x00007fc40b24a2a6:   mov    %r10,%rdx
   0.00%  │  0x00007fc40b24a2a9:   shl    $0x16,%rdx                   ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@57 (line 87)
   0.00%  │  0x00007fc40b24a2ad:   and    $0x3ffffff,%rdx              ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@61 (line 87)
   0.03%  │  0x00007fc40b24a2b4:   sub    %rdx,%rdi                    ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@62 (line 87)
          │                                                            ;   {no_reloc}
   0.10%  │  0x00007fc40b24a2b7:   mov    %r11,%rdx
          │  0x00007fc40b24a2ba:   sar    $0x4,%rdx                    ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@164 (line 97)
   0.00%  │  0x00007fc40b24a2be:   sub    %rdx,%rdi                    ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@165 (line 97)
   0.02%  │  0x00007fc40b24a2c1:   mov    %r14,%rdx
   0.15%  │  0x00007fc40b24a2c4:   shl    $0xe,%rdx                    ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@409 (line 121)
   0.00%  │  0x00007fc40b24a2c8:   and    $0x3ffffff,%rdx              ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@413 (line 121)
   0.00%  │  0x00007fc40b24a2cf:   sub    %rdx,%rdi                    ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@414 (line 121)
   0.03%  │  0x00007fc40b24a2d2:   mov    %rbp,%rdx
   0.12%  │  0x00007fc40b24a2d5:   shl    $0x14,%rdx                   ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@479 (line 128)
          │  0x00007fc40b24a2d9:   and    $0x3ffffff,%rdx              ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@483 (line 128)
   0.00%  │  0x00007fc40b24a2e0:   add    %rdx,%rdi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@484 (line 128)
   0.03%  │  0x00007fc40b24a2e3:   mov    %rbp,%rdx
   0.11%  │  0x00007fc40b24a2e6:   sar    $0xc,%rdx                    ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@517 (line 131)
   0.00%  │  0x00007fc40b24a2ea:   sub    %rdx,%rdi                    ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@518 (line 131)
   0.00%  │  0x00007fc40b24a2ed:   mov    %rsi,%rdx
   0.03%  │  0x00007fc40b24a2f0:   sar    $0x6,%rdx                    ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@587 (line 138)
   0.13%  │  0x00007fc40b24a2f4:   add    %rdx,%rdi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@588 (line 138)
          │  0x00007fc40b24a2f7:   mov    %rdi,%rdx
   0.01%  │  0x00007fc40b24a2fa:   sar    $0x6,%rdx                    ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@681 (line 147)
   0.04%  │  0x00007fc40b24a2fe:   add    %rdx,%rbx                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@682 (line 147)
   0.15%  │  0x00007fc40b24a301:   mov    %rbx,%rdx
   0.00%  │  0x00007fc40b24a304:   shl    $0x4,%rdx                    ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@830 (line 161)
   0.00%  │  0x00007fc40b24a308:   and    $0x3ffffff,%rdx              ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@834 (line 161)
   0.03%  │  0x00007fc40b24a30f:   add    %rdx,%rcx                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@835 (line 161)
   0.14%  │  0x00007fc40b24a312:   mov    %r10,%rdx
   0.00%  │  0x00007fc40b24a315:   sar    $0x16,%rdx                   ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@93 (line 90)
          │  0x00007fc40b24a319:   add    %rdx,%r9                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@94 (line 90)
   0.04%  │  0x00007fc40b24a31c:   mov    %rax,%rdx
   0.13%  │  0x00007fc40b24a31f:   shl    $0x16,%rdx                   ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@245 (line 105)
          │  0x00007fc40b24a323:   and    $0x3ffffff,%rdx              ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@249 (line 105)
          │  0x00007fc40b24a32a:   sub    %rdx,%r9                     ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@250 (line 105)
   0.03%  │  0x00007fc40b24a32d:   mov    %r13,%rdx
   0.11%  │  0x00007fc40b24a330:   sar    $0x4,%rdx                    ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@352 (line 115)
          │  0x00007fc40b24a334:   sub    %rdx,%r9                     ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@353 (line 115)
          │  0x00007fc40b24a337:   mov    %rsi,%rdx
   0.03%  │  0x00007fc40b24a33a:   shl    $0xe,%rdx                    ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@597 (line 139)
   0.13%  │  0x00007fc40b24a33e:   and    $0x3ffffff,%rdx              ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@601 (line 139)
          │  0x00007fc40b24a345:   sub    %rdx,%r9                     ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@602 (line 139)
   0.00%  │  0x00007fc40b24a348:   mov    %rdi,%rdx
   0.02%  │  0x00007fc40b24a34b:   shl    $0x14,%rdx                   ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@667 (line 146)
   0.12%  │  0x00007fc40b24a34f:   and    $0x3ffffff,%rdx              ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@671 (line 146)
   0.01%  │  0x00007fc40b24a356:   add    %rdx,%r9                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@672 (line 146)
          │  0x00007fc40b24a359:   mov    %rdi,%rdx
   0.01%  │  0x00007fc40b24a35c:   sar    $0xc,%rdx                    ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@705 (line 149)
   0.11%  │  0x00007fc40b24a360:   sub    %rdx,%r9                     ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@706 (line 149)
          │  0x00007fc40b24a363:   mov    %rbx,%rdx
   0.01%  │  0x00007fc40b24a366:   sar    $0x6,%rdx                    ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@775 (line 156)
   0.04%  │  0x00007fc40b24a36a:   add    %rdx,%r9                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@776 (line 156)
   0.18%  │  0x00007fc40b24a36d:   shl    $0x4,%r10                    ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@79 (line 89)
          │  0x00007fc40b24a371:   and    $0x3ffffff,%r10              ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@83 (line 89)
   0.00%  │  0x00007fc40b24a378:   add    %r10,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@84 (line 89)
   0.03%  │  0x00007fc40b24a37b:   mov    %r11,%r10
   0.14%  │  0x00007fc40b24a37e:   sar    $0x16,%r10                   ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@187 (line 99)
          │  0x00007fc40b24a382:   add    %r10,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@188 (line 99)
   0.01%  │  0x00007fc40b24a385:   mov    %r13,%r10
   0.02%  │  0x00007fc40b24a388:   shl    $0x16,%r10                   ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@339 (line 114)
   0.14%  │  0x00007fc40b24a38c:   and    $0x3ffffff,%r10              ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@343 (line 114)
          │  0x00007fc40b24a393:   sub    %r10,%r8                     ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@344 (line 114)
   0.00%  │  0x00007fc40b24a396:   mov    %r14,%r10
   0.04%  │  0x00007fc40b24a399:   sar    $0x4,%r10                    ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@446 (line 124)
   0.12%  │  0x00007fc40b24a39d:   sub    %r10,%r8                     ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@447 (line 124)
          │  0x00007fc40b24a3a0:   mov    %rdi,%r10
          │  0x00007fc40b24a3a3:   shl    $0xe,%r10                    ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@691 (line 148)
   0.04%  │  0x00007fc40b24a3a7:   and    $0x3ffffff,%r10              ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@695 (line 148)
   0.11%  │  0x00007fc40b24a3ae:   sub    %r10,%r8                     ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@696 (line 148)
          │  0x00007fc40b24a3b1:   mov    %rbx,%r10
   0.00%  │  0x00007fc40b24a3b4:   shl    $0x14,%r10                   ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@761 (line 155)
          │                                                            ;   {no_reloc}
   0.02%  │  0x00007fc40b24a3b8:   and    $0x3ffffff,%r10              ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@765 (line 155)
   0.11%  │  0x00007fc40b24a3bf:   add    %r10,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@766 (line 155)
   0.00%  │  0x00007fc40b24a3c2:   mov    %rbx,%r10
   0.00%  │  0x00007fc40b24a3c5:   sar    $0xc,%r10                    ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@799 (line 158)
   0.03%  │  0x00007fc40b24a3c9:   sub    %r10,%r8                     ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@800 (line 158)
   0.11%  │  0x00007fc40b24a3cc:   lea    0x2000000(%r8),%r10          ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@5 (line 170)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
          │  0x00007fc40b24a3d3:   mov    %r10,%rdx
   0.00%  │  0x00007fc40b24a3d6:   sar    $0x1a,%rdx                   ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@8 (line 170)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.03%  │  0x00007fc40b24a3da:   add    %rdx,%r9                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@25 (line 172)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.11%  │  0x00007fc40b24a3dd:   lea    0x2000000(%r9),%rdx          ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@33 (line 174)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
          │  0x00007fc40b24a3e4:   mov    %r9,0x18(%rsp)
   0.00%  │  0x00007fc40b24a3e9:   mov    %rdx,%r9
   0.01%  │  0x00007fc40b24a3ec:   sar    $0x1a,%r9                    ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@36 (line 174)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.13%  │  0x00007fc40b24a3f0:   mov    %r8,0x10(%rsp)
          │  0x00007fc40b24a3f5:   mov    %r9,%r8
   0.00%  │  0x00007fc40b24a3f8:   shl    $0x4,%r8                     ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@131 (line 184)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.04%  │  0x00007fc40b24a3fc:   and    $0x3ffffff,%r8               ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@135 (line 184)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.14%  │  0x00007fc40b24a403:   add    %r8,%rcx                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@136 (line 184)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.00%  │  0x00007fc40b24a406:   lea    0x2000000(%rcx),%r8          ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@152 (line 187)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.00%  │  0x00007fc40b24a40d:   mov    %r10,0x8(%rsp)
   0.02%  │  0x00007fc40b24a412:   mov    %r8,%r10
   0.13%  │  0x00007fc40b24a415:   and    $0xfffffffffc000000,%r10     ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@163 (line 188)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.00%  │  0x00007fc40b24a41c:   sub    %r10,%rcx                    ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@164 (line 188)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.02%  │  0x00007fc40b24a41f:   mov    (%rsp),%r10
   0.03%  │  0x00007fc40b24a423:   mov    %rcx,0x10(%r10)              ;*lastore {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@400 (line 223)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.19%  │  0x00007fc40b24a427:   mov    %rdi,%rcx
          │  0x00007fc40b24a42a:   shl    $0x4,%rcx                    ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@737 (line 152)
          │  0x00007fc40b24a42e:   and    $0x3ffffff,%rcx              ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@741 (line 152)
   0.01%  │  0x00007fc40b24a435:   add    0x30(%rsp),%rcx              ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@742 (line 152)
   0.16%  │  0x00007fc40b24a43a:   mov    %r11,0x30(%rsp)
          │  0x00007fc40b24a43f:   mov    %rbx,%r11
   0.00%  │  0x00007fc40b24a442:   sar    $0x16,%r11                   ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@843 (line 162)
   0.01%  │  0x00007fc40b24a446:   add    %r11,%rcx                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@844 (line 162)
   0.13%  │  0x00007fc40b24a449:   mov    %rdx,%r11
          │  0x00007fc40b24a44c:   sar    $0x30,%r11                   ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@144 (line 185)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.01%  │  0x00007fc40b24a450:   add    %r11,%rcx                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@145 (line 185)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.01%  │  0x00007fc40b24a453:   sar    $0x1a,%r8                    ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@155 (line 187)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.19%  │  0x00007fc40b24a457:   add    %r8,%rcx                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@170 (line 189)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
          │  0x00007fc40b24a45a:   lea    0x2000000(%rcx),%r11         ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@178 (line 191)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.01%  │  0x00007fc40b24a461:   mov    %r11,%r8
   0.02%  │  0x00007fc40b24a464:   and    $0xfffffffffc000000,%r8      ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@190 (line 192)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.16%  │  0x00007fc40b24a46b:   sub    %r8,%rcx                     ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@191 (line 192)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
          │  0x00007fc40b24a46e:   mov    %rcx,0x18(%r10)              ;*lastore {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@405 (line 224)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.00%  │  0x00007fc40b24a472:   mov    %rsi,%r8
   0.01%  │  0x00007fc40b24a475:   shl    $0x4,%r8                     ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@643 (line 143)
   0.10%  │  0x00007fc40b24a479:   and    $0x3ffffff,%r8               ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@647 (line 143)
          │  0x00007fc40b24a480:   add    0x28(%rsp),%r8               ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@648 (line 143)
   0.01%  │  0x00007fc40b24a485:   mov    %rdi,%rcx
   0.01%  │  0x00007fc40b24a488:   sar    $0x16,%rcx                   ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@751 (line 153)
   0.13%  │  0x00007fc40b24a48c:   add    %rcx,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@752 (line 153)
   0.00%  │  0x00007fc40b24a48f:   sar    $0x1a,%r11                   ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@181 (line 191)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.00%  │  0x00007fc40b24a493:   add    %r11,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@198 (line 193)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.01%  │  0x00007fc40b24a496:   lea    0x2000000(%r8),%r11          ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@206 (line 195)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.16%  │  0x00007fc40b24a49d:   mov    %r11,%rcx
          │  0x00007fc40b24a4a0:   and    $0xfffffffffc000000,%rcx     ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@218 (line 196)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.00%  │  0x00007fc40b24a4a7:   sub    %rcx,%r8                     ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@219 (line 196)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.01%  │  0x00007fc40b24a4aa:   mov    %r8,0x20(%r10)               ;*lastore {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@410 (line 225)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.14%  │  0x00007fc40b24a4ae:   mov    %rbp,%r8
          │  0x00007fc40b24a4b1:   shl    $0x4,%r8                     ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@549 (line 134)
          │                                                            ;   {no_reloc}
          │  0x00007fc40b24a4b5:   and    $0x3ffffff,%r8               ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@553 (line 134)
   0.01%  │  0x00007fc40b24a4bc:   add    0x20(%rsp),%r8               ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@554 (line 134)
   0.17%  │  0x00007fc40b24a4c1:   mov    %rsi,%rcx
          │  0x00007fc40b24a4c4:   sar    $0x16,%rcx                   ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@657 (line 144)
          │  0x00007fc40b24a4c8:   add    %rcx,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@658 (line 144)
   0.01%  │  0x00007fc40b24a4cb:   mov    %rbx,%rcx
   0.15%  │  0x00007fc40b24a4ce:   shl    $0x16,%rcx                   ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@809 (line 159)
          │  0x00007fc40b24a4d2:   and    $0x3ffffff,%rcx              ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@813 (line 159)
          │  0x00007fc40b24a4d9:   sub    %rcx,%r8                     ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@814 (line 159)
   0.01%  │  0x00007fc40b24a4dc:   mov    %r9,%rcx
   0.13%  │  0x00007fc40b24a4df:   shl    $0x16,%rcx                   ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@110 (line 182)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
          │  0x00007fc40b24a4e3:   and    $0x3ffffff,%rcx              ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@114 (line 182)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
          │  0x00007fc40b24a4ea:   sub    %rcx,%r8                     ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@115 (line 182)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.01%  │  0x00007fc40b24a4ed:   sar    $0x1a,%r11                   ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@209 (line 195)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.17%  │  0x00007fc40b24a4f1:   add    %r11,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@226 (line 197)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
          │  0x00007fc40b24a4f4:   lea    0x2000000(%r8),%r11          ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@234 (line 199)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.00%  │  0x00007fc40b24a4fb:   mov    %r11,%rcx
   0.01%  │  0x00007fc40b24a4fe:   and    $0xfffffffffc000000,%rcx     ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@246 (line 200)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.17%  │  0x00007fc40b24a505:   sub    %rcx,%r8                     ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@247 (line 200)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
          │  0x00007fc40b24a508:   mov    %r8,0x28(%r10)               ;*lastore {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@415 (line 226)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.00%  │  0x00007fc40b24a50c:   mov    %r14,%r8
   0.01%  │  0x00007fc40b24a50f:   shl    $0x4,%r8                     ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@455 (line 125)
   0.16%  │  0x00007fc40b24a513:   and    $0x3ffffff,%r8               ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@459 (line 125)
          │  0x00007fc40b24a51a:   add    0x50(%rsp),%r8               ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@460 (line 125)
   0.00%  │  0x00007fc40b24a51f:   mov    %rbp,%rcx
   0.02%  │  0x00007fc40b24a522:   sar    $0x16,%rcx                   ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@563 (line 135)
   0.16%  │  0x00007fc40b24a526:   add    %rcx,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@564 (line 135)
          │  0x00007fc40b24a529:   mov    %rdi,%rcx
   0.00%  │  0x00007fc40b24a52c:   shl    $0x16,%rcx                   ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@715 (line 150)
   0.02%  │  0x00007fc40b24a530:   and    $0x3ffffff,%rcx              ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@719 (line 150)
   0.12%  │  0x00007fc40b24a537:   sub    %rcx,%r8                     ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@720 (line 150)
          │  0x00007fc40b24a53a:   mov    %rbx,%rcx
   0.00%  │  0x00007fc40b24a53d:   sar    $0x4,%rcx                    ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@822 (line 160)
   0.01%  │  0x00007fc40b24a541:   sub    %rcx,%r8                     ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@823 (line 160)
   0.15%  │  0x00007fc40b24a544:   mov    %rdx,%rcx
          │  0x00007fc40b24a547:   sar    $0x1e,%rcx                   ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@123 (line 183)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.00%  │  0x00007fc40b24a54b:   sub    %rcx,%r8                     ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@124 (line 183)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.01%  │  0x00007fc40b24a54e:   sar    $0x1a,%r11                   ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@237 (line 199)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.14%  │  0x00007fc40b24a552:   add    %r11,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@254 (line 201)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.00%  │  0x00007fc40b24a555:   lea    0x2000000(%r8),%r11          ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@262 (line 203)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.00%  │  0x00007fc40b24a55c:   mov    %r11,%rcx
   0.01%  │  0x00007fc40b24a55f:   and    $0xfffffffffc000000,%rcx     ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@274 (line 204)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.16%  │  0x00007fc40b24a566:   sub    %rcx,%r8                     ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@275 (line 204)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
          │  0x00007fc40b24a569:   mov    %r8,0x30(%r10)               ;*lastore {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@420 (line 227)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.02%  │  0x00007fc40b24a56d:   mov    %r13,%r8
   0.01%  │  0x00007fc40b24a570:   shl    $0x4,%r8                     ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@361 (line 116)
   0.16%  │  0x00007fc40b24a574:   and    $0x3ffffff,%r8               ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@365 (line 116)
          │  0x00007fc40b24a57b:   add    0x58(%rsp),%r8               ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@366 (line 116)
   0.00%  │  0x00007fc40b24a580:   mov    %r14,%rcx
   0.01%  │  0x00007fc40b24a583:   sar    $0x16,%rcx                   ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@469 (line 126)
   0.16%  │  0x00007fc40b24a587:   add    %rcx,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@470 (line 126)
          │  0x00007fc40b24a58a:   mov    %rsi,%rcx
   0.00%  │  0x00007fc40b24a58d:   shl    $0x16,%rcx                   ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@621 (line 141)
   0.01%  │  0x00007fc40b24a591:   and    $0x3ffffff,%rcx              ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@625 (line 141)
   0.15%  │  0x00007fc40b24a598:   sub    %rcx,%r8                     ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@626 (line 141)
          │  0x00007fc40b24a59b:   sar    $0x4,%rdi                    ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@728 (line 151)
   0.01%  │  0x00007fc40b24a59f:   sub    %rdi,%r8                     ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@729 (line 151)
   0.01%  │  0x00007fc40b24a5a2:   sar    $0x1a,%r11                   ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@265 (line 203)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.17%  │  0x00007fc40b24a5a6:   add    %r11,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@282 (line 205)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
          │  0x00007fc40b24a5a9:   lea    0x2000000(%r8),%r11          ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@290 (line 207)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.01%  │  0x00007fc40b24a5b0:   mov    %r11,%rcx                    ;   {no_reloc}
   0.01%  │  0x00007fc40b24a5b3:   and    $0xfffffffffc000000,%rcx     ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@302 (line 208)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.16%  │  0x00007fc40b24a5ba:   sub    %rcx,%r8                     ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@303 (line 208)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
          │  0x00007fc40b24a5bd:   mov    %r8,0x38(%r10)               ;*lastore {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@425 (line 228)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.01%  │  0x00007fc40b24a5c1:   mov    %rax,%r8
   0.00%  │  0x00007fc40b24a5c4:   shl    $0x4,%r8                     ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@267 (line 107)
   0.14%  │  0x00007fc40b24a5c8:   and    $0x3ffffff,%r8               ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@271 (line 107)
          │  0x00007fc40b24a5cf:   add    0x60(%rsp),%r8               ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@272 (line 107)
   0.01%  │  0x00007fc40b24a5d4:   sar    $0x16,%r13                   ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@375 (line 117)
   0.01%  │  0x00007fc40b24a5d8:   add    %r13,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@376 (line 117)
   0.15%  │  0x00007fc40b24a5db:   mov    %rbp,%rcx
          │  0x00007fc40b24a5de:   shl    $0x16,%rcx                   ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@527 (line 132)
   0.00%  │  0x00007fc40b24a5e2:   and    $0x3ffffff,%rcx              ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@531 (line 132)
   0.01%  │  0x00007fc40b24a5e9:   sub    %rcx,%r8                     ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@532 (line 132)
   0.15%  │  0x00007fc40b24a5ec:   sar    $0x4,%rsi                    ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@634 (line 142)
          │  0x00007fc40b24a5f0:   sub    %rsi,%r8                     ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@635 (line 142)
   0.01%  │  0x00007fc40b24a5f3:   sar    $0x1a,%r11                   ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@293 (line 207)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.01%  │  0x00007fc40b24a5f7:   add    %r11,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@310 (line 209)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.16%  │  0x00007fc40b24a5fa:   lea    0x2000000(%r8),%r11          ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@318 (line 211)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
          │  0x00007fc40b24a601:   mov    %r11,%rcx
   0.00%  │  0x00007fc40b24a604:   and    $0xfffffffffc000000,%rcx     ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@330 (line 212)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.01%  │  0x00007fc40b24a60b:   sub    %rcx,%r8                     ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@331 (line 212)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.16%  │  0x00007fc40b24a60e:   mov    %r8,0x40(%r10)               ;*lastore {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@431 (line 229)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.00%  │  0x00007fc40b24a612:   mov    0x30(%rsp),%r8
   0.00%  │  0x00007fc40b24a617:   shl    $0x4,%r8                     ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@173 (line 98)
   0.01%  │  0x00007fc40b24a61b:   and    $0x3ffffff,%r8               ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@177 (line 98)
   0.13%  │  0x00007fc40b24a622:   add    0x68(%rsp),%r8               ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@178 (line 98)
   0.00%  │  0x00007fc40b24a627:   sar    $0x16,%rax                   ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@281 (line 108)
   0.01%  │  0x00007fc40b24a62b:   add    %rax,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@282 (line 108)
   0.01%  │  0x00007fc40b24a62e:   shl    $0x16,%r14                   ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@433 (line 123)
   0.16%  │  0x00007fc40b24a632:   and    $0x3ffffff,%r14              ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@437 (line 123)
   0.00%  │  0x00007fc40b24a639:   sub    %r14,%r8                     ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@438 (line 123)
   0.00%  │  0x00007fc40b24a63c:   sar    $0x4,%rbp                    ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@540 (line 133)
   0.01%  │  0x00007fc40b24a640:   sub    %rbp,%r8                     ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@541 (line 133)
   0.16%  │  0x00007fc40b24a643:   shl    $0xe,%rbx                    ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@785 (line 157)
   0.00%  │  0x00007fc40b24a647:   and    $0x3ffffff,%rbx              ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@789 (line 157)
   0.00%  │  0x00007fc40b24a64e:   sub    %rbx,%r8                     ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@790 (line 157)
   0.01%  │  0x00007fc40b24a651:   mov    %r9,%rcx
   0.14%  │  0x00007fc40b24a654:   shl    $0xe,%rcx                    ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@86 (line 180)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.00%  │  0x00007fc40b24a658:   and    $0x3ffffff,%rcx              ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@90 (line 180)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
          │  0x00007fc40b24a65f:   sub    %rcx,%r8                     ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@91 (line 180)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.01%  │  0x00007fc40b24a662:   sar    $0x1a,%r11                   ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@321 (line 211)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.16%  │  0x00007fc40b24a666:   add    %r11,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@338 (line 213)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.00%  │  0x00007fc40b24a669:   lea    0x2000000(%r8),%r11          ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@346 (line 215)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.00%  │  0x00007fc40b24a670:   mov    %r11,%rcx
   0.02%  │  0x00007fc40b24a673:   and    $0xfffffffffc000000,%rcx     ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@358 (line 216)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.18%  │  0x00007fc40b24a67a:   sub    %rcx,%r8                     ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@359 (line 216)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.00%  │  0x00007fc40b24a67d:   mov    %r8,0x48(%r10)               ;*lastore {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@437 (line 230)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.02%  │  0x00007fc40b24a681:   mov    0x8(%rsp),%r8
   0.01%  │  0x00007fc40b24a686:   and    $0xfffffffffc000000,%r8      ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@17 (line 171)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.13%  │  0x00007fc40b24a68d:   mov    0x10(%rsp),%rcx
          │  0x00007fc40b24a692:   sub    %r8,%rcx                     ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@18 (line 171)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.01%  │  0x00007fc40b24a695:   shl    $0x14,%r9                    ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@62 (line 178)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.00%  │  0x00007fc40b24a699:   and    $0x3ffffff,%r9               ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@66 (line 178)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.16%  │  0x00007fc40b24a6a0:   add    %r9,%rcx                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@67 (line 178)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.00%  │  0x00007fc40b24a6a3:   mov    %rdx,%r8
   0.02%  │  0x00007fc40b24a6a6:   sar    $0x26,%r8                    ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@100 (line 181)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.01%  │  0x00007fc40b24a6aa:   sub    %r8,%rcx                     ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@101 (line 181)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.14%  │  0x00007fc40b24a6ad:   sar    $0x1a,%r11                   ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@349 (line 215)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.00%  │  0x00007fc40b24a6b1:   add    %r11,%rcx                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@366 (line 217)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
          │                                                            ;   {no_reloc}
   0.02%  │  0x00007fc40b24a6b4:   lea    0x2000000(%rcx),%r11         ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@374 (line 219)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.01%  │  0x00007fc40b24a6bb:   mov    %r11,%r8
   0.15%  │  0x00007fc40b24a6be:   and    $0xfffffffffc000000,%r8      ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@386 (line 220)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
          │  0x00007fc40b24a6c5:   sub    %r8,%rcx                     ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@387 (line 220)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.02%  │  0x00007fc40b24a6c8:   mov    %rcx,0x50(%r10)              ;*lastore {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@443 (line 231)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.01%  │  0x00007fc40b24a6cc:   mov    %rdx,%r8
   0.16%  │  0x00007fc40b24a6cf:   and    $0xfffffffffc000000,%r8      ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@45 (line 175)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.00%  │  0x00007fc40b24a6d6:   mov    0x18(%rsp),%r9
   0.03%  │  0x00007fc40b24a6db:   sub    %r8,%r9                      ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@46 (line 175)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.02%  │  0x00007fc40b24a6de:   sar    $0x20,%rdx                   ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@76 (line 179)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.12%  │  0x00007fc40b24a6e2:   add    %rdx,%r9                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@77 (line 179)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.00%  │  0x00007fc40b24a6e5:   sar    $0x1a,%r11                   ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@377 (line 219)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.02%  │  0x00007fc40b24a6e9:   add    %r11,%r9                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@394 (line 221)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.01%  │  0x00007fc40b24a6ec:   mov    %r9,0x58(%r10)               ;*lastore {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@449 (line 232)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.16%  │  0x00007fc40b24a6f0:   mov    0x40(%rsp),%rbp
   0.00%  │  0x00007fc40b24a6f5:   add    $0x48,%rsp
   0.01%  │  0x00007fc40b24a6f9:   nopl   0x0(%rax)
   0.02%  │  0x00007fc40b24a700:   cmp    0x450(%r15),%rsp             ;   {poll_return}
          │  0x00007fc40b24a707:   ja     0x00007fc40b24a78b
   0.14%  │  0x00007fc40b24a70d:   ret    
          ↘  0x00007fc40b24a70e:   mov    0xc0(%rsp),%r10
             0x00007fc40b24a716:   mov    0xb8(%rsp),%r11
             0x00007fc40b24a71e:   mov    0xb0(%rsp),%rax
             0x00007fc40b24a726:   mov    0xa8(%rsp),%r13
             0x00007fc40b24a72e:   mov    0xa0(%rsp),%r14
             0x00007fc40b24a736:   mov    0x98(%rsp),%rbp
             0x00007fc40b24a73e:   mov    0x80(%rsp),%rbx
             0x00007fc40b24a746:   mov    0x88(%rsp),%rdi
             0x00007fc40b24a74e:   mov    0x78(%rsp),%r9
             0x00007fc40b24a753:   mov    0x70(%rsp),%r8
....................................................................................................
  16.50%  <total for region 1>

....[Hottest Region 2]..............................................................................
jvmci, level 4, sun.security.util.math.intpoly.IntegerPolynomialP256::mult, version 2, compile id 1067 

            # parm2:    r8:r8     = &apos;[J&apos;
            #           [sp+0x130]  (sp of caller)
            0x00007fc40b24c2a0:   mov    0x8(%rsi),%r10d
            0x00007fc40b24c2a4:   movabs $0x7fc38f000000,%r12
            0x00007fc40b24c2ae:   add    %r12,%r10
            0x00007fc40b24c2b1:   xor    %r12,%r12
            0x00007fc40b24c2b4:   cmp    %r10,%rax
            0x00007fc40b24c2b7:   jne    0x00007fc40ac2f080           ;   {runtime_call ic_miss_stub}
            0x00007fc40b24c2bd:   data16 xchg %ax,%ax
          [Verified Entry Point]
   1.79%    0x00007fc40b24c2c0:   mov    %eax,-0x14000(%rsp)
   1.72%    0x00007fc40b24c2c7:   sub    $0x128,%rsp
   0.00%    0x00007fc40b24c2ce:   xchg   %ax,%ax
            0x00007fc40b24c2d0:   cmpl   $0x1,0x20(%r15)
            0x00007fc40b24c2d8:   jne    0x00007fc40b24ca91
   0.12%    0x00007fc40b24c2de:   mov    %rbp,0x120(%rsp)             ; ImmutableOopMap {rcx=Oop rdx=Oop rsi=Oop r8=Oop }
                                                                      ;*aload_1 {reexecute=1 rethrow=0 return_oop=0}
                                                                      ; - (reexecute) sun.security.util.math.intpoly.IntegerPolynomialP256::mult@0 (line 303)
   0.11%    0x00007fc40b24c2e6:   mov    0xc(%rdx),%r9d               ; implicit exception: dispatches to 0x00007fc40b24caba
                                                                      ; ImmutableOopMap {rcx=Oop rdx=Oop rsi=Oop r8=Oop }
                                                                      ;*aload_1 {reexecute=1 rethrow=0 return_oop=0}
                                                                      ; - (reexecute) sun.security.util.math.intpoly.IntegerPolynomialP256::mult@0 (line 303)
   0.00%    0x00007fc40b24c2ea:   mov    0xc(%rcx),%edi               ; implicit exception: dispatches to 0x00007fc40b24cadd
            0x00007fc40b24c2ed:   cmp    $0xa,%r9d
            0x00007fc40b24c2f1:   jb     0x00007fc40b24ca6e           ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@2 (line 303)
   0.00%    0x00007fc40b24c2f7:   cmp    $0xa,%edi
            0x00007fc40b24c2fa:   jb     0x00007fc40b24ca6e           ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@5 (line 303)
   0.11%    0x00007fc40b24c300:   mov    %r8,0x88(%rsp)
            0x00007fc40b24c308:   mov    %rsi,0x80(%rsp)
   0.47%    0x00007fc40b24c310:   mov    0x10(%rdx),%r9               ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@2 (line 303)
   0.00%    0x00007fc40b24c314:   mov    0x18(%rdx),%rdi              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@18 (line 304)
   0.00%    0x00007fc40b24c318:   mov    0x20(%rdx),%r10              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@43 (line 305)
   0.00%    0x00007fc40b24c31c:   mov    0x28(%rdx),%r11              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@76 (line 306)
   0.16%    0x00007fc40b24c320:   mov    0x30(%rdx),%rbx              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@117 (line 307)
   0.01%    0x00007fc40b24c324:   mov    0x38(%rdx),%rax              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@166 (line 308)
   0.01%    0x00007fc40b24c328:   mov    0x40(%rdx),%rbp              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@225 (line 309)
            0x00007fc40b24c32c:   mov    0x48(%rdx),%r13              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@294 (line 310)
   0.11%    0x00007fc40b24c330:   mov    0x50(%rdx),%r14              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@373 (line 311)
   0.00%    0x00007fc40b24c334:   mov    0x58(%rdx),%rdx              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@462 (line 312)
   0.00%    0x00007fc40b24c338:   mov    0x58(%rcx),%r8               ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@387 (line 312)
   0.01%    0x00007fc40b24c33c:   mov    0x50(%rcx),%rsi              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@308 (line 311)
   0.14%    0x00007fc40b24c340:   mov    %rdx,0x110(%rsp)
   0.14%    0x00007fc40b24c348:   mov    0x48(%rcx),%rdx              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@239 (line 310)
   0.00%    0x00007fc40b24c34c:   mov    %r8,0x108(%rsp)
   0.00%    0x00007fc40b24c354:   mov    0x40(%rcx),%r8               ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@180 (line 309)
            0x00007fc40b24c358:   mov    %r14,0x100(%rsp)
   0.12%    0x00007fc40b24c360:   mov    0x38(%rcx),%r14              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@130 (line 308)
            0x00007fc40b24c364:   mov    %rsi,0xf8(%rsp)
   0.01%    0x00007fc40b24c36c:   mov    0x30(%rcx),%rsi              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@89 (line 307)
            0x00007fc40b24c370:   mov    %r13,0xf0(%rsp)
   0.30%    0x00007fc40b24c378:   mov    0x28(%rcx),%r13              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@56 (line 306)
   0.01%    0x00007fc40b24c37c:   mov    %rdx,0xe8(%rsp)
   0.01%    0x00007fc40b24c384:   mov    0x20(%rcx),%rdx              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@31 (line 305)
   0.00%    0x00007fc40b24c388:   mov    %rbp,0xe0(%rsp)
   0.11%    0x00007fc40b24c390:   mov    0x18(%rcx),%rbp              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@14 (line 304)
   0.01%    0x00007fc40b24c394:   mov    0x10(%rcx),%rcx              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@5 (line 303)
   0.01%    0x00007fc40b24c398:   mov    %r8,0xd8(%rsp)
            0x00007fc40b24c3a0:   mov    %r9,%r8
   0.10%    0x00007fc40b24c3a3:   imul   %rcx,%r8                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@6 (line 303)
   0.00%    0x00007fc40b24c3a7:   mov    %r8,0xd0(%rsp)
   0.04%    0x00007fc40b24c3af:   mov    %rbp,%r8
            0x00007fc40b24c3b2:   imul   %r9,%r8                      ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@15 (line 304)
   0.07%    0x00007fc40b24c3b6:   mov    %rax,0xc8(%rsp)              ;   {no_reloc}
   0.07%    0x00007fc40b24c3be:   mov    %rdi,%rax
   0.00%    0x00007fc40b24c3c1:   imul   %rcx,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@22 (line 304)
            0x00007fc40b24c3c5:   add    %rax,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@23 (line 304)
   0.08%    0x00007fc40b24c3c8:   mov    %rdx,%rax
   0.05%    0x00007fc40b24c3cb:   imul   %r9,%rax                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@32 (line 305)
   0.00%    0x00007fc40b24c3cf:   mov    %r8,0xc0(%rsp)
   0.07%    0x00007fc40b24c3d7:   mov    %rdi,%r8
   0.00%    0x00007fc40b24c3da:   imul   %rbp,%r8                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@39 (line 305)
   0.05%    0x00007fc40b24c3de:   add    %r8,%rax                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@40 (line 305)
   0.01%    0x00007fc40b24c3e1:   mov    %r10,%r8
   0.08%    0x00007fc40b24c3e4:   imul   %rcx,%r8                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@47 (line 305)
   0.01%    0x00007fc40b24c3e8:   add    %r8,%rax                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@48 (line 305)
   0.05%    0x00007fc40b24c3eb:   mov    %r13,%r8
   0.01%    0x00007fc40b24c3ee:   imul   %r9,%r8                      ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@57 (line 306)
   0.12%    0x00007fc40b24c3f2:   mov    %rax,0xb8(%rsp)
   0.01%    0x00007fc40b24c3fa:   mov    %rdi,%rax
   0.04%    0x00007fc40b24c3fd:   imul   %rdx,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@64 (line 306)
   0.01%    0x00007fc40b24c401:   add    %rax,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@65 (line 306)
   0.07%    0x00007fc40b24c404:   mov    %r10,%rax
   0.03%    0x00007fc40b24c407:   imul   %rbp,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@72 (line 306)
   0.05%    0x00007fc40b24c40b:   add    %rax,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@73 (line 306)
   0.14%    0x00007fc40b24c40e:   mov    %r11,%rax
   0.00%    0x00007fc40b24c411:   imul   %rcx,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@80 (line 306)
   0.03%    0x00007fc40b24c415:   add    %r8,%rax                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@81 (line 306)
   0.10%    0x00007fc40b24c418:   mov    %rsi,%r8
   0.05%    0x00007fc40b24c41b:   imul   %r9,%r8                      ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@90 (line 307)
   0.00%    0x00007fc40b24c41f:   mov    %rax,0xb0(%rsp)
   0.13%    0x00007fc40b24c427:   mov    %rdi,%rax
   0.02%    0x00007fc40b24c42a:   imul   %r13,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@97 (line 307)
   0.00%    0x00007fc40b24c42e:   add    %rax,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@98 (line 307)
   0.02%    0x00007fc40b24c431:   mov    %r10,%rax
   0.09%    0x00007fc40b24c434:   imul   %rdx,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@105 (line 307)
   0.01%    0x00007fc40b24c438:   add    %rax,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@106 (line 307)
   0.04%    0x00007fc40b24c43b:   mov    %r11,%rax
            0x00007fc40b24c43e:   imul   %rbp,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@113 (line 307)
   0.10%    0x00007fc40b24c442:   add    %rax,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@114 (line 307)
   0.03%    0x00007fc40b24c445:   mov    %rbx,%rax
   0.02%    0x00007fc40b24c448:   imul   %rcx,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@121 (line 307)
   0.00%    0x00007fc40b24c44c:   add    %r8,%rax                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@122 (line 307)
   0.20%    0x00007fc40b24c44f:   mov    %r14,%r8
   0.01%    0x00007fc40b24c452:   imul   %r9,%r8                      ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@131 (line 308)
   0.01%    0x00007fc40b24c456:   mov    %rax,0xa8(%rsp)
   0.10%    0x00007fc40b24c45e:   mov    %rdi,%rax
   0.04%    0x00007fc40b24c461:   imul   %rsi,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@138 (line 308)
   0.00%    0x00007fc40b24c465:   add    %rax,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@139 (line 308)
            0x00007fc40b24c468:   mov    %r10,%rax
   0.08%    0x00007fc40b24c46b:   imul   %r13,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@146 (line 308)
   0.04%    0x00007fc40b24c46f:   add    %rax,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@147 (line 308)
            0x00007fc40b24c472:   mov    %r11,%rax
   0.00%    0x00007fc40b24c475:   imul   %rdx,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@154 (line 308)
   0.11%    0x00007fc40b24c479:   add    %rax,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@155 (line 308)
   0.02%    0x00007fc40b24c47c:   mov    %rbx,%rax
            0x00007fc40b24c47f:   imul   %rbp,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@162 (line 308)
   0.00%    0x00007fc40b24c483:   add    %rax,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@163 (line 308)
   0.10%    0x00007fc40b24c486:   mov    0xc8(%rsp),%rax
   0.03%    0x00007fc40b24c48e:   imul   %rcx,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@170 (line 308)
            0x00007fc40b24c492:   add    %r8,%rax                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@171 (line 308)
   0.00%    0x00007fc40b24c495:   mov    0xd8(%rsp),%r8
   0.08%    0x00007fc40b24c49d:   imul   %r9,%r8                      ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@181 (line 309)
   0.03%    0x00007fc40b24c4a1:   mov    %rax,0xa0(%rsp)
   0.14%    0x00007fc40b24c4a9:   mov    %rdi,%rax
            0x00007fc40b24c4ac:   imul   %r14,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@188 (line 309)
            0x00007fc40b24c4b0:   add    %rax,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@189 (line 309)
   0.00%    0x00007fc40b24c4b3:   mov    %r10,%rax                    ;   {no_reloc}
   0.13%    0x00007fc40b24c4b6:   imul   %rsi,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@196 (line 309)
   0.00%    0x00007fc40b24c4ba:   add    %rax,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@197 (line 309)
   0.19%    0x00007fc40b24c4bd:   mov    %r11,%rax
            0x00007fc40b24c4c0:   imul   %r13,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@204 (line 309)
   0.03%    0x00007fc40b24c4c4:   add    %rax,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@205 (line 309)
   0.00%    0x00007fc40b24c4c7:   mov    %rbx,%rax
   0.07%    0x00007fc40b24c4ca:   imul   %rdx,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@212 (line 309)
   0.00%    0x00007fc40b24c4ce:   add    %rax,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@213 (line 309)
   0.02%    0x00007fc40b24c4d1:   mov    0xc8(%rsp),%rax
            0x00007fc40b24c4d9:   imul   %rbp,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@220 (line 309)
   0.09%    0x00007fc40b24c4dd:   add    %rax,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@221 (line 309)
   0.00%    0x00007fc40b24c4e0:   mov    0xe0(%rsp),%rax
   0.03%    0x00007fc40b24c4e8:   imul   %rcx,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@229 (line 309)
   0.00%    0x00007fc40b24c4ec:   add    %r8,%rax                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@230 (line 309)
   0.09%    0x00007fc40b24c4ef:   mov    0xe8(%rsp),%r8
            0x00007fc40b24c4f7:   imul   %r9,%r8                      ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@240 (line 310)
   0.04%    0x00007fc40b24c4fb:   mov    %rax,0x98(%rsp)
   0.21%    0x00007fc40b24c503:   mov    %rdi,%rax
            0x00007fc40b24c506:   imul   0xd8(%rsp),%rax              ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@248 (line 310)
   0.00%    0x00007fc40b24c50f:   add    %rax,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@249 (line 310)
   0.00%    0x00007fc40b24c512:   mov    %r10,%rax
   0.12%    0x00007fc40b24c515:   imul   %r14,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@256 (line 310)
            0x00007fc40b24c519:   add    %rax,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@257 (line 310)
            0x00007fc40b24c51c:   mov    %r11,%rax
            0x00007fc40b24c51f:   imul   %rsi,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@264 (line 310)
   0.12%    0x00007fc40b24c523:   add    %rax,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@265 (line 310)
            0x00007fc40b24c526:   mov    %rbx,%rax
   0.00%    0x00007fc40b24c529:   imul   %r13,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@272 (line 310)
            0x00007fc40b24c52d:   add    %rax,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@273 (line 310)
   0.24%    0x00007fc40b24c530:   mov    0xc8(%rsp),%rax
   0.00%    0x00007fc40b24c538:   imul   %rdx,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@280 (line 310)
            0x00007fc40b24c53c:   add    %rax,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@281 (line 310)
            0x00007fc40b24c53f:   mov    0xe0(%rsp),%rax
   0.14%    0x00007fc40b24c547:   imul   %rbp,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@289 (line 310)
            0x00007fc40b24c54b:   add    %rax,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@290 (line 310)
            0x00007fc40b24c54e:   mov    0xf0(%rsp),%rax
            0x00007fc40b24c556:   imul   %rcx,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@298 (line 310)
   0.13%    0x00007fc40b24c55a:   add    %r8,%rax                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@299 (line 310)
            0x00007fc40b24c55d:   mov    0xf8(%rsp),%r8
            0x00007fc40b24c565:   imul   %r9,%r8                      ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@309 (line 311)
            0x00007fc40b24c569:   mov    %rax,0x90(%rsp)
   0.26%    0x00007fc40b24c571:   mov    %rdi,%rax
            0x00007fc40b24c574:   imul   0xe8(%rsp),%rax              ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@317 (line 311)
   0.00%    0x00007fc40b24c57d:   add    %rax,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@318 (line 311)
            0x00007fc40b24c580:   mov    %r10,%rax
   0.13%    0x00007fc40b24c583:   imul   0xd8(%rsp),%rax              ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@326 (line 311)
            0x00007fc40b24c58c:   add    %rax,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@327 (line 311)
   0.00%    0x00007fc40b24c58f:   mov    %r11,%rax
            0x00007fc40b24c592:   imul   %r14,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@334 (line 311)
   0.16%    0x00007fc40b24c596:   add    %rax,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@335 (line 311)
            0x00007fc40b24c599:   mov    %rbx,%rax
            0x00007fc40b24c59c:   imul   %rsi,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@342 (line 311)
            0x00007fc40b24c5a0:   add    %rax,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@343 (line 311)
   0.21%    0x00007fc40b24c5a3:   mov    0xc8(%rsp),%rax
            0x00007fc40b24c5ab:   imul   %r13,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@350 (line 311)
            0x00007fc40b24c5af:   add    %rax,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@351 (line 311)
            0x00007fc40b24c5b2:   mov    0xe0(%rsp),%rax              ;   {no_reloc}
   0.14%    0x00007fc40b24c5ba:   imul   %rdx,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@359 (line 311)
            0x00007fc40b24c5be:   add    %rax,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@360 (line 311)
            0x00007fc40b24c5c1:   mov    0xf0(%rsp),%rax
            0x00007fc40b24c5c9:   imul   %rbp,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@368 (line 311)
   0.13%    0x00007fc40b24c5cd:   add    %rax,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@369 (line 311)
   0.00%    0x00007fc40b24c5d0:   mov    0x100(%rsp),%rax
            0x00007fc40b24c5d8:   imul   %rcx,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@377 (line 311)
            0x00007fc40b24c5dc:   add    %r8,%rax                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@378 (line 311)
   0.12%    0x00007fc40b24c5df:   mov    0x108(%rsp),%r8
            0x00007fc40b24c5e7:   imul   %r9,%r8                      ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@388 (line 312)
            0x00007fc40b24c5eb:   mov    %rdi,%r9
            0x00007fc40b24c5ee:   imul   0xf8(%rsp),%r9               ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@396 (line 312)
   0.10%    0x00007fc40b24c5f7:   add    %r9,%r8                      ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@397 (line 312)
   0.06%    0x00007fc40b24c5fa:   mov    %r10,%r9
            0x00007fc40b24c5fd:   imul   0xe8(%rsp),%r9               ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@405 (line 312)
            0x00007fc40b24c606:   add    %r9,%r8                      ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@406 (line 312)
   0.15%    0x00007fc40b24c609:   mov    %r11,%r9
            0x00007fc40b24c60c:   imul   0xd8(%rsp),%r9               ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@414 (line 312)
   0.05%    0x00007fc40b24c615:   add    %r9,%r8                      ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@415 (line 312)
   0.13%    0x00007fc40b24c618:   mov    %rbx,%r9
            0x00007fc40b24c61b:   imul   %r14,%r9                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@422 (line 312)
            0x00007fc40b24c61f:   add    %r9,%r8                      ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@423 (line 312)
   0.26%    0x00007fc40b24c622:   mov    0xc8(%rsp),%r9
            0x00007fc40b24c62a:   imul   %rsi,%r9                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@430 (line 312)
            0x00007fc40b24c62e:   add    %r9,%r8                      ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@431 (line 312)
            0x00007fc40b24c631:   mov    0xe0(%rsp),%r9
   0.12%    0x00007fc40b24c639:   imul   %r13,%r9                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@439 (line 312)
            0x00007fc40b24c63d:   add    %r9,%r8                      ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@440 (line 312)
            0x00007fc40b24c640:   mov    0xf0(%rsp),%r9
            0x00007fc40b24c648:   imul   %rdx,%r9                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@448 (line 312)
   0.13%    0x00007fc40b24c64c:   add    %r9,%r8                      ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@449 (line 312)
            0x00007fc40b24c64f:   mov    0x100(%rsp),%r9
            0x00007fc40b24c657:   imul   %rbp,%r9                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@457 (line 312)
            0x00007fc40b24c65b:   add    %r9,%r8                      ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@458 (line 312)
   0.14%    0x00007fc40b24c65e:   imul   0x110(%rsp),%rcx             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@466 (line 312)
            0x00007fc40b24c667:   add    %rcx,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@467 (line 312)
   0.14%    0x00007fc40b24c66a:   imul   0x108(%rsp),%rdi             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@477 (line 313)
   0.00%    0x00007fc40b24c673:   mov    %r10,%rcx
            0x00007fc40b24c676:   imul   0xf8(%rsp),%rcx              ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@485 (line 313)
   0.06%    0x00007fc40b24c67f:   add    %rcx,%rdi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@486 (line 313)
   0.13%    0x00007fc40b24c682:   mov    %r11,%rcx
            0x00007fc40b24c685:   imul   0xe8(%rsp),%rcx              ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@494 (line 313)
            0x00007fc40b24c68e:   add    %rcx,%rdi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@495 (line 313)
   0.13%    0x00007fc40b24c691:   mov    %rbx,%rcx
            0x00007fc40b24c694:   imul   0xd8(%rsp),%rcx              ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@503 (line 313)
            0x00007fc40b24c69d:   add    %rcx,%rdi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@504 (line 313)
   0.13%    0x00007fc40b24c6a0:   mov    0xc8(%rsp),%rcx
            0x00007fc40b24c6a8:   imul   %r14,%rcx                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@511 (line 313)
            0x00007fc40b24c6ac:   add    %rcx,%rdi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@512 (line 313)
   0.12%    0x00007fc40b24c6af:   mov    0xe0(%rsp),%rcx              ;   {no_reloc}
            0x00007fc40b24c6b7:   imul   %rsi,%rcx                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@520 (line 313)
            0x00007fc40b24c6bb:   add    %rcx,%rdi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@521 (line 313)
   0.11%    0x00007fc40b24c6be:   mov    0xf0(%rsp),%rcx
            0x00007fc40b24c6c6:   imul   %r13,%rcx                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@529 (line 313)
            0x00007fc40b24c6ca:   add    %rcx,%rdi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@530 (line 313)
   0.13%    0x00007fc40b24c6cd:   mov    0x100(%rsp),%rcx
            0x00007fc40b24c6d5:   imul   %rdx,%rcx                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@538 (line 313)
            0x00007fc40b24c6d9:   add    %rcx,%rdi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@539 (line 313)
   0.12%    0x00007fc40b24c6dc:   mov    0x110(%rsp),%rcx
            0x00007fc40b24c6e4:   imul   %rbp,%rcx                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@547 (line 313)
            0x00007fc40b24c6e8:   mov    %rdi,%rbp
            0x00007fc40b24c6eb:   add    %rcx,%rbp                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@548 (line 313)
   0.16%    0x00007fc40b24c6ee:   imul   0x108(%rsp),%r10             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@558 (line 314)
            0x00007fc40b24c6f7:   mov    %r11,%rcx
            0x00007fc40b24c6fa:   imul   0xf8(%rsp),%rcx              ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@566 (line 314)
   0.15%    0x00007fc40b24c703:   add    %rcx,%r10                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@567 (line 314)
   0.13%    0x00007fc40b24c706:   mov    %rbx,%rcx
            0x00007fc40b24c709:   imul   0xe8(%rsp),%rcx              ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@575 (line 314)
            0x00007fc40b24c712:   add    %rcx,%r10                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@576 (line 314)
   0.15%    0x00007fc40b24c715:   mov    0xc8(%rsp),%rcx
            0x00007fc40b24c71d:   imul   0xd8(%rsp),%rcx              ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@584 (line 314)
            0x00007fc40b24c726:   add    %rcx,%r10                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@585 (line 314)
   0.14%    0x00007fc40b24c729:   mov    0xe0(%rsp),%rcx
            0x00007fc40b24c731:   imul   %r14,%rcx                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@593 (line 314)
            0x00007fc40b24c735:   add    %rcx,%r10                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@594 (line 314)
   0.11%    0x00007fc40b24c738:   mov    0xf0(%rsp),%rcx
            0x00007fc40b24c740:   imul   %rsi,%rcx                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@602 (line 314)
            0x00007fc40b24c744:   add    %rcx,%r10                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@603 (line 314)
   0.13%    0x00007fc40b24c747:   mov    0x100(%rsp),%rcx
            0x00007fc40b24c74f:   imul   %r13,%rcx                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@611 (line 314)
   0.05%    0x00007fc40b24c753:   add    %rcx,%r10                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@612 (line 314)
   0.12%    0x00007fc40b24c756:   imul   0x110(%rsp),%rdx             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@620 (line 314)
            0x00007fc40b24c75f:   add    %rdx,%r10                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@621 (line 314)
   0.12%    0x00007fc40b24c762:   imul   0x108(%rsp),%r11             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@631 (line 315)
            0x00007fc40b24c76b:   mov    %rbx,%rdx
            0x00007fc40b24c76e:   imul   0xf8(%rsp),%rdx              ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@639 (line 315)
   0.08%    0x00007fc40b24c777:   add    %rdx,%r11                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@640 (line 315)
   0.13%    0x00007fc40b24c77a:   mov    0xc8(%rsp),%rdx
            0x00007fc40b24c782:   imul   0xe8(%rsp),%rdx              ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@648 (line 315)
            0x00007fc40b24c78b:   add    %rdx,%r11                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@649 (line 315)
   0.13%    0x00007fc40b24c78e:   mov    0xe0(%rsp),%rdx
            0x00007fc40b24c796:   imul   0xd8(%rsp),%rdx              ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@658 (line 315)
            0x00007fc40b24c79f:   add    %rdx,%r11                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@659 (line 315)
   0.15%    0x00007fc40b24c7a2:   mov    0xf0(%rsp),%rdx
            0x00007fc40b24c7aa:   imul   %r14,%rdx                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@667 (line 315)
            0x00007fc40b24c7ae:   add    %rdx,%r11                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@668 (line 315)
   0.14%    0x00007fc40b24c7b1:   mov    0x100(%rsp),%rdx             ;   {no_reloc}
            0x00007fc40b24c7b9:   imul   %rsi,%rdx                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@676 (line 315)
            0x00007fc40b24c7bd:   add    %rdx,%r11                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@677 (line 315)
   0.12%    0x00007fc40b24c7c0:   mov    0x110(%rsp),%rdx
            0x00007fc40b24c7c8:   imul   %r13,%rdx                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@685 (line 315)
            0x00007fc40b24c7cc:   add    %rdx,%r11                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@686 (line 315)
   0.11%    0x00007fc40b24c7cf:   imul   0x108(%rsp),%rbx             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@696 (line 316)
            0x00007fc40b24c7d8:   mov    0xc8(%rsp),%rdx
            0x00007fc40b24c7e0:   imul   0xf8(%rsp),%rdx              ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@704 (line 316)
   0.13%    0x00007fc40b24c7e9:   add    %rdx,%rbx                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@705 (line 316)
   0.12%    0x00007fc40b24c7ec:   mov    0xe0(%rsp),%rdx
            0x00007fc40b24c7f4:   imul   0xe8(%rsp),%rdx              ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@714 (line 316)
            0x00007fc40b24c7fd:   add    %rdx,%rbx                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@715 (line 316)
   0.14%    0x00007fc40b24c800:   mov    0xf0(%rsp),%r13
            0x00007fc40b24c808:   imul   0xd8(%rsp),%r13              ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@724 (line 316)
   0.03%    0x00007fc40b24c811:   add    %r13,%rbx                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@725 (line 316)
   0.12%    0x00007fc40b24c814:   mov    0x100(%rsp),%rdx
            0x00007fc40b24c81c:   imul   %r14,%rdx                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@733 (line 316)
            0x00007fc40b24c820:   add    %rdx,%rbx                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@734 (line 316)
   0.14%    0x00007fc40b24c823:   mov    0x110(%rsp),%rdx
            0x00007fc40b24c82b:   imul   %rsi,%rdx                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@742 (line 316)
            0x00007fc40b24c82f:   add    %rdx,%rbx                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@743 (line 316)
   0.12%    0x00007fc40b24c832:   mov    0xc8(%rsp),%rsi
            0x00007fc40b24c83a:   imul   0x108(%rsp),%rsi             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@753 (line 317)
            0x00007fc40b24c843:   mov    0xe0(%rsp),%rdx
            0x00007fc40b24c84b:   imul   0xf8(%rsp),%rdx              ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@762 (line 317)
   0.12%    0x00007fc40b24c854:   add    %rdx,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@763 (line 317)
   0.10%    0x00007fc40b24c857:   mov    0xf0(%rsp),%r13
            0x00007fc40b24c85f:   imul   0xe8(%rsp),%r13              ;*lmul {reexecute=0 rethrow=0 return_oop=0}
....................................................................................................
  16.28%  <total for region 2>

....[Hottest Regions]...............................................................................
  16.50%      jvmci, level 4  sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce, version 2, compile id 1059 
  16.28%      jvmci, level 4  sun.security.util.math.intpoly.IntegerPolynomialP256::mult, version 2, compile id 1067 
   7.67%      jvmci, level 4  sun.security.util.math.intpoly.P256OrderField::carryReduce0, version 3, compile id 1169 
   4.29%      jvmci, level 4  sun.security.ec.point.ProjectivePoint$Mutable::conditionalSet, version 2, compile id 1095 
   3.58%      jvmci, level 4  sun.security.ec.point.ProjectivePoint$Mutable::conditionalSet, version 2, compile id 1095 
   2.97%      jvmci, level 4  sun.security.ec.point.ProjectivePoint$Mutable::conditionalSet, version 2, compile id 1095 
   2.90%      jvmci, level 4  sun.security.ec.point.ProjectivePoint$Mutable::conditionalSet, version 2, compile id 1095 
   2.76%      jvmci, level 4  sun.security.ec.point.ProjectivePoint$Mutable::conditionalSet, version 2, compile id 1095 
   2.33%      jvmci, level 4  sun.security.util.math.IntegerModuloP$MultiplicativeInverser$Secp256R1::inverse, version 3, compile id 1336 
   2.24%        runtime stub  StubRoutines::jlong_disjoint_arraycopy 
   2.13%      jvmci, level 4  sun.security.util.math.intpoly.P256OrderField::square, version 2, compile id 1412 
   2.05%      jvmci, level 4  sun.security.util.math.intpoly.IntegerPolynomialP256::mult, version 2, compile id 1067 
   2.01%      jvmci, level 4  sun.security.ec.ECOperations$PointMultiplier::lookup, version 2, compile id 1133 
   1.54%      jvmci, level 4  sun.security.ec.ECOperations::setSum, version 2, compile id 1206 
   0.98%      jvmci, level 4  sun.security.ec.ECOperations::setSum, version 2, compile id 1206 
   0.98%      jvmci, level 4  sun.security.util.math.intpoly.P256OrderField::carryReduce, version 3, compile id 1159 
   0.89%      jvmci, level 4  sun.security.util.math.IntegerModuloP$MultiplicativeInverser$Secp256R1Field::inverse, version 3, compile id 1400 
   0.85%              kernel  [unknown] 
   0.69%      jvmci, level 4  sun.security.ec.ECOperations::setSum, version 2, compile id 1206 
   0.62%      jvmci, level 4  sun.security.util.math.intpoly.IntegerPolynomialP256::mult, version 2, compile id 1067 
  25.76%  <...other 1153 warm regions...>
....................................................................................................
 100.00%  <totals>

....[Hottest Methods (after inlining)]..............................................................
  20.13%      jvmci, level 4  sun.security.util.math.intpoly.IntegerPolynomialP256::mult, version 2, compile id 1067 
  16.76%      jvmci, level 4  sun.security.ec.ECOperations::setSum, version 2, compile id 1206 
  16.54%      jvmci, level 4  sun.security.ec.point.ProjectivePoint$Mutable::conditionalSet, version 2, compile id 1095 
  16.50%      jvmci, level 4  sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce, version 2, compile id 1059 
   7.67%      jvmci, level 4  sun.security.util.math.intpoly.P256OrderField::carryReduce0, version 3, compile id 1169 
   3.44%      jvmci, level 4  sun.security.ec.ECOperations::setDouble, version 2, compile id 1205 
   2.73%      jvmci, level 4  sun.security.util.math.IntegerModuloP$MultiplicativeInverser$Secp256R1::inverse, version 3, compile id 1336 
   2.24%        runtime stub  StubRoutines::jlong_disjoint_arraycopy 
   2.14%      jvmci, level 4  sun.security.util.math.intpoly.P256OrderField::square, version 2, compile id 1412 
   2.04%              kernel  [unknown] 
   2.01%      jvmci, level 4  sun.security.ec.ECOperations$PointMultiplier::lookup, version 2, compile id 1133 
   1.93%      jvmci, level 4  sun.security.util.math.IntegerModuloP$MultiplicativeInverser$Secp256R1Field::inverse, version 3, compile id 1400 
   0.98%      jvmci, level 4  sun.security.util.math.intpoly.P256OrderField::mult, version 2, compile id 1272 
   0.98%      jvmci, level 4  sun.security.util.math.intpoly.P256OrderField::carryReduce, version 3, compile id 1159 
   0.43%      jvmci, level 4  sun.security.ec.ECOperations$PointMultiplier$Secp256R1GeneratorMultiplier::pointMultiply, version 4, compile id 1449 
   0.38%      jvmci, level 4  sun.security.util.math.intpoly.IntegerPolynomialP256::reduce, version 2, compile id 1144 
   0.31%      jvmci, level 4  sun.security.util.math.intpoly.IntegerPolynomial::evaluate, version 2, compile id 1450 
   0.28%                      <unknown> 
   0.25%      jvmci, level 4  sun.security.util.math.intpoly.IntegerPolynomial::encode, version 2, compile id 1474 
   0.22%      jvmci, level 4  java.math.BigInteger::shiftRight, version 2, compile id 1300 
   2.05%  <...other 133 warm methods...>
....................................................................................................
 100.00%  <totals>

....[Distribution by Source]........................................................................
  95.03%      jvmci, level 4
   2.30%        runtime stub
   2.04%              kernel
   0.28%                    
   0.16%           libjvm.so
   0.09%        libc-2.31.so
   0.03%  libpthread-2.31.so
   0.02%              [vdso]
   0.02%      hsdis-amd64.so
   0.01%         interpreter
   0.01%          ld-2.31.so
   0.00%         c1, level 3
....................................................................................................
 100.00%  <totals>



# JMH version: 1.37
# VM version: JDK 21, OpenJDK 64-Bit Server VM, 21+35-jvmci-23.1-b15
# VM invoker: /home/gogu/bench_jdks/graalvm-community-openjdk-21+35.1/bin/java
# VM options: -XX:ThreadPriorityPolicy=1 -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCIProduct -XX:-UnlockExperimentalVMOptions -Xms4g -Xmx4g -XX:+AlwaysPreTouch
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.performance.benchmarks.api.signature.DsaEcSignatureBenchmark.sign
# Parameters: (algorithm = secp256r1, messageLength = 512)

# Run progress: 8.33% complete, ETA 00:21:32
# Fork: 1 of 1
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 1189.182 us/op
# Warmup Iteration   2: 321.936 us/op
# Warmup Iteration   3: 316.106 us/op
# Warmup Iteration   4: 315.824 us/op
# Warmup Iteration   5: 315.968 us/op
Iteration   1: 316.264 us/op
Iteration   2: 316.333 us/op
Iteration   3: 316.526 us/op
Iteration   4: 317.179 us/op
Iteration   5: 316.963 us/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "com.ionutbalosin.jvm.performance.benchmarks.api.signature.DsaEcSignatureBenchmark.sign":
  316.653 ±(99.9%) 1.544 us/op [Average]
  (min, avg, max) = (316.264, 316.653, 317.179), stdev = 0.401
  CI (99.9%): [315.109, 318.197] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.signature.DsaEcSignatureBenchmark.sign:asm":
PrintAssembly processed: 412906 total address lines.
Perf output processed (skipped 62.319 seconds):
 Column 1: cycles (51333 events)

Hottest code regions (>10.00% "cycles" events):
 Event counts are percents of total event count.

....[Hottest Region 1]..............................................................................
jvmci, level 4, sun.security.util.math.intpoly.IntegerPolynomialP256::mult, version 2, compile id 1064 

            # parm2:    r8:r8     = &apos;[J&apos;
            #           [sp+0x130]  (sp of caller)
            0x00007fef7724bba0:   mov    0x8(%rsi),%r10d
            0x00007fef7724bba4:   movabs $0x7feefb000000,%r12
            0x00007fef7724bbae:   add    %r12,%r10
            0x00007fef7724bbb1:   xor    %r12,%r12
            0x00007fef7724bbb4:   cmp    %r10,%rax
            0x00007fef7724bbb7:   jne    0x00007fef76c2f080           ;   {runtime_call ic_miss_stub}
            0x00007fef7724bbbd:   data16 xchg %ax,%ax
          [Verified Entry Point]
   1.80%    0x00007fef7724bbc0:   mov    %eax,-0x14000(%rsp)
   1.72%    0x00007fef7724bbc7:   sub    $0x128,%rsp
   0.00%    0x00007fef7724bbce:   xchg   %ax,%ax
            0x00007fef7724bbd0:   cmpl   $0x1,0x20(%r15)
            0x00007fef7724bbd8:   jne    0x00007fef7724c391
   0.10%    0x00007fef7724bbde:   mov    %rbp,0x120(%rsp)             ; ImmutableOopMap {rcx=Oop rdx=Oop rsi=Oop r8=Oop }
                                                                      ;*aload_1 {reexecute=1 rethrow=0 return_oop=0}
                                                                      ; - (reexecute) sun.security.util.math.intpoly.IntegerPolynomialP256::mult@0 (line 303)
   0.12%    0x00007fef7724bbe6:   mov    0xc(%rdx),%r9d               ; implicit exception: dispatches to 0x00007fef7724c3ba
                                                                      ; ImmutableOopMap {rcx=Oop rdx=Oop rsi=Oop r8=Oop }
                                                                      ;*aload_1 {reexecute=1 rethrow=0 return_oop=0}
                                                                      ; - (reexecute) sun.security.util.math.intpoly.IntegerPolynomialP256::mult@0 (line 303)
   0.00%    0x00007fef7724bbea:   mov    0xc(%rcx),%edi               ; implicit exception: dispatches to 0x00007fef7724c3dd
            0x00007fef7724bbed:   cmp    $0xa,%r9d
            0x00007fef7724bbf1:   jb     0x00007fef7724c36e           ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@2 (line 303)
            0x00007fef7724bbf7:   cmp    $0xa,%edi
            0x00007fef7724bbfa:   jb     0x00007fef7724c36e           ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@5 (line 303)
   0.11%    0x00007fef7724bc00:   mov    %r8,0x88(%rsp)
            0x00007fef7724bc08:   mov    %rsi,0x80(%rsp)
   0.50%    0x00007fef7724bc10:   mov    0x10(%rdx),%r9               ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@2 (line 303)
   0.00%    0x00007fef7724bc14:   mov    0x18(%rdx),%rdi              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@18 (line 304)
   0.01%    0x00007fef7724bc18:   mov    0x20(%rdx),%r10              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@43 (line 305)
   0.01%    0x00007fef7724bc1c:   mov    0x28(%rdx),%r11              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@76 (line 306)
   0.15%    0x00007fef7724bc20:   mov    0x30(%rdx),%rbx              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@117 (line 307)
   0.01%    0x00007fef7724bc24:   mov    0x38(%rdx),%rax              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@166 (line 308)
   0.01%    0x00007fef7724bc28:   mov    0x40(%rdx),%rbp              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@225 (line 309)
   0.00%    0x00007fef7724bc2c:   mov    0x48(%rdx),%r13              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@294 (line 310)
   0.13%    0x00007fef7724bc30:   mov    0x50(%rdx),%r14              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@373 (line 311)
   0.01%    0x00007fef7724bc34:   mov    0x58(%rdx),%rdx              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@462 (line 312)
   0.01%    0x00007fef7724bc38:   mov    0x58(%rcx),%r8               ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@387 (line 312)
            0x00007fef7724bc3c:   mov    0x50(%rcx),%rsi              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@308 (line 311)
   0.12%    0x00007fef7724bc40:   mov    %rdx,0x110(%rsp)
   0.12%    0x00007fef7724bc48:   mov    0x48(%rcx),%rdx              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@239 (line 310)
   0.01%    0x00007fef7724bc4c:   mov    %r8,0x108(%rsp)
   0.00%    0x00007fef7724bc54:   mov    0x40(%rcx),%r8               ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@180 (line 309)
   0.01%    0x00007fef7724bc58:   mov    %r14,0x100(%rsp)
   0.12%    0x00007fef7724bc60:   mov    0x38(%rcx),%r14              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@130 (line 308)
   0.01%    0x00007fef7724bc64:   mov    %rsi,0xf8(%rsp)
   0.00%    0x00007fef7724bc6c:   mov    0x30(%rcx),%rsi              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@89 (line 307)
   0.01%    0x00007fef7724bc70:   mov    %r13,0xf0(%rsp)
   0.37%    0x00007fef7724bc78:   mov    0x28(%rcx),%r13              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@56 (line 306)
            0x00007fef7724bc7c:   mov    %rdx,0xe8(%rsp)
   0.00%    0x00007fef7724bc84:   mov    0x20(%rcx),%rdx              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@31 (line 305)
   0.00%    0x00007fef7724bc88:   mov    %rbp,0xe0(%rsp)
   0.13%    0x00007fef7724bc90:   mov    0x18(%rcx),%rbp              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@14 (line 304)
   0.01%    0x00007fef7724bc94:   mov    0x10(%rcx),%rcx              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@5 (line 303)
   0.01%    0x00007fef7724bc98:   mov    %r8,0xd8(%rsp)
            0x00007fef7724bca0:   mov    %r9,%r8
   0.14%    0x00007fef7724bca3:   imul   %rcx,%r8                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@6 (line 303)
   0.00%    0x00007fef7724bca7:   mov    %r8,0xd0(%rsp)
   0.04%    0x00007fef7724bcaf:   mov    %rbp,%r8
   0.00%    0x00007fef7724bcb2:   imul   %r9,%r8                      ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@15 (line 304)
   0.05%    0x00007fef7724bcb6:   mov    %rax,0xc8(%rsp)              ;   {no_reloc}
   0.10%    0x00007fef7724bcbe:   mov    %rdi,%rax
   0.01%    0x00007fef7724bcc1:   imul   %rcx,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@22 (line 304)
            0x00007fef7724bcc5:   add    %rax,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@23 (line 304)
   0.07%    0x00007fef7724bcc8:   mov    %rdx,%rax
   0.04%    0x00007fef7724bccb:   imul   %r9,%rax                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@32 (line 305)
   0.01%    0x00007fef7724bccf:   mov    %r8,0xc0(%rsp)
   0.07%    0x00007fef7724bcd7:   mov    %rdi,%r8
   0.01%    0x00007fef7724bcda:   imul   %rbp,%r8                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@39 (line 305)
   0.03%    0x00007fef7724bcde:   add    %r8,%rax                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@40 (line 305)
            0x00007fef7724bce1:   mov    %r10,%r8
   0.06%    0x00007fef7724bce4:   imul   %rcx,%r8                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@47 (line 305)
   0.00%    0x00007fef7724bce8:   add    %r8,%rax                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@48 (line 305)
   0.04%    0x00007fef7724bceb:   mov    %r13,%r8
   0.00%    0x00007fef7724bcee:   imul   %r9,%r8                      ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@57 (line 306)
   0.13%    0x00007fef7724bcf2:   mov    %rax,0xb8(%rsp)
   0.03%    0x00007fef7724bcfa:   mov    %rdi,%rax
   0.04%    0x00007fef7724bcfd:   imul   %rdx,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@64 (line 306)
   0.01%    0x00007fef7724bd01:   add    %rax,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@65 (line 306)
   0.07%    0x00007fef7724bd04:   mov    %r10,%rax
   0.02%    0x00007fef7724bd07:   imul   %rbp,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@72 (line 306)
   0.05%    0x00007fef7724bd0b:   add    %rax,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@73 (line 306)
   0.11%    0x00007fef7724bd0e:   mov    %r11,%rax
   0.00%    0x00007fef7724bd11:   imul   %rcx,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@80 (line 306)
   0.02%    0x00007fef7724bd15:   add    %r8,%rax                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@81 (line 306)
   0.09%    0x00007fef7724bd18:   mov    %rsi,%r8
   0.06%    0x00007fef7724bd1b:   imul   %r9,%r8                      ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@90 (line 307)
   0.00%    0x00007fef7724bd1f:   mov    %rax,0xb0(%rsp)
   0.14%    0x00007fef7724bd27:   mov    %rdi,%rax
   0.01%    0x00007fef7724bd2a:   imul   %r13,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@97 (line 307)
   0.00%    0x00007fef7724bd2e:   add    %rax,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@98 (line 307)
   0.01%    0x00007fef7724bd31:   mov    %r10,%rax
   0.09%    0x00007fef7724bd34:   imul   %rdx,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@105 (line 307)
   0.02%    0x00007fef7724bd38:   add    %rax,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@106 (line 307)
   0.05%    0x00007fef7724bd3b:   mov    %r11,%rax
            0x00007fef7724bd3e:   imul   %rbp,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@113 (line 307)
   0.09%    0x00007fef7724bd42:   add    %rax,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@114 (line 307)
   0.02%    0x00007fef7724bd45:   mov    %rbx,%rax
   0.04%    0x00007fef7724bd48:   imul   %rcx,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@121 (line 307)
   0.00%    0x00007fef7724bd4c:   add    %r8,%rax                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@122 (line 307)
   0.21%    0x00007fef7724bd4f:   mov    %r14,%r8
   0.01%    0x00007fef7724bd52:   imul   %r9,%r8                      ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@131 (line 308)
   0.03%    0x00007fef7724bd56:   mov    %rax,0xa8(%rsp)
   0.09%    0x00007fef7724bd5e:   mov    %rdi,%rax
   0.02%    0x00007fef7724bd61:   imul   %rsi,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@138 (line 308)
            0x00007fef7724bd65:   add    %rax,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@139 (line 308)
   0.00%    0x00007fef7724bd68:   mov    %r10,%rax
   0.11%    0x00007fef7724bd6b:   imul   %r13,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@146 (line 308)
   0.03%    0x00007fef7724bd6f:   add    %rax,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@147 (line 308)
   0.00%    0x00007fef7724bd72:   mov    %r11,%rax
            0x00007fef7724bd75:   imul   %rdx,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@154 (line 308)
   0.11%    0x00007fef7724bd79:   add    %rax,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@155 (line 308)
   0.04%    0x00007fef7724bd7c:   mov    %rbx,%rax
            0x00007fef7724bd7f:   imul   %rbp,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@162 (line 308)
   0.00%    0x00007fef7724bd83:   add    %rax,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@163 (line 308)
   0.10%    0x00007fef7724bd86:   mov    0xc8(%rsp),%rax
   0.04%    0x00007fef7724bd8e:   imul   %rcx,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@170 (line 308)
            0x00007fef7724bd92:   add    %r8,%rax                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@171 (line 308)
   0.00%    0x00007fef7724bd95:   mov    0xd8(%rsp),%r8
   0.07%    0x00007fef7724bd9d:   imul   %r9,%r8                      ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@181 (line 309)
   0.02%    0x00007fef7724bda1:   mov    %rax,0xa0(%rsp)
   0.12%    0x00007fef7724bda9:   mov    %rdi,%rax
   0.00%    0x00007fef7724bdac:   imul   %r14,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@188 (line 309)
   0.00%    0x00007fef7724bdb0:   add    %rax,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@189 (line 309)
   0.00%    0x00007fef7724bdb3:   mov    %r10,%rax                    ;   {no_reloc}
   0.11%    0x00007fef7724bdb6:   imul   %rsi,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@196 (line 309)
            0x00007fef7724bdba:   add    %rax,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@197 (line 309)
   0.21%    0x00007fef7724bdbd:   mov    %r11,%rax
            0x00007fef7724bdc0:   imul   %r13,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@204 (line 309)
   0.04%    0x00007fef7724bdc4:   add    %rax,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@205 (line 309)
            0x00007fef7724bdc7:   mov    %rbx,%rax
   0.07%    0x00007fef7724bdca:   imul   %rdx,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@212 (line 309)
            0x00007fef7724bdce:   add    %rax,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@213 (line 309)
   0.04%    0x00007fef7724bdd1:   mov    0xc8(%rsp),%rax
            0x00007fef7724bdd9:   imul   %rbp,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@220 (line 309)
   0.08%    0x00007fef7724bddd:   add    %rax,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@221 (line 309)
            0x00007fef7724bde0:   mov    0xe0(%rsp),%rax
   0.03%    0x00007fef7724bde8:   imul   %rcx,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@229 (line 309)
   0.00%    0x00007fef7724bdec:   add    %r8,%rax                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@230 (line 309)
   0.08%    0x00007fef7724bdef:   mov    0xe8(%rsp),%r8
            0x00007fef7724bdf7:   imul   %r9,%r8                      ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@240 (line 310)
   0.03%    0x00007fef7724bdfb:   mov    %rax,0x98(%rsp)
   0.24%    0x00007fef7724be03:   mov    %rdi,%rax
            0x00007fef7724be06:   imul   0xd8(%rsp),%rax              ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@248 (line 310)
            0x00007fef7724be0f:   add    %rax,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@249 (line 310)
            0x00007fef7724be12:   mov    %r10,%rax
   0.14%    0x00007fef7724be15:   imul   %r14,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@256 (line 310)
            0x00007fef7724be19:   add    %rax,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@257 (line 310)
            0x00007fef7724be1c:   mov    %r11,%rax
            0x00007fef7724be1f:   imul   %rsi,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@264 (line 310)
   0.14%    0x00007fef7724be23:   add    %rax,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@265 (line 310)
   0.00%    0x00007fef7724be26:   mov    %rbx,%rax
   0.00%    0x00007fef7724be29:   imul   %r13,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@272 (line 310)
            0x00007fef7724be2d:   add    %rax,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@273 (line 310)
   0.28%    0x00007fef7724be30:   mov    0xc8(%rsp),%rax
            0x00007fef7724be38:   imul   %rdx,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@280 (line 310)
            0x00007fef7724be3c:   add    %rax,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@281 (line 310)
   0.00%    0x00007fef7724be3f:   mov    0xe0(%rsp),%rax
   0.14%    0x00007fef7724be47:   imul   %rbp,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@289 (line 310)
   0.00%    0x00007fef7724be4b:   add    %rax,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@290 (line 310)
   0.00%    0x00007fef7724be4e:   mov    0xf0(%rsp),%rax
            0x00007fef7724be56:   imul   %rcx,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@298 (line 310)
   0.11%    0x00007fef7724be5a:   add    %r8,%rax                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@299 (line 310)
   0.00%    0x00007fef7724be5d:   mov    0xf8(%rsp),%r8
            0x00007fef7724be65:   imul   %r9,%r8                      ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@309 (line 311)
   0.00%    0x00007fef7724be69:   mov    %rax,0x90(%rsp)
   0.26%    0x00007fef7724be71:   mov    %rdi,%rax
            0x00007fef7724be74:   imul   0xe8(%rsp),%rax              ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@317 (line 311)
            0x00007fef7724be7d:   add    %rax,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@318 (line 311)
            0x00007fef7724be80:   mov    %r10,%rax
   0.09%    0x00007fef7724be83:   imul   0xd8(%rsp),%rax              ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@326 (line 311)
            0x00007fef7724be8c:   add    %rax,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@327 (line 311)
            0x00007fef7724be8f:   mov    %r11,%rax
            0x00007fef7724be92:   imul   %r14,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@334 (line 311)
   0.14%    0x00007fef7724be96:   add    %rax,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@335 (line 311)
            0x00007fef7724be99:   mov    %rbx,%rax
            0x00007fef7724be9c:   imul   %rsi,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@342 (line 311)
            0x00007fef7724bea0:   add    %rax,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@343 (line 311)
   0.20%    0x00007fef7724bea3:   mov    0xc8(%rsp),%rax
            0x00007fef7724beab:   imul   %r13,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@350 (line 311)
   0.00%    0x00007fef7724beaf:   add    %rax,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@351 (line 311)
   0.00%    0x00007fef7724beb2:   mov    0xe0(%rsp),%rax              ;   {no_reloc}
   0.13%    0x00007fef7724beba:   imul   %rdx,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@359 (line 311)
            0x00007fef7724bebe:   add    %rax,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@360 (line 311)
            0x00007fef7724bec1:   mov    0xf0(%rsp),%rax
            0x00007fef7724bec9:   imul   %rbp,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@368 (line 311)
   0.11%    0x00007fef7724becd:   add    %rax,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@369 (line 311)
            0x00007fef7724bed0:   mov    0x100(%rsp),%rax
            0x00007fef7724bed8:   imul   %rcx,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@377 (line 311)
            0x00007fef7724bedc:   add    %r8,%rax                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@378 (line 311)
   0.10%    0x00007fef7724bedf:   mov    0x108(%rsp),%r8
            0x00007fef7724bee7:   imul   %r9,%r8                      ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@388 (line 312)
            0x00007fef7724beeb:   mov    %rdi,%r9
            0x00007fef7724beee:   imul   0xf8(%rsp),%r9               ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@396 (line 312)
   0.13%    0x00007fef7724bef7:   add    %r9,%r8                      ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@397 (line 312)
   0.07%    0x00007fef7724befa:   mov    %r10,%r9
            0x00007fef7724befd:   imul   0xe8(%rsp),%r9               ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@405 (line 312)
            0x00007fef7724bf06:   add    %r9,%r8                      ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@406 (line 312)
   0.12%    0x00007fef7724bf09:   mov    %r11,%r9
            0x00007fef7724bf0c:   imul   0xd8(%rsp),%r9               ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@414 (line 312)
   0.08%    0x00007fef7724bf15:   add    %r9,%r8                      ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@415 (line 312)
   0.11%    0x00007fef7724bf18:   mov    %rbx,%r9
            0x00007fef7724bf1b:   imul   %r14,%r9                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@422 (line 312)
            0x00007fef7724bf1f:   add    %r9,%r8                      ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@423 (line 312)
   0.25%    0x00007fef7724bf22:   mov    0xc8(%rsp),%r9
            0x00007fef7724bf2a:   imul   %rsi,%r9                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@430 (line 312)
            0x00007fef7724bf2e:   add    %r9,%r8                      ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@431 (line 312)
            0x00007fef7724bf31:   mov    0xe0(%rsp),%r9
   0.14%    0x00007fef7724bf39:   imul   %r13,%r9                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@439 (line 312)
            0x00007fef7724bf3d:   add    %r9,%r8                      ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@440 (line 312)
            0x00007fef7724bf40:   mov    0xf0(%rsp),%r9
            0x00007fef7724bf48:   imul   %rdx,%r9                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@448 (line 312)
   0.11%    0x00007fef7724bf4c:   add    %r9,%r8                      ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@449 (line 312)
            0x00007fef7724bf4f:   mov    0x100(%rsp),%r9
            0x00007fef7724bf57:   imul   %rbp,%r9                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@457 (line 312)
            0x00007fef7724bf5b:   add    %r9,%r8                      ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@458 (line 312)
   0.13%    0x00007fef7724bf5e:   imul   0x110(%rsp),%rcx             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@466 (line 312)
            0x00007fef7724bf67:   add    %rcx,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@467 (line 312)
   0.13%    0x00007fef7724bf6a:   imul   0x108(%rsp),%rdi             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@477 (line 313)
   0.01%    0x00007fef7724bf73:   mov    %r10,%rcx
            0x00007fef7724bf76:   imul   0xf8(%rsp),%rcx              ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@485 (line 313)
   0.07%    0x00007fef7724bf7f:   add    %rcx,%rdi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@486 (line 313)
   0.15%    0x00007fef7724bf82:   mov    %r11,%rcx
            0x00007fef7724bf85:   imul   0xe8(%rsp),%rcx              ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@494 (line 313)
            0x00007fef7724bf8e:   add    %rcx,%rdi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@495 (line 313)
   0.15%    0x00007fef7724bf91:   mov    %rbx,%rcx
            0x00007fef7724bf94:   imul   0xd8(%rsp),%rcx              ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@503 (line 313)
            0x00007fef7724bf9d:   add    %rcx,%rdi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@504 (line 313)
   0.13%    0x00007fef7724bfa0:   mov    0xc8(%rsp),%rcx
            0x00007fef7724bfa8:   imul   %r14,%rcx                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@511 (line 313)
            0x00007fef7724bfac:   add    %rcx,%rdi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@512 (line 313)
   0.11%    0x00007fef7724bfaf:   mov    0xe0(%rsp),%rcx              ;   {no_reloc}
            0x00007fef7724bfb7:   imul   %rsi,%rcx                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@520 (line 313)
            0x00007fef7724bfbb:   add    %rcx,%rdi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@521 (line 313)
   0.11%    0x00007fef7724bfbe:   mov    0xf0(%rsp),%rcx
            0x00007fef7724bfc6:   imul   %r13,%rcx                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@529 (line 313)
            0x00007fef7724bfca:   add    %rcx,%rdi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@530 (line 313)
   0.11%    0x00007fef7724bfcd:   mov    0x100(%rsp),%rcx
            0x00007fef7724bfd5:   imul   %rdx,%rcx                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@538 (line 313)
            0x00007fef7724bfd9:   add    %rcx,%rdi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@539 (line 313)
   0.11%    0x00007fef7724bfdc:   mov    0x110(%rsp),%rcx
            0x00007fef7724bfe4:   imul   %rbp,%rcx                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@547 (line 313)
            0x00007fef7724bfe8:   mov    %rdi,%rbp
            0x00007fef7724bfeb:   add    %rcx,%rbp                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@548 (line 313)
   0.11%    0x00007fef7724bfee:   imul   0x108(%rsp),%r10             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@558 (line 314)
            0x00007fef7724bff7:   mov    %r11,%rcx
            0x00007fef7724bffa:   imul   0xf8(%rsp),%rcx              ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@566 (line 314)
   0.12%    0x00007fef7724c003:   add    %rcx,%r10                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@567 (line 314)
   0.11%    0x00007fef7724c006:   mov    %rbx,%rcx
            0x00007fef7724c009:   imul   0xe8(%rsp),%rcx              ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@575 (line 314)
            0x00007fef7724c012:   add    %rcx,%r10                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@576 (line 314)
   0.12%    0x00007fef7724c015:   mov    0xc8(%rsp),%rcx
            0x00007fef7724c01d:   imul   0xd8(%rsp),%rcx              ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@584 (line 314)
            0x00007fef7724c026:   add    %rcx,%r10                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@585 (line 314)
   0.14%    0x00007fef7724c029:   mov    0xe0(%rsp),%rcx
            0x00007fef7724c031:   imul   %r14,%rcx                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@593 (line 314)
            0x00007fef7724c035:   add    %rcx,%r10                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@594 (line 314)
   0.14%    0x00007fef7724c038:   mov    0xf0(%rsp),%rcx
            0x00007fef7724c040:   imul   %rsi,%rcx                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@602 (line 314)
            0x00007fef7724c044:   add    %rcx,%r10                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@603 (line 314)
   0.13%    0x00007fef7724c047:   mov    0x100(%rsp),%rcx
            0x00007fef7724c04f:   imul   %r13,%rcx                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@611 (line 314)
   0.05%    0x00007fef7724c053:   add    %rcx,%r10                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@612 (line 314)
   0.12%    0x00007fef7724c056:   imul   0x110(%rsp),%rdx             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@620 (line 314)
            0x00007fef7724c05f:   add    %rdx,%r10                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@621 (line 314)
   0.12%    0x00007fef7724c062:   imul   0x108(%rsp),%r11             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@631 (line 315)
            0x00007fef7724c06b:   mov    %rbx,%rdx
            0x00007fef7724c06e:   imul   0xf8(%rsp),%rdx              ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@639 (line 315)
   0.07%    0x00007fef7724c077:   add    %rdx,%r11                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@640 (line 315)
   0.14%    0x00007fef7724c07a:   mov    0xc8(%rsp),%rdx
            0x00007fef7724c082:   imul   0xe8(%rsp),%rdx              ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@648 (line 315)
            0x00007fef7724c08b:   add    %rdx,%r11                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@649 (line 315)
   0.13%    0x00007fef7724c08e:   mov    0xe0(%rsp),%rdx
            0x00007fef7724c096:   imul   0xd8(%rsp),%rdx              ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@658 (line 315)
            0x00007fef7724c09f:   add    %rdx,%r11                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@659 (line 315)
   0.12%    0x00007fef7724c0a2:   mov    0xf0(%rsp),%rdx
            0x00007fef7724c0aa:   imul   %r14,%rdx                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@667 (line 315)
            0x00007fef7724c0ae:   add    %rdx,%r11                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@668 (line 315)
   0.10%    0x00007fef7724c0b1:   mov    0x100(%rsp),%rdx             ;   {no_reloc}
            0x00007fef7724c0b9:   imul   %rsi,%rdx                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@676 (line 315)
            0x00007fef7724c0bd:   add    %rdx,%r11                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@677 (line 315)
   0.11%    0x00007fef7724c0c0:   mov    0x110(%rsp),%rdx
            0x00007fef7724c0c8:   imul   %r13,%rdx                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@685 (line 315)
            0x00007fef7724c0cc:   add    %rdx,%r11                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@686 (line 315)
   0.14%    0x00007fef7724c0cf:   imul   0x108(%rsp),%rbx             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@696 (line 316)
            0x00007fef7724c0d8:   mov    0xc8(%rsp),%rdx
            0x00007fef7724c0e0:   imul   0xf8(%rsp),%rdx              ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@704 (line 316)
   0.13%    0x00007fef7724c0e9:   add    %rdx,%rbx                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@705 (line 316)
   0.16%    0x00007fef7724c0ec:   mov    0xe0(%rsp),%rdx
            0x00007fef7724c0f4:   imul   0xe8(%rsp),%rdx              ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@714 (line 316)
            0x00007fef7724c0fd:   add    %rdx,%rbx                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@715 (line 316)
   0.13%    0x00007fef7724c100:   mov    0xf0(%rsp),%r13
            0x00007fef7724c108:   imul   0xd8(%rsp),%r13              ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@724 (line 316)
   0.03%    0x00007fef7724c111:   add    %r13,%rbx                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@725 (line 316)
   0.12%    0x00007fef7724c114:   mov    0x100(%rsp),%rdx
            0x00007fef7724c11c:   imul   %r14,%rdx                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@733 (line 316)
            0x00007fef7724c120:   add    %rdx,%rbx                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@734 (line 316)
   0.13%    0x00007fef7724c123:   mov    0x110(%rsp),%rdx
            0x00007fef7724c12b:   imul   %rsi,%rdx                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@742 (line 316)
            0x00007fef7724c12f:   add    %rdx,%rbx                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@743 (line 316)
   0.12%    0x00007fef7724c132:   mov    0xc8(%rsp),%rsi
            0x00007fef7724c13a:   imul   0x108(%rsp),%rsi             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@753 (line 317)
            0x00007fef7724c143:   mov    0xe0(%rsp),%rdx
            0x00007fef7724c14b:   imul   0xf8(%rsp),%rdx              ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@762 (line 317)
   0.11%    0x00007fef7724c154:   add    %rdx,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@763 (line 317)
   0.13%    0x00007fef7724c157:   mov    0xf0(%rsp),%r13
            0x00007fef7724c15f:   imul   0xe8(%rsp),%r13              ;*lmul {reexecute=0 rethrow=0 return_oop=0}
....................................................................................................
  16.23%  <total for region 1>

....[Hottest Region 2]..............................................................................
jvmci, level 4, sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce, version 2, compile id 1057 

             # parm18:   [sp+0xb8]   = long
             # parm19:   [sp+0xc0]   = long
             0x00007fef772499a0:   mov    0x8(%rsi),%r10d
             0x00007fef772499a4:   movabs $0x7feefb000000,%r12
             0x00007fef772499ae:   add    %r12,%r10
             0x00007fef772499b1:   xor    %r12,%r12
             0x00007fef772499b4:   cmp    %r10,%rax
             0x00007fef772499b7:   jne    0x00007fef76c2f080           ;   {runtime_call ic_miss_stub}
             0x00007fef772499bd:   data16 xchg %ax,%ax
           [Verified Entry Point]
   0.14%     0x00007fef772499c0:   mov    %eax,-0x14000(%rsp)
   0.15%     0x00007fef772499c7:   sub    $0x48,%rsp
             0x00007fef772499cb:   nop
             0x00007fef772499cc:   cmpl   $0x0,0x20(%r15)
             0x00007fef772499d4:   jne    0x00007fef7724a07b
   0.15%     0x00007fef772499da:   mov    %rbp,0x40(%rsp)
   0.05%     0x00007fef772499df:   mov    %r8,0x30(%rsp)
   0.12%     0x00007fef772499e4:   mov    %r9,0x28(%rsp)
   0.17%     0x00007fef772499e9:   mov    %rdi,0x20(%rsp)              ; ImmutableOopMap {rdx=Oop rsi=Oop }
                                                                       ;*lconst_0 {reexecute=1 rethrow=0 return_oop=0}
                                                                       ; - (reexecute) sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@0 (line 81)
   0.12%     0x00007fef772499ee:   cmpl   $0xa,0xc(%rdx)               ; implicit exception: dispatches to 0x00007fef7724a09f
   0.02%  ╭  0x00007fef772499f2:   jb     0x00007fef7724a00e           ;*lastore {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@400 (line 223)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.00%  │  0x00007fef772499f8:   mov    0xc0(%rsp),%r10
   0.04%  │  0x00007fef77249a00:   mov    0xb8(%rsp),%r11
   0.11%  │  0x00007fef77249a08:   mov    0xb0(%rsp),%rax
          │  0x00007fef77249a10:   mov    0xa8(%rsp),%r13
   0.01%  │  0x00007fef77249a18:   mov    0xa0(%rsp),%r14
   0.04%  │  0x00007fef77249a20:   mov    0x98(%rsp),%rbp
   0.14%  │  0x00007fef77249a28:   mov    0x90(%rsp),%rsi
          │  0x00007fef77249a30:   mov    0x80(%rsp),%rbx
   0.00%  │  0x00007fef77249a38:   mov    %rdx,(%rsp)
   0.03%  │  0x00007fef77249a3c:   mov    0x88(%rsp),%rdi
   0.12%  │  0x00007fef77249a44:   mov    0x78(%rsp),%r9
          │  0x00007fef77249a49:   mov    0x70(%rsp),%r8
          │  0x00007fef77249a4e:   mov    %r10,%rdx
   0.04%  │  0x00007fef77249a51:   sar    $0x6,%rdx                    ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@23 (line 84)
   0.08%  │  0x00007fef77249a55:   add    %rdx,%r11                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@24 (line 84)
          │  0x00007fef77249a58:   mov    %r11,%rdx
          │  0x00007fef77249a5b:   shl    $0x16,%rdx                   ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@151 (line 96)
   0.06%  │  0x00007fef77249a5f:   and    $0x3ffffff,%rdx              ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@155 (line 96)
   0.11%  │  0x00007fef77249a66:   sub    %rdx,%rbx                    ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@156 (line 96)
          │  0x00007fef77249a69:   mov    %r10,%rdx
          │  0x00007fef77249a6c:   shl    $0x14,%rdx                   ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@9 (line 83)
   0.06%  │  0x00007fef77249a70:   and    $0x3ffffff,%rdx              ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@13 (line 83)
   0.12%  │  0x00007fef77249a77:   add    %rdx,%rax                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@14 (line 83)
   0.00%  │  0x00007fef77249a7a:   mov    %r10,%rdx
   0.00%  │  0x00007fef77249a7d:   sar    $0xc,%rdx                    ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@47 (line 86)
   0.04%  │  0x00007fef77249a81:   sub    %rdx,%rax                    ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@48 (line 86)
   0.11%  │  0x00007fef77249a84:   mov    %r11,%rdx
   0.00%  │  0x00007fef77249a87:   sar    $0x6,%rdx                    ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@117 (line 93)
   0.00%  │  0x00007fef77249a8b:   add    %rdx,%rax                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@118 (line 93)
   0.03%  │  0x00007fef77249a8e:   mov    %rax,%rdx
   0.13%  │  0x00007fef77249a91:   sar    $0x4,%rdx                    ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@258 (line 106)
   0.00%  │  0x00007fef77249a95:   sub    %rdx,%rbx                    ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@259 (line 106)
   0.01%  │  0x00007fef77249a98:   mov    %rax,%rdx
   0.03%  │  0x00007fef77249a9b:   shl    $0xe,%rdx                    ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@221 (line 103)
   0.10%  │  0x00007fef77249a9f:   and    $0x3ffffff,%rdx              ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@225 (line 103)
          │  0x00007fef77249aa6:   sub    %rdx,%rbp                    ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@226 (line 103)
   0.00%  │  0x00007fef77249aa9:   mov    %r10,%rdx
   0.05%  │  0x00007fef77249aac:   shl    $0xe,%rdx                    ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@33 (line 85)
   0.16%  │  0x00007fef77249ab0:   and    $0x3ffffff,%rdx              ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@37 (line 85)
          │                                                            ;   {no_reloc}
   0.01%  │  0x00007fef77249ab7:   sub    %rdx,%r13                    ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@38 (line 85)
          │  0x00007fef77249aba:   mov    %r11,%rdx
   0.03%  │  0x00007fef77249abd:   shl    $0x14,%rdx                   ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@103 (line 92)
   0.10%  │  0x00007fef77249ac1:   and    $0x3ffffff,%rdx              ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@107 (line 92)
          │  0x00007fef77249ac8:   add    %rdx,%r13                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@108 (line 92)
   0.00%  │  0x00007fef77249acb:   mov    %r11,%rdx
   0.05%  │  0x00007fef77249ace:   sar    $0xc,%rdx                    ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@141 (line 95)
   0.14%  │  0x00007fef77249ad2:   sub    %rdx,%r13                    ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@142 (line 95)
          │  0x00007fef77249ad5:   mov    %rax,%rdx
   0.00%  │  0x00007fef77249ad8:   sar    $0x6,%rdx                    ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@211 (line 102)
   0.04%  │  0x00007fef77249adc:   add    %rdx,%r13                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@212 (line 102)
   0.11%  │  0x00007fef77249adf:   mov    %r13,%rdx
   0.00%  │  0x00007fef77249ae2:   shl    $0x14,%rdx                   ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@291 (line 110)
          │  0x00007fef77249ae6:   and    $0x3ffffff,%rdx              ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@295 (line 110)
   0.05%  │  0x00007fef77249aed:   add    %rdx,%rbp                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@296 (line 110)
   0.11%  │  0x00007fef77249af0:   mov    %r13,%rdx
          │  0x00007fef77249af3:   sar    $0xc,%rdx                    ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@329 (line 113)
   0.01%  │  0x00007fef77249af7:   sub    %rdx,%rbp                    ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@330 (line 113)
   0.04%  │  0x00007fef77249afa:   mov    %r11,%rdx
   0.10%  │  0x00007fef77249afd:   shl    $0xe,%rdx                    ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@127 (line 94)
          │  0x00007fef77249b01:   and    $0x3ffffff,%rdx              ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@131 (line 94)
   0.00%  │  0x00007fef77249b08:   sub    %rdx,%r14                    ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@132 (line 94)
   0.04%  │  0x00007fef77249b0b:   mov    %rax,%rdx
   0.10%  │  0x00007fef77249b0e:   shl    $0x14,%rdx                   ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@197 (line 101)
   0.00%  │  0x00007fef77249b12:   and    $0x3ffffff,%rdx              ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@201 (line 101)
   0.00%  │  0x00007fef77249b19:   add    %rdx,%r14                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@202 (line 101)
   0.04%  │  0x00007fef77249b1c:   mov    %rax,%rdx
   0.11%  │  0x00007fef77249b1f:   sar    $0xc,%rdx                    ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@235 (line 104)
          │  0x00007fef77249b23:   sub    %rdx,%r14                    ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@236 (line 104)
   0.00%  │  0x00007fef77249b26:   mov    %r13,%rdx
   0.04%  │  0x00007fef77249b29:   sar    $0x6,%rdx                    ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@305 (line 111)
   0.12%  │  0x00007fef77249b2d:   add    %rdx,%r14                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@306 (line 111)
   0.00%  │  0x00007fef77249b30:   mov    %r14,%rdx
   0.01%  │  0x00007fef77249b33:   sar    $0x6,%rdx                    ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@399 (line 120)
   0.05%  │  0x00007fef77249b37:   add    %rdx,%rbp                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@400 (line 120)
   0.11%  │  0x00007fef77249b3a:   mov    %rbp,%rdx
   0.00%  │  0x00007fef77249b3d:   shl    $0xe,%rdx                    ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@503 (line 130)
   0.01%  │  0x00007fef77249b41:   and    $0x3ffffff,%rdx              ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@507 (line 130)
   0.04%  │  0x00007fef77249b48:   sub    %rdx,%rbx                    ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@508 (line 130)
   0.12%  │  0x00007fef77249b4b:   mov    %r10,%rdx
          │  0x00007fef77249b4e:   sar    $0x4,%rdx                    ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@70 (line 88)
          │  0x00007fef77249b52:   sub    %rdx,%rsi                    ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@71 (line 88)
   0.03%  │  0x00007fef77249b55:   mov    %r13,%rdx
   0.11%  │  0x00007fef77249b58:   shl    $0xe,%rdx                    ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@315 (line 112)
          │  0x00007fef77249b5c:   and    $0x3ffffff,%rdx              ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@319 (line 112)
          │  0x00007fef77249b63:   sub    %rdx,%rsi                    ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@320 (line 112)
   0.03%  │  0x00007fef77249b66:   mov    %r14,%rdx
   0.14%  │  0x00007fef77249b69:   shl    $0x14,%rdx                   ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@385 (line 119)
          │  0x00007fef77249b6d:   and    $0x3ffffff,%rdx              ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@389 (line 119)
   0.00%  │  0x00007fef77249b74:   add    %rdx,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@390 (line 119)
   0.03%  │  0x00007fef77249b77:   mov    %r14,%rdx
   0.15%  │  0x00007fef77249b7a:   sar    $0xc,%rdx                    ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@423 (line 122)
          │  0x00007fef77249b7e:   sub    %rdx,%rsi                    ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@424 (line 122)
   0.00%  │  0x00007fef77249b81:   mov    %rbp,%rdx
   0.02%  │  0x00007fef77249b84:   sar    $0x6,%rdx                    ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@493 (line 129)
   0.11%  │  0x00007fef77249b88:   add    %rdx,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@494 (line 129)
          │  0x00007fef77249b8b:   mov    %rsi,%rdx
   0.01%  │  0x00007fef77249b8e:   shl    $0x14,%rdx                   ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@573 (line 137)
   0.03%  │  0x00007fef77249b92:   and    $0x3ffffff,%rdx              ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@577 (line 137)
   0.11%  │  0x00007fef77249b99:   add    %rdx,%rbx                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@578 (line 137)
   0.00%  │  0x00007fef77249b9c:   mov    %rsi,%rdx
   0.00%  │  0x00007fef77249b9f:   sar    $0xc,%rdx                    ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@611 (line 140)
   0.03%  │  0x00007fef77249ba3:   sub    %rdx,%rbx                    ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@612 (line 140)
   0.11%  │  0x00007fef77249ba6:   mov    %r10,%rdx
   0.00%  │  0x00007fef77249ba9:   shl    $0x16,%rdx                   ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@57 (line 87)
   0.01%  │  0x00007fef77249bad:   and    $0x3ffffff,%rdx              ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@61 (line 87)
   0.02%  │  0x00007fef77249bb4:   sub    %rdx,%rdi                    ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@62 (line 87)
          │                                                            ;   {no_reloc}
   0.11%  │  0x00007fef77249bb7:   mov    %r11,%rdx
   0.00%  │  0x00007fef77249bba:   sar    $0x4,%rdx                    ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@164 (line 97)
   0.00%  │  0x00007fef77249bbe:   sub    %rdx,%rdi                    ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@165 (line 97)
   0.02%  │  0x00007fef77249bc1:   mov    %r14,%rdx
   0.14%  │  0x00007fef77249bc4:   shl    $0xe,%rdx                    ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@409 (line 121)
   0.00%  │  0x00007fef77249bc8:   and    $0x3ffffff,%rdx              ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@413 (line 121)
   0.01%  │  0x00007fef77249bcf:   sub    %rdx,%rdi                    ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@414 (line 121)
   0.03%  │  0x00007fef77249bd2:   mov    %rbp,%rdx
   0.14%  │  0x00007fef77249bd5:   shl    $0x14,%rdx                   ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@479 (line 128)
   0.00%  │  0x00007fef77249bd9:   and    $0x3ffffff,%rdx              ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@483 (line 128)
   0.00%  │  0x00007fef77249be0:   add    %rdx,%rdi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@484 (line 128)
   0.02%  │  0x00007fef77249be3:   mov    %rbp,%rdx
   0.12%  │  0x00007fef77249be6:   sar    $0xc,%rdx                    ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@517 (line 131)
          │  0x00007fef77249bea:   sub    %rdx,%rdi                    ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@518 (line 131)
          │  0x00007fef77249bed:   mov    %rsi,%rdx
   0.04%  │  0x00007fef77249bf0:   sar    $0x6,%rdx                    ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@587 (line 138)
   0.13%  │  0x00007fef77249bf4:   add    %rdx,%rdi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@588 (line 138)
   0.00%  │  0x00007fef77249bf7:   mov    %rdi,%rdx
   0.00%  │  0x00007fef77249bfa:   sar    $0x6,%rdx                    ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@681 (line 147)
   0.03%  │  0x00007fef77249bfe:   add    %rdx,%rbx                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@682 (line 147)
   0.13%  │  0x00007fef77249c01:   mov    %rbx,%rdx
   0.00%  │  0x00007fef77249c04:   shl    $0x4,%rdx                    ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@830 (line 161)
   0.00%  │  0x00007fef77249c08:   and    $0x3ffffff,%rdx              ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@834 (line 161)
   0.04%  │  0x00007fef77249c0f:   add    %rdx,%rcx                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@835 (line 161)
   0.13%  │  0x00007fef77249c12:   mov    %r10,%rdx
   0.01%  │  0x00007fef77249c15:   sar    $0x16,%rdx                   ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@93 (line 90)
   0.00%  │  0x00007fef77249c19:   add    %rdx,%r9                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@94 (line 90)
   0.02%  │  0x00007fef77249c1c:   mov    %rax,%rdx
   0.14%  │  0x00007fef77249c1f:   shl    $0x16,%rdx                   ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@245 (line 105)
   0.00%  │  0x00007fef77249c23:   and    $0x3ffffff,%rdx              ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@249 (line 105)
   0.00%  │  0x00007fef77249c2a:   sub    %rdx,%r9                     ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@250 (line 105)
   0.03%  │  0x00007fef77249c2d:   mov    %r13,%rdx
   0.11%  │  0x00007fef77249c30:   sar    $0x4,%rdx                    ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@352 (line 115)
   0.00%  │  0x00007fef77249c34:   sub    %rdx,%r9                     ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@353 (line 115)
   0.01%  │  0x00007fef77249c37:   mov    %rsi,%rdx
   0.02%  │  0x00007fef77249c3a:   shl    $0xe,%rdx                    ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@597 (line 139)
   0.13%  │  0x00007fef77249c3e:   and    $0x3ffffff,%rdx              ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@601 (line 139)
          │  0x00007fef77249c45:   sub    %rdx,%r9                     ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@602 (line 139)
   0.00%  │  0x00007fef77249c48:   mov    %rdi,%rdx
   0.03%  │  0x00007fef77249c4b:   shl    $0x14,%rdx                   ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@667 (line 146)
   0.11%  │  0x00007fef77249c4f:   and    $0x3ffffff,%rdx              ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@671 (line 146)
          │  0x00007fef77249c56:   add    %rdx,%r9                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@672 (line 146)
   0.00%  │  0x00007fef77249c59:   mov    %rdi,%rdx
   0.04%  │  0x00007fef77249c5c:   sar    $0xc,%rdx                    ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@705 (line 149)
   0.11%  │  0x00007fef77249c60:   sub    %rdx,%r9                     ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@706 (line 149)
   0.00%  │  0x00007fef77249c63:   mov    %rbx,%rdx
          │  0x00007fef77249c66:   sar    $0x6,%rdx                    ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@775 (line 156)
   0.03%  │  0x00007fef77249c6a:   add    %rdx,%r9                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@776 (line 156)
   0.12%  │  0x00007fef77249c6d:   shl    $0x4,%r10                    ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@79 (line 89)
          │  0x00007fef77249c71:   and    $0x3ffffff,%r10              ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@83 (line 89)
   0.01%  │  0x00007fef77249c78:   add    %r10,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@84 (line 89)
   0.03%  │  0x00007fef77249c7b:   mov    %r11,%r10
   0.13%  │  0x00007fef77249c7e:   sar    $0x16,%r10                   ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@187 (line 99)
          │  0x00007fef77249c82:   add    %r10,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@188 (line 99)
          │  0x00007fef77249c85:   mov    %r13,%r10
   0.04%  │  0x00007fef77249c88:   shl    $0x16,%r10                   ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@339 (line 114)
   0.10%  │  0x00007fef77249c8c:   and    $0x3ffffff,%r10              ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@343 (line 114)
          │  0x00007fef77249c93:   sub    %r10,%r8                     ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@344 (line 114)
          │  0x00007fef77249c96:   mov    %r14,%r10
   0.03%  │  0x00007fef77249c99:   sar    $0x4,%r10                    ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@446 (line 124)
   0.14%  │  0x00007fef77249c9d:   sub    %r10,%r8                     ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@447 (line 124)
   0.00%  │  0x00007fef77249ca0:   mov    %rdi,%r10
          │  0x00007fef77249ca3:   shl    $0xe,%r10                    ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@691 (line 148)
   0.03%  │  0x00007fef77249ca7:   and    $0x3ffffff,%r10              ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@695 (line 148)
   0.13%  │  0x00007fef77249cae:   sub    %r10,%r8                     ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@696 (line 148)
          │  0x00007fef77249cb1:   mov    %rbx,%r10
   0.00%  │  0x00007fef77249cb4:   shl    $0x14,%r10                   ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@761 (line 155)
          │                                                            ;   {no_reloc}
   0.02%  │  0x00007fef77249cb8:   and    $0x3ffffff,%r10              ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@765 (line 155)
   0.15%  │  0x00007fef77249cbf:   add    %r10,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@766 (line 155)
   0.00%  │  0x00007fef77249cc2:   mov    %rbx,%r10
   0.00%  │  0x00007fef77249cc5:   sar    $0xc,%r10                    ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@799 (line 158)
   0.02%  │  0x00007fef77249cc9:   sub    %r10,%r8                     ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@800 (line 158)
   0.14%  │  0x00007fef77249ccc:   lea    0x2000000(%r8),%r10          ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@5 (line 170)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.00%  │  0x00007fef77249cd3:   mov    %r10,%rdx
          │  0x00007fef77249cd6:   sar    $0x1a,%rdx                   ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@8 (line 170)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.03%  │  0x00007fef77249cda:   add    %rdx,%r9                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@25 (line 172)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.11%  │  0x00007fef77249cdd:   lea    0x2000000(%r9),%rdx          ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@33 (line 174)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.00%  │  0x00007fef77249ce4:   mov    %r9,0x18(%rsp)
   0.00%  │  0x00007fef77249ce9:   mov    %rdx,%r9
   0.03%  │  0x00007fef77249cec:   sar    $0x1a,%r9                    ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@36 (line 174)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.16%  │  0x00007fef77249cf0:   mov    %r8,0x10(%rsp)
   0.00%  │  0x00007fef77249cf5:   mov    %r9,%r8
   0.00%  │  0x00007fef77249cf8:   shl    $0x4,%r8                     ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@131 (line 184)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.03%  │  0x00007fef77249cfc:   and    $0x3ffffff,%r8               ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@135 (line 184)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.12%  │  0x00007fef77249d03:   add    %r8,%rcx                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@136 (line 184)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.00%  │  0x00007fef77249d06:   lea    0x2000000(%rcx),%r8          ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@152 (line 187)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.01%  │  0x00007fef77249d0d:   mov    %r10,0x8(%rsp)
   0.03%  │  0x00007fef77249d12:   mov    %r8,%r10
   0.11%  │  0x00007fef77249d15:   and    $0xfffffffffc000000,%r10     ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@163 (line 188)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.00%  │  0x00007fef77249d1c:   sub    %r10,%rcx                    ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@164 (line 188)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.01%  │  0x00007fef77249d1f:   mov    (%rsp),%r10
   0.03%  │  0x00007fef77249d23:   mov    %rcx,0x10(%r10)              ;*lastore {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@400 (line 223)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.21%  │  0x00007fef77249d27:   mov    %rdi,%rcx
          │  0x00007fef77249d2a:   shl    $0x4,%rcx                    ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@737 (line 152)
          │  0x00007fef77249d2e:   and    $0x3ffffff,%rcx              ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@741 (line 152)
   0.01%  │  0x00007fef77249d35:   add    0x30(%rsp),%rcx              ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@742 (line 152)
   0.17%  │  0x00007fef77249d3a:   mov    %r11,0x30(%rsp)
          │  0x00007fef77249d3f:   mov    %rbx,%r11
   0.00%  │  0x00007fef77249d42:   sar    $0x16,%r11                   ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@843 (line 162)
   0.01%  │  0x00007fef77249d46:   add    %r11,%rcx                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@844 (line 162)
   0.12%  │  0x00007fef77249d49:   mov    %rdx,%r11
          │  0x00007fef77249d4c:   sar    $0x30,%r11                   ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@144 (line 185)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.00%  │  0x00007fef77249d50:   add    %r11,%rcx                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@145 (line 185)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.01%  │  0x00007fef77249d53:   sar    $0x1a,%r8                    ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@155 (line 187)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.15%  │  0x00007fef77249d57:   add    %r8,%rcx                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@170 (line 189)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
          │  0x00007fef77249d5a:   lea    0x2000000(%rcx),%r11         ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@178 (line 191)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
          │  0x00007fef77249d61:   mov    %r11,%r8
   0.01%  │  0x00007fef77249d64:   and    $0xfffffffffc000000,%r8      ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@190 (line 192)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.13%  │  0x00007fef77249d6b:   sub    %r8,%rcx                     ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@191 (line 192)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.00%  │  0x00007fef77249d6e:   mov    %rcx,0x18(%r10)              ;*lastore {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@405 (line 224)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.00%  │  0x00007fef77249d72:   mov    %rsi,%r8
   0.01%  │  0x00007fef77249d75:   shl    $0x4,%r8                     ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@643 (line 143)
   0.15%  │  0x00007fef77249d79:   and    $0x3ffffff,%r8               ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@647 (line 143)
          │  0x00007fef77249d80:   add    0x28(%rsp),%r8               ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@648 (line 143)
          │  0x00007fef77249d85:   mov    %rdi,%rcx
   0.01%  │  0x00007fef77249d88:   sar    $0x16,%rcx                   ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@751 (line 153)
   0.15%  │  0x00007fef77249d8c:   add    %rcx,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@752 (line 153)
          │  0x00007fef77249d8f:   sar    $0x1a,%r11                   ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@181 (line 191)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.00%  │  0x00007fef77249d93:   add    %r11,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@198 (line 193)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.01%  │  0x00007fef77249d96:   lea    0x2000000(%r8),%r11          ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@206 (line 195)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.11%  │  0x00007fef77249d9d:   mov    %r11,%rcx
          │  0x00007fef77249da0:   and    $0xfffffffffc000000,%rcx     ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@218 (line 196)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.00%  │  0x00007fef77249da7:   sub    %rcx,%r8                     ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@219 (line 196)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.01%  │  0x00007fef77249daa:   mov    %r8,0x20(%r10)               ;*lastore {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@410 (line 225)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.16%  │  0x00007fef77249dae:   mov    %rbp,%r8
          │  0x00007fef77249db1:   shl    $0x4,%r8                     ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@549 (line 134)
          │                                                            ;   {no_reloc}
          │  0x00007fef77249db5:   and    $0x3ffffff,%r8               ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@553 (line 134)
   0.01%  │  0x00007fef77249dbc:   add    0x20(%rsp),%r8               ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@554 (line 134)
   0.14%  │  0x00007fef77249dc1:   mov    %rsi,%rcx
          │  0x00007fef77249dc4:   sar    $0x16,%rcx                   ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@657 (line 144)
   0.00%  │  0x00007fef77249dc8:   add    %rcx,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@658 (line 144)
   0.01%  │  0x00007fef77249dcb:   mov    %rbx,%rcx
   0.13%  │  0x00007fef77249dce:   shl    $0x16,%rcx                   ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@809 (line 159)
          │  0x00007fef77249dd2:   and    $0x3ffffff,%rcx              ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@813 (line 159)
   0.00%  │  0x00007fef77249dd9:   sub    %rcx,%r8                     ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@814 (line 159)
   0.01%  │  0x00007fef77249ddc:   mov    %r9,%rcx
   0.13%  │  0x00007fef77249ddf:   shl    $0x16,%rcx                   ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@110 (line 182)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
          │  0x00007fef77249de3:   and    $0x3ffffff,%rcx              ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@114 (line 182)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
          │  0x00007fef77249dea:   sub    %rcx,%r8                     ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@115 (line 182)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.02%  │  0x00007fef77249ded:   sar    $0x1a,%r11                   ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@209 (line 195)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.15%  │  0x00007fef77249df1:   add    %r11,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@226 (line 197)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
          │  0x00007fef77249df4:   lea    0x2000000(%r8),%r11          ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@234 (line 199)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.00%  │  0x00007fef77249dfb:   mov    %r11,%rcx
   0.02%  │  0x00007fef77249dfe:   and    $0xfffffffffc000000,%rcx     ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@246 (line 200)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.14%  │  0x00007fef77249e05:   sub    %rcx,%r8                     ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@247 (line 200)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
          │  0x00007fef77249e08:   mov    %r8,0x28(%r10)               ;*lastore {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@415 (line 226)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.00%  │  0x00007fef77249e0c:   mov    %r14,%r8
   0.01%  │  0x00007fef77249e0f:   shl    $0x4,%r8                     ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@455 (line 125)
   0.14%  │  0x00007fef77249e13:   and    $0x3ffffff,%r8               ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@459 (line 125)
          │  0x00007fef77249e1a:   add    0x50(%rsp),%r8               ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@460 (line 125)
   0.00%  │  0x00007fef77249e1f:   mov    %rbp,%rcx
   0.01%  │  0x00007fef77249e22:   sar    $0x16,%rcx                   ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@563 (line 135)
   0.14%  │  0x00007fef77249e26:   add    %rcx,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@564 (line 135)
          │  0x00007fef77249e29:   mov    %rdi,%rcx
          │  0x00007fef77249e2c:   shl    $0x16,%rcx                   ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@715 (line 150)
   0.02%  │  0x00007fef77249e30:   and    $0x3ffffff,%rcx              ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@719 (line 150)
   0.12%  │  0x00007fef77249e37:   sub    %rcx,%r8                     ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@720 (line 150)
          │  0x00007fef77249e3a:   mov    %rbx,%rcx
          │  0x00007fef77249e3d:   sar    $0x4,%rcx                    ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@822 (line 160)
   0.00%  │  0x00007fef77249e41:   sub    %rcx,%r8                     ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@823 (line 160)
   0.18%  │  0x00007fef77249e44:   mov    %rdx,%rcx
          │  0x00007fef77249e47:   sar    $0x1e,%rcx                   ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@123 (line 183)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.01%  │  0x00007fef77249e4b:   sub    %rcx,%r8                     ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@124 (line 183)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.01%  │  0x00007fef77249e4e:   sar    $0x1a,%r11                   ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@237 (line 199)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.12%  │  0x00007fef77249e52:   add    %r11,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@254 (line 201)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
          │  0x00007fef77249e55:   lea    0x2000000(%r8),%r11          ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@262 (line 203)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.00%  │  0x00007fef77249e5c:   mov    %r11,%rcx
   0.02%  │  0x00007fef77249e5f:   and    $0xfffffffffc000000,%rcx     ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@274 (line 204)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.17%  │  0x00007fef77249e66:   sub    %rcx,%r8                     ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@275 (line 204)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
          │  0x00007fef77249e69:   mov    %r8,0x30(%r10)               ;*lastore {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@420 (line 227)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.00%  │  0x00007fef77249e6d:   mov    %r13,%r8
   0.01%  │  0x00007fef77249e70:   shl    $0x4,%r8                     ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@361 (line 116)
   0.16%  │  0x00007fef77249e74:   and    $0x3ffffff,%r8               ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@365 (line 116)
          │  0x00007fef77249e7b:   add    0x58(%rsp),%r8               ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@366 (line 116)
   0.00%  │  0x00007fef77249e80:   mov    %r14,%rcx
   0.01%  │  0x00007fef77249e83:   sar    $0x16,%rcx                   ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@469 (line 126)
   0.12%  │  0x00007fef77249e87:   add    %rcx,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@470 (line 126)
          │  0x00007fef77249e8a:   mov    %rsi,%rcx
   0.01%  │  0x00007fef77249e8d:   shl    $0x16,%rcx                   ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@621 (line 141)
   0.01%  │  0x00007fef77249e91:   and    $0x3ffffff,%rcx              ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@625 (line 141)
   0.16%  │  0x00007fef77249e98:   sub    %rcx,%r8                     ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@626 (line 141)
          │  0x00007fef77249e9b:   sar    $0x4,%rdi                    ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@728 (line 151)
          │  0x00007fef77249e9f:   sub    %rdi,%r8                     ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@729 (line 151)
   0.01%  │  0x00007fef77249ea2:   sar    $0x1a,%r11                   ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@265 (line 203)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.15%  │  0x00007fef77249ea6:   add    %r11,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@282 (line 205)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
          │  0x00007fef77249ea9:   lea    0x2000000(%r8),%r11          ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@290 (line 207)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.01%  │  0x00007fef77249eb0:   mov    %r11,%rcx                    ;   {no_reloc}
   0.01%  │  0x00007fef77249eb3:   and    $0xfffffffffc000000,%rcx     ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@302 (line 208)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.13%  │  0x00007fef77249eba:   sub    %rcx,%r8                     ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@303 (line 208)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
          │  0x00007fef77249ebd:   mov    %r8,0x38(%r10)               ;*lastore {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@425 (line 228)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.01%  │  0x00007fef77249ec1:   mov    %rax,%r8
   0.01%  │  0x00007fef77249ec4:   shl    $0x4,%r8                     ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@267 (line 107)
   0.15%  │  0x00007fef77249ec8:   and    $0x3ffffff,%r8               ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@271 (line 107)
   0.00%  │  0x00007fef77249ecf:   add    0x60(%rsp),%r8               ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@272 (line 107)
   0.01%  │  0x00007fef77249ed4:   sar    $0x16,%r13                   ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@375 (line 117)
   0.00%  │  0x00007fef77249ed8:   add    %r13,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@376 (line 117)
   0.15%  │  0x00007fef77249edb:   mov    %rbp,%rcx
          │  0x00007fef77249ede:   shl    $0x16,%rcx                   ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@527 (line 132)
   0.00%  │  0x00007fef77249ee2:   and    $0x3ffffff,%rcx              ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@531 (line 132)
   0.01%  │  0x00007fef77249ee9:   sub    %rcx,%r8                     ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@532 (line 132)
   0.14%  │  0x00007fef77249eec:   sar    $0x4,%rsi                    ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@634 (line 142)
          │  0x00007fef77249ef0:   sub    %rsi,%r8                     ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@635 (line 142)
   0.00%  │  0x00007fef77249ef3:   sar    $0x1a,%r11                   ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@293 (line 207)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.01%  │  0x00007fef77249ef7:   add    %r11,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@310 (line 209)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.15%  │  0x00007fef77249efa:   lea    0x2000000(%r8),%r11          ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@318 (line 211)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
          │  0x00007fef77249f01:   mov    %r11,%rcx
   0.01%  │  0x00007fef77249f04:   and    $0xfffffffffc000000,%rcx     ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@330 (line 212)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.01%  │  0x00007fef77249f0b:   sub    %rcx,%r8                     ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@331 (line 212)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.11%  │  0x00007fef77249f0e:   mov    %r8,0x40(%r10)               ;*lastore {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@431 (line 229)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.00%  │  0x00007fef77249f12:   mov    0x30(%rsp),%r8
   0.01%  │  0x00007fef77249f17:   shl    $0x4,%r8                     ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@173 (line 98)
   0.01%  │  0x00007fef77249f1b:   and    $0x3ffffff,%r8               ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@177 (line 98)
   0.13%  │  0x00007fef77249f22:   add    0x68(%rsp),%r8               ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@178 (line 98)
   0.00%  │  0x00007fef77249f27:   sar    $0x16,%rax                   ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@281 (line 108)
   0.00%  │  0x00007fef77249f2b:   add    %rax,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@282 (line 108)
   0.01%  │  0x00007fef77249f2e:   shl    $0x16,%r14                   ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@433 (line 123)
   0.14%  │  0x00007fef77249f32:   and    $0x3ffffff,%r14              ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@437 (line 123)
          │  0x00007fef77249f39:   sub    %r14,%r8                     ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@438 (line 123)
   0.01%  │  0x00007fef77249f3c:   sar    $0x4,%rbp                    ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@540 (line 133)
   0.01%  │  0x00007fef77249f40:   sub    %rbp,%r8                     ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@541 (line 133)
   0.13%  │  0x00007fef77249f43:   shl    $0xe,%rbx                    ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@785 (line 157)
   0.01%  │  0x00007fef77249f47:   and    $0x3ffffff,%rbx              ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@789 (line 157)
   0.01%  │  0x00007fef77249f4e:   sub    %rbx,%r8                     ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@790 (line 157)
   0.01%  │  0x00007fef77249f51:   mov    %r9,%rcx
   0.16%  │  0x00007fef77249f54:   shl    $0xe,%rcx                    ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@86 (line 180)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
          │  0x00007fef77249f58:   and    $0x3ffffff,%rcx              ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@90 (line 180)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.00%  │  0x00007fef77249f5f:   sub    %rcx,%r8                     ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@91 (line 180)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.01%  │  0x00007fef77249f62:   sar    $0x1a,%r11                   ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@321 (line 211)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.15%  │  0x00007fef77249f66:   add    %r11,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@338 (line 213)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.00%  │  0x00007fef77249f69:   lea    0x2000000(%r8),%r11          ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@346 (line 215)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.01%  │  0x00007fef77249f70:   mov    %r11,%rcx
   0.03%  │  0x00007fef77249f73:   and    $0xfffffffffc000000,%rcx     ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@358 (line 216)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.15%  │  0x00007fef77249f7a:   sub    %rcx,%r8                     ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@359 (line 216)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.01%  │  0x00007fef77249f7d:   mov    %r8,0x48(%r10)               ;*lastore {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@437 (line 230)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.01%  │  0x00007fef77249f81:   mov    0x8(%rsp),%r8
   0.01%  │  0x00007fef77249f86:   and    $0xfffffffffc000000,%r8      ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@17 (line 171)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.10%  │  0x00007fef77249f8d:   mov    0x10(%rsp),%rcx
   0.00%  │  0x00007fef77249f92:   sub    %r8,%rcx                     ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@18 (line 171)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.02%  │  0x00007fef77249f95:   shl    $0x14,%r9                    ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@62 (line 178)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.02%  │  0x00007fef77249f99:   and    $0x3ffffff,%r9               ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@66 (line 178)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.12%  │  0x00007fef77249fa0:   add    %r9,%rcx                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@67 (line 178)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.00%  │  0x00007fef77249fa3:   mov    %rdx,%r8
   0.02%  │  0x00007fef77249fa6:   sar    $0x26,%r8                    ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@100 (line 181)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.01%  │  0x00007fef77249faa:   sub    %r8,%rcx                     ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@101 (line 181)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.15%  │  0x00007fef77249fad:   sar    $0x1a,%r11                   ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@349 (line 215)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
          │  0x00007fef77249fb1:   add    %r11,%rcx                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@366 (line 217)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
          │                                                            ;   {no_reloc}
   0.03%  │  0x00007fef77249fb4:   lea    0x2000000(%rcx),%r11         ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@374 (line 219)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.01%  │  0x00007fef77249fbb:   mov    %r11,%r8
   0.11%  │  0x00007fef77249fbe:   and    $0xfffffffffc000000,%r8      ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@386 (line 220)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.00%  │  0x00007fef77249fc5:   sub    %r8,%rcx                     ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@387 (line 220)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.02%  │  0x00007fef77249fc8:   mov    %rcx,0x50(%r10)              ;*lastore {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@443 (line 231)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.02%  │  0x00007fef77249fcc:   mov    %rdx,%r8
   0.15%  │  0x00007fef77249fcf:   and    $0xfffffffffc000000,%r8      ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@45 (line 175)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
          │  0x00007fef77249fd6:   mov    0x18(%rsp),%r9
   0.01%  │  0x00007fef77249fdb:   sub    %r8,%r9                      ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@46 (line 175)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.01%  │  0x00007fef77249fde:   sar    $0x20,%rdx                   ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@76 (line 179)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.13%  │  0x00007fef77249fe2:   add    %rdx,%r9                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@77 (line 179)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.00%  │  0x00007fef77249fe5:   sar    $0x1a,%r11                   ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@377 (line 219)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.02%  │  0x00007fef77249fe9:   add    %r11,%r9                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@394 (line 221)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.01%  │  0x00007fef77249fec:   mov    %r9,0x58(%r10)               ;*lastore {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@449 (line 232)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.14%  │  0x00007fef77249ff0:   mov    0x40(%rsp),%rbp
          │  0x00007fef77249ff5:   add    $0x48,%rsp
   0.02%  │  0x00007fef77249ff9:   nopl   0x0(%rax)
   0.02%  │  0x00007fef7724a000:   cmp    0x450(%r15),%rsp             ;   {poll_return}
          │  0x00007fef7724a007:   ja     0x00007fef7724a08b
   0.09%  │  0x00007fef7724a00d:   ret    
          ↘  0x00007fef7724a00e:   mov    0xc0(%rsp),%r10
             0x00007fef7724a016:   mov    0xb8(%rsp),%r11
             0x00007fef7724a01e:   mov    0xb0(%rsp),%rax
             0x00007fef7724a026:   mov    0xa8(%rsp),%r13
             0x00007fef7724a02e:   mov    0xa0(%rsp),%r14
             0x00007fef7724a036:   mov    0x98(%rsp),%rbp
             0x00007fef7724a03e:   mov    0x80(%rsp),%rbx
             0x00007fef7724a046:   mov    0x88(%rsp),%rdi
             0x00007fef7724a04e:   mov    0x78(%rsp),%r9
             0x00007fef7724a053:   mov    0x70(%rsp),%r8
....................................................................................................
  15.82%  <total for region 2>

....[Hottest Regions]...............................................................................
  16.23%       jvmci, level 4  sun.security.util.math.intpoly.IntegerPolynomialP256::mult, version 2, compile id 1064 
  15.82%       jvmci, level 4  sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce, version 2, compile id 1057 
   7.64%       jvmci, level 4  sun.security.util.math.intpoly.P256OrderField::carryReduce0, version 3, compile id 1159 
   4.33%       jvmci, level 4  sun.security.ec.point.ProjectivePoint$Mutable::conditionalSet, version 2, compile id 1092 
   3.59%       jvmci, level 4  sun.security.ec.point.ProjectivePoint$Mutable::conditionalSet, version 2, compile id 1092 
   2.86%       jvmci, level 4  sun.security.ec.point.ProjectivePoint$Mutable::conditionalSet, version 2, compile id 1092 
   2.85%       jvmci, level 4  sun.security.ec.point.ProjectivePoint$Mutable::conditionalSet, version 2, compile id 1092 
   2.84%       jvmci, level 4  sun.security.ec.point.ProjectivePoint$Mutable::conditionalSet, version 2, compile id 1092 
   2.21%         runtime stub  StubRoutines::jlong_disjoint_arraycopy 
   2.17%       jvmci, level 4  sun.security.util.math.IntegerModuloP$MultiplicativeInverser$Secp256R1::inverse, version 3, compile id 1335 
   2.16%       jvmci, level 4  sun.security.util.math.intpoly.IntegerPolynomialP256::mult, version 2, compile id 1064 
   2.02%       jvmci, level 4  sun.security.util.math.intpoly.P256OrderField::square, version 3, compile id 1428 
   1.99%       jvmci, level 4  sun.security.ec.ECOperations$PointMultiplier::lookup, version 2, compile id 1135 
   1.54%       jvmci, level 4  sun.security.ec.ECOperations::setSum, version 2, compile id 1190 
   1.24%               kernel  [unknown] 
   1.01%       jvmci, level 4  sun.security.ec.ECOperations::setSum, version 2, compile id 1190 
   0.98%       jvmci, level 4  sun.security.util.math.intpoly.P256OrderField::carryReduce, version 3, compile id 1163 
   0.89%       jvmci, level 4  sun.security.util.math.IntegerModuloP$MultiplicativeInverser$Secp256R1Field::inverse, version 4, compile id 1421 
   0.72%       jvmci, level 4  sun.security.ec.ECOperations::setSum, version 2, compile id 1190 
   0.64%       jvmci, level 4  sun.security.util.math.intpoly.IntegerPolynomialP256::mult, version 2, compile id 1064 
  26.28%  <...other 1326 warm regions...>
....................................................................................................
 100.00%  <totals>

....[Hottest Methods (after inlining)]..............................................................
  20.10%       jvmci, level 4  sun.security.util.math.intpoly.IntegerPolynomialP256::mult, version 2, compile id 1064 
  16.59%       jvmci, level 4  sun.security.ec.ECOperations::setSum, version 2, compile id 1190 
  16.51%       jvmci, level 4  sun.security.ec.point.ProjectivePoint$Mutable::conditionalSet, version 2, compile id 1092 
  15.82%       jvmci, level 4  sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce, version 2, compile id 1057 
   7.64%       jvmci, level 4  sun.security.util.math.intpoly.P256OrderField::carryReduce0, version 3, compile id 1159 
   3.60%       jvmci, level 4  sun.security.ec.ECOperations::setDouble, version 2, compile id 1211 
   2.68%               kernel  [unknown] 
   2.61%       jvmci, level 4  sun.security.util.math.IntegerModuloP$MultiplicativeInverser$Secp256R1::inverse, version 3, compile id 1335 
   2.21%         runtime stub  StubRoutines::jlong_disjoint_arraycopy 
   2.02%       jvmci, level 4  sun.security.util.math.intpoly.P256OrderField::square, version 3, compile id 1428 
   1.99%       jvmci, level 4  sun.security.ec.ECOperations$PointMultiplier::lookup, version 2, compile id 1135 
   1.94%       jvmci, level 4  sun.security.util.math.IntegerModuloP$MultiplicativeInverser$Secp256R1Field::inverse, version 4, compile id 1421 
   1.03%       jvmci, level 4  sun.security.util.math.intpoly.P256OrderField::mult, version 3, compile id 1319 
   0.98%       jvmci, level 4  sun.security.util.math.intpoly.P256OrderField::carryReduce, version 3, compile id 1163 
   0.50%       jvmci, level 4  sun.security.ec.ECOperations$PointMultiplier$Secp256R1GeneratorMultiplier::pointMultiply, version 3, compile id 1430 
   0.46%         runtime stub  StubRoutines::sha256_implCompressMB 
   0.40%       jvmci, level 4  sun.security.util.math.intpoly.IntegerPolynomialP256::reduce, version 2, compile id 1120 
   0.25%       jvmci, level 4  sun.security.ec.ECDSAOperations::signDigest, version 3, compile id 1524 
   0.24%       jvmci, level 4  sun.security.util.math.intpoly.IntegerPolynomial::evaluate, version 2, compile id 1436 
   0.22%                       <unknown> 
   2.20%  <...other 211 warm methods...>
....................................................................................................
 100.00%  <totals>

....[Distribution by Source]........................................................................
  93.82%       jvmci, level 4
   2.75%         runtime stub
   2.68%               kernel
   0.22%                     
   0.17%            libjvm.so
   0.17%  libjvmcicompiler.so
   0.10%         libc-2.31.so
   0.03%       hsdis-amd64.so
   0.02%   libpthread-2.31.so
   0.02%               [vdso]
   0.00%          interpreter
   0.00%           ld-2.31.so
   0.00%          c1, level 3
   0.00%     Unknown, level 0
....................................................................................................
 100.00%  <totals>



# JMH version: 1.37
# VM version: JDK 21, OpenJDK 64-Bit Server VM, 21+35-jvmci-23.1-b15
# VM invoker: /home/gogu/bench_jdks/graalvm-community-openjdk-21+35.1/bin/java
# VM options: -XX:ThreadPriorityPolicy=1 -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCIProduct -XX:-UnlockExperimentalVMOptions -Xms4g -Xmx4g -XX:+AlwaysPreTouch
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.performance.benchmarks.api.signature.DsaEcSignatureBenchmark.sign
# Parameters: (algorithm = secp256r1, messageLength = 2048)

# Run progress: 16.67% complete, ETA 00:19:30
# Fork: 1 of 1
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 1200.362 us/op
# Warmup Iteration   2: 331.886 us/op
# Warmup Iteration   3: 323.979 us/op
# Warmup Iteration   4: 323.331 us/op
# Warmup Iteration   5: 323.124 us/op
Iteration   1: 323.145 us/op
Iteration   2: 323.585 us/op
Iteration   3: 323.385 us/op
Iteration   4: 323.005 us/op
Iteration   5: 322.803 us/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "com.ionutbalosin.jvm.performance.benchmarks.api.signature.DsaEcSignatureBenchmark.sign":
  323.184 ±(99.9%) 1.187 us/op [Average]
  (min, avg, max) = (322.803, 323.184, 323.585), stdev = 0.308
  CI (99.9%): [321.998, 324.371] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.signature.DsaEcSignatureBenchmark.sign:asm":
PrintAssembly processed: 420792 total address lines.
Perf output processed (skipped 62.926 seconds):
 Column 1: cycles (50846 events)

Hottest code regions (>10.00% "cycles" events):
 Event counts are percents of total event count.

....[Hottest Region 1]..............................................................................
jvmci, level 4, sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce, version 2, compile id 1063 

             # parm18:   [sp+0xb8]   = long
             # parm19:   [sp+0xc0]   = long
             0x00007f742724e320:   mov    0x8(%rsi),%r10d
             0x00007f742724e324:   movabs $0x7f73ab000000,%r12
             0x00007f742724e32e:   add    %r12,%r10
             0x00007f742724e331:   xor    %r12,%r12
             0x00007f742724e334:   cmp    %r10,%rax
             0x00007f742724e337:   jne    0x00007f7426c2f080           ;   {runtime_call ic_miss_stub}
             0x00007f742724e33d:   data16 xchg %ax,%ax
           [Verified Entry Point]
   0.15%     0x00007f742724e340:   mov    %eax,-0x14000(%rsp)
   0.16%     0x00007f742724e347:   sub    $0x48,%rsp
             0x00007f742724e34b:   nop
             0x00007f742724e34c:   cmpl   $0x1,0x20(%r15)
             0x00007f742724e354:   jne    0x00007f742724e9fb
   0.16%     0x00007f742724e35a:   mov    %rbp,0x40(%rsp)
   0.04%     0x00007f742724e35f:   mov    %r8,0x30(%rsp)
   0.10%     0x00007f742724e364:   mov    %r9,0x28(%rsp)
   0.21%     0x00007f742724e369:   mov    %rdi,0x20(%rsp)              ; ImmutableOopMap {rdx=Oop rsi=Oop }
                                                                       ;*lconst_0 {reexecute=1 rethrow=0 return_oop=0}
                                                                       ; - (reexecute) sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@0 (line 81)
   0.12%     0x00007f742724e36e:   cmpl   $0xa,0xc(%rdx)               ; implicit exception: dispatches to 0x00007f742724ea1f
   0.03%  ╭  0x00007f742724e372:   jb     0x00007f742724e98e           ;*lastore {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@400 (line 223)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.00%  │  0x00007f742724e378:   mov    0xc0(%rsp),%r10
   0.03%  │  0x00007f742724e380:   mov    0xb8(%rsp),%r11
   0.13%  │  0x00007f742724e388:   mov    0xb0(%rsp),%rax
          │  0x00007f742724e390:   mov    0xa8(%rsp),%r13
   0.00%  │  0x00007f742724e398:   mov    0xa0(%rsp),%r14
   0.03%  │  0x00007f742724e3a0:   mov    0x98(%rsp),%rbp
   0.13%  │  0x00007f742724e3a8:   mov    0x90(%rsp),%rsi
   0.00%  │  0x00007f742724e3b0:   mov    0x80(%rsp),%rbx
   0.00%  │  0x00007f742724e3b8:   mov    %rdx,(%rsp)
   0.04%  │  0x00007f742724e3bc:   mov    0x88(%rsp),%rdi
   0.10%  │  0x00007f742724e3c4:   mov    0x78(%rsp),%r9
          │  0x00007f742724e3c9:   mov    0x70(%rsp),%r8
   0.01%  │  0x00007f742724e3ce:   mov    %r10,%rdx
   0.04%  │  0x00007f742724e3d1:   sar    $0x6,%rdx                    ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@23 (line 84)
   0.09%  │  0x00007f742724e3d5:   add    %rdx,%r11                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@24 (line 84)
   0.00%  │  0x00007f742724e3d8:   mov    %r11,%rdx
   0.00%  │  0x00007f742724e3db:   shl    $0x16,%rdx                   ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@151 (line 96)
   0.03%  │  0x00007f742724e3df:   and    $0x3ffffff,%rdx              ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@155 (line 96)
   0.11%  │  0x00007f742724e3e6:   sub    %rdx,%rbx                    ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@156 (line 96)
   0.00%  │  0x00007f742724e3e9:   mov    %r10,%rdx
   0.01%  │  0x00007f742724e3ec:   shl    $0x14,%rdx                   ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@9 (line 83)
   0.02%  │  0x00007f742724e3f0:   and    $0x3ffffff,%rdx              ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@13 (line 83)
   0.13%  │  0x00007f742724e3f7:   add    %rdx,%rax                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@14 (line 83)
          │  0x00007f742724e3fa:   mov    %r10,%rdx
          │  0x00007f742724e3fd:   sar    $0xc,%rdx                    ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@47 (line 86)
   0.04%  │  0x00007f742724e401:   sub    %rdx,%rax                    ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@48 (line 86)
   0.13%  │  0x00007f742724e404:   mov    %r11,%rdx
   0.00%  │  0x00007f742724e407:   sar    $0x6,%rdx                    ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@117 (line 93)
   0.01%  │  0x00007f742724e40b:   add    %rdx,%rax                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@118 (line 93)
   0.03%  │  0x00007f742724e40e:   mov    %rax,%rdx
   0.12%  │  0x00007f742724e411:   sar    $0x4,%rdx                    ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@258 (line 106)
          │  0x00007f742724e415:   sub    %rdx,%rbx                    ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@259 (line 106)
   0.00%  │  0x00007f742724e418:   mov    %rax,%rdx
   0.04%  │  0x00007f742724e41b:   shl    $0xe,%rdx                    ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@221 (line 103)
   0.14%  │  0x00007f742724e41f:   and    $0x3ffffff,%rdx              ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@225 (line 103)
          │  0x00007f742724e426:   sub    %rdx,%rbp                    ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@226 (line 103)
   0.01%  │  0x00007f742724e429:   mov    %r10,%rdx
   0.04%  │  0x00007f742724e42c:   shl    $0xe,%rdx                    ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@33 (line 85)
   0.13%  │  0x00007f742724e430:   and    $0x3ffffff,%rdx              ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@37 (line 85)
          │                                                            ;   {no_reloc}
          │  0x00007f742724e437:   sub    %rdx,%r13                    ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@38 (line 85)
          │  0x00007f742724e43a:   mov    %r11,%rdx
   0.04%  │  0x00007f742724e43d:   shl    $0x14,%rdx                   ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@103 (line 92)
   0.12%  │  0x00007f742724e441:   and    $0x3ffffff,%rdx              ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@107 (line 92)
          │  0x00007f742724e448:   add    %rdx,%r13                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@108 (line 92)
   0.00%  │  0x00007f742724e44b:   mov    %r11,%rdx
   0.04%  │  0x00007f742724e44e:   sar    $0xc,%rdx                    ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@141 (line 95)
   0.13%  │  0x00007f742724e452:   sub    %rdx,%r13                    ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@142 (line 95)
          │  0x00007f742724e455:   mov    %rax,%rdx
   0.00%  │  0x00007f742724e458:   sar    $0x6,%rdx                    ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@211 (line 102)
   0.02%  │  0x00007f742724e45c:   add    %rdx,%r13                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@212 (line 102)
   0.12%  │  0x00007f742724e45f:   mov    %r13,%rdx
          │  0x00007f742724e462:   shl    $0x14,%rdx                   ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@291 (line 110)
   0.00%  │  0x00007f742724e466:   and    $0x3ffffff,%rdx              ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@295 (line 110)
   0.04%  │  0x00007f742724e46d:   add    %rdx,%rbp                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@296 (line 110)
   0.15%  │  0x00007f742724e470:   mov    %r13,%rdx
          │  0x00007f742724e473:   sar    $0xc,%rdx                    ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@329 (line 113)
   0.00%  │  0x00007f742724e477:   sub    %rdx,%rbp                    ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@330 (line 113)
   0.04%  │  0x00007f742724e47a:   mov    %r11,%rdx
   0.12%  │  0x00007f742724e47d:   shl    $0xe,%rdx                    ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@127 (line 94)
          │  0x00007f742724e481:   and    $0x3ffffff,%rdx              ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@131 (line 94)
   0.00%  │  0x00007f742724e488:   sub    %rdx,%r14                    ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@132 (line 94)
   0.05%  │  0x00007f742724e48b:   mov    %rax,%rdx
   0.11%  │  0x00007f742724e48e:   shl    $0x14,%rdx                   ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@197 (line 101)
          │  0x00007f742724e492:   and    $0x3ffffff,%rdx              ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@201 (line 101)
   0.00%  │  0x00007f742724e499:   add    %rdx,%r14                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@202 (line 101)
   0.04%  │  0x00007f742724e49c:   mov    %rax,%rdx
   0.13%  │  0x00007f742724e49f:   sar    $0xc,%rdx                    ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@235 (line 104)
          │  0x00007f742724e4a3:   sub    %rdx,%r14                    ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@236 (line 104)
   0.01%  │  0x00007f742724e4a6:   mov    %r13,%rdx
   0.02%  │  0x00007f742724e4a9:   sar    $0x6,%rdx                    ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@305 (line 111)
   0.11%  │  0x00007f742724e4ad:   add    %rdx,%r14                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@306 (line 111)
   0.00%  │  0x00007f742724e4b0:   mov    %r14,%rdx
   0.01%  │  0x00007f742724e4b3:   sar    $0x6,%rdx                    ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@399 (line 120)
   0.03%  │  0x00007f742724e4b7:   add    %rdx,%rbp                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@400 (line 120)
   0.15%  │  0x00007f742724e4ba:   mov    %rbp,%rdx
   0.00%  │  0x00007f742724e4bd:   shl    $0xe,%rdx                    ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@503 (line 130)
   0.00%  │  0x00007f742724e4c1:   and    $0x3ffffff,%rdx              ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@507 (line 130)
   0.04%  │  0x00007f742724e4c8:   sub    %rdx,%rbx                    ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@508 (line 130)
   0.14%  │  0x00007f742724e4cb:   mov    %r10,%rdx
          │  0x00007f742724e4ce:   sar    $0x4,%rdx                    ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@70 (line 88)
          │  0x00007f742724e4d2:   sub    %rdx,%rsi                    ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@71 (line 88)
   0.03%  │  0x00007f742724e4d5:   mov    %r13,%rdx
   0.15%  │  0x00007f742724e4d8:   shl    $0xe,%rdx                    ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@315 (line 112)
   0.00%  │  0x00007f742724e4dc:   and    $0x3ffffff,%rdx              ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@319 (line 112)
   0.00%  │  0x00007f742724e4e3:   sub    %rdx,%rsi                    ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@320 (line 112)
   0.01%  │  0x00007f742724e4e6:   mov    %r14,%rdx
   0.12%  │  0x00007f742724e4e9:   shl    $0x14,%rdx                   ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@385 (line 119)
          │  0x00007f742724e4ed:   and    $0x3ffffff,%rdx              ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@389 (line 119)
   0.01%  │  0x00007f742724e4f4:   add    %rdx,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@390 (line 119)
   0.02%  │  0x00007f742724e4f7:   mov    %r14,%rdx
   0.11%  │  0x00007f742724e4fa:   sar    $0xc,%rdx                    ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@423 (line 122)
   0.00%  │  0x00007f742724e4fe:   sub    %rdx,%rsi                    ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@424 (line 122)
   0.00%  │  0x00007f742724e501:   mov    %rbp,%rdx
   0.02%  │  0x00007f742724e504:   sar    $0x6,%rdx                    ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@493 (line 129)
   0.14%  │  0x00007f742724e508:   add    %rdx,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@494 (line 129)
          │  0x00007f742724e50b:   mov    %rsi,%rdx
   0.00%  │  0x00007f742724e50e:   shl    $0x14,%rdx                   ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@573 (line 137)
   0.02%  │  0x00007f742724e512:   and    $0x3ffffff,%rdx              ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@577 (line 137)
   0.16%  │  0x00007f742724e519:   add    %rdx,%rbx                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@578 (line 137)
          │  0x00007f742724e51c:   mov    %rsi,%rdx
   0.01%  │  0x00007f742724e51f:   sar    $0xc,%rdx                    ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@611 (line 140)
   0.02%  │  0x00007f742724e523:   sub    %rdx,%rbx                    ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@612 (line 140)
   0.14%  │  0x00007f742724e526:   mov    %r10,%rdx
   0.00%  │  0x00007f742724e529:   shl    $0x16,%rdx                   ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@57 (line 87)
   0.01%  │  0x00007f742724e52d:   and    $0x3ffffff,%rdx              ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@61 (line 87)
   0.03%  │  0x00007f742724e534:   sub    %rdx,%rdi                    ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@62 (line 87)
          │                                                            ;   {no_reloc}
   0.13%  │  0x00007f742724e537:   mov    %r11,%rdx
   0.00%  │  0x00007f742724e53a:   sar    $0x4,%rdx                    ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@164 (line 97)
   0.00%  │  0x00007f742724e53e:   sub    %rdx,%rdi                    ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@165 (line 97)
   0.03%  │  0x00007f742724e541:   mov    %r14,%rdx
   0.13%  │  0x00007f742724e544:   shl    $0xe,%rdx                    ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@409 (line 121)
   0.00%  │  0x00007f742724e548:   and    $0x3ffffff,%rdx              ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@413 (line 121)
   0.01%  │  0x00007f742724e54f:   sub    %rdx,%rdi                    ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@414 (line 121)
   0.03%  │  0x00007f742724e552:   mov    %rbp,%rdx
   0.13%  │  0x00007f742724e555:   shl    $0x14,%rdx                   ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@479 (line 128)
   0.00%  │  0x00007f742724e559:   and    $0x3ffffff,%rdx              ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@483 (line 128)
          │  0x00007f742724e560:   add    %rdx,%rdi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@484 (line 128)
   0.02%  │  0x00007f742724e563:   mov    %rbp,%rdx
   0.12%  │  0x00007f742724e566:   sar    $0xc,%rdx                    ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@517 (line 131)
          │  0x00007f742724e56a:   sub    %rdx,%rdi                    ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@518 (line 131)
   0.01%  │  0x00007f742724e56d:   mov    %rsi,%rdx
   0.04%  │  0x00007f742724e570:   sar    $0x6,%rdx                    ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@587 (line 138)
   0.11%  │  0x00007f742724e574:   add    %rdx,%rdi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@588 (line 138)
   0.00%  │  0x00007f742724e577:   mov    %rdi,%rdx
   0.00%  │  0x00007f742724e57a:   sar    $0x6,%rdx                    ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@681 (line 147)
   0.02%  │  0x00007f742724e57e:   add    %rdx,%rbx                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@682 (line 147)
   0.14%  │  0x00007f742724e581:   mov    %rbx,%rdx
   0.01%  │  0x00007f742724e584:   shl    $0x4,%rdx                    ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@830 (line 161)
   0.00%  │  0x00007f742724e588:   and    $0x3ffffff,%rdx              ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@834 (line 161)
   0.03%  │  0x00007f742724e58f:   add    %rdx,%rcx                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@835 (line 161)
   0.13%  │  0x00007f742724e592:   mov    %r10,%rdx
          │  0x00007f742724e595:   sar    $0x16,%rdx                   ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@93 (line 90)
   0.00%  │  0x00007f742724e599:   add    %rdx,%r9                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@94 (line 90)
   0.01%  │  0x00007f742724e59c:   mov    %rax,%rdx
   0.13%  │  0x00007f742724e59f:   shl    $0x16,%rdx                   ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@245 (line 105)
   0.00%  │  0x00007f742724e5a3:   and    $0x3ffffff,%rdx              ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@249 (line 105)
   0.00%  │  0x00007f742724e5aa:   sub    %rdx,%r9                     ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@250 (line 105)
   0.03%  │  0x00007f742724e5ad:   mov    %r13,%rdx
   0.16%  │  0x00007f742724e5b0:   sar    $0x4,%rdx                    ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@352 (line 115)
          │  0x00007f742724e5b4:   sub    %rdx,%r9                     ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@353 (line 115)
   0.01%  │  0x00007f742724e5b7:   mov    %rsi,%rdx
   0.02%  │  0x00007f742724e5ba:   shl    $0xe,%rdx                    ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@597 (line 139)
   0.12%  │  0x00007f742724e5be:   and    $0x3ffffff,%rdx              ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@601 (line 139)
          │  0x00007f742724e5c5:   sub    %rdx,%r9                     ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@602 (line 139)
   0.00%  │  0x00007f742724e5c8:   mov    %rdi,%rdx
   0.01%  │  0x00007f742724e5cb:   shl    $0x14,%rdx                   ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@667 (line 146)
   0.13%  │  0x00007f742724e5cf:   and    $0x3ffffff,%rdx              ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@671 (line 146)
          │  0x00007f742724e5d6:   add    %rdx,%r9                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@672 (line 146)
   0.01%  │  0x00007f742724e5d9:   mov    %rdi,%rdx
   0.02%  │  0x00007f742724e5dc:   sar    $0xc,%rdx                    ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@705 (line 149)
   0.12%  │  0x00007f742724e5e0:   sub    %rdx,%r9                     ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@706 (line 149)
          │  0x00007f742724e5e3:   mov    %rbx,%rdx
   0.00%  │  0x00007f742724e5e6:   sar    $0x6,%rdx                    ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@775 (line 156)
   0.01%  │  0x00007f742724e5ea:   add    %rdx,%r9                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@776 (line 156)
   0.12%  │  0x00007f742724e5ed:   shl    $0x4,%r10                    ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@79 (line 89)
   0.00%  │  0x00007f742724e5f1:   and    $0x3ffffff,%r10              ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@83 (line 89)
   0.00%  │  0x00007f742724e5f8:   add    %r10,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@84 (line 89)
   0.02%  │  0x00007f742724e5fb:   mov    %r11,%r10
   0.11%  │  0x00007f742724e5fe:   sar    $0x16,%r10                   ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@187 (line 99)
   0.00%  │  0x00007f742724e602:   add    %r10,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@188 (line 99)
   0.01%  │  0x00007f742724e605:   mov    %r13,%r10
   0.02%  │  0x00007f742724e608:   shl    $0x16,%r10                   ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@339 (line 114)
   0.14%  │  0x00007f742724e60c:   and    $0x3ffffff,%r10              ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@343 (line 114)
   0.00%  │  0x00007f742724e613:   sub    %r10,%r8                     ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@344 (line 114)
   0.01%  │  0x00007f742724e616:   mov    %r14,%r10
   0.03%  │  0x00007f742724e619:   sar    $0x4,%r10                    ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@446 (line 124)
   0.11%  │  0x00007f742724e61d:   sub    %r10,%r8                     ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@447 (line 124)
   0.00%  │  0x00007f742724e620:   mov    %rdi,%r10
   0.00%  │  0x00007f742724e623:   shl    $0xe,%r10                    ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@691 (line 148)
   0.04%  │  0x00007f742724e627:   and    $0x3ffffff,%r10              ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@695 (line 148)
   0.10%  │  0x00007f742724e62e:   sub    %r10,%r8                     ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@696 (line 148)
   0.00%  │  0x00007f742724e631:   mov    %rbx,%r10
   0.00%  │  0x00007f742724e634:   shl    $0x14,%r10                   ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@761 (line 155)
          │                                                            ;   {no_reloc}
   0.02%  │  0x00007f742724e638:   and    $0x3ffffff,%r10              ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@765 (line 155)
   0.12%  │  0x00007f742724e63f:   add    %r10,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@766 (line 155)
   0.00%  │  0x00007f742724e642:   mov    %rbx,%r10
   0.00%  │  0x00007f742724e645:   sar    $0xc,%r10                    ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@799 (line 158)
   0.01%  │  0x00007f742724e649:   sub    %r10,%r8                     ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@800 (line 158)
   0.14%  │  0x00007f742724e64c:   lea    0x2000000(%r8),%r10          ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@5 (line 170)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
          │  0x00007f742724e653:   mov    %r10,%rdx
   0.00%  │  0x00007f742724e656:   sar    $0x1a,%rdx                   ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@8 (line 170)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.02%  │  0x00007f742724e65a:   add    %rdx,%r9                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@25 (line 172)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.13%  │  0x00007f742724e65d:   lea    0x2000000(%r9),%rdx          ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@33 (line 174)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.01%  │  0x00007f742724e664:   mov    %r9,0x18(%rsp)
          │  0x00007f742724e669:   mov    %rdx,%r9
   0.03%  │  0x00007f742724e66c:   sar    $0x1a,%r9                    ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@36 (line 174)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.13%  │  0x00007f742724e670:   mov    %r8,0x10(%rsp)
          │  0x00007f742724e675:   mov    %r9,%r8
   0.00%  │  0x00007f742724e678:   shl    $0x4,%r8                     ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@131 (line 184)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.03%  │  0x00007f742724e67c:   and    $0x3ffffff,%r8               ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@135 (line 184)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.12%  │  0x00007f742724e683:   add    %r8,%rcx                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@136 (line 184)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.00%  │  0x00007f742724e686:   lea    0x2000000(%rcx),%r8          ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@152 (line 187)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.01%  │  0x00007f742724e68d:   mov    %r10,0x8(%rsp)
   0.02%  │  0x00007f742724e692:   mov    %r8,%r10
   0.15%  │  0x00007f742724e695:   and    $0xfffffffffc000000,%r10     ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@163 (line 188)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.00%  │  0x00007f742724e69c:   sub    %r10,%rcx                    ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@164 (line 188)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.02%  │  0x00007f742724e69f:   mov    (%rsp),%r10
   0.02%  │  0x00007f742724e6a3:   mov    %rcx,0x10(%r10)              ;*lastore {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@400 (line 223)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.20%  │  0x00007f742724e6a7:   mov    %rdi,%rcx
          │  0x00007f742724e6aa:   shl    $0x4,%rcx                    ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@737 (line 152)
   0.00%  │  0x00007f742724e6ae:   and    $0x3ffffff,%rcx              ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@741 (line 152)
   0.02%  │  0x00007f742724e6b5:   add    0x30(%rsp),%rcx              ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@742 (line 152)
   0.15%  │  0x00007f742724e6ba:   mov    %r11,0x30(%rsp)
          │  0x00007f742724e6bf:   mov    %rbx,%r11
   0.00%  │  0x00007f742724e6c2:   sar    $0x16,%r11                   ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@843 (line 162)
   0.01%  │  0x00007f742724e6c6:   add    %r11,%rcx                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@844 (line 162)
   0.17%  │  0x00007f742724e6c9:   mov    %rdx,%r11
          │  0x00007f742724e6cc:   sar    $0x30,%r11                   ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@144 (line 185)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.00%  │  0x00007f742724e6d0:   add    %r11,%rcx                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@145 (line 185)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.01%  │  0x00007f742724e6d3:   sar    $0x1a,%r8                    ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@155 (line 187)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.13%  │  0x00007f742724e6d7:   add    %r8,%rcx                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@170 (line 189)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
          │  0x00007f742724e6da:   lea    0x2000000(%rcx),%r11         ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@178 (line 191)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.00%  │  0x00007f742724e6e1:   mov    %r11,%r8
   0.01%  │  0x00007f742724e6e4:   and    $0xfffffffffc000000,%r8      ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@190 (line 192)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.16%  │  0x00007f742724e6eb:   sub    %r8,%rcx                     ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@191 (line 192)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
          │  0x00007f742724e6ee:   mov    %rcx,0x18(%r10)              ;*lastore {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@405 (line 224)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
          │  0x00007f742724e6f2:   mov    %rsi,%r8
   0.01%  │  0x00007f742724e6f5:   shl    $0x4,%r8                     ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@643 (line 143)
   0.14%  │  0x00007f742724e6f9:   and    $0x3ffffff,%r8               ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@647 (line 143)
          │  0x00007f742724e700:   add    0x28(%rsp),%r8               ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@648 (line 143)
   0.00%  │  0x00007f742724e705:   mov    %rdi,%rcx
   0.01%  │  0x00007f742724e708:   sar    $0x16,%rcx                   ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@751 (line 153)
   0.14%  │  0x00007f742724e70c:   add    %rcx,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@752 (line 153)
          │  0x00007f742724e70f:   sar    $0x1a,%r11                   ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@181 (line 191)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.00%  │  0x00007f742724e713:   add    %r11,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@198 (line 193)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.02%  │  0x00007f742724e716:   lea    0x2000000(%r8),%r11          ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@206 (line 195)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.14%  │  0x00007f742724e71d:   mov    %r11,%rcx
          │  0x00007f742724e720:   and    $0xfffffffffc000000,%rcx     ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@218 (line 196)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
          │  0x00007f742724e727:   sub    %rcx,%r8                     ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@219 (line 196)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.01%  │  0x00007f742724e72a:   mov    %r8,0x20(%r10)               ;*lastore {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@410 (line 225)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.16%  │  0x00007f742724e72e:   mov    %rbp,%r8
   0.00%  │  0x00007f742724e731:   shl    $0x4,%r8                     ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@549 (line 134)
          │                                                            ;   {no_reloc}
   0.00%  │  0x00007f742724e735:   and    $0x3ffffff,%r8               ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@553 (line 134)
   0.00%  │  0x00007f742724e73c:   add    0x20(%rsp),%r8               ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@554 (line 134)
   0.14%  │  0x00007f742724e741:   mov    %rsi,%rcx
          │  0x00007f742724e744:   sar    $0x16,%rcx                   ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@657 (line 144)
   0.00%  │  0x00007f742724e748:   add    %rcx,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@658 (line 144)
   0.02%  │  0x00007f742724e74b:   mov    %rbx,%rcx
   0.15%  │  0x00007f742724e74e:   shl    $0x16,%rcx                   ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@809 (line 159)
          │  0x00007f742724e752:   and    $0x3ffffff,%rcx              ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@813 (line 159)
   0.00%  │  0x00007f742724e759:   sub    %rcx,%r8                     ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@814 (line 159)
   0.02%  │  0x00007f742724e75c:   mov    %r9,%rcx
   0.17%  │  0x00007f742724e75f:   shl    $0x16,%rcx                   ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@110 (line 182)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.00%  │  0x00007f742724e763:   and    $0x3ffffff,%rcx              ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@114 (line 182)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.00%  │  0x00007f742724e76a:   sub    %rcx,%r8                     ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@115 (line 182)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.01%  │  0x00007f742724e76d:   sar    $0x1a,%r11                   ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@209 (line 195)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.17%  │  0x00007f742724e771:   add    %r11,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@226 (line 197)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
          │  0x00007f742724e774:   lea    0x2000000(%r8),%r11          ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@234 (line 199)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
          │  0x00007f742724e77b:   mov    %r11,%rcx
   0.01%  │  0x00007f742724e77e:   and    $0xfffffffffc000000,%rcx     ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@246 (line 200)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.14%  │  0x00007f742724e785:   sub    %rcx,%r8                     ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@247 (line 200)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
          │  0x00007f742724e788:   mov    %r8,0x28(%r10)               ;*lastore {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@415 (line 226)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.01%  │  0x00007f742724e78c:   mov    %r14,%r8
   0.00%  │  0x00007f742724e78f:   shl    $0x4,%r8                     ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@455 (line 125)
   0.15%  │  0x00007f742724e793:   and    $0x3ffffff,%r8               ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@459 (line 125)
   0.00%  │  0x00007f742724e79a:   add    0x50(%rsp),%r8               ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@460 (line 125)
          │  0x00007f742724e79f:   mov    %rbp,%rcx
   0.02%  │  0x00007f742724e7a2:   sar    $0x16,%rcx                   ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@563 (line 135)
   0.16%  │  0x00007f742724e7a6:   add    %rcx,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@564 (line 135)
          │  0x00007f742724e7a9:   mov    %rdi,%rcx
   0.00%  │  0x00007f742724e7ac:   shl    $0x16,%rcx                   ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@715 (line 150)
   0.01%  │  0x00007f742724e7b0:   and    $0x3ffffff,%rcx              ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@719 (line 150)
   0.16%  │  0x00007f742724e7b7:   sub    %rcx,%r8                     ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@720 (line 150)
   0.00%  │  0x00007f742724e7ba:   mov    %rbx,%rcx
   0.00%  │  0x00007f742724e7bd:   sar    $0x4,%rcx                    ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@822 (line 160)
   0.02%  │  0x00007f742724e7c1:   sub    %rcx,%r8                     ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@823 (line 160)
   0.13%  │  0x00007f742724e7c4:   mov    %rdx,%rcx
          │  0x00007f742724e7c7:   sar    $0x1e,%rcx                   ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@123 (line 183)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.00%  │  0x00007f742724e7cb:   sub    %rcx,%r8                     ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@124 (line 183)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.01%  │  0x00007f742724e7ce:   sar    $0x1a,%r11                   ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@237 (line 199)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.14%  │  0x00007f742724e7d2:   add    %r11,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@254 (line 201)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
          │  0x00007f742724e7d5:   lea    0x2000000(%r8),%r11          ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@262 (line 203)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.00%  │  0x00007f742724e7dc:   mov    %r11,%rcx
   0.01%  │  0x00007f742724e7df:   and    $0xfffffffffc000000,%rcx     ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@274 (line 204)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.16%  │  0x00007f742724e7e6:   sub    %rcx,%r8                     ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@275 (line 204)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
          │  0x00007f742724e7e9:   mov    %r8,0x30(%r10)               ;*lastore {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@420 (line 227)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.01%  │  0x00007f742724e7ed:   mov    %r13,%r8
   0.02%  │  0x00007f742724e7f0:   shl    $0x4,%r8                     ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@361 (line 116)
   0.13%  │  0x00007f742724e7f4:   and    $0x3ffffff,%r8               ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@365 (line 116)
          │  0x00007f742724e7fb:   add    0x58(%rsp),%r8               ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@366 (line 116)
   0.01%  │  0x00007f742724e800:   mov    %r14,%rcx
   0.02%  │  0x00007f742724e803:   sar    $0x16,%rcx                   ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@469 (line 126)
   0.15%  │  0x00007f742724e807:   add    %rcx,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@470 (line 126)
          │  0x00007f742724e80a:   mov    %rsi,%rcx
   0.01%  │  0x00007f742724e80d:   shl    $0x16,%rcx                   ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@621 (line 141)
   0.01%  │  0x00007f742724e811:   and    $0x3ffffff,%rcx              ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@625 (line 141)
   0.13%  │  0x00007f742724e818:   sub    %rcx,%r8                     ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@626 (line 141)
   0.00%  │  0x00007f742724e81b:   sar    $0x4,%rdi                    ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@728 (line 151)
   0.01%  │  0x00007f742724e81f:   sub    %rdi,%r8                     ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@729 (line 151)
   0.00%  │  0x00007f742724e822:   sar    $0x1a,%r11                   ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@265 (line 203)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.16%  │  0x00007f742724e826:   add    %r11,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@282 (line 205)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.00%  │  0x00007f742724e829:   lea    0x2000000(%r8),%r11          ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@290 (line 207)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.01%  │  0x00007f742724e830:   mov    %r11,%rcx                    ;   {no_reloc}
   0.01%  │  0x00007f742724e833:   and    $0xfffffffffc000000,%rcx     ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@302 (line 208)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.12%  │  0x00007f742724e83a:   sub    %rcx,%r8                     ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@303 (line 208)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
          │  0x00007f742724e83d:   mov    %r8,0x38(%r10)               ;*lastore {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@425 (line 228)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.00%  │  0x00007f742724e841:   mov    %rax,%r8
   0.01%  │  0x00007f742724e844:   shl    $0x4,%r8                     ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@267 (line 107)
   0.15%  │  0x00007f742724e848:   and    $0x3ffffff,%r8               ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@271 (line 107)
          │  0x00007f742724e84f:   add    0x60(%rsp),%r8               ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@272 (line 107)
   0.00%  │  0x00007f742724e854:   sar    $0x16,%r13                   ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@375 (line 117)
   0.02%  │  0x00007f742724e858:   add    %r13,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@376 (line 117)
   0.16%  │  0x00007f742724e85b:   mov    %rbp,%rcx
          │  0x00007f742724e85e:   shl    $0x16,%rcx                   ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@527 (line 132)
   0.01%  │  0x00007f742724e862:   and    $0x3ffffff,%rcx              ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@531 (line 132)
   0.01%  │  0x00007f742724e869:   sub    %rcx,%r8                     ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@532 (line 132)
   0.14%  │  0x00007f742724e86c:   sar    $0x4,%rsi                    ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@634 (line 142)
          │  0x00007f742724e870:   sub    %rsi,%r8                     ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@635 (line 142)
   0.00%  │  0x00007f742724e873:   sar    $0x1a,%r11                   ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@293 (line 207)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.00%  │  0x00007f742724e877:   add    %r11,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@310 (line 209)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.14%  │  0x00007f742724e87a:   lea    0x2000000(%r8),%r11          ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@318 (line 211)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.00%  │  0x00007f742724e881:   mov    %r11,%rcx
   0.01%  │  0x00007f742724e884:   and    $0xfffffffffc000000,%rcx     ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@330 (line 212)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.02%  │  0x00007f742724e88b:   sub    %rcx,%r8                     ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@331 (line 212)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.17%  │  0x00007f742724e88e:   mov    %r8,0x40(%r10)               ;*lastore {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@431 (line 229)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.00%  │  0x00007f742724e892:   mov    0x30(%rsp),%r8
   0.01%  │  0x00007f742724e897:   shl    $0x4,%r8                     ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@173 (line 98)
   0.01%  │  0x00007f742724e89b:   and    $0x3ffffff,%r8               ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@177 (line 98)
   0.15%  │  0x00007f742724e8a2:   add    0x68(%rsp),%r8               ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@178 (line 98)
          │  0x00007f742724e8a7:   sar    $0x16,%rax                   ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@281 (line 108)
   0.01%  │  0x00007f742724e8ab:   add    %rax,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@282 (line 108)
   0.02%  │  0x00007f742724e8ae:   shl    $0x16,%r14                   ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@433 (line 123)
   0.16%  │  0x00007f742724e8b2:   and    $0x3ffffff,%r14              ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@437 (line 123)
   0.00%  │  0x00007f742724e8b9:   sub    %r14,%r8                     ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@438 (line 123)
   0.00%  │  0x00007f742724e8bc:   sar    $0x4,%rbp                    ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@540 (line 133)
   0.01%  │  0x00007f742724e8c0:   sub    %rbp,%r8                     ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@541 (line 133)
   0.13%  │  0x00007f742724e8c3:   shl    $0xe,%rbx                    ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@785 (line 157)
   0.00%  │  0x00007f742724e8c7:   and    $0x3ffffff,%rbx              ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@789 (line 157)
   0.01%  │  0x00007f742724e8ce:   sub    %rbx,%r8                     ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@790 (line 157)
   0.02%  │  0x00007f742724e8d1:   mov    %r9,%rcx
   0.14%  │  0x00007f742724e8d4:   shl    $0xe,%rcx                    ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@86 (line 180)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.00%  │  0x00007f742724e8d8:   and    $0x3ffffff,%rcx              ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@90 (line 180)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.01%  │  0x00007f742724e8df:   sub    %rcx,%r8                     ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@91 (line 180)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.01%  │  0x00007f742724e8e2:   sar    $0x1a,%r11                   ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@321 (line 211)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.13%  │  0x00007f742724e8e6:   add    %r11,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@338 (line 213)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
          │  0x00007f742724e8e9:   lea    0x2000000(%r8),%r11          ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@346 (line 215)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.01%  │  0x00007f742724e8f0:   mov    %r11,%rcx
   0.00%  │  0x00007f742724e8f3:   and    $0xfffffffffc000000,%rcx     ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@358 (line 216)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.15%  │  0x00007f742724e8fa:   sub    %rcx,%r8                     ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@359 (line 216)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.00%  │  0x00007f742724e8fd:   mov    %r8,0x48(%r10)               ;*lastore {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@437 (line 230)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.02%  │  0x00007f742724e901:   mov    0x8(%rsp),%r8
   0.00%  │  0x00007f742724e906:   and    $0xfffffffffc000000,%r8      ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@17 (line 171)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.14%  │  0x00007f742724e90d:   mov    0x10(%rsp),%rcx
   0.00%  │  0x00007f742724e912:   sub    %r8,%rcx                     ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@18 (line 171)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.02%  │  0x00007f742724e915:   shl    $0x14,%r9                    ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@62 (line 178)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.02%  │  0x00007f742724e919:   and    $0x3ffffff,%r9               ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@66 (line 178)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.15%  │  0x00007f742724e920:   add    %r9,%rcx                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@67 (line 178)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.00%  │  0x00007f742724e923:   mov    %rdx,%r8
   0.02%  │  0x00007f742724e926:   sar    $0x26,%r8                    ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@100 (line 181)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.02%  │  0x00007f742724e92a:   sub    %r8,%rcx                     ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@101 (line 181)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.12%  │  0x00007f742724e92d:   sar    $0x1a,%r11                   ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@349 (line 215)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.00%  │  0x00007f742724e931:   add    %r11,%rcx                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@366 (line 217)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
          │                                                            ;   {no_reloc}
   0.02%  │  0x00007f742724e934:   lea    0x2000000(%rcx),%r11         ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@374 (line 219)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.01%  │  0x00007f742724e93b:   mov    %r11,%r8
   0.15%  │  0x00007f742724e93e:   and    $0xfffffffffc000000,%r8      ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@386 (line 220)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
          │  0x00007f742724e945:   sub    %r8,%rcx                     ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@387 (line 220)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.03%  │  0x00007f742724e948:   mov    %rcx,0x50(%r10)              ;*lastore {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@443 (line 231)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.02%  │  0x00007f742724e94c:   mov    %rdx,%r8
   0.13%  │  0x00007f742724e94f:   and    $0xfffffffffc000000,%r8      ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@45 (line 175)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.00%  │  0x00007f742724e956:   mov    0x18(%rsp),%r9
   0.01%  │  0x00007f742724e95b:   sub    %r8,%r9                      ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@46 (line 175)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.02%  │  0x00007f742724e95e:   sar    $0x20,%rdx                   ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@76 (line 179)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.14%  │  0x00007f742724e962:   add    %rdx,%r9                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@77 (line 179)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
          │  0x00007f742724e965:   sar    $0x1a,%r11                   ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@377 (line 219)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.00%  │  0x00007f742724e969:   add    %r11,%r9                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@394 (line 221)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.01%  │  0x00007f742724e96c:   mov    %r9,0x58(%r10)               ;*lastore {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@449 (line 232)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.12%  │  0x00007f742724e970:   mov    0x40(%rsp),%rbp
   0.00%  │  0x00007f742724e975:   add    $0x48,%rsp
   0.01%  │  0x00007f742724e979:   nopl   0x0(%rax)
   0.01%  │  0x00007f742724e980:   cmp    0x450(%r15),%rsp             ;   {poll_return}
          │  0x00007f742724e987:   ja     0x00007f742724ea0b
   0.13%  │  0x00007f742724e98d:   ret    
          ↘  0x00007f742724e98e:   mov    0xc0(%rsp),%r10
             0x00007f742724e996:   mov    0xb8(%rsp),%r11
             0x00007f742724e99e:   mov    0xb0(%rsp),%rax
             0x00007f742724e9a6:   mov    0xa8(%rsp),%r13
             0x00007f742724e9ae:   mov    0xa0(%rsp),%r14
             0x00007f742724e9b6:   mov    0x98(%rsp),%rbp
             0x00007f742724e9be:   mov    0x80(%rsp),%rbx
             0x00007f742724e9c6:   mov    0x88(%rsp),%rdi
             0x00007f742724e9ce:   mov    0x78(%rsp),%r9
             0x00007f742724e9d3:   mov    0x70(%rsp),%r8
....................................................................................................
  16.10%  <total for region 1>

....[Hottest Region 2]..............................................................................
jvmci, level 4, sun.security.util.math.intpoly.IntegerPolynomialP256::mult, version 2, compile id 1068 

            # parm2:    r8:r8     = &apos;[J&apos;
            #           [sp+0x130]  (sp of caller)
            0x00007f7427250520:   mov    0x8(%rsi),%r10d
            0x00007f7427250524:   movabs $0x7f73ab000000,%r12
            0x00007f742725052e:   add    %r12,%r10
            0x00007f7427250531:   xor    %r12,%r12
            0x00007f7427250534:   cmp    %r10,%rax
            0x00007f7427250537:   jne    0x00007f7426c2f080           ;   {runtime_call ic_miss_stub}
            0x00007f742725053d:   data16 xchg %ax,%ax
          [Verified Entry Point]
   1.76%    0x00007f7427250540:   mov    %eax,-0x14000(%rsp)
   1.52%    0x00007f7427250547:   sub    $0x128,%rsp
            0x00007f742725054e:   xchg   %ax,%ax
            0x00007f7427250550:   cmpl   $0x1,0x20(%r15)
            0x00007f7427250558:   jne    0x00007f7427250d11
   0.12%    0x00007f742725055e:   mov    %rbp,0x120(%rsp)             ; ImmutableOopMap {rcx=Oop rdx=Oop rsi=Oop r8=Oop }
                                                                      ;*aload_1 {reexecute=1 rethrow=0 return_oop=0}
                                                                      ; - (reexecute) sun.security.util.math.intpoly.IntegerPolynomialP256::mult@0 (line 303)
   0.13%    0x00007f7427250566:   mov    0xc(%rdx),%r9d               ; implicit exception: dispatches to 0x00007f7427250d3a
                                                                      ; ImmutableOopMap {rcx=Oop rdx=Oop rsi=Oop r8=Oop }
                                                                      ;*aload_1 {reexecute=1 rethrow=0 return_oop=0}
                                                                      ; - (reexecute) sun.security.util.math.intpoly.IntegerPolynomialP256::mult@0 (line 303)
   0.01%    0x00007f742725056a:   mov    0xc(%rcx),%edi               ; implicit exception: dispatches to 0x00007f7427250d5d
   0.00%    0x00007f742725056d:   cmp    $0xa,%r9d
            0x00007f7427250571:   jb     0x00007f7427250cee           ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@2 (line 303)
   0.00%    0x00007f7427250577:   cmp    $0xa,%edi
            0x00007f742725057a:   jb     0x00007f7427250cee           ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@5 (line 303)
   0.12%    0x00007f7427250580:   mov    %r8,0x88(%rsp)
            0x00007f7427250588:   mov    %rsi,0x80(%rsp)
   0.46%    0x00007f7427250590:   mov    0x10(%rdx),%r9               ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@2 (line 303)
   0.01%    0x00007f7427250594:   mov    0x18(%rdx),%rdi              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@18 (line 304)
   0.00%    0x00007f7427250598:   mov    0x20(%rdx),%r10              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@43 (line 305)
   0.00%    0x00007f742725059c:   mov    0x28(%rdx),%r11              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@76 (line 306)
   0.11%    0x00007f74272505a0:   mov    0x30(%rdx),%rbx              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@117 (line 307)
   0.00%    0x00007f74272505a4:   mov    0x38(%rdx),%rax              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@166 (line 308)
   0.00%    0x00007f74272505a8:   mov    0x40(%rdx),%rbp              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@225 (line 309)
   0.00%    0x00007f74272505ac:   mov    0x48(%rdx),%r13              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@294 (line 310)
   0.11%    0x00007f74272505b0:   mov    0x50(%rdx),%r14              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@373 (line 311)
   0.01%    0x00007f74272505b4:   mov    0x58(%rdx),%rdx              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@462 (line 312)
   0.00%    0x00007f74272505b8:   mov    0x58(%rcx),%r8               ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@387 (line 312)
   0.02%    0x00007f74272505bc:   mov    0x50(%rcx),%rsi              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@308 (line 311)
   0.12%    0x00007f74272505c0:   mov    %rdx,0x110(%rsp)
   0.11%    0x00007f74272505c8:   mov    0x48(%rcx),%rdx              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@239 (line 310)
   0.01%    0x00007f74272505cc:   mov    %r8,0x108(%rsp)
   0.00%    0x00007f74272505d4:   mov    0x40(%rcx),%r8               ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@180 (line 309)
   0.01%    0x00007f74272505d8:   mov    %r14,0x100(%rsp)
   0.12%    0x00007f74272505e0:   mov    0x38(%rcx),%r14              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@130 (line 308)
   0.01%    0x00007f74272505e4:   mov    %rsi,0xf8(%rsp)
   0.00%    0x00007f74272505ec:   mov    0x30(%rcx),%rsi              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@89 (line 307)
   0.01%    0x00007f74272505f0:   mov    %r13,0xf0(%rsp)
   0.41%    0x00007f74272505f8:   mov    0x28(%rcx),%r13              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@56 (line 306)
   0.00%    0x00007f74272505fc:   mov    %rdx,0xe8(%rsp)
   0.01%    0x00007f7427250604:   mov    0x20(%rcx),%rdx              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@31 (line 305)
   0.00%    0x00007f7427250608:   mov    %rbp,0xe0(%rsp)
   0.14%    0x00007f7427250610:   mov    0x18(%rcx),%rbp              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@14 (line 304)
   0.00%    0x00007f7427250614:   mov    0x10(%rcx),%rcx              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@5 (line 303)
   0.00%    0x00007f7427250618:   mov    %r8,0xd8(%rsp)
            0x00007f7427250620:   mov    %r9,%r8
   0.09%    0x00007f7427250623:   imul   %rcx,%r8                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@6 (line 303)
   0.02%    0x00007f7427250627:   mov    %r8,0xd0(%rsp)
   0.05%    0x00007f742725062f:   mov    %rbp,%r8
            0x00007f7427250632:   imul   %r9,%r8                      ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@15 (line 304)
   0.07%    0x00007f7427250636:   mov    %rax,0xc8(%rsp)              ;   {no_reloc}
   0.08%    0x00007f742725063e:   mov    %rdi,%rax
   0.01%    0x00007f7427250641:   imul   %rcx,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@22 (line 304)
   0.00%    0x00007f7427250645:   add    %rax,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@23 (line 304)
   0.10%    0x00007f7427250648:   mov    %rdx,%rax
   0.03%    0x00007f742725064b:   imul   %r9,%rax                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@32 (line 305)
   0.01%    0x00007f742725064f:   mov    %r8,0xc0(%rsp)
   0.06%    0x00007f7427250657:   mov    %rdi,%r8
   0.00%    0x00007f742725065a:   imul   %rbp,%r8                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@39 (line 305)
   0.05%    0x00007f742725065e:   add    %r8,%rax                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@40 (line 305)
   0.01%    0x00007f7427250661:   mov    %r10,%r8
   0.06%    0x00007f7427250664:   imul   %rcx,%r8                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@47 (line 305)
            0x00007f7427250668:   add    %r8,%rax                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@48 (line 305)
   0.03%    0x00007f742725066b:   mov    %r13,%r8
   0.01%    0x00007f742725066e:   imul   %r9,%r8                      ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@57 (line 306)
   0.14%    0x00007f7427250672:   mov    %rax,0xb8(%rsp)
   0.02%    0x00007f742725067a:   mov    %rdi,%rax
   0.05%    0x00007f742725067d:   imul   %rdx,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@64 (line 306)
   0.00%    0x00007f7427250681:   add    %rax,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@65 (line 306)
   0.07%    0x00007f7427250684:   mov    %r10,%rax
   0.02%    0x00007f7427250687:   imul   %rbp,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@72 (line 306)
   0.06%    0x00007f742725068b:   add    %rax,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@73 (line 306)
   0.13%    0x00007f742725068e:   mov    %r11,%rax
   0.00%    0x00007f7427250691:   imul   %rcx,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@80 (line 306)
   0.02%    0x00007f7427250695:   add    %r8,%rax                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@81 (line 306)
   0.08%    0x00007f7427250698:   mov    %rsi,%r8
   0.06%    0x00007f742725069b:   imul   %r9,%r8                      ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@90 (line 307)
   0.01%    0x00007f742725069f:   mov    %rax,0xb0(%rsp)
   0.14%    0x00007f74272506a7:   mov    %rdi,%rax
   0.01%    0x00007f74272506aa:   imul   %r13,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@97 (line 307)
            0x00007f74272506ae:   add    %rax,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@98 (line 307)
   0.02%    0x00007f74272506b1:   mov    %r10,%rax
   0.08%    0x00007f74272506b4:   imul   %rdx,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@105 (line 307)
   0.02%    0x00007f74272506b8:   add    %rax,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@106 (line 307)
   0.03%    0x00007f74272506bb:   mov    %r11,%rax
   0.00%    0x00007f74272506be:   imul   %rbp,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@113 (line 307)
   0.11%    0x00007f74272506c2:   add    %rax,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@114 (line 307)
   0.04%    0x00007f74272506c5:   mov    %rbx,%rax
   0.02%    0x00007f74272506c8:   imul   %rcx,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@121 (line 307)
            0x00007f74272506cc:   add    %r8,%rax                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@122 (line 307)
   0.21%    0x00007f74272506cf:   mov    %r14,%r8
   0.01%    0x00007f74272506d2:   imul   %r9,%r8                      ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@131 (line 308)
   0.02%    0x00007f74272506d6:   mov    %rax,0xa8(%rsp)
   0.12%    0x00007f74272506de:   mov    %rdi,%rax
   0.05%    0x00007f74272506e1:   imul   %rsi,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@138 (line 308)
            0x00007f74272506e5:   add    %rax,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@139 (line 308)
   0.00%    0x00007f74272506e8:   mov    %r10,%rax
   0.08%    0x00007f74272506eb:   imul   %r13,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@146 (line 308)
   0.04%    0x00007f74272506ef:   add    %rax,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@147 (line 308)
   0.00%    0x00007f74272506f2:   mov    %r11,%rax
            0x00007f74272506f5:   imul   %rdx,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@154 (line 308)
   0.10%    0x00007f74272506f9:   add    %rax,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@155 (line 308)
   0.03%    0x00007f74272506fc:   mov    %rbx,%rax
            0x00007f74272506ff:   imul   %rbp,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@162 (line 308)
   0.00%    0x00007f7427250703:   add    %rax,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@163 (line 308)
   0.11%    0x00007f7427250706:   mov    0xc8(%rsp),%rax
   0.03%    0x00007f742725070e:   imul   %rcx,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@170 (line 308)
            0x00007f7427250712:   add    %r8,%rax                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@171 (line 308)
   0.00%    0x00007f7427250715:   mov    0xd8(%rsp),%r8
   0.09%    0x00007f742725071d:   imul   %r9,%r8                      ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@181 (line 309)
   0.04%    0x00007f7427250721:   mov    %rax,0xa0(%rsp)
   0.11%    0x00007f7427250729:   mov    %rdi,%rax
            0x00007f742725072c:   imul   %r14,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@188 (line 309)
   0.00%    0x00007f7427250730:   add    %rax,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@189 (line 309)
   0.00%    0x00007f7427250733:   mov    %r10,%rax                    ;   {no_reloc}
   0.10%    0x00007f7427250736:   imul   %rsi,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@196 (line 309)
            0x00007f742725073a:   add    %rax,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@197 (line 309)
   0.19%    0x00007f742725073d:   mov    %r11,%rax
            0x00007f7427250740:   imul   %r13,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@204 (line 309)
   0.02%    0x00007f7427250744:   add    %rax,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@205 (line 309)
            0x00007f7427250747:   mov    %rbx,%rax
   0.09%    0x00007f742725074a:   imul   %rdx,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@212 (line 309)
            0x00007f742725074e:   add    %rax,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@213 (line 309)
   0.04%    0x00007f7427250751:   mov    0xc8(%rsp),%rax
   0.00%    0x00007f7427250759:   imul   %rbp,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@220 (line 309)
   0.08%    0x00007f742725075d:   add    %rax,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@221 (line 309)
   0.00%    0x00007f7427250760:   mov    0xe0(%rsp),%rax
   0.04%    0x00007f7427250768:   imul   %rcx,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@229 (line 309)
   0.00%    0x00007f742725076c:   add    %r8,%rax                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@230 (line 309)
   0.09%    0x00007f742725076f:   mov    0xe8(%rsp),%r8
            0x00007f7427250777:   imul   %r9,%r8                      ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@240 (line 310)
   0.05%    0x00007f742725077b:   mov    %rax,0x98(%rsp)
   0.21%    0x00007f7427250783:   mov    %rdi,%rax
   0.00%    0x00007f7427250786:   imul   0xd8(%rsp),%rax              ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@248 (line 310)
            0x00007f742725078f:   add    %rax,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@249 (line 310)
            0x00007f7427250792:   mov    %r10,%rax
   0.14%    0x00007f7427250795:   imul   %r14,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@256 (line 310)
   0.00%    0x00007f7427250799:   add    %rax,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@257 (line 310)
            0x00007f742725079c:   mov    %r11,%rax
   0.00%    0x00007f742725079f:   imul   %rsi,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@264 (line 310)
   0.13%    0x00007f74272507a3:   add    %rax,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@265 (line 310)
   0.00%    0x00007f74272507a6:   mov    %rbx,%rax
            0x00007f74272507a9:   imul   %r13,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@272 (line 310)
            0x00007f74272507ad:   add    %rax,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@273 (line 310)
   0.24%    0x00007f74272507b0:   mov    0xc8(%rsp),%rax
   0.00%    0x00007f74272507b8:   imul   %rdx,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@280 (line 310)
            0x00007f74272507bc:   add    %rax,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@281 (line 310)
   0.00%    0x00007f74272507bf:   mov    0xe0(%rsp),%rax
   0.12%    0x00007f74272507c7:   imul   %rbp,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@289 (line 310)
   0.00%    0x00007f74272507cb:   add    %rax,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@290 (line 310)
            0x00007f74272507ce:   mov    0xf0(%rsp),%rax
            0x00007f74272507d6:   imul   %rcx,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@298 (line 310)
   0.15%    0x00007f74272507da:   add    %r8,%rax                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@299 (line 310)
            0x00007f74272507dd:   mov    0xf8(%rsp),%r8
            0x00007f74272507e5:   imul   %r9,%r8                      ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@309 (line 311)
            0x00007f74272507e9:   mov    %rax,0x90(%rsp)
   0.26%    0x00007f74272507f1:   mov    %rdi,%rax
   0.00%    0x00007f74272507f4:   imul   0xe8(%rsp),%rax              ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@317 (line 311)
            0x00007f74272507fd:   add    %rax,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@318 (line 311)
            0x00007f7427250800:   mov    %r10,%rax
   0.12%    0x00007f7427250803:   imul   0xd8(%rsp),%rax              ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@326 (line 311)
            0x00007f742725080c:   add    %rax,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@327 (line 311)
            0x00007f742725080f:   mov    %r11,%rax
            0x00007f7427250812:   imul   %r14,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@334 (line 311)
   0.13%    0x00007f7427250816:   add    %rax,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@335 (line 311)
            0x00007f7427250819:   mov    %rbx,%rax
            0x00007f742725081c:   imul   %rsi,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@342 (line 311)
            0x00007f7427250820:   add    %rax,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@343 (line 311)
   0.22%    0x00007f7427250823:   mov    0xc8(%rsp),%rax
            0x00007f742725082b:   imul   %r13,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@350 (line 311)
   0.00%    0x00007f742725082f:   add    %rax,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@351 (line 311)
            0x00007f7427250832:   mov    0xe0(%rsp),%rax              ;   {no_reloc}
   0.09%    0x00007f742725083a:   imul   %rdx,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@359 (line 311)
            0x00007f742725083e:   add    %rax,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@360 (line 311)
   0.00%    0x00007f7427250841:   mov    0xf0(%rsp),%rax
            0x00007f7427250849:   imul   %rbp,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@368 (line 311)
   0.11%    0x00007f742725084d:   add    %rax,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@369 (line 311)
   0.00%    0x00007f7427250850:   mov    0x100(%rsp),%rax
            0x00007f7427250858:   imul   %rcx,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@377 (line 311)
            0x00007f742725085c:   add    %r8,%rax                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@378 (line 311)
   0.12%    0x00007f742725085f:   mov    0x108(%rsp),%r8
            0x00007f7427250867:   imul   %r9,%r8                      ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@388 (line 312)
            0x00007f742725086b:   mov    %rdi,%r9
            0x00007f742725086e:   imul   0xf8(%rsp),%r9               ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@396 (line 312)
   0.10%    0x00007f7427250877:   add    %r9,%r8                      ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@397 (line 312)
   0.06%    0x00007f742725087a:   mov    %r10,%r9
            0x00007f742725087d:   imul   0xe8(%rsp),%r9               ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@405 (line 312)
            0x00007f7427250886:   add    %r9,%r8                      ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@406 (line 312)
   0.13%    0x00007f7427250889:   mov    %r11,%r9
            0x00007f742725088c:   imul   0xd8(%rsp),%r9               ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@414 (line 312)
   0.08%    0x00007f7427250895:   add    %r9,%r8                      ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@415 (line 312)
   0.15%    0x00007f7427250898:   mov    %rbx,%r9
            0x00007f742725089b:   imul   %r14,%r9                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@422 (line 312)
            0x00007f742725089f:   add    %r9,%r8                      ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@423 (line 312)
   0.25%    0x00007f74272508a2:   mov    0xc8(%rsp),%r9
            0x00007f74272508aa:   imul   %rsi,%r9                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@430 (line 312)
            0x00007f74272508ae:   add    %r9,%r8                      ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@431 (line 312)
            0x00007f74272508b1:   mov    0xe0(%rsp),%r9
   0.13%    0x00007f74272508b9:   imul   %r13,%r9                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@439 (line 312)
            0x00007f74272508bd:   add    %r9,%r8                      ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@440 (line 312)
            0x00007f74272508c0:   mov    0xf0(%rsp),%r9
            0x00007f74272508c8:   imul   %rdx,%r9                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@448 (line 312)
   0.09%    0x00007f74272508cc:   add    %r9,%r8                      ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@449 (line 312)
            0x00007f74272508cf:   mov    0x100(%rsp),%r9
            0x00007f74272508d7:   imul   %rbp,%r9                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@457 (line 312)
            0x00007f74272508db:   add    %r9,%r8                      ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@458 (line 312)
   0.12%    0x00007f74272508de:   imul   0x110(%rsp),%rcx             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@466 (line 312)
            0x00007f74272508e7:   add    %rcx,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@467 (line 312)
   0.12%    0x00007f74272508ea:   imul   0x108(%rsp),%rdi             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@477 (line 313)
   0.01%    0x00007f74272508f3:   mov    %r10,%rcx
            0x00007f74272508f6:   imul   0xf8(%rsp),%rcx              ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@485 (line 313)
   0.06%    0x00007f74272508ff:   add    %rcx,%rdi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@486 (line 313)
   0.15%    0x00007f7427250902:   mov    %r11,%rcx
            0x00007f7427250905:   imul   0xe8(%rsp),%rcx              ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@494 (line 313)
            0x00007f742725090e:   add    %rcx,%rdi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@495 (line 313)
   0.13%    0x00007f7427250911:   mov    %rbx,%rcx
            0x00007f7427250914:   imul   0xd8(%rsp),%rcx              ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@503 (line 313)
            0x00007f742725091d:   add    %rcx,%rdi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@504 (line 313)
   0.11%    0x00007f7427250920:   mov    0xc8(%rsp),%rcx
            0x00007f7427250928:   imul   %r14,%rcx                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@511 (line 313)
            0x00007f742725092c:   add    %rcx,%rdi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@512 (line 313)
   0.12%    0x00007f742725092f:   mov    0xe0(%rsp),%rcx              ;   {no_reloc}
            0x00007f7427250937:   imul   %rsi,%rcx                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@520 (line 313)
            0x00007f742725093b:   add    %rcx,%rdi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@521 (line 313)
   0.13%    0x00007f742725093e:   mov    0xf0(%rsp),%rcx
            0x00007f7427250946:   imul   %r13,%rcx                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@529 (line 313)
            0x00007f742725094a:   add    %rcx,%rdi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@530 (line 313)
   0.13%    0x00007f742725094d:   mov    0x100(%rsp),%rcx
            0x00007f7427250955:   imul   %rdx,%rcx                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@538 (line 313)
            0x00007f7427250959:   add    %rcx,%rdi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@539 (line 313)
   0.13%    0x00007f742725095c:   mov    0x110(%rsp),%rcx
            0x00007f7427250964:   imul   %rbp,%rcx                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@547 (line 313)
            0x00007f7427250968:   mov    %rdi,%rbp
            0x00007f742725096b:   add    %rcx,%rbp                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@548 (line 313)
   0.14%    0x00007f742725096e:   imul   0x108(%rsp),%r10             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@558 (line 314)
            0x00007f7427250977:   mov    %r11,%rcx
            0x00007f742725097a:   imul   0xf8(%rsp),%rcx              ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@566 (line 314)
   0.12%    0x00007f7427250983:   add    %rcx,%r10                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@567 (line 314)
   0.15%    0x00007f7427250986:   mov    %rbx,%rcx
            0x00007f7427250989:   imul   0xe8(%rsp),%rcx              ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@575 (line 314)
            0x00007f7427250992:   add    %rcx,%r10                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@576 (line 314)
   0.13%    0x00007f7427250995:   mov    0xc8(%rsp),%rcx
            0x00007f742725099d:   imul   0xd8(%rsp),%rcx              ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@584 (line 314)
            0x00007f74272509a6:   add    %rcx,%r10                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@585 (line 314)
   0.13%    0x00007f74272509a9:   mov    0xe0(%rsp),%rcx
            0x00007f74272509b1:   imul   %r14,%rcx                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@593 (line 314)
            0x00007f74272509b5:   add    %rcx,%r10                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@594 (line 314)
   0.15%    0x00007f74272509b8:   mov    0xf0(%rsp),%rcx
            0x00007f74272509c0:   imul   %rsi,%rcx                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@602 (line 314)
            0x00007f74272509c4:   add    %rcx,%r10                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@603 (line 314)
   0.12%    0x00007f74272509c7:   mov    0x100(%rsp),%rcx
            0x00007f74272509cf:   imul   %r13,%rcx                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@611 (line 314)
   0.06%    0x00007f74272509d3:   add    %rcx,%r10                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@612 (line 314)
   0.12%    0x00007f74272509d6:   imul   0x110(%rsp),%rdx             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@620 (line 314)
            0x00007f74272509df:   add    %rdx,%r10                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@621 (line 314)
   0.13%    0x00007f74272509e2:   imul   0x108(%rsp),%r11             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@631 (line 315)
            0x00007f74272509eb:   mov    %rbx,%rdx
            0x00007f74272509ee:   imul   0xf8(%rsp),%rdx              ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@639 (line 315)
   0.04%    0x00007f74272509f7:   add    %rdx,%r11                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@640 (line 315)
   0.12%    0x00007f74272509fa:   mov    0xc8(%rsp),%rdx
            0x00007f7427250a02:   imul   0xe8(%rsp),%rdx              ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@648 (line 315)
            0x00007f7427250a0b:   add    %rdx,%r11                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@649 (line 315)
   0.12%    0x00007f7427250a0e:   mov    0xe0(%rsp),%rdx
            0x00007f7427250a16:   imul   0xd8(%rsp),%rdx              ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@658 (line 315)
            0x00007f7427250a1f:   add    %rdx,%r11                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@659 (line 315)
   0.12%    0x00007f7427250a22:   mov    0xf0(%rsp),%rdx
            0x00007f7427250a2a:   imul   %r14,%rdx                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@667 (line 315)
            0x00007f7427250a2e:   add    %rdx,%r11                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@668 (line 315)
   0.15%    0x00007f7427250a31:   mov    0x100(%rsp),%rdx             ;   {no_reloc}
            0x00007f7427250a39:   imul   %rsi,%rdx                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@676 (line 315)
            0x00007f7427250a3d:   add    %rdx,%r11                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@677 (line 315)
   0.15%    0x00007f7427250a40:   mov    0x110(%rsp),%rdx
            0x00007f7427250a48:   imul   %r13,%rdx                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@685 (line 315)
            0x00007f7427250a4c:   add    %rdx,%r11                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@686 (line 315)
   0.14%    0x00007f7427250a4f:   imul   0x108(%rsp),%rbx             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@696 (line 316)
            0x00007f7427250a58:   mov    0xc8(%rsp),%rdx
            0x00007f7427250a60:   imul   0xf8(%rsp),%rdx              ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@704 (line 316)
   0.11%    0x00007f7427250a69:   add    %rdx,%rbx                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@705 (line 316)
   0.15%    0x00007f7427250a6c:   mov    0xe0(%rsp),%rdx
            0x00007f7427250a74:   imul   0xe8(%rsp),%rdx              ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@714 (line 316)
            0x00007f7427250a7d:   add    %rdx,%rbx                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@715 (line 316)
   0.13%    0x00007f7427250a80:   mov    0xf0(%rsp),%r13
            0x00007f7427250a88:   imul   0xd8(%rsp),%r13              ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@724 (line 316)
   0.04%    0x00007f7427250a91:   add    %r13,%rbx                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@725 (line 316)
   0.12%    0x00007f7427250a94:   mov    0x100(%rsp),%rdx
            0x00007f7427250a9c:   imul   %r14,%rdx                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@733 (line 316)
            0x00007f7427250aa0:   add    %rdx,%rbx                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@734 (line 316)
   0.12%    0x00007f7427250aa3:   mov    0x110(%rsp),%rdx
            0x00007f7427250aab:   imul   %rsi,%rdx                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@742 (line 316)
            0x00007f7427250aaf:   add    %rdx,%rbx                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@743 (line 316)
   0.14%    0x00007f7427250ab2:   mov    0xc8(%rsp),%rsi
            0x00007f7427250aba:   imul   0x108(%rsp),%rsi             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@753 (line 317)
            0x00007f7427250ac3:   mov    0xe0(%rsp),%rdx
            0x00007f7427250acb:   imul   0xf8(%rsp),%rdx              ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@762 (line 317)
   0.12%    0x00007f7427250ad4:   add    %rdx,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@763 (line 317)
   0.08%    0x00007f7427250ad7:   mov    0xf0(%rsp),%r13
            0x00007f7427250adf:   imul   0xe8(%rsp),%r13              ;*lmul {reexecute=0 rethrow=0 return_oop=0}
....................................................................................................
  16.03%  <total for region 2>

....[Hottest Regions]...............................................................................
  16.10%      jvmci, level 4  sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce, version 2, compile id 1063 
  16.03%      jvmci, level 4  sun.security.util.math.intpoly.IntegerPolynomialP256::mult, version 2, compile id 1068 
   8.05%      jvmci, level 4  sun.security.ec.point.ProjectivePoint$Mutable::conditionalSet, version 2, compile id 1100 
   7.47%      jvmci, level 4  sun.security.util.math.intpoly.P256OrderField::carryReduce0, version 2, compile id 1168 
   2.93%      jvmci, level 4  sun.security.ec.point.ProjectivePoint$Mutable::conditionalSet, version 2, compile id 1100 
   2.88%      jvmci, level 4  sun.security.ec.point.ProjectivePoint$Mutable::conditionalSet, version 2, compile id 1100 
   2.72%      jvmci, level 4  sun.security.ec.point.ProjectivePoint$Mutable::conditionalSet, version 2, compile id 1100 
   2.22%      jvmci, level 4  sun.security.util.math.IntegerModuloP$MultiplicativeInverser$Secp256R1::inverse, version 4, compile id 1404 
   2.15%        runtime stub  StubRoutines::jlong_disjoint_arraycopy 
   2.01%      jvmci, level 4  sun.security.ec.ECOperations$PointMultiplier::lookup, version 2, compile id 1146 
   2.01%      jvmci, level 4  sun.security.util.math.intpoly.IntegerPolynomialP256::mult, version 2, compile id 1068 
   1.91%      jvmci, level 4  sun.security.util.math.intpoly.P256OrderField::square, version 2, compile id 1446 
   1.06%      jvmci, level 4  sun.security.util.math.intpoly.P256OrderField::carryReduce, version 2, compile id 1167 
   0.93%        runtime stub  StubRoutines::sha256_implCompressMB 
   0.88%      jvmci, level 4  sun.security.util.math.IntegerModuloP$MultiplicativeInverser$Secp256R1Field::inverse, version 3, compile id 1408 
   0.80%      jvmci, level 4  sun.security.ec.ECOperations::setSum, version 2, compile id 1229 
   0.78%      jvmci, level 4  sun.security.ec.ECOperations::setSum, version 2, compile id 1229 
   0.70%      jvmci, level 4  sun.security.ec.ECOperations::setSum, version 2, compile id 1229 
   0.62%      jvmci, level 4  sun.security.ec.ECOperations::setSum, version 2, compile id 1229 
   0.56%      jvmci, level 4  sun.security.util.math.intpoly.IntegerPolynomialP256::mult, version 2, compile id 1068 
  27.19%  <...other 1212 warm regions...>
....................................................................................................
 100.00%  <totals>

....[Hottest Methods (after inlining)]..............................................................
  19.65%      jvmci, level 4  sun.security.util.math.intpoly.IntegerPolynomialP256::mult, version 2, compile id 1068 
  16.61%      jvmci, level 4  sun.security.ec.point.ProjectivePoint$Mutable::conditionalSet, version 2, compile id 1100 
  16.30%      jvmci, level 4  sun.security.ec.ECOperations::setSum, version 2, compile id 1229 
  16.10%      jvmci, level 4  sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce, version 2, compile id 1063 
   7.47%      jvmci, level 4  sun.security.util.math.intpoly.P256OrderField::carryReduce0, version 2, compile id 1168 
   3.41%      jvmci, level 4  sun.security.ec.ECOperations::setDouble, version 2, compile id 1213 
   2.70%      jvmci, level 4  sun.security.util.math.IntegerModuloP$MultiplicativeInverser$Secp256R1::inverse, version 4, compile id 1404 
   2.15%        runtime stub  StubRoutines::jlong_disjoint_arraycopy 
   2.07%        runtime stub  StubRoutines::sha256_implCompressMB 
   2.01%      jvmci, level 4  sun.security.ec.ECOperations$PointMultiplier::lookup, version 2, compile id 1146 
   1.97%      jvmci, level 4  sun.security.util.math.IntegerModuloP$MultiplicativeInverser$Secp256R1Field::inverse, version 3, compile id 1408 
   1.91%      jvmci, level 4  sun.security.util.math.intpoly.P256OrderField::square, version 2, compile id 1446 
   1.79%              kernel  [unknown] 
   1.06%      jvmci, level 4  sun.security.util.math.intpoly.P256OrderField::carryReduce, version 2, compile id 1167 
   0.98%      jvmci, level 4  sun.security.util.math.intpoly.P256OrderField::mult, version 2, compile id 1285 
   0.40%      jvmci, level 4  sun.security.ec.ECOperations$PointMultiplier$Secp256R1GeneratorMultiplier::pointMultiply, version 3, compile id 1456 
   0.35%      jvmci, level 4  sun.security.util.math.intpoly.IntegerPolynomialP256::reduce, version 2, compile id 1154 
   0.26%      jvmci, level 4  sun.security.util.math.intpoly.IntegerPolynomial::evaluate, version 2, compile id 1460 
   0.24%                      <unknown> 
   0.23%      jvmci, level 4  sun.security.ec.ECDSAOperations::signDigest, version 3, compile id 1546 
   2.34%  <...other 135 warm methods...>
....................................................................................................
 100.00%  <totals>

....[Distribution by Source]........................................................................
  93.25%      jvmci, level 4
   4.28%        runtime stub
   1.79%              kernel
   0.24%                    
   0.19%           libjvm.so
   0.14%        libc-2.31.so
   0.04%  libpthread-2.31.so
   0.02%      hsdis-amd64.so
   0.02%          ld-2.31.so
   0.02%              [vdso]
   0.01%         interpreter
   0.00%    perf-2106881.map
....................................................................................................
 100.00%  <totals>



# JMH version: 1.37
# VM version: JDK 21, OpenJDK 64-Bit Server VM, 21+35-jvmci-23.1-b15
# VM invoker: /home/gogu/bench_jdks/graalvm-community-openjdk-21+35.1/bin/java
# VM options: -XX:ThreadPriorityPolicy=1 -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCIProduct -XX:-UnlockExperimentalVMOptions -Xms4g -Xmx4g -XX:+AlwaysPreTouch
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.performance.benchmarks.api.signature.DsaEcSignatureBenchmark.sign
# Parameters: (algorithm = secp256r1, messageLength = 16384)

# Run progress: 25.00% complete, ETA 00:17:34
# Fork: 1 of 1
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 1253.833 us/op
# Warmup Iteration   2: 373.375 us/op
# Warmup Iteration   3: 369.299 us/op
# Warmup Iteration   4: 368.889 us/op
# Warmup Iteration   5: 369.216 us/op
Iteration   1: 368.498 us/op
Iteration   2: 368.491 us/op
Iteration   3: 368.370 us/op
Iteration   4: 368.629 us/op
Iteration   5: 368.372 us/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "com.ionutbalosin.jvm.performance.benchmarks.api.signature.DsaEcSignatureBenchmark.sign":
  368.472 ±(99.9%) 0.414 us/op [Average]
  (min, avg, max) = (368.370, 368.472, 368.629), stdev = 0.107
  CI (99.9%): [368.058, 368.886] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.signature.DsaEcSignatureBenchmark.sign:asm":
PrintAssembly processed: 417959 total address lines.
Perf output processed (skipped 62.754 seconds):
 Column 1: cycles (50894 events)

Hottest code regions (>10.00% "cycles" events):
 Event counts are percents of total event count.

....[Hottest Region 1]..............................................................................
runtime stub, StubRoutines::sha256_implCompressMB 

 <region is too big to display, has 1087 lines, but threshold is 1000>
....................................................................................................
  14.20%  <total for region 1>

....[Hottest Region 2]..............................................................................
jvmci, level 4, sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce, version 2, compile id 1073 

             # parm18:   [sp+0xb8]   = long
             # parm19:   [sp+0xc0]   = long
             0x00007ff1af249620:   mov    0x8(%rsi),%r10d
             0x00007ff1af249624:   movabs $0x7ff133000000,%r12
             0x00007ff1af24962e:   add    %r12,%r10
             0x00007ff1af249631:   xor    %r12,%r12
             0x00007ff1af249634:   cmp    %r10,%rax
             0x00007ff1af249637:   jne    0x00007ff1aec2f080           ;   {runtime_call ic_miss_stub}
             0x00007ff1af24963d:   data16 xchg %ax,%ax
           [Verified Entry Point]
   0.13%     0x00007ff1af249640:   mov    %eax,-0x14000(%rsp)
   0.17%     0x00007ff1af249647:   sub    $0x48,%rsp
             0x00007ff1af24964b:   nop
             0x00007ff1af24964c:   cmpl   $0x1,0x20(%r15)
             0x00007ff1af249654:   jne    0x00007ff1af249cfb
   0.13%     0x00007ff1af24965a:   mov    %rbp,0x40(%rsp)
   0.03%     0x00007ff1af24965f:   mov    %r8,0x30(%rsp)
   0.10%     0x00007ff1af249664:   mov    %r9,0x28(%rsp)
   0.21%     0x00007ff1af249669:   mov    %rdi,0x20(%rsp)              ; ImmutableOopMap {rdx=Oop rsi=Oop }
                                                                       ;*lconst_0 {reexecute=1 rethrow=0 return_oop=0}
                                                                       ; - (reexecute) sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@0 (line 81)
   0.09%     0x00007ff1af24966e:   cmpl   $0xa,0xc(%rdx)               ; implicit exception: dispatches to 0x00007ff1af249d1f
   0.01%  ╭  0x00007ff1af249672:   jb     0x00007ff1af249c8e           ;*lastore {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@400 (line 223)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.00%  │  0x00007ff1af249678:   mov    0xc0(%rsp),%r10
   0.03%  │  0x00007ff1af249680:   mov    0xb8(%rsp),%r11
   0.10%  │  0x00007ff1af249688:   mov    0xb0(%rsp),%rax
          │  0x00007ff1af249690:   mov    0xa8(%rsp),%r13
   0.00%  │  0x00007ff1af249698:   mov    0xa0(%rsp),%r14
   0.03%  │  0x00007ff1af2496a0:   mov    0x98(%rsp),%rbp
   0.10%  │  0x00007ff1af2496a8:   mov    0x90(%rsp),%rsi
   0.00%  │  0x00007ff1af2496b0:   mov    0x80(%rsp),%rbx
   0.00%  │  0x00007ff1af2496b8:   mov    %rdx,(%rsp)
   0.03%  │  0x00007ff1af2496bc:   mov    0x88(%rsp),%rdi
   0.09%  │  0x00007ff1af2496c4:   mov    0x78(%rsp),%r9
          │  0x00007ff1af2496c9:   mov    0x70(%rsp),%r8
   0.00%  │  0x00007ff1af2496ce:   mov    %r10,%rdx
   0.03%  │  0x00007ff1af2496d1:   sar    $0x6,%rdx                    ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@23 (line 84)
   0.12%  │  0x00007ff1af2496d5:   add    %rdx,%r11                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@24 (line 84)
          │  0x00007ff1af2496d8:   mov    %r11,%rdx
   0.01%  │  0x00007ff1af2496db:   shl    $0x16,%rdx                   ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@151 (line 96)
   0.02%  │  0x00007ff1af2496df:   and    $0x3ffffff,%rdx              ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@155 (line 96)
   0.12%  │  0x00007ff1af2496e6:   sub    %rdx,%rbx                    ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@156 (line 96)
          │  0x00007ff1af2496e9:   mov    %r10,%rdx
          │  0x00007ff1af2496ec:   shl    $0x14,%rdx                   ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@9 (line 83)
   0.05%  │  0x00007ff1af2496f0:   and    $0x3ffffff,%rdx              ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@13 (line 83)
   0.10%  │  0x00007ff1af2496f7:   add    %rdx,%rax                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@14 (line 83)
          │  0x00007ff1af2496fa:   mov    %r10,%rdx
   0.00%  │  0x00007ff1af2496fd:   sar    $0xc,%rdx                    ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@47 (line 86)
   0.03%  │  0x00007ff1af249701:   sub    %rdx,%rax                    ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@48 (line 86)
   0.09%  │  0x00007ff1af249704:   mov    %r11,%rdx
          │  0x00007ff1af249707:   sar    $0x6,%rdx                    ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@117 (line 93)
   0.01%  │  0x00007ff1af24970b:   add    %rdx,%rax                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@118 (line 93)
   0.03%  │  0x00007ff1af24970e:   mov    %rax,%rdx
   0.09%  │  0x00007ff1af249711:   sar    $0x4,%rdx                    ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@258 (line 106)
   0.00%  │  0x00007ff1af249715:   sub    %rdx,%rbx                    ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@259 (line 106)
   0.01%  │  0x00007ff1af249718:   mov    %rax,%rdx
   0.02%  │  0x00007ff1af24971b:   shl    $0xe,%rdx                    ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@221 (line 103)
   0.11%  │  0x00007ff1af24971f:   and    $0x3ffffff,%rdx              ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@225 (line 103)
          │  0x00007ff1af249726:   sub    %rdx,%rbp                    ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@226 (line 103)
   0.00%  │  0x00007ff1af249729:   mov    %r10,%rdx
   0.03%  │  0x00007ff1af24972c:   shl    $0xe,%rdx                    ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@33 (line 85)
   0.10%  │  0x00007ff1af249730:   and    $0x3ffffff,%rdx              ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@37 (line 85)
          │                                                            ;   {no_reloc}
          │  0x00007ff1af249737:   sub    %rdx,%r13                    ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@38 (line 85)
          │  0x00007ff1af24973a:   mov    %r11,%rdx
   0.04%  │  0x00007ff1af24973d:   shl    $0x14,%rdx                   ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@103 (line 92)
   0.09%  │  0x00007ff1af249741:   and    $0x3ffffff,%rdx              ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@107 (line 92)
          │  0x00007ff1af249748:   add    %rdx,%r13                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@108 (line 92)
   0.00%  │  0x00007ff1af24974b:   mov    %r11,%rdx
   0.02%  │  0x00007ff1af24974e:   sar    $0xc,%rdx                    ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@141 (line 95)
   0.12%  │  0x00007ff1af249752:   sub    %rdx,%r13                    ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@142 (line 95)
          │  0x00007ff1af249755:   mov    %rax,%rdx
   0.00%  │  0x00007ff1af249758:   sar    $0x6,%rdx                    ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@211 (line 102)
   0.04%  │  0x00007ff1af24975c:   add    %rdx,%r13                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@212 (line 102)
   0.10%  │  0x00007ff1af24975f:   mov    %r13,%rdx
   0.00%  │  0x00007ff1af249762:   shl    $0x14,%rdx                   ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@291 (line 110)
   0.00%  │  0x00007ff1af249766:   and    $0x3ffffff,%rdx              ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@295 (line 110)
   0.02%  │  0x00007ff1af24976d:   add    %rdx,%rbp                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@296 (line 110)
   0.12%  │  0x00007ff1af249770:   mov    %r13,%rdx
          │  0x00007ff1af249773:   sar    $0xc,%rdx                    ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@329 (line 113)
   0.00%  │  0x00007ff1af249777:   sub    %rdx,%rbp                    ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@330 (line 113)
   0.03%  │  0x00007ff1af24977a:   mov    %r11,%rdx
   0.10%  │  0x00007ff1af24977d:   shl    $0xe,%rdx                    ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@127 (line 94)
          │  0x00007ff1af249781:   and    $0x3ffffff,%rdx              ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@131 (line 94)
   0.00%  │  0x00007ff1af249788:   sub    %rdx,%r14                    ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@132 (line 94)
   0.04%  │  0x00007ff1af24978b:   mov    %rax,%rdx
   0.11%  │  0x00007ff1af24978e:   shl    $0x14,%rdx                   ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@197 (line 101)
          │  0x00007ff1af249792:   and    $0x3ffffff,%rdx              ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@201 (line 101)
   0.00%  │  0x00007ff1af249799:   add    %rdx,%r14                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@202 (line 101)
   0.03%  │  0x00007ff1af24979c:   mov    %rax,%rdx
   0.09%  │  0x00007ff1af24979f:   sar    $0xc,%rdx                    ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@235 (line 104)
          │  0x00007ff1af2497a3:   sub    %rdx,%r14                    ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@236 (line 104)
          │  0x00007ff1af2497a6:   mov    %r13,%rdx
   0.03%  │  0x00007ff1af2497a9:   sar    $0x6,%rdx                    ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@305 (line 111)
   0.09%  │  0x00007ff1af2497ad:   add    %rdx,%r14                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@306 (line 111)
          │  0x00007ff1af2497b0:   mov    %r14,%rdx
   0.00%  │  0x00007ff1af2497b3:   sar    $0x6,%rdx                    ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@399 (line 120)
   0.04%  │  0x00007ff1af2497b7:   add    %rdx,%rbp                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@400 (line 120)
   0.14%  │  0x00007ff1af2497ba:   mov    %rbp,%rdx
   0.00%  │  0x00007ff1af2497bd:   shl    $0xe,%rdx                    ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@503 (line 130)
   0.01%  │  0x00007ff1af2497c1:   and    $0x3ffffff,%rdx              ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@507 (line 130)
   0.03%  │  0x00007ff1af2497c8:   sub    %rdx,%rbx                    ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@508 (line 130)
   0.13%  │  0x00007ff1af2497cb:   mov    %r10,%rdx
          │  0x00007ff1af2497ce:   sar    $0x4,%rdx                    ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@70 (line 88)
          │  0x00007ff1af2497d2:   sub    %rdx,%rsi                    ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@71 (line 88)
   0.02%  │  0x00007ff1af2497d5:   mov    %r13,%rdx
   0.10%  │  0x00007ff1af2497d8:   shl    $0xe,%rdx                    ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@315 (line 112)
          │  0x00007ff1af2497dc:   and    $0x3ffffff,%rdx              ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@319 (line 112)
          │  0x00007ff1af2497e3:   sub    %rdx,%rsi                    ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@320 (line 112)
   0.03%  │  0x00007ff1af2497e6:   mov    %r14,%rdx
   0.10%  │  0x00007ff1af2497e9:   shl    $0x14,%rdx                   ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@385 (line 119)
          │  0x00007ff1af2497ed:   and    $0x3ffffff,%rdx              ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@389 (line 119)
   0.00%  │  0x00007ff1af2497f4:   add    %rdx,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@390 (line 119)
   0.01%  │  0x00007ff1af2497f7:   mov    %r14,%rdx
   0.11%  │  0x00007ff1af2497fa:   sar    $0xc,%rdx                    ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@423 (line 122)
   0.00%  │  0x00007ff1af2497fe:   sub    %rdx,%rsi                    ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@424 (line 122)
          │  0x00007ff1af249801:   mov    %rbp,%rdx
   0.02%  │  0x00007ff1af249804:   sar    $0x6,%rdx                    ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@493 (line 129)
   0.11%  │  0x00007ff1af249808:   add    %rdx,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@494 (line 129)
          │  0x00007ff1af24980b:   mov    %rsi,%rdx
   0.00%  │  0x00007ff1af24980e:   shl    $0x14,%rdx                   ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@573 (line 137)
   0.03%  │  0x00007ff1af249812:   and    $0x3ffffff,%rdx              ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@577 (line 137)
   0.12%  │  0x00007ff1af249819:   add    %rdx,%rbx                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@578 (line 137)
          │  0x00007ff1af24981c:   mov    %rsi,%rdx
   0.00%  │  0x00007ff1af24981f:   sar    $0xc,%rdx                    ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@611 (line 140)
   0.02%  │  0x00007ff1af249823:   sub    %rdx,%rbx                    ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@612 (line 140)
   0.12%  │  0x00007ff1af249826:   mov    %r10,%rdx
          │  0x00007ff1af249829:   shl    $0x16,%rdx                   ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@57 (line 87)
   0.00%  │  0x00007ff1af24982d:   and    $0x3ffffff,%rdx              ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@61 (line 87)
   0.02%  │  0x00007ff1af249834:   sub    %rdx,%rdi                    ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@62 (line 87)
          │                                                            ;   {no_reloc}
   0.11%  │  0x00007ff1af249837:   mov    %r11,%rdx
   0.00%  │  0x00007ff1af24983a:   sar    $0x4,%rdx                    ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@164 (line 97)
   0.00%  │  0x00007ff1af24983e:   sub    %rdx,%rdi                    ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@165 (line 97)
   0.02%  │  0x00007ff1af249841:   mov    %r14,%rdx
   0.12%  │  0x00007ff1af249844:   shl    $0xe,%rdx                    ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@409 (line 121)
          │  0x00007ff1af249848:   and    $0x3ffffff,%rdx              ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@413 (line 121)
          │  0x00007ff1af24984f:   sub    %rdx,%rdi                    ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@414 (line 121)
   0.02%  │  0x00007ff1af249852:   mov    %rbp,%rdx
   0.10%  │  0x00007ff1af249855:   shl    $0x14,%rdx                   ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@479 (line 128)
          │  0x00007ff1af249859:   and    $0x3ffffff,%rdx              ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@483 (line 128)
   0.00%  │  0x00007ff1af249860:   add    %rdx,%rdi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@484 (line 128)
   0.03%  │  0x00007ff1af249863:   mov    %rbp,%rdx
   0.10%  │  0x00007ff1af249866:   sar    $0xc,%rdx                    ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@517 (line 131)
          │  0x00007ff1af24986a:   sub    %rdx,%rdi                    ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@518 (line 131)
   0.01%  │  0x00007ff1af24986d:   mov    %rsi,%rdx
   0.03%  │  0x00007ff1af249870:   sar    $0x6,%rdx                    ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@587 (line 138)
   0.14%  │  0x00007ff1af249874:   add    %rdx,%rdi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@588 (line 138)
          │  0x00007ff1af249877:   mov    %rdi,%rdx
   0.00%  │  0x00007ff1af24987a:   sar    $0x6,%rdx                    ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@681 (line 147)
   0.02%  │  0x00007ff1af24987e:   add    %rdx,%rbx                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@682 (line 147)
   0.12%  │  0x00007ff1af249881:   mov    %rbx,%rdx
          │  0x00007ff1af249884:   shl    $0x4,%rdx                    ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@830 (line 161)
   0.00%  │  0x00007ff1af249888:   and    $0x3ffffff,%rdx              ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@834 (line 161)
   0.02%  │  0x00007ff1af24988f:   add    %rdx,%rcx                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@835 (line 161)
   0.13%  │  0x00007ff1af249892:   mov    %r10,%rdx
   0.00%  │  0x00007ff1af249895:   sar    $0x16,%rdx                   ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@93 (line 90)
   0.00%  │  0x00007ff1af249899:   add    %rdx,%r9                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@94 (line 90)
   0.03%  │  0x00007ff1af24989c:   mov    %rax,%rdx
   0.11%  │  0x00007ff1af24989f:   shl    $0x16,%rdx                   ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@245 (line 105)
          │  0x00007ff1af2498a3:   and    $0x3ffffff,%rdx              ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@249 (line 105)
   0.00%  │  0x00007ff1af2498aa:   sub    %rdx,%r9                     ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@250 (line 105)
   0.03%  │  0x00007ff1af2498ad:   mov    %r13,%rdx
   0.14%  │  0x00007ff1af2498b0:   sar    $0x4,%rdx                    ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@352 (line 115)
   0.00%  │  0x00007ff1af2498b4:   sub    %rdx,%r9                     ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@353 (line 115)
   0.01%  │  0x00007ff1af2498b7:   mov    %rsi,%rdx
   0.02%  │  0x00007ff1af2498ba:   shl    $0xe,%rdx                    ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@597 (line 139)
   0.15%  │  0x00007ff1af2498be:   and    $0x3ffffff,%rdx              ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@601 (line 139)
   0.00%  │  0x00007ff1af2498c5:   sub    %rdx,%r9                     ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@602 (line 139)
   0.01%  │  0x00007ff1af2498c8:   mov    %rdi,%rdx
   0.02%  │  0x00007ff1af2498cb:   shl    $0x14,%rdx                   ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@667 (line 146)
   0.10%  │  0x00007ff1af2498cf:   and    $0x3ffffff,%rdx              ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@671 (line 146)
   0.00%  │  0x00007ff1af2498d6:   add    %rdx,%r9                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@672 (line 146)
   0.01%  │  0x00007ff1af2498d9:   mov    %rdi,%rdx
   0.02%  │  0x00007ff1af2498dc:   sar    $0xc,%rdx                    ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@705 (line 149)
   0.14%  │  0x00007ff1af2498e0:   sub    %rdx,%r9                     ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@706 (line 149)
          │  0x00007ff1af2498e3:   mov    %rbx,%rdx
          │  0x00007ff1af2498e6:   sar    $0x6,%rdx                    ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@775 (line 156)
   0.03%  │  0x00007ff1af2498ea:   add    %rdx,%r9                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@776 (line 156)
   0.10%  │  0x00007ff1af2498ed:   shl    $0x4,%r10                    ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@79 (line 89)
          │  0x00007ff1af2498f1:   and    $0x3ffffff,%r10              ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@83 (line 89)
   0.00%  │  0x00007ff1af2498f8:   add    %r10,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@84 (line 89)
   0.02%  │  0x00007ff1af2498fb:   mov    %r11,%r10
   0.09%  │  0x00007ff1af2498fe:   sar    $0x16,%r10                   ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@187 (line 99)
          │  0x00007ff1af249902:   add    %r10,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@188 (line 99)
   0.00%  │  0x00007ff1af249905:   mov    %r13,%r10
   0.01%  │  0x00007ff1af249908:   shl    $0x16,%r10                   ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@339 (line 114)
   0.08%  │  0x00007ff1af24990c:   and    $0x3ffffff,%r10              ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@343 (line 114)
          │  0x00007ff1af249913:   sub    %r10,%r8                     ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@344 (line 114)
   0.00%  │  0x00007ff1af249916:   mov    %r14,%r10
   0.02%  │  0x00007ff1af249919:   sar    $0x4,%r10                    ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@446 (line 124)
   0.11%  │  0x00007ff1af24991d:   sub    %r10,%r8                     ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@447 (line 124)
          │  0x00007ff1af249920:   mov    %rdi,%r10
   0.00%  │  0x00007ff1af249923:   shl    $0xe,%r10                    ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@691 (line 148)
   0.03%  │  0x00007ff1af249927:   and    $0x3ffffff,%r10              ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@695 (line 148)
   0.09%  │  0x00007ff1af24992e:   sub    %r10,%r8                     ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@696 (line 148)
   0.00%  │  0x00007ff1af249931:   mov    %rbx,%r10
   0.00%  │  0x00007ff1af249934:   shl    $0x14,%r10                   ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@761 (line 155)
          │                                                            ;   {no_reloc}
   0.01%  │  0x00007ff1af249938:   and    $0x3ffffff,%r10              ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@765 (line 155)
   0.10%  │  0x00007ff1af24993f:   add    %r10,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@766 (line 155)
          │  0x00007ff1af249942:   mov    %rbx,%r10
          │  0x00007ff1af249945:   sar    $0xc,%r10                    ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@799 (line 158)
   0.02%  │  0x00007ff1af249949:   sub    %r10,%r8                     ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@800 (line 158)
   0.12%  │  0x00007ff1af24994c:   lea    0x2000000(%r8),%r10          ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@5 (line 170)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.00%  │  0x00007ff1af249953:   mov    %r10,%rdx
   0.00%  │  0x00007ff1af249956:   sar    $0x1a,%rdx                   ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@8 (line 170)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.02%  │  0x00007ff1af24995a:   add    %rdx,%r9                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@25 (line 172)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.12%  │  0x00007ff1af24995d:   lea    0x2000000(%r9),%rdx          ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@33 (line 174)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
          │  0x00007ff1af249964:   mov    %r9,0x18(%rsp)
   0.00%  │  0x00007ff1af249969:   mov    %rdx,%r9
   0.02%  │  0x00007ff1af24996c:   sar    $0x1a,%r9                    ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@36 (line 174)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.11%  │  0x00007ff1af249970:   mov    %r8,0x10(%rsp)
   0.00%  │  0x00007ff1af249975:   mov    %r9,%r8
          │  0x00007ff1af249978:   shl    $0x4,%r8                     ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@131 (line 184)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.02%  │  0x00007ff1af24997c:   and    $0x3ffffff,%r8               ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@135 (line 184)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.09%  │  0x00007ff1af249983:   add    %r8,%rcx                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@136 (line 184)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.00%  │  0x00007ff1af249986:   lea    0x2000000(%rcx),%r8          ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@152 (line 187)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.01%  │  0x00007ff1af24998d:   mov    %r10,0x8(%rsp)
   0.03%  │  0x00007ff1af249992:   mov    %r8,%r10
   0.13%  │  0x00007ff1af249995:   and    $0xfffffffffc000000,%r10     ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@163 (line 188)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.00%  │  0x00007ff1af24999c:   sub    %r10,%rcx                    ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@164 (line 188)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.03%  │  0x00007ff1af24999f:   mov    (%rsp),%r10
   0.02%  │  0x00007ff1af2499a3:   mov    %rcx,0x10(%r10)              ;*lastore {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@400 (line 223)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.20%  │  0x00007ff1af2499a7:   mov    %rdi,%rcx
          │  0x00007ff1af2499aa:   shl    $0x4,%rcx                    ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@737 (line 152)
          │  0x00007ff1af2499ae:   and    $0x3ffffff,%rcx              ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@741 (line 152)
   0.01%  │  0x00007ff1af2499b5:   add    0x30(%rsp),%rcx              ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@742 (line 152)
   0.13%  │  0x00007ff1af2499ba:   mov    %r11,0x30(%rsp)
   0.00%  │  0x00007ff1af2499bf:   mov    %rbx,%r11
          │  0x00007ff1af2499c2:   sar    $0x16,%r11                   ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@843 (line 162)
   0.02%  │  0x00007ff1af2499c6:   add    %r11,%rcx                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@844 (line 162)
   0.13%  │  0x00007ff1af2499c9:   mov    %rdx,%r11
          │  0x00007ff1af2499cc:   sar    $0x30,%r11                   ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@144 (line 185)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
          │  0x00007ff1af2499d0:   add    %r11,%rcx                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@145 (line 185)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.01%  │  0x00007ff1af2499d3:   sar    $0x1a,%r8                    ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@155 (line 187)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.11%  │  0x00007ff1af2499d7:   add    %r8,%rcx                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@170 (line 189)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
          │  0x00007ff1af2499da:   lea    0x2000000(%rcx),%r11         ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@178 (line 191)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.00%  │  0x00007ff1af2499e1:   mov    %r11,%r8
   0.01%  │  0x00007ff1af2499e4:   and    $0xfffffffffc000000,%r8      ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@190 (line 192)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.13%  │  0x00007ff1af2499eb:   sub    %r8,%rcx                     ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@191 (line 192)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
          │  0x00007ff1af2499ee:   mov    %rcx,0x18(%r10)              ;*lastore {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@405 (line 224)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
          │  0x00007ff1af2499f2:   mov    %rsi,%r8
   0.01%  │  0x00007ff1af2499f5:   shl    $0x4,%r8                     ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@643 (line 143)
   0.10%  │  0x00007ff1af2499f9:   and    $0x3ffffff,%r8               ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@647 (line 143)
          │  0x00007ff1af249a00:   add    0x28(%rsp),%r8               ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@648 (line 143)
   0.00%  │  0x00007ff1af249a05:   mov    %rdi,%rcx
   0.02%  │  0x00007ff1af249a08:   sar    $0x16,%rcx                   ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@751 (line 153)
   0.12%  │  0x00007ff1af249a0c:   add    %rcx,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@752 (line 153)
          │  0x00007ff1af249a0f:   sar    $0x1a,%r11                   ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@181 (line 191)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
          │  0x00007ff1af249a13:   add    %r11,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@198 (line 193)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.01%  │  0x00007ff1af249a16:   lea    0x2000000(%r8),%r11          ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@206 (line 195)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.15%  │  0x00007ff1af249a1d:   mov    %r11,%rcx
          │  0x00007ff1af249a20:   and    $0xfffffffffc000000,%rcx     ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@218 (line 196)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.00%  │  0x00007ff1af249a27:   sub    %rcx,%r8                     ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@219 (line 196)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.01%  │  0x00007ff1af249a2a:   mov    %r8,0x20(%r10)               ;*lastore {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@410 (line 225)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.15%  │  0x00007ff1af249a2e:   mov    %rbp,%r8
   0.00%  │  0x00007ff1af249a31:   shl    $0x4,%r8                     ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@549 (line 134)
          │                                                            ;   {no_reloc}
          │  0x00007ff1af249a35:   and    $0x3ffffff,%r8               ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@553 (line 134)
   0.02%  │  0x00007ff1af249a3c:   add    0x20(%rsp),%r8               ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@554 (line 134)
   0.12%  │  0x00007ff1af249a41:   mov    %rsi,%rcx
          │  0x00007ff1af249a44:   sar    $0x16,%rcx                   ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@657 (line 144)
          │  0x00007ff1af249a48:   add    %rcx,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@658 (line 144)
   0.01%  │  0x00007ff1af249a4b:   mov    %rbx,%rcx
   0.13%  │  0x00007ff1af249a4e:   shl    $0x16,%rcx                   ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@809 (line 159)
          │  0x00007ff1af249a52:   and    $0x3ffffff,%rcx              ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@813 (line 159)
   0.01%  │  0x00007ff1af249a59:   sub    %rcx,%r8                     ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@814 (line 159)
   0.02%  │  0x00007ff1af249a5c:   mov    %r9,%rcx
   0.10%  │  0x00007ff1af249a5f:   shl    $0x16,%rcx                   ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@110 (line 182)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
          │  0x00007ff1af249a63:   and    $0x3ffffff,%rcx              ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@114 (line 182)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.01%  │  0x00007ff1af249a6a:   sub    %rcx,%r8                     ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@115 (line 182)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.01%  │  0x00007ff1af249a6d:   sar    $0x1a,%r11                   ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@209 (line 195)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.15%  │  0x00007ff1af249a71:   add    %r11,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@226 (line 197)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
          │  0x00007ff1af249a74:   lea    0x2000000(%r8),%r11          ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@234 (line 199)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.00%  │  0x00007ff1af249a7b:   mov    %r11,%rcx
   0.02%  │  0x00007ff1af249a7e:   and    $0xfffffffffc000000,%rcx     ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@246 (line 200)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.17%  │  0x00007ff1af249a85:   sub    %rcx,%r8                     ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@247 (line 200)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.00%  │  0x00007ff1af249a88:   mov    %r8,0x28(%r10)               ;*lastore {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@415 (line 226)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.00%  │  0x00007ff1af249a8c:   mov    %r14,%r8
   0.01%  │  0x00007ff1af249a8f:   shl    $0x4,%r8                     ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@455 (line 125)
   0.12%  │  0x00007ff1af249a93:   and    $0x3ffffff,%r8               ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@459 (line 125)
          │  0x00007ff1af249a9a:   add    0x50(%rsp),%r8               ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@460 (line 125)
   0.00%  │  0x00007ff1af249a9f:   mov    %rbp,%rcx
   0.01%  │  0x00007ff1af249aa2:   sar    $0x16,%rcx                   ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@563 (line 135)
   0.15%  │  0x00007ff1af249aa6:   add    %rcx,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@564 (line 135)
          │  0x00007ff1af249aa9:   mov    %rdi,%rcx
   0.00%  │  0x00007ff1af249aac:   shl    $0x16,%rcx                   ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@715 (line 150)
   0.01%  │  0x00007ff1af249ab0:   and    $0x3ffffff,%rcx              ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@719 (line 150)
   0.14%  │  0x00007ff1af249ab7:   sub    %rcx,%r8                     ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@720 (line 150)
   0.00%  │  0x00007ff1af249aba:   mov    %rbx,%rcx
   0.00%  │  0x00007ff1af249abd:   sar    $0x4,%rcx                    ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@822 (line 160)
   0.01%  │  0x00007ff1af249ac1:   sub    %rcx,%r8                     ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@823 (line 160)
   0.14%  │  0x00007ff1af249ac4:   mov    %rdx,%rcx
          │  0x00007ff1af249ac7:   sar    $0x1e,%rcx                   ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@123 (line 183)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
          │  0x00007ff1af249acb:   sub    %rcx,%r8                     ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@124 (line 183)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.01%  │  0x00007ff1af249ace:   sar    $0x1a,%r11                   ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@237 (line 199)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.15%  │  0x00007ff1af249ad2:   add    %r11,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@254 (line 201)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
          │  0x00007ff1af249ad5:   lea    0x2000000(%r8),%r11          ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@262 (line 203)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.00%  │  0x00007ff1af249adc:   mov    %r11,%rcx
   0.01%  │  0x00007ff1af249adf:   and    $0xfffffffffc000000,%rcx     ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@274 (line 204)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.12%  │  0x00007ff1af249ae6:   sub    %rcx,%r8                     ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@275 (line 204)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
          │  0x00007ff1af249ae9:   mov    %r8,0x30(%r10)               ;*lastore {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@420 (line 227)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.00%  │  0x00007ff1af249aed:   mov    %r13,%r8
   0.00%  │  0x00007ff1af249af0:   shl    $0x4,%r8                     ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@361 (line 116)
   0.12%  │  0x00007ff1af249af4:   and    $0x3ffffff,%r8               ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@365 (line 116)
          │  0x00007ff1af249afb:   add    0x58(%rsp),%r8               ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@366 (line 116)
   0.00%  │  0x00007ff1af249b00:   mov    %r14,%rcx
   0.01%  │  0x00007ff1af249b03:   sar    $0x16,%rcx                   ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@469 (line 126)
   0.15%  │  0x00007ff1af249b07:   add    %rcx,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@470 (line 126)
          │  0x00007ff1af249b0a:   mov    %rsi,%rcx
   0.00%  │  0x00007ff1af249b0d:   shl    $0x16,%rcx                   ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@621 (line 141)
   0.01%  │  0x00007ff1af249b11:   and    $0x3ffffff,%rcx              ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@625 (line 141)
   0.13%  │  0x00007ff1af249b18:   sub    %rcx,%r8                     ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@626 (line 141)
          │  0x00007ff1af249b1b:   sar    $0x4,%rdi                    ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@728 (line 151)
   0.00%  │  0x00007ff1af249b1f:   sub    %rdi,%r8                     ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@729 (line 151)
   0.01%  │  0x00007ff1af249b22:   sar    $0x1a,%r11                   ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@265 (line 203)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.12%  │  0x00007ff1af249b26:   add    %r11,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@282 (line 205)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
          │  0x00007ff1af249b29:   lea    0x2000000(%r8),%r11          ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@290 (line 207)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.01%  │  0x00007ff1af249b30:   mov    %r11,%rcx                    ;   {no_reloc}
   0.01%  │  0x00007ff1af249b33:   and    $0xfffffffffc000000,%rcx     ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@302 (line 208)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.13%  │  0x00007ff1af249b3a:   sub    %rcx,%r8                     ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@303 (line 208)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
          │  0x00007ff1af249b3d:   mov    %r8,0x38(%r10)               ;*lastore {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@425 (line 228)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.01%  │  0x00007ff1af249b41:   mov    %rax,%r8
   0.01%  │  0x00007ff1af249b44:   shl    $0x4,%r8                     ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@267 (line 107)
   0.12%  │  0x00007ff1af249b48:   and    $0x3ffffff,%r8               ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@271 (line 107)
          │  0x00007ff1af249b4f:   add    0x60(%rsp),%r8               ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@272 (line 107)
   0.00%  │  0x00007ff1af249b54:   sar    $0x16,%r13                   ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@375 (line 117)
   0.01%  │  0x00007ff1af249b58:   add    %r13,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@376 (line 117)
   0.14%  │  0x00007ff1af249b5b:   mov    %rbp,%rcx
          │  0x00007ff1af249b5e:   shl    $0x16,%rcx                   ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@527 (line 132)
          │  0x00007ff1af249b62:   and    $0x3ffffff,%rcx              ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@531 (line 132)
   0.01%  │  0x00007ff1af249b69:   sub    %rcx,%r8                     ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@532 (line 132)
   0.11%  │  0x00007ff1af249b6c:   sar    $0x4,%rsi                    ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@634 (line 142)
          │  0x00007ff1af249b70:   sub    %rsi,%r8                     ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@635 (line 142)
   0.01%  │  0x00007ff1af249b73:   sar    $0x1a,%r11                   ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@293 (line 207)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.01%  │  0x00007ff1af249b77:   add    %r11,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@310 (line 209)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.12%  │  0x00007ff1af249b7a:   lea    0x2000000(%r8),%r11          ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@318 (line 211)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
          │  0x00007ff1af249b81:   mov    %r11,%rcx
   0.00%  │  0x00007ff1af249b84:   and    $0xfffffffffc000000,%rcx     ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@330 (line 212)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.01%  │  0x00007ff1af249b8b:   sub    %rcx,%r8                     ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@331 (line 212)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.12%  │  0x00007ff1af249b8e:   mov    %r8,0x40(%r10)               ;*lastore {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@431 (line 229)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.01%  │  0x00007ff1af249b92:   mov    0x30(%rsp),%r8
   0.01%  │  0x00007ff1af249b97:   shl    $0x4,%r8                     ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@173 (line 98)
   0.01%  │  0x00007ff1af249b9b:   and    $0x3ffffff,%r8               ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@177 (line 98)
   0.13%  │  0x00007ff1af249ba2:   add    0x68(%rsp),%r8               ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@178 (line 98)
   0.00%  │  0x00007ff1af249ba7:   sar    $0x16,%rax                   ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@281 (line 108)
   0.01%  │  0x00007ff1af249bab:   add    %rax,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@282 (line 108)
   0.01%  │  0x00007ff1af249bae:   shl    $0x16,%r14                   ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@433 (line 123)
   0.16%  │  0x00007ff1af249bb2:   and    $0x3ffffff,%r14              ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@437 (line 123)
          │  0x00007ff1af249bb9:   sub    %r14,%r8                     ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@438 (line 123)
   0.00%  │  0x00007ff1af249bbc:   sar    $0x4,%rbp                    ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@540 (line 133)
   0.01%  │  0x00007ff1af249bc0:   sub    %rbp,%r8                     ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@541 (line 133)
   0.15%  │  0x00007ff1af249bc3:   shl    $0xe,%rbx                    ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@785 (line 157)
          │  0x00007ff1af249bc7:   and    $0x3ffffff,%rbx              ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@789 (line 157)
   0.01%  │  0x00007ff1af249bce:   sub    %rbx,%r8                     ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@790 (line 157)
   0.01%  │  0x00007ff1af249bd1:   mov    %r9,%rcx
   0.13%  │  0x00007ff1af249bd4:   shl    $0xe,%rcx                    ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@86 (line 180)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.00%  │  0x00007ff1af249bd8:   and    $0x3ffffff,%rcx              ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@90 (line 180)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.01%  │  0x00007ff1af249bdf:   sub    %rcx,%r8                     ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@91 (line 180)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.01%  │  0x00007ff1af249be2:   sar    $0x1a,%r11                   ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@321 (line 211)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.11%  │  0x00007ff1af249be6:   add    %r11,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@338 (line 213)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.00%  │  0x00007ff1af249be9:   lea    0x2000000(%r8),%r11          ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@346 (line 215)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.00%  │  0x00007ff1af249bf0:   mov    %r11,%rcx
   0.01%  │  0x00007ff1af249bf3:   and    $0xfffffffffc000000,%rcx     ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@358 (line 216)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.10%  │  0x00007ff1af249bfa:   sub    %rcx,%r8                     ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@359 (line 216)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.00%  │  0x00007ff1af249bfd:   mov    %r8,0x48(%r10)               ;*lastore {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@437 (line 230)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.03%  │  0x00007ff1af249c01:   mov    0x8(%rsp),%r8
   0.01%  │  0x00007ff1af249c06:   and    $0xfffffffffc000000,%r8      ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@17 (line 171)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.10%  │  0x00007ff1af249c0d:   mov    0x10(%rsp),%rcx
   0.00%  │  0x00007ff1af249c12:   sub    %r8,%rcx                     ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@18 (line 171)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.02%  │  0x00007ff1af249c15:   shl    $0x14,%r9                    ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@62 (line 178)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.00%  │  0x00007ff1af249c19:   and    $0x3ffffff,%r9               ;*land {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@66 (line 178)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.11%  │  0x00007ff1af249c20:   add    %r9,%rcx                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@67 (line 178)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.00%  │  0x00007ff1af249c23:   mov    %rdx,%r8
   0.02%  │  0x00007ff1af249c26:   sar    $0x26,%r8                    ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@100 (line 181)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.01%  │  0x00007ff1af249c2a:   sub    %r8,%rcx                     ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@101 (line 181)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.12%  │  0x00007ff1af249c2d:   sar    $0x1a,%r11                   ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@349 (line 215)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.00%  │  0x00007ff1af249c31:   add    %r11,%rcx                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@366 (line 217)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
          │                                                            ;   {no_reloc}
   0.03%  │  0x00007ff1af249c34:   lea    0x2000000(%rcx),%r11         ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@374 (line 219)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.00%  │  0x00007ff1af249c3b:   mov    %r11,%r8
   0.10%  │  0x00007ff1af249c3e:   and    $0xfffffffffc000000,%r8      ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@386 (line 220)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.00%  │  0x00007ff1af249c45:   sub    %r8,%rcx                     ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@387 (line 220)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.03%  │  0x00007ff1af249c48:   mov    %rcx,0x50(%r10)              ;*lastore {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@443 (line 231)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.01%  │  0x00007ff1af249c4c:   mov    %rdx,%r8
   0.10%  │  0x00007ff1af249c4f:   and    $0xfffffffffc000000,%r8      ;*lshl {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@45 (line 175)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.00%  │  0x00007ff1af249c56:   mov    0x18(%rsp),%r9
   0.02%  │  0x00007ff1af249c5b:   sub    %r8,%r9                      ;*lsub {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@46 (line 175)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.01%  │  0x00007ff1af249c5e:   sar    $0x20,%rdx                   ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@76 (line 179)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.13%  │  0x00007ff1af249c62:   add    %rdx,%r9                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@77 (line 179)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.00%  │  0x00007ff1af249c65:   sar    $0x1a,%r11                   ;*lshr {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@377 (line 219)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.02%  │  0x00007ff1af249c69:   add    %r11,%r9                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@394 (line 221)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.02%  │  0x00007ff1af249c6c:   mov    %r9,0x58(%r10)               ;*lastore {reexecute=0 rethrow=0 return_oop=0}
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce0@449 (line 232)
          │                                                            ; - sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce@891 (line 165)
   0.10%  │  0x00007ff1af249c70:   mov    0x40(%rsp),%rbp
          │  0x00007ff1af249c75:   add    $0x48,%rsp
   0.01%  │  0x00007ff1af249c79:   nopl   0x0(%rax)
   0.01%  │  0x00007ff1af249c80:   cmp    0x450(%r15),%rsp             ;   {poll_return}
          │  0x00007ff1af249c87:   ja     0x00007ff1af249d0b
   0.09%  │  0x00007ff1af249c8d:   ret    
          ↘  0x00007ff1af249c8e:   mov    0xc0(%rsp),%r10
             0x00007ff1af249c96:   mov    0xb8(%rsp),%r11
             0x00007ff1af249c9e:   mov    0xb0(%rsp),%rax
             0x00007ff1af249ca6:   mov    0xa8(%rsp),%r13
             0x00007ff1af249cae:   mov    0xa0(%rsp),%r14
             0x00007ff1af249cb6:   mov    0x98(%rsp),%rbp
             0x00007ff1af249cbe:   mov    0x80(%rsp),%rbx
             0x00007ff1af249cc6:   mov    0x88(%rsp),%rdi
             0x00007ff1af249cce:   mov    0x78(%rsp),%r9
             0x00007ff1af249cd3:   mov    0x70(%rsp),%r8
....................................................................................................
  14.11%  <total for region 2>

....[Hottest Region 3]..............................................................................
jvmci, level 4, sun.security.util.math.intpoly.IntegerPolynomialP256::mult, version 2, compile id 1084 

            # parm2:    r8:r8     = &apos;[J&apos;
            #           [sp+0x130]  (sp of caller)
            0x00007ff1af24b820:   mov    0x8(%rsi),%r10d
            0x00007ff1af24b824:   movabs $0x7ff133000000,%r12
            0x00007ff1af24b82e:   add    %r12,%r10
            0x00007ff1af24b831:   xor    %r12,%r12
            0x00007ff1af24b834:   cmp    %r10,%rax
            0x00007ff1af24b837:   jne    0x00007ff1aec2f080           ;   {runtime_call ic_miss_stub}
            0x00007ff1af24b83d:   data16 xchg %ax,%ax
          [Verified Entry Point]
   1.52%    0x00007ff1af24b840:   mov    %eax,-0x14000(%rsp)
   1.48%    0x00007ff1af24b847:   sub    $0x128,%rsp
   0.01%    0x00007ff1af24b84e:   xchg   %ax,%ax
            0x00007ff1af24b850:   cmpl   $0x1,0x20(%r15)
            0x00007ff1af24b858:   jne    0x00007ff1af24c011
   0.10%    0x00007ff1af24b85e:   mov    %rbp,0x120(%rsp)             ; ImmutableOopMap {rcx=Oop rdx=Oop rsi=Oop r8=Oop }
                                                                      ;*aload_1 {reexecute=1 rethrow=0 return_oop=0}
                                                                      ; - (reexecute) sun.security.util.math.intpoly.IntegerPolynomialP256::mult@0 (line 303)
   0.10%    0x00007ff1af24b866:   mov    0xc(%rdx),%r9d               ; implicit exception: dispatches to 0x00007ff1af24c03a
                                                                      ; ImmutableOopMap {rcx=Oop rdx=Oop rsi=Oop r8=Oop }
                                                                      ;*aload_1 {reexecute=1 rethrow=0 return_oop=0}
                                                                      ; - (reexecute) sun.security.util.math.intpoly.IntegerPolynomialP256::mult@0 (line 303)
   0.00%    0x00007ff1af24b86a:   mov    0xc(%rcx),%edi               ; implicit exception: dispatches to 0x00007ff1af24c05d
   0.00%    0x00007ff1af24b86d:   cmp    $0xa,%r9d
            0x00007ff1af24b871:   jb     0x00007ff1af24bfee           ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@2 (line 303)
            0x00007ff1af24b877:   cmp    $0xa,%edi
            0x00007ff1af24b87a:   jb     0x00007ff1af24bfee           ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@5 (line 303)
   0.12%    0x00007ff1af24b880:   mov    %r8,0x88(%rsp)
            0x00007ff1af24b888:   mov    %rsi,0x80(%rsp)
   0.42%    0x00007ff1af24b890:   mov    0x10(%rdx),%r9               ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@2 (line 303)
   0.01%    0x00007ff1af24b894:   mov    0x18(%rdx),%rdi              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@18 (line 304)
   0.00%    0x00007ff1af24b898:   mov    0x20(%rdx),%r10              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@43 (line 305)
   0.00%    0x00007ff1af24b89c:   mov    0x28(%rdx),%r11              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@76 (line 306)
   0.14%    0x00007ff1af24b8a0:   mov    0x30(%rdx),%rbx              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@117 (line 307)
   0.00%    0x00007ff1af24b8a4:   mov    0x38(%rdx),%rax              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@166 (line 308)
   0.00%    0x00007ff1af24b8a8:   mov    0x40(%rdx),%rbp              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@225 (line 309)
   0.00%    0x00007ff1af24b8ac:   mov    0x48(%rdx),%r13              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@294 (line 310)
   0.11%    0x00007ff1af24b8b0:   mov    0x50(%rdx),%r14              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@373 (line 311)
   0.01%    0x00007ff1af24b8b4:   mov    0x58(%rdx),%rdx              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@462 (line 312)
   0.00%    0x00007ff1af24b8b8:   mov    0x58(%rcx),%r8               ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@387 (line 312)
   0.00%    0x00007ff1af24b8bc:   mov    0x50(%rcx),%rsi              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@308 (line 311)
   0.09%    0x00007ff1af24b8c0:   mov    %rdx,0x110(%rsp)
   0.09%    0x00007ff1af24b8c8:   mov    0x48(%rcx),%rdx              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@239 (line 310)
   0.01%    0x00007ff1af24b8cc:   mov    %r8,0x108(%rsp)
   0.02%    0x00007ff1af24b8d4:   mov    0x40(%rcx),%r8               ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@180 (line 309)
   0.01%    0x00007ff1af24b8d8:   mov    %r14,0x100(%rsp)
   0.09%    0x00007ff1af24b8e0:   mov    0x38(%rcx),%r14              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@130 (line 308)
   0.01%    0x00007ff1af24b8e4:   mov    %rsi,0xf8(%rsp)
   0.01%    0x00007ff1af24b8ec:   mov    0x30(%rcx),%rsi              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@89 (line 307)
   0.00%    0x00007ff1af24b8f0:   mov    %r13,0xf0(%rsp)
   0.28%    0x00007ff1af24b8f8:   mov    0x28(%rcx),%r13              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@56 (line 306)
   0.01%    0x00007ff1af24b8fc:   mov    %rdx,0xe8(%rsp)
   0.01%    0x00007ff1af24b904:   mov    0x20(%rcx),%rdx              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@31 (line 305)
   0.00%    0x00007ff1af24b908:   mov    %rbp,0xe0(%rsp)
   0.08%    0x00007ff1af24b910:   mov    0x18(%rcx),%rbp              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@14 (line 304)
   0.00%    0x00007ff1af24b914:   mov    0x10(%rcx),%rcx              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@5 (line 303)
   0.01%    0x00007ff1af24b918:   mov    %r8,0xd8(%rsp)
            0x00007ff1af24b920:   mov    %r9,%r8
   0.10%    0x00007ff1af24b923:   imul   %rcx,%r8                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@6 (line 303)
   0.00%    0x00007ff1af24b927:   mov    %r8,0xd0(%rsp)
   0.04%    0x00007ff1af24b92f:   mov    %rbp,%r8
   0.00%    0x00007ff1af24b932:   imul   %r9,%r8                      ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@15 (line 304)
   0.09%    0x00007ff1af24b936:   mov    %rax,0xc8(%rsp)              ;   {no_reloc}
   0.06%    0x00007ff1af24b93e:   mov    %rdi,%rax
   0.00%    0x00007ff1af24b941:   imul   %rcx,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@22 (line 304)
            0x00007ff1af24b945:   add    %rax,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@23 (line 304)
   0.08%    0x00007ff1af24b948:   mov    %rdx,%rax
   0.03%    0x00007ff1af24b94b:   imul   %r9,%rax                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@32 (line 305)
   0.00%    0x00007ff1af24b94f:   mov    %r8,0xc0(%rsp)
   0.07%    0x00007ff1af24b957:   mov    %rdi,%r8
            0x00007ff1af24b95a:   imul   %rbp,%r8                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@39 (line 305)
   0.03%    0x00007ff1af24b95e:   add    %r8,%rax                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@40 (line 305)
   0.00%    0x00007ff1af24b961:   mov    %r10,%r8
   0.06%    0x00007ff1af24b964:   imul   %rcx,%r8                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@47 (line 305)
   0.00%    0x00007ff1af24b968:   add    %r8,%rax                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@48 (line 305)
   0.04%    0x00007ff1af24b96b:   mov    %r13,%r8
   0.01%    0x00007ff1af24b96e:   imul   %r9,%r8                      ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@57 (line 306)
   0.12%    0x00007ff1af24b972:   mov    %rax,0xb8(%rsp)
   0.02%    0x00007ff1af24b97a:   mov    %rdi,%rax
   0.03%    0x00007ff1af24b97d:   imul   %rdx,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@64 (line 306)
   0.01%    0x00007ff1af24b981:   add    %rax,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@65 (line 306)
   0.04%    0x00007ff1af24b984:   mov    %r10,%rax
   0.02%    0x00007ff1af24b987:   imul   %rbp,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@72 (line 306)
   0.03%    0x00007ff1af24b98b:   add    %rax,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@73 (line 306)
   0.08%    0x00007ff1af24b98e:   mov    %r11,%rax
   0.00%    0x00007ff1af24b991:   imul   %rcx,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@80 (line 306)
   0.02%    0x00007ff1af24b995:   add    %r8,%rax                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@81 (line 306)
   0.08%    0x00007ff1af24b998:   mov    %rsi,%r8
   0.06%    0x00007ff1af24b99b:   imul   %r9,%r8                      ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@90 (line 307)
   0.01%    0x00007ff1af24b99f:   mov    %rax,0xb0(%rsp)
   0.12%    0x00007ff1af24b9a7:   mov    %rdi,%rax
   0.00%    0x00007ff1af24b9aa:   imul   %r13,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@97 (line 307)
   0.00%    0x00007ff1af24b9ae:   add    %rax,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@98 (line 307)
   0.01%    0x00007ff1af24b9b1:   mov    %r10,%rax
   0.08%    0x00007ff1af24b9b4:   imul   %rdx,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@105 (line 307)
   0.01%    0x00007ff1af24b9b8:   add    %rax,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@106 (line 307)
   0.02%    0x00007ff1af24b9bb:   mov    %r11,%rax
   0.00%    0x00007ff1af24b9be:   imul   %rbp,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@113 (line 307)
   0.05%    0x00007ff1af24b9c2:   add    %rax,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@114 (line 307)
   0.02%    0x00007ff1af24b9c5:   mov    %rbx,%rax
   0.01%    0x00007ff1af24b9c8:   imul   %rcx,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@121 (line 307)
   0.00%    0x00007ff1af24b9cc:   add    %r8,%rax                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@122 (line 307)
   0.18%    0x00007ff1af24b9cf:   mov    %r14,%r8
   0.01%    0x00007ff1af24b9d2:   imul   %r9,%r8                      ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@131 (line 308)
   0.01%    0x00007ff1af24b9d6:   mov    %rax,0xa8(%rsp)
   0.08%    0x00007ff1af24b9de:   mov    %rdi,%rax
   0.04%    0x00007ff1af24b9e1:   imul   %rsi,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@138 (line 308)
   0.00%    0x00007ff1af24b9e5:   add    %rax,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@139 (line 308)
   0.00%    0x00007ff1af24b9e8:   mov    %r10,%rax
   0.07%    0x00007ff1af24b9eb:   imul   %r13,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@146 (line 308)
   0.02%    0x00007ff1af24b9ef:   add    %rax,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@147 (line 308)
   0.00%    0x00007ff1af24b9f2:   mov    %r11,%rax
   0.00%    0x00007ff1af24b9f5:   imul   %rdx,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@154 (line 308)
   0.08%    0x00007ff1af24b9f9:   add    %rax,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@155 (line 308)
   0.05%    0x00007ff1af24b9fc:   mov    %rbx,%rax
            0x00007ff1af24b9ff:   imul   %rbp,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@162 (line 308)
            0x00007ff1af24ba03:   add    %rax,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@163 (line 308)
   0.08%    0x00007ff1af24ba06:   mov    0xc8(%rsp),%rax
   0.03%    0x00007ff1af24ba0e:   imul   %rcx,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@170 (line 308)
   0.00%    0x00007ff1af24ba12:   add    %r8,%rax                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@171 (line 308)
   0.00%    0x00007ff1af24ba15:   mov    0xd8(%rsp),%r8
   0.07%    0x00007ff1af24ba1d:   imul   %r9,%r8                      ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@181 (line 309)
   0.03%    0x00007ff1af24ba21:   mov    %rax,0xa0(%rsp)
   0.09%    0x00007ff1af24ba29:   mov    %rdi,%rax
            0x00007ff1af24ba2c:   imul   %r14,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@188 (line 309)
   0.00%    0x00007ff1af24ba30:   add    %rax,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@189 (line 309)
            0x00007ff1af24ba33:   mov    %r10,%rax                    ;   {no_reloc}
   0.10%    0x00007ff1af24ba36:   imul   %rsi,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@196 (line 309)
            0x00007ff1af24ba3a:   add    %rax,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@197 (line 309)
   0.16%    0x00007ff1af24ba3d:   mov    %r11,%rax
   0.00%    0x00007ff1af24ba40:   imul   %r13,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@204 (line 309)
   0.03%    0x00007ff1af24ba44:   add    %rax,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@205 (line 309)
            0x00007ff1af24ba47:   mov    %rbx,%rax
   0.07%    0x00007ff1af24ba4a:   imul   %rdx,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@212 (line 309)
            0x00007ff1af24ba4e:   add    %rax,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@213 (line 309)
   0.03%    0x00007ff1af24ba51:   mov    0xc8(%rsp),%rax
            0x00007ff1af24ba59:   imul   %rbp,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@220 (line 309)
   0.10%    0x00007ff1af24ba5d:   add    %rax,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@221 (line 309)
   0.00%    0x00007ff1af24ba60:   mov    0xe0(%rsp),%rax
   0.03%    0x00007ff1af24ba68:   imul   %rcx,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@229 (line 309)
            0x00007ff1af24ba6c:   add    %r8,%rax                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@230 (line 309)
   0.08%    0x00007ff1af24ba6f:   mov    0xe8(%rsp),%r8
            0x00007ff1af24ba77:   imul   %r9,%r8                      ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@240 (line 310)
   0.03%    0x00007ff1af24ba7b:   mov    %rax,0x98(%rsp)
   0.18%    0x00007ff1af24ba83:   mov    %rdi,%rax
   0.00%    0x00007ff1af24ba86:   imul   0xd8(%rsp),%rax              ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@248 (line 310)
   0.00%    0x00007ff1af24ba8f:   add    %rax,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@249 (line 310)
            0x00007ff1af24ba92:   mov    %r10,%rax
   0.11%    0x00007ff1af24ba95:   imul   %r14,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@256 (line 310)
            0x00007ff1af24ba99:   add    %rax,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@257 (line 310)
            0x00007ff1af24ba9c:   mov    %r11,%rax
            0x00007ff1af24ba9f:   imul   %rsi,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@264 (line 310)
   0.08%    0x00007ff1af24baa3:   add    %rax,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@265 (line 310)
            0x00007ff1af24baa6:   mov    %rbx,%rax
   0.00%    0x00007ff1af24baa9:   imul   %r13,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@272 (line 310)
   0.00%    0x00007ff1af24baad:   add    %rax,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@273 (line 310)
   0.21%    0x00007ff1af24bab0:   mov    0xc8(%rsp),%rax
            0x00007ff1af24bab8:   imul   %rdx,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@280 (line 310)
            0x00007ff1af24babc:   add    %rax,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@281 (line 310)
            0x00007ff1af24babf:   mov    0xe0(%rsp),%rax
   0.10%    0x00007ff1af24bac7:   imul   %rbp,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@289 (line 310)
            0x00007ff1af24bacb:   add    %rax,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@290 (line 310)
            0x00007ff1af24bace:   mov    0xf0(%rsp),%rax
            0x00007ff1af24bad6:   imul   %rcx,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@298 (line 310)
   0.13%    0x00007ff1af24bada:   add    %r8,%rax                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@299 (line 310)
            0x00007ff1af24badd:   mov    0xf8(%rsp),%r8
   0.00%    0x00007ff1af24bae5:   imul   %r9,%r8                      ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@309 (line 311)
   0.00%    0x00007ff1af24bae9:   mov    %rax,0x90(%rsp)
   0.22%    0x00007ff1af24baf1:   mov    %rdi,%rax
            0x00007ff1af24baf4:   imul   0xe8(%rsp),%rax              ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@317 (line 311)
            0x00007ff1af24bafd:   add    %rax,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@318 (line 311)
            0x00007ff1af24bb00:   mov    %r10,%rax
   0.12%    0x00007ff1af24bb03:   imul   0xd8(%rsp),%rax              ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@326 (line 311)
            0x00007ff1af24bb0c:   add    %rax,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@327 (line 311)
            0x00007ff1af24bb0f:   mov    %r11,%rax
            0x00007ff1af24bb12:   imul   %r14,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@334 (line 311)
   0.11%    0x00007ff1af24bb16:   add    %rax,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@335 (line 311)
            0x00007ff1af24bb19:   mov    %rbx,%rax
            0x00007ff1af24bb1c:   imul   %rsi,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@342 (line 311)
            0x00007ff1af24bb20:   add    %rax,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@343 (line 311)
   0.18%    0x00007ff1af24bb23:   mov    0xc8(%rsp),%rax
            0x00007ff1af24bb2b:   imul   %r13,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@350 (line 311)
            0x00007ff1af24bb2f:   add    %rax,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@351 (line 311)
   0.00%    0x00007ff1af24bb32:   mov    0xe0(%rsp),%rax              ;   {no_reloc}
   0.12%    0x00007ff1af24bb3a:   imul   %rdx,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@359 (line 311)
            0x00007ff1af24bb3e:   add    %rax,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@360 (line 311)
   0.00%    0x00007ff1af24bb41:   mov    0xf0(%rsp),%rax
            0x00007ff1af24bb49:   imul   %rbp,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@368 (line 311)
   0.11%    0x00007ff1af24bb4d:   add    %rax,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@369 (line 311)
   0.00%    0x00007ff1af24bb50:   mov    0x100(%rsp),%rax
            0x00007ff1af24bb58:   imul   %rcx,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@377 (line 311)
            0x00007ff1af24bb5c:   add    %r8,%rax                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@378 (line 311)
   0.08%    0x00007ff1af24bb5f:   mov    0x108(%rsp),%r8
            0x00007ff1af24bb67:   imul   %r9,%r8                      ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@388 (line 312)
            0x00007ff1af24bb6b:   mov    %rdi,%r9
            0x00007ff1af24bb6e:   imul   0xf8(%rsp),%r9               ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@396 (line 312)
   0.10%    0x00007ff1af24bb77:   add    %r9,%r8                      ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@397 (line 312)
   0.05%    0x00007ff1af24bb7a:   mov    %r10,%r9
            0x00007ff1af24bb7d:   imul   0xe8(%rsp),%r9               ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@405 (line 312)
            0x00007ff1af24bb86:   add    %r9,%r8                      ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@406 (line 312)
   0.09%    0x00007ff1af24bb89:   mov    %r11,%r9
            0x00007ff1af24bb8c:   imul   0xd8(%rsp),%r9               ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@414 (line 312)
   0.07%    0x00007ff1af24bb95:   add    %r9,%r8                      ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@415 (line 312)
   0.09%    0x00007ff1af24bb98:   mov    %rbx,%r9
            0x00007ff1af24bb9b:   imul   %r14,%r9                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@422 (line 312)
            0x00007ff1af24bb9f:   add    %r9,%r8                      ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@423 (line 312)
   0.22%    0x00007ff1af24bba2:   mov    0xc8(%rsp),%r9
            0x00007ff1af24bbaa:   imul   %rsi,%r9                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@430 (line 312)
            0x00007ff1af24bbae:   add    %r9,%r8                      ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@431 (line 312)
            0x00007ff1af24bbb1:   mov    0xe0(%rsp),%r9
   0.12%    0x00007ff1af24bbb9:   imul   %r13,%r9                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@439 (line 312)
            0x00007ff1af24bbbd:   add    %r9,%r8                      ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@440 (line 312)
            0x00007ff1af24bbc0:   mov    0xf0(%rsp),%r9
            0x00007ff1af24bbc8:   imul   %rdx,%r9                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@448 (line 312)
   0.10%    0x00007ff1af24bbcc:   add    %r9,%r8                      ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@449 (line 312)
   0.00%    0x00007ff1af24bbcf:   mov    0x100(%rsp),%r9
            0x00007ff1af24bbd7:   imul   %rbp,%r9                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@457 (line 312)
            0x00007ff1af24bbdb:   add    %r9,%r8                      ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@458 (line 312)
   0.11%    0x00007ff1af24bbde:   imul   0x110(%rsp),%rcx             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@466 (line 312)
            0x00007ff1af24bbe7:   add    %rcx,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@467 (line 312)
   0.10%    0x00007ff1af24bbea:   imul   0x108(%rsp),%rdi             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@477 (line 313)
            0x00007ff1af24bbf3:   mov    %r10,%rcx
            0x00007ff1af24bbf6:   imul   0xf8(%rsp),%rcx              ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@485 (line 313)
   0.06%    0x00007ff1af24bbff:   add    %rcx,%rdi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@486 (line 313)
   0.10%    0x00007ff1af24bc02:   mov    %r11,%rcx
            0x00007ff1af24bc05:   imul   0xe8(%rsp),%rcx              ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@494 (line 313)
            0x00007ff1af24bc0e:   add    %rcx,%rdi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@495 (line 313)
   0.12%    0x00007ff1af24bc11:   mov    %rbx,%rcx
            0x00007ff1af24bc14:   imul   0xd8(%rsp),%rcx              ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@503 (line 313)
            0x00007ff1af24bc1d:   add    %rcx,%rdi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@504 (line 313)
   0.13%    0x00007ff1af24bc20:   mov    0xc8(%rsp),%rcx
            0x00007ff1af24bc28:   imul   %r14,%rcx                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@511 (line 313)
            0x00007ff1af24bc2c:   add    %rcx,%rdi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@512 (line 313)
   0.11%    0x00007ff1af24bc2f:   mov    0xe0(%rsp),%rcx              ;   {no_reloc}
            0x00007ff1af24bc37:   imul   %rsi,%rcx                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@520 (line 313)
            0x00007ff1af24bc3b:   add    %rcx,%rdi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@521 (line 313)
   0.11%    0x00007ff1af24bc3e:   mov    0xf0(%rsp),%rcx
            0x00007ff1af24bc46:   imul   %r13,%rcx                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@529 (line 313)
            0x00007ff1af24bc4a:   add    %rcx,%rdi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@530 (line 313)
   0.12%    0x00007ff1af24bc4d:   mov    0x100(%rsp),%rcx
            0x00007ff1af24bc55:   imul   %rdx,%rcx                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@538 (line 313)
            0x00007ff1af24bc59:   add    %rcx,%rdi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@539 (line 313)
   0.08%    0x00007ff1af24bc5c:   mov    0x110(%rsp),%rcx
            0x00007ff1af24bc64:   imul   %rbp,%rcx                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@547 (line 313)
            0x00007ff1af24bc68:   mov    %rdi,%rbp
            0x00007ff1af24bc6b:   add    %rcx,%rbp                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@548 (line 313)
   0.11%    0x00007ff1af24bc6e:   imul   0x108(%rsp),%r10             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@558 (line 314)
            0x00007ff1af24bc77:   mov    %r11,%rcx
            0x00007ff1af24bc7a:   imul   0xf8(%rsp),%rcx              ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@566 (line 314)
   0.12%    0x00007ff1af24bc83:   add    %rcx,%r10                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@567 (line 314)
   0.12%    0x00007ff1af24bc86:   mov    %rbx,%rcx
            0x00007ff1af24bc89:   imul   0xe8(%rsp),%rcx              ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@575 (line 314)
            0x00007ff1af24bc92:   add    %rcx,%r10                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@576 (line 314)
   0.13%    0x00007ff1af24bc95:   mov    0xc8(%rsp),%rcx
            0x00007ff1af24bc9d:   imul   0xd8(%rsp),%rcx              ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@584 (line 314)
            0x00007ff1af24bca6:   add    %rcx,%r10                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@585 (line 314)
   0.14%    0x00007ff1af24bca9:   mov    0xe0(%rsp),%rcx
            0x00007ff1af24bcb1:   imul   %r14,%rcx                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@593 (line 314)
            0x00007ff1af24bcb5:   add    %rcx,%r10                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@594 (line 314)
   0.10%    0x00007ff1af24bcb8:   mov    0xf0(%rsp),%rcx
            0x00007ff1af24bcc0:   imul   %rsi,%rcx                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@602 (line 314)
            0x00007ff1af24bcc4:   add    %rcx,%r10                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@603 (line 314)
   0.11%    0x00007ff1af24bcc7:   mov    0x100(%rsp),%rcx
            0x00007ff1af24bccf:   imul   %r13,%rcx                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@611 (line 314)
   0.06%    0x00007ff1af24bcd3:   add    %rcx,%r10                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@612 (line 314)
   0.10%    0x00007ff1af24bcd6:   imul   0x110(%rsp),%rdx             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@620 (line 314)
            0x00007ff1af24bcdf:   add    %rdx,%r10                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@621 (line 314)
   0.14%    0x00007ff1af24bce2:   imul   0x108(%rsp),%r11             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@631 (line 315)
            0x00007ff1af24bceb:   mov    %rbx,%rdx
            0x00007ff1af24bcee:   imul   0xf8(%rsp),%rdx              ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@639 (line 315)
   0.07%    0x00007ff1af24bcf7:   add    %rdx,%r11                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@640 (line 315)
   0.11%    0x00007ff1af24bcfa:   mov    0xc8(%rsp),%rdx
            0x00007ff1af24bd02:   imul   0xe8(%rsp),%rdx              ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@648 (line 315)
            0x00007ff1af24bd0b:   add    %rdx,%r11                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@649 (line 315)
   0.11%    0x00007ff1af24bd0e:   mov    0xe0(%rsp),%rdx
            0x00007ff1af24bd16:   imul   0xd8(%rsp),%rdx              ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@658 (line 315)
            0x00007ff1af24bd1f:   add    %rdx,%r11                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@659 (line 315)
   0.10%    0x00007ff1af24bd22:   mov    0xf0(%rsp),%rdx
            0x00007ff1af24bd2a:   imul   %r14,%rdx                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@667 (line 315)
            0x00007ff1af24bd2e:   add    %rdx,%r11                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@668 (line 315)
   0.11%    0x00007ff1af24bd31:   mov    0x100(%rsp),%rdx             ;   {no_reloc}
            0x00007ff1af24bd39:   imul   %rsi,%rdx                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@676 (line 315)
            0x00007ff1af24bd3d:   add    %rdx,%r11                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@677 (line 315)
   0.08%    0x00007ff1af24bd40:   mov    0x110(%rsp),%rdx
            0x00007ff1af24bd48:   imul   %r13,%rdx                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@685 (line 315)
            0x00007ff1af24bd4c:   add    %rdx,%r11                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@686 (line 315)
   0.11%    0x00007ff1af24bd4f:   imul   0x108(%rsp),%rbx             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@696 (line 316)
            0x00007ff1af24bd58:   mov    0xc8(%rsp),%rdx
            0x00007ff1af24bd60:   imul   0xf8(%rsp),%rdx              ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@704 (line 316)
   0.10%    0x00007ff1af24bd69:   add    %rdx,%rbx                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@705 (line 316)
   0.14%    0x00007ff1af24bd6c:   mov    0xe0(%rsp),%rdx
            0x00007ff1af24bd74:   imul   0xe8(%rsp),%rdx              ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@714 (line 316)
            0x00007ff1af24bd7d:   add    %rdx,%rbx                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@715 (line 316)
   0.10%    0x00007ff1af24bd80:   mov    0xf0(%rsp),%r13
            0x00007ff1af24bd88:   imul   0xd8(%rsp),%r13              ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@724 (line 316)
   0.05%    0x00007ff1af24bd91:   add    %r13,%rbx                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@725 (line 316)
   0.10%    0x00007ff1af24bd94:   mov    0x100(%rsp),%rdx
            0x00007ff1af24bd9c:   imul   %r14,%rdx                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@733 (line 316)
            0x00007ff1af24bda0:   add    %rdx,%rbx                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@734 (line 316)
   0.10%    0x00007ff1af24bda3:   mov    0x110(%rsp),%rdx
            0x00007ff1af24bdab:   imul   %rsi,%rdx                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@742 (line 316)
            0x00007ff1af24bdaf:   add    %rdx,%rbx                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@743 (line 316)
   0.10%    0x00007ff1af24bdb2:   mov    0xc8(%rsp),%rsi
            0x00007ff1af24bdba:   imul   0x108(%rsp),%rsi             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@753 (line 317)
            0x00007ff1af24bdc3:   mov    0xe0(%rsp),%rdx
            0x00007ff1af24bdcb:   imul   0xf8(%rsp),%rdx              ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@762 (line 317)
   0.13%    0x00007ff1af24bdd4:   add    %rdx,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP256::mult@763 (line 317)
   0.08%    0x00007ff1af24bdd7:   mov    0xf0(%rsp),%r13
            0x00007ff1af24bddf:   imul   0xe8(%rsp),%r13              ;*lmul {reexecute=0 rethrow=0 return_oop=0}
....................................................................................................
  13.90%  <total for region 3>

....[Hottest Regions]...............................................................................
  14.20%         runtime stub  StubRoutines::sha256_implCompressMB 
  14.11%       jvmci, level 4  sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce, version 2, compile id 1073 
  13.90%       jvmci, level 4  sun.security.util.math.intpoly.IntegerPolynomialP256::mult, version 2, compile id 1084 
   6.56%       jvmci, level 4  sun.security.util.math.intpoly.P256OrderField::carryReduce0, version 2, compile id 1198 
   3.78%       jvmci, level 4  sun.security.ec.point.ProjectivePoint$Mutable::conditionalSet, version 2, compile id 1111 
   3.09%       jvmci, level 4  sun.security.ec.point.ProjectivePoint$Mutable::conditionalSet, version 2, compile id 1111 
   2.58%       jvmci, level 4  sun.security.ec.point.ProjectivePoint$Mutable::conditionalSet, version 2, compile id 1111 
   2.47%       jvmci, level 4  sun.security.ec.point.ProjectivePoint$Mutable::conditionalSet, version 2, compile id 1111 
   2.31%       jvmci, level 4  sun.security.ec.point.ProjectivePoint$Mutable::conditionalSet, version 2, compile id 1111 
   1.93%       jvmci, level 4  sun.security.util.math.IntegerModuloP$MultiplicativeInverser$Secp256R1::inverse, version 3, compile id 1405 
   1.92%         runtime stub  StubRoutines::jlong_disjoint_arraycopy 
   1.81%       jvmci, level 4  sun.security.util.math.intpoly.IntegerPolynomialP256::mult, version 2, compile id 1084 
   1.77%       jvmci, level 4  sun.security.util.math.intpoly.P256OrderField::square, version 2, compile id 1443 
   1.01%       jvmci, level 4  sun.security.ec.ECOperations::setSum, version 2, compile id 1246 
   0.99%       jvmci, level 4  sun.security.ec.ECOperations$PointMultiplier::lookup, version 2, compile id 1162 
   0.92%       jvmci, level 4  sun.security.util.math.intpoly.P256OrderField::carryReduce, version 2, compile id 1194 
   0.83%       jvmci, level 4  sun.security.ec.ECOperations::setSum, version 2, compile id 1246 
   0.77%       jvmci, level 4  sun.security.util.math.IntegerModuloP$MultiplicativeInverser$Secp256R1Field::inverse, version 3, compile id 1417 
   0.62%       jvmci, level 4  sun.security.ec.ECOperations$PointMultiplier::lookup, version 2, compile id 1162 
   0.59%               kernel  [unknown] 
  23.84%  <...other 1241 warm regions...>
....................................................................................................
 100.00%  <totals>

....[Hottest Methods (after inlining)]..............................................................
  17.21%       jvmci, level 4  sun.security.util.math.intpoly.IntegerPolynomialP256::mult, version 2, compile id 1084 
  14.29%         runtime stub  StubRoutines::sha256_implCompressMB 
  14.26%       jvmci, level 4  sun.security.ec.point.ProjectivePoint$Mutable::conditionalSet, version 2, compile id 1111 
  14.11%       jvmci, level 4  sun.security.util.math.intpoly.IntegerPolynomialP256::carryReduce, version 2, compile id 1073 
  14.00%       jvmci, level 4  sun.security.ec.ECOperations::setSum, version 2, compile id 1246 
   6.56%       jvmci, level 4  sun.security.util.math.intpoly.P256OrderField::carryReduce0, version 2, compile id 1198 
   2.93%       jvmci, level 4  sun.security.ec.ECOperations::setDouble, version 2, compile id 1229 
   2.29%       jvmci, level 4  sun.security.util.math.IntegerModuloP$MultiplicativeInverser$Secp256R1::inverse, version 3, compile id 1405 
   2.21%               kernel  [unknown] 
   1.92%         runtime stub  StubRoutines::jlong_disjoint_arraycopy 
   1.77%       jvmci, level 4  sun.security.util.math.intpoly.P256OrderField::square, version 2, compile id 1443 
   1.66%       jvmci, level 4  sun.security.util.math.IntegerModuloP$MultiplicativeInverser$Secp256R1Field::inverse, version 3, compile id 1417 
   1.60%       jvmci, level 4  sun.security.ec.ECOperations$PointMultiplier::lookup, version 2, compile id 1162 
   0.92%       jvmci, level 4  sun.security.util.math.intpoly.P256OrderField::carryReduce, version 2, compile id 1194 
   0.86%       jvmci, level 4  sun.security.util.math.intpoly.P256OrderField::mult, version 2, compile id 1296 
   0.46%       jvmci, level 4  sun.security.ec.ECOperations$PointMultiplier$Secp256R1GeneratorMultiplier::pointMultiply, version 3, compile id 1455 
   0.30%       jvmci, level 4  sun.security.util.math.intpoly.IntegerPolynomialP256::reduce, version 2, compile id 1190 
   0.22%                       <unknown> 
   0.19%       jvmci, level 4  sun.security.ec.ECDSAOperations::signDigest, version 3, compile id 1536 
   0.17%       jvmci, level 4  java.math.BigInteger::shiftRight, version 2, compile id 1340 
   2.05%  <...other 175 warm methods...>
....................................................................................................
 100.00%  <totals>

....[Distribution by Source]........................................................................
  80.85%       jvmci, level 4
  16.26%         runtime stub
   2.21%               kernel
   0.22%                     
   0.17%            libjvm.so
   0.12%         libc-2.31.so
   0.11%  libjvmcicompiler.so
   0.02%               [vdso]
   0.01%       hsdis-amd64.so
   0.01%           ld-2.31.so
   0.01%   libpthread-2.31.so
   0.01%          interpreter
....................................................................................................
 100.00%  <totals>



# JMH version: 1.37
# VM version: JDK 21, OpenJDK 64-Bit Server VM, 21+35-jvmci-23.1-b15
# VM invoker: /home/gogu/bench_jdks/graalvm-community-openjdk-21+35.1/bin/java
# VM options: -XX:ThreadPriorityPolicy=1 -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCIProduct -XX:-UnlockExperimentalVMOptions -Xms4g -Xmx4g -XX:+AlwaysPreTouch
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.performance.benchmarks.api.signature.DsaEcSignatureBenchmark.sign
# Parameters: (algorithm = secp384r1, messageLength = 64)

# Run progress: 33.33% complete, ETA 00:15:38
# Fork: 1 of 1
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 5020.947 us/op
# Warmup Iteration   2: 1730.693 us/op
# Warmup Iteration   3: 1719.256 us/op
# Warmup Iteration   4: 1719.756 us/op
# Warmup Iteration   5: 1718.614 us/op
Iteration   1: 1718.795 us/op
Iteration   2: 1718.714 us/op
Iteration   3: 1718.684 us/op
Iteration   4: 1718.654 us/op
Iteration   5: 1718.818 us/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "com.ionutbalosin.jvm.performance.benchmarks.api.signature.DsaEcSignatureBenchmark.sign":
  1718.733 ±(99.9%) 0.273 us/op [Average]
  (min, avg, max) = (1718.654, 1718.733, 1718.818), stdev = 0.071
  CI (99.9%): [1718.460, 1719.006] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.signature.DsaEcSignatureBenchmark.sign:asm":
PrintAssembly processed: 423239 total address lines.
Perf output processed (skipped 61.858 seconds):
 Column 1: cycles (50698 events)

Hottest code regions (>10.00% "cycles" events):
 Event counts are percents of total event count.

....[Hottest Region 1]..............................................................................
jvmci, level 4, sun.security.util.math.intpoly.IntegerPolynomialP384::mult, version 2, compile id 1076 

            # parm2:    r8:r8     = &apos;[J&apos;
            #           [sp+0x1d0]  (sp of caller)
            0x00007f171b254ac0:   mov    0x8(%rsi),%r10d
            0x00007f171b254ac4:   movabs $0x7f169f000000,%r12
            0x00007f171b254ace:   add    %r12,%r10
            0x00007f171b254ad1:   xor    %r12,%r12
            0x00007f171b254ad4:   cmp    %r10,%rax
            0x00007f171b254ad7:   jne    0x00007f171ac2f080           ;   {runtime_call ic_miss_stub}
            0x00007f171b254add:   data16 xchg %ax,%ax
          [Verified Entry Point]
   1.11%    0x00007f171b254ae0:   mov    %eax,-0x14000(%rsp)
   1.63%    0x00007f171b254ae7:   sub    $0x1c8,%rsp
   0.00%    0x00007f171b254aee:   xchg   %ax,%ax
            0x00007f171b254af0:   cmpl   $0x0,0x20(%r15)
            0x00007f171b254af8:   jne    0x00007f171b255a58
   0.11%    0x00007f171b254afe:   mov    %rbp,0x1c0(%rsp)             ; ImmutableOopMap {rcx=Oop rdx=Oop rsi=Oop r8=Oop }
                                                                      ;*aload_1 {reexecute=1 rethrow=0 return_oop=0}
                                                                      ; - (reexecute) sun.security.util.math.intpoly.IntegerPolynomialP384::mult@0 (line 379)
   0.01%    0x00007f171b254b06:   mov    0xc(%rdx),%r9d               ; implicit exception: dispatches to 0x00007f171b255a7f
                                                                      ; ImmutableOopMap {rcx=Oop rdx=Oop rsi=Oop r8=Oop }
                                                                      ;*aload_1 {reexecute=1 rethrow=0 return_oop=0}
                                                                      ; - (reexecute) sun.security.util.math.intpoly.IntegerPolynomialP384::mult@0 (line 379)
   0.07%    0x00007f171b254b0a:   mov    0xc(%rcx),%edi               ; implicit exception: dispatches to 0x00007f171b255aa2
   0.01%    0x00007f171b254b0d:   cmp    $0xe,%r9d
            0x00007f171b254b11:   jb     0x00007f171b255a35           ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@2 (line 379)
   0.12%    0x00007f171b254b17:   cmp    $0xe,%edi
            0x00007f171b254b1a:   jb     0x00007f171b255a35           ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@5 (line 379)
   0.11%    0x00007f171b254b20:   mov    %r8,0xc8(%rsp)
   0.33%    0x00007f171b254b28:   mov    %rsi,0xc0(%rsp)
   0.53%    0x00007f171b254b30:   mov    0x10(%rdx),%r9               ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@2 (line 379)
   0.01%    0x00007f171b254b34:   mov    0x18(%rdx),%rdi              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@18 (line 380)
   0.01%    0x00007f171b254b38:   mov    0x20(%rdx),%r10              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@43 (line 381)
   0.00%    0x00007f171b254b3c:   mov    0x28(%rdx),%r11              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@76 (line 382)
   0.11%    0x00007f171b254b40:   mov    0x30(%rdx),%rbx              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@117 (line 383)
   0.01%    0x00007f171b254b44:   mov    0x38(%rdx),%rax              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@166 (line 384)
   0.01%    0x00007f171b254b48:   mov    0x40(%rdx),%rbp              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@225 (line 385)
   0.00%    0x00007f171b254b4c:   mov    0x48(%rdx),%r13              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@294 (line 386)
   0.14%    0x00007f171b254b50:   mov    0x50(%rdx),%r14              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@373 (line 387)
   0.01%    0x00007f171b254b54:   mov    0x58(%rdx),%r8               ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@462 (line 388)
   0.01%    0x00007f171b254b58:   mov    0x60(%rdx),%rsi              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@561 (line 389)
   0.00%    0x00007f171b254b5c:   mov    %rsi,0x1b0(%rsp)
   0.25%    0x00007f171b254b64:   mov    0x68(%rdx),%rsi              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@670 (line 390)
   0.01%    0x00007f171b254b68:   mov    %rsi,0x1a8(%rsp)
   0.01%    0x00007f171b254b70:   mov    0x70(%rdx),%rsi              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@789 (line 391)
   0.01%    0x00007f171b254b74:   mov    0x78(%rdx),%rdx              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@918 (line 392)
   0.11%    0x00007f171b254b78:   mov    %rdx,0x1a0(%rsp)
   0.00%    0x00007f171b254b80:   mov    0x78(%rcx),%rdx              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@803 (line 392)
   0.01%    0x00007f171b254b84:   mov    %rdx,0x198(%rsp)
   0.06%    0x00007f171b254b8c:   mov    0x70(%rcx),%rdx              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@684 (line 391)
   0.07%    0x00007f171b254b90:   mov    %rsi,0x190(%rsp)
   0.23%    0x00007f171b254b98:   mov    0x68(%rcx),%rsi              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@575 (line 390)
   0.01%    0x00007f171b254b9c:   mov    %rdx,0x188(%rsp)
   0.01%    0x00007f171b254ba4:   mov    0x60(%rcx),%rdx              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@476 (line 389)
            0x00007f171b254ba8:   mov    %rsi,0x180(%rsp)
   0.11%    0x00007f171b254bb0:   mov    0x58(%rcx),%rsi              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@387 (line 388)
            0x00007f171b254bb4:   mov    %rdx,0x178(%rsp)
   0.15%    0x00007f171b254bbc:   mov    0x50(%rcx),%rdx              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@308 (line 387)
   0.01%    0x00007f171b254bc0:   mov    %r8,0x170(%rsp)
   0.06%    0x00007f171b254bc8:   mov    0x48(%rcx),%r8               ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@239 (line 386)
   0.00%    0x00007f171b254bcc:   mov    %rsi,0x168(%rsp)
   0.16%    0x00007f171b254bd4:   mov    0x40(%rcx),%rsi              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@180 (line 385)
                                                                      ;   {no_reloc}
            0x00007f171b254bd8:   mov    %r14,0x160(%rsp)
   0.08%    0x00007f171b254be0:   mov    0x38(%rcx),%r14              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@130 (line 384)
   0.00%    0x00007f171b254be4:   mov    %rdx,0x158(%rsp)
   0.19%    0x00007f171b254bec:   mov    0x30(%rcx),%rdx              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@89 (line 383)
   0.01%    0x00007f171b254bf0:   mov    %r13,0x150(%rsp)
   0.10%    0x00007f171b254bf8:   mov    0x28(%rcx),%r13              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@56 (line 382)
   0.00%    0x00007f171b254bfc:   mov    %r8,0x148(%rsp)
   0.15%    0x00007f171b254c04:   mov    0x20(%rcx),%r8               ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@31 (line 381)
   0.01%    0x00007f171b254c08:   mov    %rbp,0x140(%rsp)
   0.06%    0x00007f171b254c10:   mov    0x18(%rcx),%rbp              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@14 (line 380)
   0.01%    0x00007f171b254c14:   mov    0x10(%rcx),%rcx              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@5 (line 379)
   0.05%    0x00007f171b254c18:   mov    %rsi,0x138(%rsp)
   0.05%    0x00007f171b254c20:   mov    %r9,%rsi
   0.02%    0x00007f171b254c23:   imul   %rcx,%rsi                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@6 (line 379)
   0.01%    0x00007f171b254c27:   mov    %rsi,0x130(%rsp)
   0.08%    0x00007f171b254c2f:   mov    %rbp,%rsi
            0x00007f171b254c32:   imul   %r9,%rsi                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@15 (line 380)
   0.04%    0x00007f171b254c36:   mov    %rax,0x128(%rsp)
   0.08%    0x00007f171b254c3e:   mov    %rdi,%rax
   0.03%    0x00007f171b254c41:   imul   %rcx,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@22 (line 380)
            0x00007f171b254c45:   add    %rsi,%rax                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@23 (line 380)
   0.03%    0x00007f171b254c48:   mov    %r8,%rsi
   0.11%    0x00007f171b254c4b:   imul   %r9,%rsi                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@32 (line 381)
   0.03%    0x00007f171b254c4f:   mov    %rax,0x120(%rsp)
   0.00%    0x00007f171b254c57:   mov    %rdi,%rax
   0.02%    0x00007f171b254c5a:   imul   %rbp,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@39 (line 381)
   0.07%    0x00007f171b254c5e:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@40 (line 381)
   0.03%    0x00007f171b254c61:   mov    %r10,%rax
   0.01%    0x00007f171b254c64:   imul   %rcx,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@47 (line 381)
   0.02%    0x00007f171b254c68:   add    %rsi,%rax                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@48 (line 381)
   0.08%    0x00007f171b254c6b:   mov    %r13,%rsi
   0.03%    0x00007f171b254c6e:   imul   %r9,%rsi                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@57 (line 382)
   0.01%    0x00007f171b254c72:   mov    %rax,0x118(%rsp)
   0.03%    0x00007f171b254c7a:   mov    %rdi,%rax
   0.07%    0x00007f171b254c7d:   imul   %r8,%rax                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@64 (line 382)
   0.02%    0x00007f171b254c81:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@65 (line 382)
   0.00%    0x00007f171b254c84:   mov    %r10,%rax
   0.01%    0x00007f171b254c87:   imul   %rbp,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@72 (line 382)
   0.07%    0x00007f171b254c8b:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@73 (line 382)
   0.02%    0x00007f171b254c8e:   mov    %r11,%rax
   0.00%    0x00007f171b254c91:   imul   %rcx,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@80 (line 382)
   0.01%    0x00007f171b254c95:   add    %rsi,%rax                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@81 (line 382)
   0.13%    0x00007f171b254c98:   mov    %rdx,%rsi
   0.02%    0x00007f171b254c9b:   imul   %r9,%rsi                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@90 (line 383)
   0.00%    0x00007f171b254c9f:   mov    %rax,0x110(%rsp)
   0.06%    0x00007f171b254ca7:   mov    %rdi,%rax
   0.08%    0x00007f171b254caa:   imul   %r13,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@97 (line 383)
   0.02%    0x00007f171b254cae:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@98 (line 383)
   0.00%    0x00007f171b254cb1:   mov    %r10,%rax
   0.04%    0x00007f171b254cb4:   imul   %r8,%rax                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@105 (line 383)
   0.07%    0x00007f171b254cb8:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@106 (line 383)
   0.02%    0x00007f171b254cbb:   mov    %r11,%rax
   0.00%    0x00007f171b254cbe:   imul   %rbp,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@113 (line 383)
   0.03%    0x00007f171b254cc2:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@114 (line 383)
   0.10%    0x00007f171b254cc5:   mov    %rbx,%rax
   0.01%    0x00007f171b254cc8:   imul   %rcx,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@121 (line 383)
   0.01%    0x00007f171b254ccc:   add    %rsi,%rax                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@122 (line 383)
   0.06%    0x00007f171b254ccf:   mov    %r14,%rsi
   0.07%    0x00007f171b254cd2:   imul   %r9,%rsi                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@131 (line 384)
                                                                      ;   {no_reloc}
   0.02%    0x00007f171b254cd6:   mov    %rax,0x108(%rsp)
   0.14%    0x00007f171b254cde:   mov    %rdi,%rax
            0x00007f171b254ce1:   imul   %rdx,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@138 (line 384)
            0x00007f171b254ce5:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@139 (line 384)
   0.00%    0x00007f171b254ce8:   mov    %r10,%rax
   0.12%    0x00007f171b254ceb:   imul   %r13,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@146 (line 384)
   0.01%    0x00007f171b254cef:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@147 (line 384)
   0.00%    0x00007f171b254cf2:   mov    %r11,%rax
            0x00007f171b254cf5:   imul   %r8,%rax                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@154 (line 384)
   0.13%    0x00007f171b254cf9:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@155 (line 384)
            0x00007f171b254cfc:   mov    %rbx,%rax
   0.00%    0x00007f171b254cff:   imul   %rbp,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@162 (line 384)
   0.01%    0x00007f171b254d03:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@163 (line 384)
   0.21%    0x00007f171b254d06:   mov    0x128(%rsp),%rax
            0x00007f171b254d0e:   imul   %rcx,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@170 (line 384)
            0x00007f171b254d12:   add    %rsi,%rax                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@171 (line 384)
            0x00007f171b254d15:   mov    0x138(%rsp),%rsi
   0.13%    0x00007f171b254d1d:   imul   %r9,%rsi                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@181 (line 385)
            0x00007f171b254d21:   mov    %rax,0x100(%rsp)
   0.12%    0x00007f171b254d29:   mov    %rdi,%rax
            0x00007f171b254d2c:   imul   %r14,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@188 (line 385)
            0x00007f171b254d30:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@189 (line 385)
   0.00%    0x00007f171b254d33:   mov    %r10,%rax
   0.14%    0x00007f171b254d36:   imul   %rdx,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@196 (line 385)
            0x00007f171b254d3a:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@197 (line 385)
   0.09%    0x00007f171b254d3d:   mov    %r11,%rax
   0.00%    0x00007f171b254d40:   imul   %r13,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@204 (line 385)
   0.08%    0x00007f171b254d44:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@205 (line 385)
   0.00%    0x00007f171b254d47:   mov    %rbx,%rax
   0.05%    0x00007f171b254d4a:   imul   %r8,%rax                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@212 (line 385)
            0x00007f171b254d4e:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@213 (line 385)
   0.10%    0x00007f171b254d51:   mov    0x128(%rsp),%rax
   0.00%    0x00007f171b254d59:   imul   %rbp,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@220 (line 385)
   0.04%    0x00007f171b254d5d:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@221 (line 385)
   0.00%    0x00007f171b254d60:   mov    0x140(%rsp),%rax
   0.07%    0x00007f171b254d68:   imul   %rcx,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@229 (line 385)
   0.00%    0x00007f171b254d6c:   add    %rsi,%rax                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@230 (line 385)
   0.14%    0x00007f171b254d6f:   mov    0x148(%rsp),%rsi
            0x00007f171b254d77:   imul   %r9,%rsi                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@240 (line 386)
   0.02%    0x00007f171b254d7b:   mov    %rax,0xf8(%rsp)
   0.22%    0x00007f171b254d83:   mov    %rdi,%rax
            0x00007f171b254d86:   imul   0x138(%rsp),%rax             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@248 (line 386)
   0.00%    0x00007f171b254d8f:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@249 (line 386)
            0x00007f171b254d92:   mov    %r10,%rax
   0.10%    0x00007f171b254d95:   imul   %r14,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@256 (line 386)
            0x00007f171b254d99:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@257 (line 386)
            0x00007f171b254d9c:   mov    %r11,%rax
            0x00007f171b254d9f:   imul   %rdx,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@264 (line 386)
   0.12%    0x00007f171b254da3:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@265 (line 386)
            0x00007f171b254da6:   mov    %rbx,%rax
   0.00%    0x00007f171b254da9:   imul   %r13,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@272 (line 386)
            0x00007f171b254dad:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@273 (line 386)
   0.17%    0x00007f171b254db0:   mov    0x128(%rsp),%rax
            0x00007f171b254db8:   imul   %r8,%rax                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@280 (line 386)
            0x00007f171b254dbc:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@281 (line 386)
            0x00007f171b254dbf:   mov    0x140(%rsp),%rax
   0.12%    0x00007f171b254dc7:   imul   %rbp,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@289 (line 386)
            0x00007f171b254dcb:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@290 (line 386)
            0x00007f171b254dce:   mov    0x150(%rsp),%rax             ;   {no_reloc}
            0x00007f171b254dd6:   imul   %rcx,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@298 (line 386)
   0.11%    0x00007f171b254dda:   add    %rsi,%rax                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@299 (line 386)
            0x00007f171b254ddd:   mov    0x158(%rsp),%rsi
            0x00007f171b254de5:   imul   %r9,%rsi                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@309 (line 387)
            0x00007f171b254de9:   mov    %rax,0xf0(%rsp)
   0.27%    0x00007f171b254df1:   mov    %rdi,%rax
            0x00007f171b254df4:   imul   0x148(%rsp),%rax             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@317 (line 387)
            0x00007f171b254dfd:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@318 (line 387)
            0x00007f171b254e00:   mov    %r10,%rax
   0.12%    0x00007f171b254e03:   imul   0x138(%rsp),%rax             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@326 (line 387)
            0x00007f171b254e0c:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@327 (line 387)
   0.00%    0x00007f171b254e0f:   mov    %r11,%rax
            0x00007f171b254e12:   imul   %r14,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@334 (line 387)
   0.14%    0x00007f171b254e16:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@335 (line 387)
            0x00007f171b254e19:   mov    %rbx,%rax
            0x00007f171b254e1c:   imul   %rdx,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@342 (line 387)
            0x00007f171b254e20:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@343 (line 387)
   0.22%    0x00007f171b254e23:   mov    0x128(%rsp),%rax
            0x00007f171b254e2b:   imul   %r13,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@350 (line 387)
            0x00007f171b254e2f:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@351 (line 387)
   0.03%    0x00007f171b254e32:   mov    0x140(%rsp),%rax
   0.09%    0x00007f171b254e3a:   imul   %r8,%rax                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@359 (line 387)
            0x00007f171b254e3e:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@360 (line 387)
   0.04%    0x00007f171b254e41:   mov    0x150(%rsp),%rax
            0x00007f171b254e49:   imul   %rbp,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@368 (line 387)
   0.07%    0x00007f171b254e4d:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@369 (line 387)
   0.05%    0x00007f171b254e50:   mov    0x160(%rsp),%rax
            0x00007f171b254e58:   imul   %rcx,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@377 (line 387)
            0x00007f171b254e5c:   add    %rsi,%rax                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@378 (line 387)
   0.10%    0x00007f171b254e5f:   mov    0x168(%rsp),%rsi
            0x00007f171b254e67:   imul   %r9,%rsi                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@388 (line 388)
            0x00007f171b254e6b:   mov    %rax,0xe8(%rsp)
   0.26%    0x00007f171b254e73:   mov    %rdi,%rax
            0x00007f171b254e76:   imul   0x158(%rsp),%rax             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@396 (line 388)
            0x00007f171b254e7f:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@397 (line 388)
            0x00007f171b254e82:   mov    %r10,%rax
   0.11%    0x00007f171b254e85:   imul   0x148(%rsp),%rax             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@405 (line 388)
            0x00007f171b254e8e:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@406 (line 388)
            0x00007f171b254e91:   mov    %r11,%rax
            0x00007f171b254e94:   imul   0x138(%rsp),%rax             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@414 (line 388)
   0.13%    0x00007f171b254e9d:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@415 (line 388)
            0x00007f171b254ea0:   mov    %rbx,%rax
            0x00007f171b254ea3:   imul   %r14,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@422 (line 388)
            0x00007f171b254ea7:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@423 (line 388)
   0.13%    0x00007f171b254eaa:   mov    0x128(%rsp),%rax
            0x00007f171b254eb2:   imul   %rdx,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@430 (line 388)
            0x00007f171b254eb6:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@431 (line 388)
   0.10%    0x00007f171b254eb9:   mov    0x140(%rsp),%rax
   0.06%    0x00007f171b254ec1:   imul   %r13,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@439 (line 388)
            0x00007f171b254ec5:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@440 (line 388)
   0.06%    0x00007f171b254ec8:   mov    0x150(%rsp),%rax
            0x00007f171b254ed0:   imul   %r8,%rax                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@448 (line 388)
                                                                      ;   {no_reloc}
   0.05%    0x00007f171b254ed4:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@449 (line 388)
   0.08%    0x00007f171b254ed7:   mov    0x160(%rsp),%rax
            0x00007f171b254edf:   imul   %rbp,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@457 (line 388)
            0x00007f171b254ee3:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@458 (line 388)
   0.13%    0x00007f171b254ee6:   mov    0x170(%rsp),%rax
            0x00007f171b254eee:   imul   %rcx,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@466 (line 388)
            0x00007f171b254ef2:   add    %rsi,%rax                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@467 (line 388)
   0.13%    0x00007f171b254ef5:   mov    0x178(%rsp),%rsi
            0x00007f171b254efd:   imul   %r9,%rsi                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@477 (line 389)
            0x00007f171b254f01:   mov    %rax,0xe0(%rsp)
   0.26%    0x00007f171b254f09:   mov    %rdi,%rax
            0x00007f171b254f0c:   imul   0x168(%rsp),%rax             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@485 (line 389)
            0x00007f171b254f15:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@486 (line 389)
            0x00007f171b254f18:   mov    %r10,%rax
   0.13%    0x00007f171b254f1b:   imul   0x158(%rsp),%rax             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@494 (line 389)
            0x00007f171b254f24:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@495 (line 389)
            0x00007f171b254f27:   mov    %r11,%rax
            0x00007f171b254f2a:   imul   0x148(%rsp),%rax             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@503 (line 389)
   0.14%    0x00007f171b254f33:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@504 (line 389)
            0x00007f171b254f36:   mov    %rbx,%rax
            0x00007f171b254f39:   imul   0x138(%rsp),%rax             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@512 (line 389)
            0x00007f171b254f42:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@513 (line 389)
   0.11%    0x00007f171b254f45:   mov    0x128(%rsp),%rax
            0x00007f171b254f4d:   imul   %r14,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@520 (line 389)
   0.06%    0x00007f171b254f51:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@521 (line 389)
   0.10%    0x00007f171b254f54:   mov    0x140(%rsp),%rax
            0x00007f171b254f5c:   imul   %rdx,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@529 (line 389)
            0x00007f171b254f60:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@530 (line 389)
   0.14%    0x00007f171b254f63:   mov    0x150(%rsp),%rax
            0x00007f171b254f6b:   imul   %r13,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@538 (line 389)
            0x00007f171b254f6f:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@539 (line 389)
   0.10%    0x00007f171b254f72:   mov    0x160(%rsp),%rax
            0x00007f171b254f7a:   imul   %r8,%rax                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@547 (line 389)
            0x00007f171b254f7e:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@548 (line 389)
   0.11%    0x00007f171b254f81:   mov    0x170(%rsp),%rax
            0x00007f171b254f89:   imul   %rbp,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@556 (line 389)
            0x00007f171b254f8d:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@557 (line 389)
   0.10%    0x00007f171b254f90:   mov    0x1b0(%rsp),%rax
            0x00007f171b254f98:   imul   %rcx,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@565 (line 389)
            0x00007f171b254f9c:   add    %rsi,%rax                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@566 (line 389)
   0.11%    0x00007f171b254f9f:   mov    0x180(%rsp),%rsi
            0x00007f171b254fa7:   imul   %r9,%rsi                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@576 (line 390)
            0x00007f171b254fab:   mov    %rax,0xd8(%rsp)
   0.24%    0x00007f171b254fb3:   mov    %rdi,%rax
            0x00007f171b254fb6:   imul   0x178(%rsp),%rax             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@584 (line 390)
            0x00007f171b254fbf:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@585 (line 390)
            0x00007f171b254fc2:   mov    %r10,%rax
   0.14%    0x00007f171b254fc5:   imul   0x168(%rsp),%rax             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@593 (line 390)
            0x00007f171b254fce:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@594 (line 390)
            0x00007f171b254fd1:   mov    %r11,%rax                    ;   {no_reloc}
            0x00007f171b254fd4:   imul   0x158(%rsp),%rax             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@602 (line 390)
   0.11%    0x00007f171b254fdd:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@603 (line 390)
            0x00007f171b254fe0:   mov    %rbx,%rax
            0x00007f171b254fe3:   imul   0x148(%rsp),%rax             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@611 (line 390)
            0x00007f171b254fec:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@612 (line 390)
   0.12%    0x00007f171b254fef:   mov    0x128(%rsp),%rax
            0x00007f171b254ff7:   imul   0x138(%rsp),%rax             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@620 (line 390)
            0x00007f171b255000:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@621 (line 390)
   0.07%    0x00007f171b255003:   mov    0x140(%rsp),%rax
   0.07%    0x00007f171b25500b:   imul   %r14,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@629 (line 390)
            0x00007f171b25500f:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@630 (line 390)
   0.07%    0x00007f171b255012:   mov    0x150(%rsp),%rax
            0x00007f171b25501a:   imul   %rdx,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@638 (line 390)
   0.06%    0x00007f171b25501e:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@639 (line 390)
   0.07%    0x00007f171b255021:   mov    0x160(%rsp),%rax
            0x00007f171b255029:   imul   %r13,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@647 (line 390)
            0x00007f171b25502d:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@648 (line 390)
   0.12%    0x00007f171b255030:   mov    0x170(%rsp),%rax
            0x00007f171b255038:   imul   %r8,%rax                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@656 (line 390)
            0x00007f171b25503c:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@657 (line 390)
   0.16%    0x00007f171b25503f:   mov    0x1b0(%rsp),%rax
            0x00007f171b255047:   imul   %rbp,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@665 (line 390)
            0x00007f171b25504b:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@666 (line 390)
   0.14%    0x00007f171b25504e:   mov    0x1a8(%rsp),%rax
            0x00007f171b255056:   imul   %rcx,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@674 (line 390)
            0x00007f171b25505a:   add    %rsi,%rax                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@675 (line 390)
   0.15%    0x00007f171b25505d:   mov    0x188(%rsp),%rsi
            0x00007f171b255065:   imul   %r9,%rsi                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@685 (line 391)
            0x00007f171b255069:   mov    %rax,0xd0(%rsp)
   0.26%    0x00007f171b255071:   mov    %rdi,%rax
            0x00007f171b255074:   imul   0x180(%rsp),%rax             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@693 (line 391)
            0x00007f171b25507d:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@694 (line 391)
            0x00007f171b255080:   mov    %r10,%rax
   0.11%    0x00007f171b255083:   imul   0x178(%rsp),%rax             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@702 (line 391)
            0x00007f171b25508c:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@703 (line 391)
            0x00007f171b25508f:   mov    %r11,%rax
            0x00007f171b255092:   imul   0x168(%rsp),%rax             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@711 (line 391)
   0.15%    0x00007f171b25509b:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@712 (line 391)
            0x00007f171b25509e:   mov    %rbx,%rax
            0x00007f171b2550a1:   imul   0x158(%rsp),%rax             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@720 (line 391)
            0x00007f171b2550aa:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@721 (line 391)
   0.11%    0x00007f171b2550ad:   mov    0x128(%rsp),%rax
            0x00007f171b2550b5:   imul   0x148(%rsp),%rax             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@729 (line 391)
            0x00007f171b2550be:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@730 (line 391)
   0.12%    0x00007f171b2550c1:   mov    0x140(%rsp),%rax
            0x00007f171b2550c9:   imul   0x138(%rsp),%rax             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@739 (line 391)
                                                                      ;   {no_reloc}
            0x00007f171b2550d2:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@740 (line 391)
   0.12%    0x00007f171b2550d5:   mov    0x150(%rsp),%rax
            0x00007f171b2550dd:   imul   %r14,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@748 (line 391)
   0.06%    0x00007f171b2550e1:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@749 (line 391)
   0.13%    0x00007f171b2550e4:   mov    0x160(%rsp),%rax
            0x00007f171b2550ec:   imul   %rdx,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@757 (line 391)
            0x00007f171b2550f0:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@758 (line 391)
   0.14%    0x00007f171b2550f3:   mov    0x170(%rsp),%rax
            0x00007f171b2550fb:   imul   %r13,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@766 (line 391)
            0x00007f171b2550ff:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@767 (line 391)
   0.12%    0x00007f171b255102:   mov    0x1b0(%rsp),%rax
            0x00007f171b25510a:   imul   %r8,%rax                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@775 (line 391)
            0x00007f171b25510e:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@776 (line 391)
   0.14%    0x00007f171b255111:   mov    0x1a8(%rsp),%rax
            0x00007f171b255119:   imul   %rbp,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@784 (line 391)
            0x00007f171b25511d:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@785 (line 391)
   0.12%    0x00007f171b255120:   mov    0x190(%rsp),%rax
            0x00007f171b255128:   imul   %rcx,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@793 (line 391)
            0x00007f171b25512c:   add    %rsi,%rax                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@794 (line 391)
   0.11%    0x00007f171b25512f:   mov    0x198(%rsp),%rsi
            0x00007f171b255137:   imul   %r9,%rsi                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@804 (line 392)
            0x00007f171b25513b:   mov    %rdi,%r9
            0x00007f171b25513e:   imul   0x188(%rsp),%r9              ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@812 (line 392)
   0.12%    0x00007f171b255147:   add    %r9,%rsi                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@813 (line 392)
   0.07%    0x00007f171b25514a:   mov    %r10,%r9
            0x00007f171b25514d:   imul   0x180(%rsp),%r9              ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@821 (line 392)
            0x00007f171b255156:   add    %r9,%rsi                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@822 (line 392)
   0.12%    0x00007f171b255159:   mov    %r11,%r9
            0x00007f171b25515c:   imul   0x178(%rsp),%r9              ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@830 (line 392)
            0x00007f171b255165:   add    %r9,%rsi                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@831 (line 392)
   0.13%    0x00007f171b255168:   mov    %rbx,%r9
            0x00007f171b25516b:   imul   0x168(%rsp),%r9              ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@839 (line 392)
            0x00007f171b255174:   add    %r9,%rsi                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@840 (line 392)
   0.12%    0x00007f171b255177:   mov    0x128(%rsp),%r9
            0x00007f171b25517f:   imul   0x158(%rsp),%r9              ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@848 (line 392)
            0x00007f171b255188:   add    %r9,%rsi                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@849 (line 392)
   0.09%    0x00007f171b25518b:   mov    0x140(%rsp),%r9
            0x00007f171b255193:   imul   0x148(%rsp),%r9              ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@858 (line 392)
            0x00007f171b25519c:   add    %r9,%rsi                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@859 (line 392)
   0.10%    0x00007f171b25519f:   mov    0x150(%rsp),%r9
            0x00007f171b2551a7:   imul   0x138(%rsp),%r9              ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@868 (line 392)
            0x00007f171b2551b0:   add    %r9,%rsi                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@869 (line 392)
   0.12%    0x00007f171b2551b3:   mov    0x160(%rsp),%r9
            0x00007f171b2551bb:   imul   %r14,%r9                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@877 (line 392)
            0x00007f171b2551bf:   add    %r9,%rsi                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@878 (line 392)
   0.13%    0x00007f171b2551c2:   mov    0x170(%rsp),%r9
            0x00007f171b2551ca:   imul   %rdx,%r9                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@886 (line 392)
            0x00007f171b2551ce:   add    %r9,%rsi                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@887 (line 392)
                                                                      ;   {no_reloc}
   0.11%    0x00007f171b2551d1:   mov    0x1b0(%rsp),%r9
            0x00007f171b2551d9:   imul   %r13,%r9                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@895 (line 392)
            0x00007f171b2551dd:   add    %r9,%rsi                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@896 (line 392)
   0.11%    0x00007f171b2551e0:   mov    0x1a8(%rsp),%r9
            0x00007f171b2551e8:   imul   %r8,%r9                      ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@904 (line 392)
            0x00007f171b2551ec:   add    %r9,%rsi                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@905 (line 392)
   0.12%    0x00007f171b2551ef:   mov    0x190(%rsp),%r9
            0x00007f171b2551f7:   imul   %rbp,%r9                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@913 (line 392)
            0x00007f171b2551fb:   add    %r9,%rsi                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@914 (line 392)
   0.12%    0x00007f171b2551fe:   imul   0x1a0(%rsp),%rcx             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@922 (line 392)
            0x00007f171b255207:   add    %rcx,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@923 (line 392)
   0.14%    0x00007f171b25520a:   imul   0x198(%rsp),%rdi             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@933 (line 393)
   0.03%    0x00007f171b255213:   mov    %r10,%rcx
            0x00007f171b255216:   imul   0x188(%rsp),%rcx             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@941 (line 393)
   0.09%    0x00007f171b25521f:   add    %rcx,%rdi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@942 (line 393)
   0.13%    0x00007f171b255222:   mov    %r11,%rcx
            0x00007f171b255225:   imul   0x180(%rsp),%rcx             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@950 (line 393)
            0x00007f171b25522e:   add    %rcx,%rdi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@951 (line 393)
   0.15%    0x00007f171b255231:   mov    %rbx,%rcx
            0x00007f171b255234:   imul   0x178(%rsp),%rcx             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@959 (line 393)
            0x00007f171b25523d:   add    %rcx,%rdi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@960 (line 393)
   0.10%    0x00007f171b255240:   mov    0x128(%rsp),%rcx
            0x00007f171b255248:   imul   0x168(%rsp),%rcx             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@968 (line 393)
            0x00007f171b255251:   add    %rcx,%rdi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@969 (line 393)
   0.12%    0x00007f171b255254:   mov    0x140(%rsp),%rcx
            0x00007f171b25525c:   imul   0x158(%rsp),%rcx             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@978 (line 393)
   0.00%    0x00007f171b255265:   add    %rcx,%rdi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@979 (line 393)
   0.13%    0x00007f171b255268:   mov    0x150(%rsp),%rcx
            0x00007f171b255270:   imul   0x148(%rsp),%rcx             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@988 (line 393)
            0x00007f171b255279:   add    %rcx,%rdi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@989 (line 393)
   0.14%    0x00007f171b25527c:   mov    0x160(%rsp),%rcx
            0x00007f171b255284:   imul   0x138(%rsp),%rcx             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@998 (line 393)
            0x00007f171b25528d:   add    %rcx,%rdi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@999 (line 393)
   0.15%    0x00007f171b255290:   mov    0x170(%rsp),%rcx
            0x00007f171b255298:   imul   %r14,%rcx                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1007 (line 393)
            0x00007f171b25529c:   add    %rcx,%rdi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1008 (line 393)
   0.13%    0x00007f171b25529f:   mov    0x1b0(%rsp),%rcx
            0x00007f171b2552a7:   imul   %rdx,%rcx                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1016 (line 393)
            0x00007f171b2552ab:   add    %rcx,%rdi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1017 (line 393)
   0.14%    0x00007f171b2552ae:   mov    0x1a8(%rsp),%rcx
            0x00007f171b2552b6:   imul   %r13,%rcx                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1025 (line 393)
            0x00007f171b2552ba:   add    %rcx,%rdi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1026 (line 393)
   0.11%    0x00007f171b2552bd:   mov    0x190(%rsp),%rcx
            0x00007f171b2552c5:   imul   %r8,%rcx                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1034 (line 393)
            0x00007f171b2552c9:   add    %rcx,%rdi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1035 (line 393)
   0.10%    0x00007f171b2552cc:   mov    0x1a0(%rsp),%rcx             ;   {no_reloc}
            0x00007f171b2552d4:   imul   %rbp,%rcx                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1043 (line 393)
            0x00007f171b2552d8:   mov    %rdi,%rbp
            0x00007f171b2552db:   add    %rcx,%rbp                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1044 (line 393)
   0.11%    0x00007f171b2552de:   imul   0x198(%rsp),%r10             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1054 (line 394)
            0x00007f171b2552e7:   mov    %r11,%rcx
            0x00007f171b2552ea:   imul   0x188(%rsp),%rcx             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1062 (line 394)
   0.14%    0x00007f171b2552f3:   add    %rcx,%r10                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1063 (line 394)
   0.12%    0x00007f171b2552f6:   mov    %rbx,%rcx
            0x00007f171b2552f9:   imul   0x180(%rsp),%rcx             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1071 (line 394)
            0x00007f171b255302:   add    %rcx,%r10                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1072 (line 394)
   0.14%    0x00007f171b255305:   mov    0x128(%rsp),%rcx
            0x00007f171b25530d:   imul   0x178(%rsp),%rcx             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1080 (line 394)
            0x00007f171b255316:   add    %rcx,%r10                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1081 (line 394)
   0.10%    0x00007f171b255319:   mov    0x140(%rsp),%rcx
            0x00007f171b255321:   imul   0x168(%rsp),%rcx             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1090 (line 394)
            0x00007f171b25532a:   add    %rcx,%r10                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1091 (line 394)
   0.12%    0x00007f171b25532d:   mov    0x150(%rsp),%rcx
            0x00007f171b255335:   imul   0x158(%rsp),%rcx             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1100 (line 394)
            0x00007f171b25533e:   add    %rcx,%r10                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1101 (line 394)
   0.14%    0x00007f171b255341:   mov    0x160(%rsp),%rcx
            0x00007f171b255349:   imul   0x148(%rsp),%rcx             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1110 (line 394)
            0x00007f171b255352:   add    %rcx,%r10                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1111 (line 394)
   0.11%    0x00007f171b255355:   mov    0x170(%rsp),%rcx
            0x00007f171b25535d:   imul   0x138(%rsp),%rcx             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1120 (line 394)
            0x00007f171b255366:   add    %rcx,%r10                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1121 (line 394)
   0.12%    0x00007f171b255369:   mov    0x1b0(%rsp),%rcx
            0x00007f171b255371:   imul   %r14,%rcx                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1129 (line 394)
            0x00007f171b255375:   add    %rcx,%r10                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1130 (line 394)
   0.13%    0x00007f171b255378:   mov    0x1a8(%rsp),%rcx
            0x00007f171b255380:   imul   %rdx,%rcx                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1138 (line 394)
            0x00007f171b255384:   add    %rcx,%r10                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1139 (line 394)
   0.14%    0x00007f171b255387:   mov    0x190(%rsp),%rcx
            0x00007f171b25538f:   imul   %r13,%rcx                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1147 (line 394)
            0x00007f171b255393:   add    %rcx,%r10                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1148 (line 394)
   0.11%    0x00007f171b255396:   mov    0x1a0(%rsp),%rcx
            0x00007f171b25539e:   imul   %r8,%rcx                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1156 (line 394)
   0.02%    0x00007f171b2553a2:   add    %rcx,%r10                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1157 (line 394)
   0.11%    0x00007f171b2553a5:   imul   0x198(%rsp),%r11             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1167 (line 395)
            0x00007f171b2553ae:   mov    %rbx,%rcx
            0x00007f171b2553b1:   imul   0x188(%rsp),%rcx             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1175 (line 395)
   0.09%    0x00007f171b2553ba:   add    %rcx,%r11                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1176 (line 395)
   0.11%    0x00007f171b2553bd:   mov    0x128(%rsp),%rcx
            0x00007f171b2553c5:   imul   0x180(%rsp),%rcx             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1184 (line 395)
            0x00007f171b2553ce:   add    %rcx,%r11                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1185 (line 395)
                                                                      ;   {no_reloc}
   0.12%    0x00007f171b2553d1:   mov    0x140(%rsp),%rcx
            0x00007f171b2553d9:   imul   0x178(%rsp),%rcx             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1194 (line 395)
            0x00007f171b2553e2:   add    %rcx,%r11                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1195 (line 395)
   0.12%    0x00007f171b2553e5:   mov    0x150(%rsp),%rcx
            0x00007f171b2553ed:   imul   0x168(%rsp),%rcx             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1204 (line 395)
            0x00007f171b2553f6:   add    %rcx,%r11                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1205 (line 395)
   0.13%    0x00007f171b2553f9:   mov    0x160(%rsp),%rcx
            0x00007f171b255401:   imul   0x158(%rsp),%rcx             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1214 (line 395)
            0x00007f171b25540a:   add    %rcx,%r11                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1215 (line 395)
   0.14%    0x00007f171b25540d:   mov    0x170(%rsp),%r8
            0x00007f171b255415:   imul   0x148(%rsp),%r8              ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1224 (line 395)
            0x00007f171b25541e:   add    %r8,%r11                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1225 (line 395)
   0.12%    0x00007f171b255421:   mov    0x1b0(%rsp),%rcx
            0x00007f171b255429:   imul   0x138(%rsp),%rcx             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1234 (line 395)
            0x00007f171b255432:   add    %rcx,%r11                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1235 (line 395)
   0.12%    0x00007f171b255435:   mov    0x1a8(%rsp),%rcx
            0x00007f171b25543d:   imul   %r14,%rcx                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1243 (line 395)
   0.05%    0x00007f171b255441:   add    %rcx,%r11                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1244 (line 395)
   0.09%    0x00007f171b255444:   mov    0x190(%rsp),%rcx
            0x00007f171b25544c:   imul   %rdx,%rcx                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1252 (line 395)
            0x00007f171b255450:   add    %rcx,%r11                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1253 (line 395)
   0.13%    0x00007f171b255453:   mov    0x1a0(%rsp),%rcx
            0x00007f171b25545b:   imul   %r13,%rcx                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1261 (line 395)
            0x00007f171b25545f:   add    %rcx,%r11                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1262 (line 395)
   0.13%    0x00007f171b255462:   imul   0x198(%rsp),%rbx             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1272 (line 396)
            0x00007f171b25546b:   mov    0x128(%rsp),%rcx
            0x00007f171b255473:   imul   0x188(%rsp),%rcx             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1280 (line 396)
   0.06%    0x00007f171b25547c:   add    %rcx,%rbx                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1281 (line 396)
   0.14%    0x00007f171b25547f:   mov    0x140(%rsp),%rcx
            0x00007f171b255487:   imul   0x180(%rsp),%rcx             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1290 (line 396)
            0x00007f171b255490:   add    %rcx,%rbx                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1291 (line 396)
   0.14%    0x00007f171b255493:   mov    0x150(%rsp),%r13
            0x00007f171b25549b:   imul   0x178(%rsp),%r13             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1300 (line 396)
            0x00007f171b2554a4:   add    %r13,%rbx                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1301 (line 396)
   0.10%    0x00007f171b2554a7:   mov    0x160(%rsp),%rcx
            0x00007f171b2554af:   imul   0x168(%rsp),%rcx             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1310 (line 396)
            0x00007f171b2554b8:   add    %rcx,%rbx                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1311 (line 396)
   0.12%    0x00007f171b2554bb:   mov    0x170(%rsp),%r8
            0x00007f171b2554c3:   imul   0x158(%rsp),%r8              ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1320 (line 396)
            0x00007f171b2554cc:   add    %r8,%rbx                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1321 (line 396)
                                                                      ;   {no_reloc}
   0.11%    0x00007f171b2554cf:   mov    0x1b0(%rsp),%rcx
            0x00007f171b2554d7:   imul   0x148(%rsp),%rcx             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1330 (line 396)
            0x00007f171b2554e0:   add    %rcx,%rbx                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1331 (line 396)
   0.12%    0x00007f171b2554e3:   mov    0x1a8(%rsp),%rcx
            0x00007f171b2554eb:   imul   0x138(%rsp),%rcx             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1340 (line 396)
            0x00007f171b2554f4:   add    %rcx,%rbx                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1341 (line 396)
   0.13%    0x00007f171b2554f7:   mov    0x190(%rsp),%rcx
            0x00007f171b2554ff:   imul   %r14,%rcx                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1349 (line 396)
   0.04%    0x00007f171b255503:   add    %rcx,%rbx                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1350 (line 396)
   0.12%    0x00007f171b255506:   imul   0x1a0(%rsp),%rdx             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1358 (line 396)
            0x00007f171b25550f:   add    %rdx,%rbx                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1359 (line 396)
   0.09%    0x00007f171b255512:   mov    0x128(%rsp),%rdx
            0x00007f171b25551a:   imul   0x198(%rsp),%rdx             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1369 (line 397)
            0x00007f171b255523:   mov    0x140(%rsp),%rcx
            0x00007f171b25552b:   imul   0x188(%rsp),%rcx             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1378 (line 397)
   0.16%    0x00007f171b255534:   add    %rcx,%rdx                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1379 (line 397)
   0.09%    0x00007f171b255537:   mov    0x150(%rsp),%r13
            0x00007f171b25553f:   imul   0x180(%rsp),%r13             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
....................................................................................................
  24.73%  <total for region 1>

....[Hottest Region 2]..............................................................................
jvmci, level 4, sun.security.util.math.intpoly.IntegerPolynomialP384::carryReduce, version 2, compile id 1070 

 <region is too big to display, has 1027 lines, but threshold is 1000>
....................................................................................................
  22.17%  <total for region 2>

....[Hottest Regions]...............................................................................
  24.73%      jvmci, level 4  sun.security.util.math.intpoly.IntegerPolynomialP384::mult, version 2, compile id 1076 
  22.17%      jvmci, level 4  sun.security.util.math.intpoly.IntegerPolynomialP384::carryReduce, version 2, compile id 1070 
   5.68%      jvmci, level 4  sun.security.util.math.intpoly.IntegerPolynomial$MutableElement::setProduct, version 2, compile id 1101 
   4.78%      jvmci, level 4  sun.security.util.math.intpoly.IntegerPolynomialP384::mult, version 2, compile id 1076 
   4.44%      jvmci, level 4  sun.security.util.math.intpoly.IntegerPolynomialP384::square, version 2, compile id 1130 
   4.43%      jvmci, level 4  sun.security.util.math.intpoly.P384OrderField::carryReduce0, version 2, compile id 1159 
   2.04%      jvmci, level 4  sun.security.ec.point.ProjectivePoint$Mutable::conditionalSet, version 2, compile id 1126 
   2.02%      jvmci, level 4  sun.security.ec.point.ProjectivePoint$Mutable::conditionalSet, version 2, compile id 1126 
   1.82%      jvmci, level 4  sun.security.util.math.intpoly.IntegerPolynomialP384::mult, version 2, compile id 1076 
   1.79%        runtime stub  StubRoutines::jlong_disjoint_arraycopy 
   1.50%      jvmci, level 4  sun.security.ec.ECOperations::setDouble, version 2, compile id 1183 
   1.44%      jvmci, level 4  sun.security.util.math.intpoly.P384OrderField::mult, version 2, compile id 1200 
   1.22%      jvmci, level 4  sun.security.util.math.intpoly.IntegerPolynomialP384::mult, version 2, compile id 1076 
   1.06%      jvmci, level 4  sun.security.util.math.intpoly.P384OrderField::square, version 2, compile id 1177 
   1.03%      jvmci, level 4  sun.security.util.math.intpoly.IntegerPolynomialP384::square, version 2, compile id 1130 
   0.98%      jvmci, level 4  sun.security.util.math.intpoly.IntegerPolynomialP384::mult, version 2, compile id 1076 
   0.82%      jvmci, level 4  sun.security.ec.ECOperations::setDouble, version 2, compile id 1183 
   0.81%      jvmci, level 4  sun.security.ec.point.ProjectivePoint$Mutable::conditionalSet, version 2, compile id 1126 
   0.74%      jvmci, level 4  sun.security.ec.ECOperations::setDouble, version 2, compile id 1183 
   0.72%      jvmci, level 4  sun.security.util.math.intpoly.IntegerPolynomialP384::mult, version 2, compile id 1076 
  15.78%  <...other 945 warm regions...>
....................................................................................................
 100.00%  <totals>

....[Hottest Methods (after inlining)]..............................................................
  34.87%      jvmci, level 4  sun.security.util.math.intpoly.IntegerPolynomialP384::mult, version 2, compile id 1076 
  22.17%      jvmci, level 4  sun.security.util.math.intpoly.IntegerPolynomialP384::carryReduce, version 2, compile id 1070 
   8.21%      jvmci, level 4  sun.security.ec.ECOperations::setDouble, version 2, compile id 1183 
   5.68%      jvmci, level 4  sun.security.util.math.intpoly.IntegerPolynomial$MutableElement::setProduct, version 2, compile id 1101 
   5.47%      jvmci, level 4  sun.security.util.math.intpoly.IntegerPolynomialP384::square, version 2, compile id 1130 
   4.87%      jvmci, level 4  sun.security.ec.point.ProjectivePoint$Mutable::conditionalSet, version 2, compile id 1126 
   4.43%      jvmci, level 4  sun.security.util.math.intpoly.P384OrderField::carryReduce0, version 2, compile id 1159 
   3.69%      jvmci, level 4  sun.security.ec.ECOperations::setSum, version 2, compile id 1245 
   2.14%      jvmci, level 4  sun.security.util.math.intpoly.P384OrderField::mult, version 2, compile id 1200 
   1.91%      jvmci, level 4  sun.security.util.math.intpoly.P384OrderField::square, version 2, compile id 1177 
   1.79%        runtime stub  StubRoutines::jlong_disjoint_arraycopy 
   1.69%              kernel  [unknown] 
   0.66%      jvmci, level 4  sun.security.util.math.IntegerModuloP$MultiplicativeInverser$Default::inverse, version 3, compile id 1322 
   0.48%      jvmci, level 4  sun.security.ec.ECOperations$PointMultiplier::lookup, version 2, compile id 1166 
   0.39%      jvmci, level 4  sun.security.ec.ECOperations::setSum, version 2, compile id 1448 
   0.24%      jvmci, level 4  sun.security.ec.ECOperations$PointMultiplier$Default::pointMultiply, version 2, compile id 1490 
   0.15%      jvmci, level 4  sun.security.util.math.intpoly.IntegerPolynomialP384::reduce, version 2, compile id 1228 
   0.14%                      <unknown> 
   0.09%      jvmci, level 4  java.math.BigInteger::shiftRight, version 2, compile id 1324 
   0.07%      jvmci, level 4  sun.security.util.math.intpoly.IntegerPolynomial::encode, version 2, compile id 1529 
   0.89%  <...other 126 warm methods...>
....................................................................................................
 100.00%  <totals>

....[Distribution by Source]........................................................................
  95.97%      jvmci, level 4
   1.81%        runtime stub
   1.69%              kernel
   0.18%           libjvm.so
   0.14%                    
   0.13%        libc-2.31.so
   0.03%      hsdis-amd64.so
   0.02%  libpthread-2.31.so
   0.02%         interpreter
   0.01%          ld-2.31.so
   0.00%              [vdso]
   0.00%    perf-2107013.map
....................................................................................................
 100.00%  <totals>



# JMH version: 1.37
# VM version: JDK 21, OpenJDK 64-Bit Server VM, 21+35-jvmci-23.1-b15
# VM invoker: /home/gogu/bench_jdks/graalvm-community-openjdk-21+35.1/bin/java
# VM options: -XX:ThreadPriorityPolicy=1 -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCIProduct -XX:-UnlockExperimentalVMOptions -Xms4g -Xmx4g -XX:+AlwaysPreTouch
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.performance.benchmarks.api.signature.DsaEcSignatureBenchmark.sign
# Parameters: (algorithm = secp384r1, messageLength = 512)

# Run progress: 41.67% complete, ETA 00:13:39
# Fork: 1 of 1
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 4799.769 us/op
# Warmup Iteration   2: 1731.414 us/op
# Warmup Iteration   3: 1721.670 us/op
# Warmup Iteration   4: 1721.557 us/op
# Warmup Iteration   5: 1721.763 us/op
Iteration   1: 1720.890 us/op
Iteration   2: 1720.719 us/op
Iteration   3: 1720.701 us/op
Iteration   4: 1720.677 us/op
Iteration   5: 1721.540 us/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "com.ionutbalosin.jvm.performance.benchmarks.api.signature.DsaEcSignatureBenchmark.sign":
  1720.905 ±(99.9%) 1.403 us/op [Average]
  (min, avg, max) = (1720.677, 1720.905, 1721.540), stdev = 0.364
  CI (99.9%): [1719.502, 1722.309] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.signature.DsaEcSignatureBenchmark.sign:asm":
PrintAssembly processed: 414459 total address lines.
Perf output processed (skipped 61.642 seconds):
 Column 1: cycles (51064 events)

Hottest code regions (>10.00% "cycles" events):
 Event counts are percents of total event count.

....[Hottest Region 1]..............................................................................
jvmci, level 4, sun.security.util.math.intpoly.IntegerPolynomialP384::mult, version 2, compile id 1073 

            # parm2:    r8:r8     = &apos;[J&apos;
            #           [sp+0x1d0]  (sp of caller)
            0x00007f1b0724b7c0:   mov    0x8(%rsi),%r10d
            0x00007f1b0724b7c4:   movabs $0x7f1a8b000000,%r12
            0x00007f1b0724b7ce:   add    %r12,%r10
            0x00007f1b0724b7d1:   xor    %r12,%r12
            0x00007f1b0724b7d4:   cmp    %r10,%rax
            0x00007f1b0724b7d7:   jne    0x00007f1b06c2f080           ;   {runtime_call ic_miss_stub}
            0x00007f1b0724b7dd:   data16 xchg %ax,%ax
          [Verified Entry Point]
   1.10%    0x00007f1b0724b7e0:   mov    %eax,-0x14000(%rsp)
   1.68%    0x00007f1b0724b7e7:   sub    $0x1c8,%rsp
   0.01%    0x00007f1b0724b7ee:   xchg   %ax,%ax
            0x00007f1b0724b7f0:   cmpl   $0x0,0x20(%r15)
            0x00007f1b0724b7f8:   jne    0x00007f1b0724c758
   0.14%    0x00007f1b0724b7fe:   mov    %rbp,0x1c0(%rsp)             ; ImmutableOopMap {rcx=Oop rdx=Oop rsi=Oop r8=Oop }
                                                                      ;*aload_1 {reexecute=1 rethrow=0 return_oop=0}
                                                                      ; - (reexecute) sun.security.util.math.intpoly.IntegerPolynomialP384::mult@0 (line 379)
   0.02%    0x00007f1b0724b806:   mov    0xc(%rdx),%r9d               ; implicit exception: dispatches to 0x00007f1b0724c77f
                                                                      ; ImmutableOopMap {rcx=Oop rdx=Oop rsi=Oop r8=Oop }
                                                                      ;*aload_1 {reexecute=1 rethrow=0 return_oop=0}
                                                                      ; - (reexecute) sun.security.util.math.intpoly.IntegerPolynomialP384::mult@0 (line 379)
   0.05%    0x00007f1b0724b80a:   mov    0xc(%rcx),%edi               ; implicit exception: dispatches to 0x00007f1b0724c7a2
   0.00%    0x00007f1b0724b80d:   cmp    $0xe,%r9d
            0x00007f1b0724b811:   jb     0x00007f1b0724c735           ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@2 (line 379)
   0.09%    0x00007f1b0724b817:   cmp    $0xe,%edi
            0x00007f1b0724b81a:   jb     0x00007f1b0724c735           ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@5 (line 379)
   0.12%    0x00007f1b0724b820:   mov    %r8,0xc8(%rsp)
   0.37%    0x00007f1b0724b828:   mov    %rsi,0xc0(%rsp)
   0.49%    0x00007f1b0724b830:   mov    0x10(%rdx),%r9               ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@2 (line 379)
   0.00%    0x00007f1b0724b834:   mov    0x18(%rdx),%rdi              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@18 (line 380)
   0.00%    0x00007f1b0724b838:   mov    0x20(%rdx),%r10              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@43 (line 381)
            0x00007f1b0724b83c:   mov    0x28(%rdx),%r11              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@76 (line 382)
   0.15%    0x00007f1b0724b840:   mov    0x30(%rdx),%rbx              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@117 (line 383)
   0.01%    0x00007f1b0724b844:   mov    0x38(%rdx),%rax              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@166 (line 384)
   0.00%    0x00007f1b0724b848:   mov    0x40(%rdx),%rbp              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@225 (line 385)
   0.00%    0x00007f1b0724b84c:   mov    0x48(%rdx),%r13              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@294 (line 386)
   0.13%    0x00007f1b0724b850:   mov    0x50(%rdx),%r14              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@373 (line 387)
   0.00%    0x00007f1b0724b854:   mov    0x58(%rdx),%r8               ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@462 (line 388)
   0.01%    0x00007f1b0724b858:   mov    0x60(%rdx),%rsi              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@561 (line 389)
            0x00007f1b0724b85c:   mov    %rsi,0x1b0(%rsp)
   0.26%    0x00007f1b0724b864:   mov    0x68(%rdx),%rsi              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@670 (line 390)
   0.01%    0x00007f1b0724b868:   mov    %rsi,0x1a8(%rsp)
            0x00007f1b0724b870:   mov    0x70(%rdx),%rsi              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@789 (line 391)
   0.00%    0x00007f1b0724b874:   mov    0x78(%rdx),%rdx              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@918 (line 392)
   0.14%    0x00007f1b0724b878:   mov    %rdx,0x1a0(%rsp)
   0.00%    0x00007f1b0724b880:   mov    0x78(%rcx),%rdx              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@803 (line 392)
   0.01%    0x00007f1b0724b884:   mov    %rdx,0x198(%rsp)
   0.05%    0x00007f1b0724b88c:   mov    0x70(%rcx),%rdx              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@684 (line 391)
   0.06%    0x00007f1b0724b890:   mov    %rsi,0x190(%rsp)
   0.22%    0x00007f1b0724b898:   mov    0x68(%rcx),%rsi              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@575 (line 390)
   0.00%    0x00007f1b0724b89c:   mov    %rdx,0x188(%rsp)
   0.02%    0x00007f1b0724b8a4:   mov    0x60(%rcx),%rdx              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@476 (line 389)
   0.00%    0x00007f1b0724b8a8:   mov    %rsi,0x180(%rsp)
   0.08%    0x00007f1b0724b8b0:   mov    0x58(%rcx),%rsi              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@387 (line 388)
   0.00%    0x00007f1b0724b8b4:   mov    %rdx,0x178(%rsp)
   0.13%    0x00007f1b0724b8bc:   mov    0x50(%rcx),%rdx              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@308 (line 387)
   0.01%    0x00007f1b0724b8c0:   mov    %r8,0x170(%rsp)
   0.06%    0x00007f1b0724b8c8:   mov    0x48(%rcx),%r8               ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@239 (line 386)
   0.01%    0x00007f1b0724b8cc:   mov    %rsi,0x168(%rsp)
   0.17%    0x00007f1b0724b8d4:   mov    0x40(%rcx),%rsi              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@180 (line 385)
                                                                      ;   {no_reloc}
   0.01%    0x00007f1b0724b8d8:   mov    %r14,0x160(%rsp)
   0.09%    0x00007f1b0724b8e0:   mov    0x38(%rcx),%r14              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@130 (line 384)
   0.01%    0x00007f1b0724b8e4:   mov    %rdx,0x158(%rsp)
   0.20%    0x00007f1b0724b8ec:   mov    0x30(%rcx),%rdx              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@89 (line 383)
   0.00%    0x00007f1b0724b8f0:   mov    %r13,0x150(%rsp)
   0.09%    0x00007f1b0724b8f8:   mov    0x28(%rcx),%r13              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@56 (line 382)
   0.00%    0x00007f1b0724b8fc:   mov    %r8,0x148(%rsp)
   0.13%    0x00007f1b0724b904:   mov    0x20(%rcx),%r8               ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@31 (line 381)
   0.00%    0x00007f1b0724b908:   mov    %rbp,0x140(%rsp)
   0.07%    0x00007f1b0724b910:   mov    0x18(%rcx),%rbp              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@14 (line 380)
   0.00%    0x00007f1b0724b914:   mov    0x10(%rcx),%rcx              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@5 (line 379)
   0.06%    0x00007f1b0724b918:   mov    %rsi,0x138(%rsp)
   0.05%    0x00007f1b0724b920:   mov    %r9,%rsi
   0.02%    0x00007f1b0724b923:   imul   %rcx,%rsi                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@6 (line 379)
   0.01%    0x00007f1b0724b927:   mov    %rsi,0x130(%rsp)
   0.11%    0x00007f1b0724b92f:   mov    %rbp,%rsi
   0.00%    0x00007f1b0724b932:   imul   %r9,%rsi                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@15 (line 380)
   0.00%    0x00007f1b0724b936:   mov    %rax,0x128(%rsp)
   0.08%    0x00007f1b0724b93e:   mov    %rdi,%rax
   0.02%    0x00007f1b0724b941:   imul   %rcx,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@22 (line 380)
   0.00%    0x00007f1b0724b945:   add    %rsi,%rax                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@23 (line 380)
   0.03%    0x00007f1b0724b948:   mov    %r8,%rsi
   0.09%    0x00007f1b0724b94b:   imul   %r9,%rsi                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@32 (line 381)
   0.03%    0x00007f1b0724b94f:   mov    %rax,0x120(%rsp)
   0.00%    0x00007f1b0724b957:   mov    %rdi,%rax
   0.03%    0x00007f1b0724b95a:   imul   %rbp,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@39 (line 381)
   0.10%    0x00007f1b0724b95e:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@40 (line 381)
   0.01%    0x00007f1b0724b961:   mov    %r10,%rax
   0.00%    0x00007f1b0724b964:   imul   %rcx,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@47 (line 381)
   0.03%    0x00007f1b0724b968:   add    %rsi,%rax                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@48 (line 381)
   0.06%    0x00007f1b0724b96b:   mov    %r13,%rsi
   0.01%    0x00007f1b0724b96e:   imul   %r9,%rsi                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@57 (line 382)
   0.00%    0x00007f1b0724b972:   mov    %rax,0x118(%rsp)
   0.02%    0x00007f1b0724b97a:   mov    %rdi,%rax
   0.09%    0x00007f1b0724b97d:   imul   %r8,%rax                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@64 (line 382)
   0.01%    0x00007f1b0724b981:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@65 (line 382)
   0.00%    0x00007f1b0724b984:   mov    %r10,%rax
   0.01%    0x00007f1b0724b987:   imul   %rbp,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@72 (line 382)
   0.09%    0x00007f1b0724b98b:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@73 (line 382)
   0.02%    0x00007f1b0724b98e:   mov    %r11,%rax
   0.00%    0x00007f1b0724b991:   imul   %rcx,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@80 (line 382)
   0.01%    0x00007f1b0724b995:   add    %rsi,%rax                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@81 (line 382)
   0.13%    0x00007f1b0724b998:   mov    %rdx,%rsi
   0.02%    0x00007f1b0724b99b:   imul   %r9,%rsi                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@90 (line 383)
   0.00%    0x00007f1b0724b99f:   mov    %rax,0x110(%rsp)
   0.05%    0x00007f1b0724b9a7:   mov    %rdi,%rax
   0.08%    0x00007f1b0724b9aa:   imul   %r13,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@97 (line 383)
   0.02%    0x00007f1b0724b9ae:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@98 (line 383)
   0.01%    0x00007f1b0724b9b1:   mov    %r10,%rax
   0.03%    0x00007f1b0724b9b4:   imul   %r8,%rax                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@105 (line 383)
   0.07%    0x00007f1b0724b9b8:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@106 (line 383)
   0.01%    0x00007f1b0724b9bb:   mov    %r11,%rax
   0.00%    0x00007f1b0724b9be:   imul   %rbp,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@113 (line 383)
   0.03%    0x00007f1b0724b9c2:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@114 (line 383)
   0.10%    0x00007f1b0724b9c5:   mov    %rbx,%rax
   0.01%    0x00007f1b0724b9c8:   imul   %rcx,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@121 (line 383)
   0.00%    0x00007f1b0724b9cc:   add    %rsi,%rax                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@122 (line 383)
   0.07%    0x00007f1b0724b9cf:   mov    %r14,%rsi
   0.06%    0x00007f1b0724b9d2:   imul   %r9,%rsi                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@131 (line 384)
                                                                      ;   {no_reloc}
   0.02%    0x00007f1b0724b9d6:   mov    %rax,0x108(%rsp)
   0.11%    0x00007f1b0724b9de:   mov    %rdi,%rax
   0.00%    0x00007f1b0724b9e1:   imul   %rdx,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@138 (line 384)
   0.00%    0x00007f1b0724b9e5:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@139 (line 384)
   0.01%    0x00007f1b0724b9e8:   mov    %r10,%rax
   0.11%    0x00007f1b0724b9eb:   imul   %r13,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@146 (line 384)
   0.00%    0x00007f1b0724b9ef:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@147 (line 384)
            0x00007f1b0724b9f2:   mov    %r11,%rax
   0.00%    0x00007f1b0724b9f5:   imul   %r8,%rax                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@154 (line 384)
   0.15%    0x00007f1b0724b9f9:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@155 (line 384)
            0x00007f1b0724b9fc:   mov    %rbx,%rax
   0.01%    0x00007f1b0724b9ff:   imul   %rbp,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@162 (line 384)
            0x00007f1b0724ba03:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@163 (line 384)
   0.19%    0x00007f1b0724ba06:   mov    0x128(%rsp),%rax
   0.00%    0x00007f1b0724ba0e:   imul   %rcx,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@170 (line 384)
            0x00007f1b0724ba12:   add    %rsi,%rax                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@171 (line 384)
   0.00%    0x00007f1b0724ba15:   mov    0x138(%rsp),%rsi
   0.11%    0x00007f1b0724ba1d:   imul   %r9,%rsi                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@181 (line 385)
   0.00%    0x00007f1b0724ba21:   mov    %rax,0x100(%rsp)
   0.13%    0x00007f1b0724ba29:   mov    %rdi,%rax
   0.00%    0x00007f1b0724ba2c:   imul   %r14,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@188 (line 385)
            0x00007f1b0724ba30:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@189 (line 385)
   0.00%    0x00007f1b0724ba33:   mov    %r10,%rax
   0.09%    0x00007f1b0724ba36:   imul   %rdx,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@196 (line 385)
   0.00%    0x00007f1b0724ba3a:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@197 (line 385)
   0.09%    0x00007f1b0724ba3d:   mov    %r11,%rax
            0x00007f1b0724ba40:   imul   %r13,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@204 (line 385)
   0.09%    0x00007f1b0724ba44:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@205 (line 385)
   0.00%    0x00007f1b0724ba47:   mov    %rbx,%rax
   0.04%    0x00007f1b0724ba4a:   imul   %r8,%rax                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@212 (line 385)
            0x00007f1b0724ba4e:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@213 (line 385)
   0.13%    0x00007f1b0724ba51:   mov    0x128(%rsp),%rax
            0x00007f1b0724ba59:   imul   %rbp,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@220 (line 385)
   0.04%    0x00007f1b0724ba5d:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@221 (line 385)
   0.00%    0x00007f1b0724ba60:   mov    0x140(%rsp),%rax
   0.09%    0x00007f1b0724ba68:   imul   %rcx,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@229 (line 385)
   0.00%    0x00007f1b0724ba6c:   add    %rsi,%rax                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@230 (line 385)
   0.10%    0x00007f1b0724ba6f:   mov    0x148(%rsp),%rsi
            0x00007f1b0724ba77:   imul   %r9,%rsi                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@240 (line 386)
   0.02%    0x00007f1b0724ba7b:   mov    %rax,0xf8(%rsp)
   0.20%    0x00007f1b0724ba83:   mov    %rdi,%rax
            0x00007f1b0724ba86:   imul   0x138(%rsp),%rax             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@248 (line 386)
   0.00%    0x00007f1b0724ba8f:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@249 (line 386)
            0x00007f1b0724ba92:   mov    %r10,%rax
   0.12%    0x00007f1b0724ba95:   imul   %r14,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@256 (line 386)
            0x00007f1b0724ba99:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@257 (line 386)
            0x00007f1b0724ba9c:   mov    %r11,%rax
            0x00007f1b0724ba9f:   imul   %rdx,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@264 (line 386)
   0.14%    0x00007f1b0724baa3:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@265 (line 386)
            0x00007f1b0724baa6:   mov    %rbx,%rax
   0.00%    0x00007f1b0724baa9:   imul   %r13,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@272 (line 386)
            0x00007f1b0724baad:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@273 (line 386)
   0.17%    0x00007f1b0724bab0:   mov    0x128(%rsp),%rax
            0x00007f1b0724bab8:   imul   %r8,%rax                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@280 (line 386)
   0.00%    0x00007f1b0724babc:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@281 (line 386)
            0x00007f1b0724babf:   mov    0x140(%rsp),%rax
   0.11%    0x00007f1b0724bac7:   imul   %rbp,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@289 (line 386)
            0x00007f1b0724bacb:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@290 (line 386)
            0x00007f1b0724bace:   mov    0x150(%rsp),%rax             ;   {no_reloc}
            0x00007f1b0724bad6:   imul   %rcx,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@298 (line 386)
   0.13%    0x00007f1b0724bada:   add    %rsi,%rax                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@299 (line 386)
            0x00007f1b0724badd:   mov    0x158(%rsp),%rsi
            0x00007f1b0724bae5:   imul   %r9,%rsi                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@309 (line 387)
            0x00007f1b0724bae9:   mov    %rax,0xf0(%rsp)
   0.25%    0x00007f1b0724baf1:   mov    %rdi,%rax
            0x00007f1b0724baf4:   imul   0x148(%rsp),%rax             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@317 (line 387)
            0x00007f1b0724bafd:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@318 (line 387)
            0x00007f1b0724bb00:   mov    %r10,%rax
   0.14%    0x00007f1b0724bb03:   imul   0x138(%rsp),%rax             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@326 (line 387)
            0x00007f1b0724bb0c:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@327 (line 387)
            0x00007f1b0724bb0f:   mov    %r11,%rax
            0x00007f1b0724bb12:   imul   %r14,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@334 (line 387)
   0.12%    0x00007f1b0724bb16:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@335 (line 387)
   0.00%    0x00007f1b0724bb19:   mov    %rbx,%rax
   0.00%    0x00007f1b0724bb1c:   imul   %rdx,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@342 (line 387)
   0.00%    0x00007f1b0724bb20:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@343 (line 387)
   0.18%    0x00007f1b0724bb23:   mov    0x128(%rsp),%rax
            0x00007f1b0724bb2b:   imul   %r13,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@350 (line 387)
   0.00%    0x00007f1b0724bb2f:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@351 (line 387)
   0.03%    0x00007f1b0724bb32:   mov    0x140(%rsp),%rax
   0.06%    0x00007f1b0724bb3a:   imul   %r8,%rax                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@359 (line 387)
            0x00007f1b0724bb3e:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@360 (line 387)
   0.06%    0x00007f1b0724bb41:   mov    0x150(%rsp),%rax
            0x00007f1b0724bb49:   imul   %rbp,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@368 (line 387)
   0.07%    0x00007f1b0724bb4d:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@369 (line 387)
   0.03%    0x00007f1b0724bb50:   mov    0x160(%rsp),%rax
   0.00%    0x00007f1b0724bb58:   imul   %rcx,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@377 (line 387)
            0x00007f1b0724bb5c:   add    %rsi,%rax                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@378 (line 387)
   0.11%    0x00007f1b0724bb5f:   mov    0x168(%rsp),%rsi
            0x00007f1b0724bb67:   imul   %r9,%rsi                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@388 (line 388)
            0x00007f1b0724bb6b:   mov    %rax,0xe8(%rsp)
   0.25%    0x00007f1b0724bb73:   mov    %rdi,%rax
            0x00007f1b0724bb76:   imul   0x158(%rsp),%rax             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@396 (line 388)
            0x00007f1b0724bb7f:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@397 (line 388)
   0.00%    0x00007f1b0724bb82:   mov    %r10,%rax
   0.12%    0x00007f1b0724bb85:   imul   0x148(%rsp),%rax             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@405 (line 388)
            0x00007f1b0724bb8e:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@406 (line 388)
            0x00007f1b0724bb91:   mov    %r11,%rax
            0x00007f1b0724bb94:   imul   0x138(%rsp),%rax             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@414 (line 388)
   0.11%    0x00007f1b0724bb9d:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@415 (line 388)
   0.00%    0x00007f1b0724bba0:   mov    %rbx,%rax
            0x00007f1b0724bba3:   imul   %r14,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@422 (line 388)
            0x00007f1b0724bba7:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@423 (line 388)
   0.14%    0x00007f1b0724bbaa:   mov    0x128(%rsp),%rax
            0x00007f1b0724bbb2:   imul   %rdx,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@430 (line 388)
            0x00007f1b0724bbb6:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@431 (line 388)
   0.08%    0x00007f1b0724bbb9:   mov    0x140(%rsp),%rax
   0.05%    0x00007f1b0724bbc1:   imul   %r13,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@439 (line 388)
            0x00007f1b0724bbc5:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@440 (line 388)
   0.08%    0x00007f1b0724bbc8:   mov    0x150(%rsp),%rax
            0x00007f1b0724bbd0:   imul   %r8,%rax                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@448 (line 388)
                                                                      ;   {no_reloc}
   0.03%    0x00007f1b0724bbd4:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@449 (line 388)
   0.06%    0x00007f1b0724bbd7:   mov    0x160(%rsp),%rax
            0x00007f1b0724bbdf:   imul   %rbp,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@457 (line 388)
   0.00%    0x00007f1b0724bbe3:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@458 (line 388)
   0.14%    0x00007f1b0724bbe6:   mov    0x170(%rsp),%rax
            0x00007f1b0724bbee:   imul   %rcx,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@466 (line 388)
            0x00007f1b0724bbf2:   add    %rsi,%rax                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@467 (line 388)
   0.11%    0x00007f1b0724bbf5:   mov    0x178(%rsp),%rsi
            0x00007f1b0724bbfd:   imul   %r9,%rsi                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@477 (line 389)
   0.00%    0x00007f1b0724bc01:   mov    %rax,0xe0(%rsp)
   0.29%    0x00007f1b0724bc09:   mov    %rdi,%rax
            0x00007f1b0724bc0c:   imul   0x168(%rsp),%rax             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@485 (line 389)
            0x00007f1b0724bc15:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@486 (line 389)
            0x00007f1b0724bc18:   mov    %r10,%rax
   0.14%    0x00007f1b0724bc1b:   imul   0x158(%rsp),%rax             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@494 (line 389)
            0x00007f1b0724bc24:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@495 (line 389)
            0x00007f1b0724bc27:   mov    %r11,%rax
            0x00007f1b0724bc2a:   imul   0x148(%rsp),%rax             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@503 (line 389)
   0.13%    0x00007f1b0724bc33:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@504 (line 389)
            0x00007f1b0724bc36:   mov    %rbx,%rax
            0x00007f1b0724bc39:   imul   0x138(%rsp),%rax             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@512 (line 389)
            0x00007f1b0724bc42:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@513 (line 389)
   0.13%    0x00007f1b0724bc45:   mov    0x128(%rsp),%rax
            0x00007f1b0724bc4d:   imul   %r14,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@520 (line 389)
   0.08%    0x00007f1b0724bc51:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@521 (line 389)
   0.12%    0x00007f1b0724bc54:   mov    0x140(%rsp),%rax
   0.00%    0x00007f1b0724bc5c:   imul   %rdx,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@529 (line 389)
            0x00007f1b0724bc60:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@530 (line 389)
   0.13%    0x00007f1b0724bc63:   mov    0x150(%rsp),%rax
            0x00007f1b0724bc6b:   imul   %r13,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@538 (line 389)
            0x00007f1b0724bc6f:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@539 (line 389)
   0.11%    0x00007f1b0724bc72:   mov    0x160(%rsp),%rax
            0x00007f1b0724bc7a:   imul   %r8,%rax                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@547 (line 389)
            0x00007f1b0724bc7e:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@548 (line 389)
   0.13%    0x00007f1b0724bc81:   mov    0x170(%rsp),%rax
            0x00007f1b0724bc89:   imul   %rbp,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@556 (line 389)
            0x00007f1b0724bc8d:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@557 (line 389)
   0.13%    0x00007f1b0724bc90:   mov    0x1b0(%rsp),%rax
            0x00007f1b0724bc98:   imul   %rcx,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@565 (line 389)
            0x00007f1b0724bc9c:   add    %rsi,%rax                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@566 (line 389)
   0.11%    0x00007f1b0724bc9f:   mov    0x180(%rsp),%rsi
            0x00007f1b0724bca7:   imul   %r9,%rsi                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@576 (line 390)
            0x00007f1b0724bcab:   mov    %rax,0xd8(%rsp)
   0.25%    0x00007f1b0724bcb3:   mov    %rdi,%rax
            0x00007f1b0724bcb6:   imul   0x178(%rsp),%rax             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@584 (line 390)
            0x00007f1b0724bcbf:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@585 (line 390)
            0x00007f1b0724bcc2:   mov    %r10,%rax
   0.13%    0x00007f1b0724bcc5:   imul   0x168(%rsp),%rax             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@593 (line 390)
            0x00007f1b0724bcce:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@594 (line 390)
            0x00007f1b0724bcd1:   mov    %r11,%rax                    ;   {no_reloc}
            0x00007f1b0724bcd4:   imul   0x158(%rsp),%rax             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@602 (line 390)
   0.14%    0x00007f1b0724bcdd:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@603 (line 390)
            0x00007f1b0724bce0:   mov    %rbx,%rax
            0x00007f1b0724bce3:   imul   0x148(%rsp),%rax             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@611 (line 390)
            0x00007f1b0724bcec:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@612 (line 390)
   0.13%    0x00007f1b0724bcef:   mov    0x128(%rsp),%rax
            0x00007f1b0724bcf7:   imul   0x138(%rsp),%rax             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@620 (line 390)
            0x00007f1b0724bd00:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@621 (line 390)
   0.07%    0x00007f1b0724bd03:   mov    0x140(%rsp),%rax
   0.05%    0x00007f1b0724bd0b:   imul   %r14,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@629 (line 390)
            0x00007f1b0724bd0f:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@630 (line 390)
   0.06%    0x00007f1b0724bd12:   mov    0x150(%rsp),%rax
            0x00007f1b0724bd1a:   imul   %rdx,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@638 (line 390)
   0.05%    0x00007f1b0724bd1e:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@639 (line 390)
   0.06%    0x00007f1b0724bd21:   mov    0x160(%rsp),%rax
            0x00007f1b0724bd29:   imul   %r13,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@647 (line 390)
   0.00%    0x00007f1b0724bd2d:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@648 (line 390)
   0.11%    0x00007f1b0724bd30:   mov    0x170(%rsp),%rax
            0x00007f1b0724bd38:   imul   %r8,%rax                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@656 (line 390)
            0x00007f1b0724bd3c:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@657 (line 390)
   0.15%    0x00007f1b0724bd3f:   mov    0x1b0(%rsp),%rax
            0x00007f1b0724bd47:   imul   %rbp,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@665 (line 390)
            0x00007f1b0724bd4b:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@666 (line 390)
   0.12%    0x00007f1b0724bd4e:   mov    0x1a8(%rsp),%rax
            0x00007f1b0724bd56:   imul   %rcx,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@674 (line 390)
            0x00007f1b0724bd5a:   add    %rsi,%rax                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@675 (line 390)
   0.14%    0x00007f1b0724bd5d:   mov    0x188(%rsp),%rsi
            0x00007f1b0724bd65:   imul   %r9,%rsi                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@685 (line 391)
            0x00007f1b0724bd69:   mov    %rax,0xd0(%rsp)
   0.27%    0x00007f1b0724bd71:   mov    %rdi,%rax
            0x00007f1b0724bd74:   imul   0x180(%rsp),%rax             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@693 (line 391)
            0x00007f1b0724bd7d:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@694 (line 391)
            0x00007f1b0724bd80:   mov    %r10,%rax
   0.10%    0x00007f1b0724bd83:   imul   0x178(%rsp),%rax             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@702 (line 391)
            0x00007f1b0724bd8c:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@703 (line 391)
            0x00007f1b0724bd8f:   mov    %r11,%rax
            0x00007f1b0724bd92:   imul   0x168(%rsp),%rax             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@711 (line 391)
   0.14%    0x00007f1b0724bd9b:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@712 (line 391)
            0x00007f1b0724bd9e:   mov    %rbx,%rax
            0x00007f1b0724bda1:   imul   0x158(%rsp),%rax             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@720 (line 391)
            0x00007f1b0724bdaa:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@721 (line 391)
   0.10%    0x00007f1b0724bdad:   mov    0x128(%rsp),%rax
            0x00007f1b0724bdb5:   imul   0x148(%rsp),%rax             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@729 (line 391)
            0x00007f1b0724bdbe:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@730 (line 391)
   0.12%    0x00007f1b0724bdc1:   mov    0x140(%rsp),%rax
            0x00007f1b0724bdc9:   imul   0x138(%rsp),%rax             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@739 (line 391)
                                                                      ;   {no_reloc}
            0x00007f1b0724bdd2:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@740 (line 391)
   0.12%    0x00007f1b0724bdd5:   mov    0x150(%rsp),%rax
            0x00007f1b0724bddd:   imul   %r14,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@748 (line 391)
   0.04%    0x00007f1b0724bde1:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@749 (line 391)
   0.13%    0x00007f1b0724bde4:   mov    0x160(%rsp),%rax
            0x00007f1b0724bdec:   imul   %rdx,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@757 (line 391)
            0x00007f1b0724bdf0:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@758 (line 391)
   0.11%    0x00007f1b0724bdf3:   mov    0x170(%rsp),%rax
            0x00007f1b0724bdfb:   imul   %r13,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@766 (line 391)
            0x00007f1b0724bdff:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@767 (line 391)
   0.12%    0x00007f1b0724be02:   mov    0x1b0(%rsp),%rax
            0x00007f1b0724be0a:   imul   %r8,%rax                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@775 (line 391)
            0x00007f1b0724be0e:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@776 (line 391)
   0.15%    0x00007f1b0724be11:   mov    0x1a8(%rsp),%rax
            0x00007f1b0724be19:   imul   %rbp,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@784 (line 391)
            0x00007f1b0724be1d:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@785 (line 391)
   0.14%    0x00007f1b0724be20:   mov    0x190(%rsp),%rax
            0x00007f1b0724be28:   imul   %rcx,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@793 (line 391)
            0x00007f1b0724be2c:   add    %rsi,%rax                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@794 (line 391)
   0.12%    0x00007f1b0724be2f:   mov    0x198(%rsp),%rsi
            0x00007f1b0724be37:   imul   %r9,%rsi                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@804 (line 392)
            0x00007f1b0724be3b:   mov    %rdi,%r9
            0x00007f1b0724be3e:   imul   0x188(%rsp),%r9              ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@812 (line 392)
   0.12%    0x00007f1b0724be47:   add    %r9,%rsi                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@813 (line 392)
   0.09%    0x00007f1b0724be4a:   mov    %r10,%r9
            0x00007f1b0724be4d:   imul   0x180(%rsp),%r9              ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@821 (line 392)
            0x00007f1b0724be56:   add    %r9,%rsi                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@822 (line 392)
   0.11%    0x00007f1b0724be59:   mov    %r11,%r9
            0x00007f1b0724be5c:   imul   0x178(%rsp),%r9              ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@830 (line 392)
            0x00007f1b0724be65:   add    %r9,%rsi                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@831 (line 392)
   0.13%    0x00007f1b0724be68:   mov    %rbx,%r9
            0x00007f1b0724be6b:   imul   0x168(%rsp),%r9              ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@839 (line 392)
            0x00007f1b0724be74:   add    %r9,%rsi                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@840 (line 392)
   0.10%    0x00007f1b0724be77:   mov    0x128(%rsp),%r9
            0x00007f1b0724be7f:   imul   0x158(%rsp),%r9              ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@848 (line 392)
            0x00007f1b0724be88:   add    %r9,%rsi                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@849 (line 392)
   0.10%    0x00007f1b0724be8b:   mov    0x140(%rsp),%r9
            0x00007f1b0724be93:   imul   0x148(%rsp),%r9              ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@858 (line 392)
            0x00007f1b0724be9c:   add    %r9,%rsi                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@859 (line 392)
   0.11%    0x00007f1b0724be9f:   mov    0x150(%rsp),%r9
            0x00007f1b0724bea7:   imul   0x138(%rsp),%r9              ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@868 (line 392)
            0x00007f1b0724beb0:   add    %r9,%rsi                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@869 (line 392)
   0.15%    0x00007f1b0724beb3:   mov    0x160(%rsp),%r9
            0x00007f1b0724bebb:   imul   %r14,%r9                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@877 (line 392)
            0x00007f1b0724bebf:   add    %r9,%rsi                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@878 (line 392)
   0.13%    0x00007f1b0724bec2:   mov    0x170(%rsp),%r9
            0x00007f1b0724beca:   imul   %rdx,%r9                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@886 (line 392)
            0x00007f1b0724bece:   add    %r9,%rsi                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@887 (line 392)
                                                                      ;   {no_reloc}
   0.12%    0x00007f1b0724bed1:   mov    0x1b0(%rsp),%r9
            0x00007f1b0724bed9:   imul   %r13,%r9                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@895 (line 392)
            0x00007f1b0724bedd:   add    %r9,%rsi                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@896 (line 392)
   0.11%    0x00007f1b0724bee0:   mov    0x1a8(%rsp),%r9
            0x00007f1b0724bee8:   imul   %r8,%r9                      ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@904 (line 392)
            0x00007f1b0724beec:   add    %r9,%rsi                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@905 (line 392)
   0.14%    0x00007f1b0724beef:   mov    0x190(%rsp),%r9
            0x00007f1b0724bef7:   imul   %rbp,%r9                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@913 (line 392)
            0x00007f1b0724befb:   add    %r9,%rsi                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@914 (line 392)
   0.14%    0x00007f1b0724befe:   imul   0x1a0(%rsp),%rcx             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@922 (line 392)
            0x00007f1b0724bf07:   add    %rcx,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@923 (line 392)
   0.15%    0x00007f1b0724bf0a:   imul   0x198(%rsp),%rdi             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@933 (line 393)
   0.04%    0x00007f1b0724bf13:   mov    %r10,%rcx
            0x00007f1b0724bf16:   imul   0x188(%rsp),%rcx             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@941 (line 393)
   0.11%    0x00007f1b0724bf1f:   add    %rcx,%rdi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@942 (line 393)
   0.13%    0x00007f1b0724bf22:   mov    %r11,%rcx
            0x00007f1b0724bf25:   imul   0x180(%rsp),%rcx             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@950 (line 393)
            0x00007f1b0724bf2e:   add    %rcx,%rdi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@951 (line 393)
   0.12%    0x00007f1b0724bf31:   mov    %rbx,%rcx
            0x00007f1b0724bf34:   imul   0x178(%rsp),%rcx             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@959 (line 393)
   0.00%    0x00007f1b0724bf3d:   add    %rcx,%rdi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@960 (line 393)
   0.09%    0x00007f1b0724bf40:   mov    0x128(%rsp),%rcx
            0x00007f1b0724bf48:   imul   0x168(%rsp),%rcx             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@968 (line 393)
            0x00007f1b0724bf51:   add    %rcx,%rdi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@969 (line 393)
   0.13%    0x00007f1b0724bf54:   mov    0x140(%rsp),%rcx
            0x00007f1b0724bf5c:   imul   0x158(%rsp),%rcx             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@978 (line 393)
            0x00007f1b0724bf65:   add    %rcx,%rdi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@979 (line 393)
   0.13%    0x00007f1b0724bf68:   mov    0x150(%rsp),%rcx
            0x00007f1b0724bf70:   imul   0x148(%rsp),%rcx             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@988 (line 393)
            0x00007f1b0724bf79:   add    %rcx,%rdi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@989 (line 393)
   0.11%    0x00007f1b0724bf7c:   mov    0x160(%rsp),%rcx
            0x00007f1b0724bf84:   imul   0x138(%rsp),%rcx             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@998 (line 393)
            0x00007f1b0724bf8d:   add    %rcx,%rdi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@999 (line 393)
   0.14%    0x00007f1b0724bf90:   mov    0x170(%rsp),%rcx
            0x00007f1b0724bf98:   imul   %r14,%rcx                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1007 (line 393)
            0x00007f1b0724bf9c:   add    %rcx,%rdi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1008 (line 393)
   0.11%    0x00007f1b0724bf9f:   mov    0x1b0(%rsp),%rcx
            0x00007f1b0724bfa7:   imul   %rdx,%rcx                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1016 (line 393)
            0x00007f1b0724bfab:   add    %rcx,%rdi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1017 (line 393)
   0.15%    0x00007f1b0724bfae:   mov    0x1a8(%rsp),%rcx
            0x00007f1b0724bfb6:   imul   %r13,%rcx                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1025 (line 393)
            0x00007f1b0724bfba:   add    %rcx,%rdi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1026 (line 393)
   0.13%    0x00007f1b0724bfbd:   mov    0x190(%rsp),%rcx
            0x00007f1b0724bfc5:   imul   %r8,%rcx                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1034 (line 393)
            0x00007f1b0724bfc9:   add    %rcx,%rdi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1035 (line 393)
   0.13%    0x00007f1b0724bfcc:   mov    0x1a0(%rsp),%rcx             ;   {no_reloc}
            0x00007f1b0724bfd4:   imul   %rbp,%rcx                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1043 (line 393)
            0x00007f1b0724bfd8:   mov    %rdi,%rbp
            0x00007f1b0724bfdb:   add    %rcx,%rbp                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1044 (line 393)
   0.09%    0x00007f1b0724bfde:   imul   0x198(%rsp),%r10             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1054 (line 394)
            0x00007f1b0724bfe7:   mov    %r11,%rcx
            0x00007f1b0724bfea:   imul   0x188(%rsp),%rcx             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1062 (line 394)
   0.12%    0x00007f1b0724bff3:   add    %rcx,%r10                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1063 (line 394)
   0.14%    0x00007f1b0724bff6:   mov    %rbx,%rcx
            0x00007f1b0724bff9:   imul   0x180(%rsp),%rcx             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1071 (line 394)
            0x00007f1b0724c002:   add    %rcx,%r10                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1072 (line 394)
   0.13%    0x00007f1b0724c005:   mov    0x128(%rsp),%rcx
            0x00007f1b0724c00d:   imul   0x178(%rsp),%rcx             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1080 (line 394)
            0x00007f1b0724c016:   add    %rcx,%r10                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1081 (line 394)
   0.15%    0x00007f1b0724c019:   mov    0x140(%rsp),%rcx
            0x00007f1b0724c021:   imul   0x168(%rsp),%rcx             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1090 (line 394)
            0x00007f1b0724c02a:   add    %rcx,%r10                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1091 (line 394)
   0.13%    0x00007f1b0724c02d:   mov    0x150(%rsp),%rcx
            0x00007f1b0724c035:   imul   0x158(%rsp),%rcx             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1100 (line 394)
            0x00007f1b0724c03e:   add    %rcx,%r10                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1101 (line 394)
   0.12%    0x00007f1b0724c041:   mov    0x160(%rsp),%rcx
            0x00007f1b0724c049:   imul   0x148(%rsp),%rcx             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1110 (line 394)
            0x00007f1b0724c052:   add    %rcx,%r10                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1111 (line 394)
   0.16%    0x00007f1b0724c055:   mov    0x170(%rsp),%rcx
            0x00007f1b0724c05d:   imul   0x138(%rsp),%rcx             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1120 (line 394)
            0x00007f1b0724c066:   add    %rcx,%r10                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1121 (line 394)
   0.15%    0x00007f1b0724c069:   mov    0x1b0(%rsp),%rcx
            0x00007f1b0724c071:   imul   %r14,%rcx                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1129 (line 394)
            0x00007f1b0724c075:   add    %rcx,%r10                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1130 (line 394)
   0.13%    0x00007f1b0724c078:   mov    0x1a8(%rsp),%rcx
            0x00007f1b0724c080:   imul   %rdx,%rcx                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1138 (line 394)
            0x00007f1b0724c084:   add    %rcx,%r10                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1139 (line 394)
   0.15%    0x00007f1b0724c087:   mov    0x190(%rsp),%rcx
            0x00007f1b0724c08f:   imul   %r13,%rcx                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1147 (line 394)
            0x00007f1b0724c093:   add    %rcx,%r10                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1148 (line 394)
   0.11%    0x00007f1b0724c096:   mov    0x1a0(%rsp),%rcx
            0x00007f1b0724c09e:   imul   %r8,%rcx                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1156 (line 394)
   0.04%    0x00007f1b0724c0a2:   add    %rcx,%r10                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1157 (line 394)
   0.13%    0x00007f1b0724c0a5:   imul   0x198(%rsp),%r11             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1167 (line 395)
            0x00007f1b0724c0ae:   mov    %rbx,%rcx
            0x00007f1b0724c0b1:   imul   0x188(%rsp),%rcx             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1175 (line 395)
   0.09%    0x00007f1b0724c0ba:   add    %rcx,%r11                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1176 (line 395)
   0.11%    0x00007f1b0724c0bd:   mov    0x128(%rsp),%rcx
            0x00007f1b0724c0c5:   imul   0x180(%rsp),%rcx             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1184 (line 395)
            0x00007f1b0724c0ce:   add    %rcx,%r11                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1185 (line 395)
                                                                      ;   {no_reloc}
   0.13%    0x00007f1b0724c0d1:   mov    0x140(%rsp),%rcx
            0x00007f1b0724c0d9:   imul   0x178(%rsp),%rcx             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1194 (line 395)
            0x00007f1b0724c0e2:   add    %rcx,%r11                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1195 (line 395)
   0.13%    0x00007f1b0724c0e5:   mov    0x150(%rsp),%rcx
            0x00007f1b0724c0ed:   imul   0x168(%rsp),%rcx             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1204 (line 395)
            0x00007f1b0724c0f6:   add    %rcx,%r11                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1205 (line 395)
   0.11%    0x00007f1b0724c0f9:   mov    0x160(%rsp),%rcx
            0x00007f1b0724c101:   imul   0x158(%rsp),%rcx             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1214 (line 395)
            0x00007f1b0724c10a:   add    %rcx,%r11                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1215 (line 395)
   0.15%    0x00007f1b0724c10d:   mov    0x170(%rsp),%r8
            0x00007f1b0724c115:   imul   0x148(%rsp),%r8              ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1224 (line 395)
            0x00007f1b0724c11e:   add    %r8,%r11                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1225 (line 395)
   0.13%    0x00007f1b0724c121:   mov    0x1b0(%rsp),%rcx
            0x00007f1b0724c129:   imul   0x138(%rsp),%rcx             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1234 (line 395)
            0x00007f1b0724c132:   add    %rcx,%r11                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1235 (line 395)
   0.12%    0x00007f1b0724c135:   mov    0x1a8(%rsp),%rcx
            0x00007f1b0724c13d:   imul   %r14,%rcx                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1243 (line 395)
   0.03%    0x00007f1b0724c141:   add    %rcx,%r11                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1244 (line 395)
   0.11%    0x00007f1b0724c144:   mov    0x190(%rsp),%rcx
            0x00007f1b0724c14c:   imul   %rdx,%rcx                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1252 (line 395)
            0x00007f1b0724c150:   add    %rcx,%r11                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1253 (line 395)
   0.13%    0x00007f1b0724c153:   mov    0x1a0(%rsp),%rcx
            0x00007f1b0724c15b:   imul   %r13,%rcx                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1261 (line 395)
            0x00007f1b0724c15f:   add    %rcx,%r11                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1262 (line 395)
   0.12%    0x00007f1b0724c162:   imul   0x198(%rsp),%rbx             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1272 (line 396)
            0x00007f1b0724c16b:   mov    0x128(%rsp),%rcx
            0x00007f1b0724c173:   imul   0x188(%rsp),%rcx             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1280 (line 396)
   0.08%    0x00007f1b0724c17c:   add    %rcx,%rbx                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1281 (line 396)
   0.13%    0x00007f1b0724c17f:   mov    0x140(%rsp),%rcx
            0x00007f1b0724c187:   imul   0x180(%rsp),%rcx             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1290 (line 396)
            0x00007f1b0724c190:   add    %rcx,%rbx                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1291 (line 396)
   0.13%    0x00007f1b0724c193:   mov    0x150(%rsp),%r13
            0x00007f1b0724c19b:   imul   0x178(%rsp),%r13             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1300 (line 396)
            0x00007f1b0724c1a4:   add    %r13,%rbx                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1301 (line 396)
   0.08%    0x00007f1b0724c1a7:   mov    0x160(%rsp),%rcx
            0x00007f1b0724c1af:   imul   0x168(%rsp),%rcx             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1310 (line 396)
            0x00007f1b0724c1b8:   add    %rcx,%rbx                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1311 (line 396)
   0.12%    0x00007f1b0724c1bb:   mov    0x170(%rsp),%r8
            0x00007f1b0724c1c3:   imul   0x158(%rsp),%r8              ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1320 (line 396)
            0x00007f1b0724c1cc:   add    %r8,%rbx                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1321 (line 396)
                                                                      ;   {no_reloc}
   0.15%    0x00007f1b0724c1cf:   mov    0x1b0(%rsp),%rcx
            0x00007f1b0724c1d7:   imul   0x148(%rsp),%rcx             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1330 (line 396)
            0x00007f1b0724c1e0:   add    %rcx,%rbx                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1331 (line 396)
   0.11%    0x00007f1b0724c1e3:   mov    0x1a8(%rsp),%rcx
            0x00007f1b0724c1eb:   imul   0x138(%rsp),%rcx             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1340 (line 396)
            0x00007f1b0724c1f4:   add    %rcx,%rbx                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1341 (line 396)
   0.13%    0x00007f1b0724c1f7:   mov    0x190(%rsp),%rcx
            0x00007f1b0724c1ff:   imul   %r14,%rcx                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1349 (line 396)
   0.04%    0x00007f1b0724c203:   add    %rcx,%rbx                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1350 (line 396)
   0.11%    0x00007f1b0724c206:   imul   0x1a0(%rsp),%rdx             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1358 (line 396)
            0x00007f1b0724c20f:   add    %rdx,%rbx                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1359 (line 396)
   0.13%    0x00007f1b0724c212:   mov    0x128(%rsp),%rdx
            0x00007f1b0724c21a:   imul   0x198(%rsp),%rdx             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1369 (line 397)
            0x00007f1b0724c223:   mov    0x140(%rsp),%rcx
            0x00007f1b0724c22b:   imul   0x188(%rsp),%rcx             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1378 (line 397)
   0.12%    0x00007f1b0724c234:   add    %rcx,%rdx                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1379 (line 397)
   0.08%    0x00007f1b0724c237:   mov    0x150(%rsp),%r13
            0x00007f1b0724c23f:   imul   0x180(%rsp),%r13             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
....................................................................................................
  24.74%  <total for region 1>

....[Hottest Region 2]..............................................................................
jvmci, level 4, sun.security.util.math.intpoly.IntegerPolynomialP384::carryReduce, version 2, compile id 1067 

 <region is too big to display, has 1027 lines, but threshold is 1000>
....................................................................................................
  21.76%  <total for region 2>

....[Hottest Regions]...............................................................................
  24.74%      jvmci, level 4  sun.security.util.math.intpoly.IntegerPolynomialP384::mult, version 2, compile id 1073 
  21.76%      jvmci, level 4  sun.security.util.math.intpoly.IntegerPolynomialP384::carryReduce, version 2, compile id 1067 
   5.80%      jvmci, level 4  sun.security.util.math.intpoly.IntegerPolynomial$MutableElement::setProduct, version 2, compile id 1103 
   4.76%      jvmci, level 4  sun.security.util.math.intpoly.IntegerPolynomialP384::mult, version 2, compile id 1073 
   4.61%      jvmci, level 4  sun.security.util.math.intpoly.IntegerPolynomialP384::square, version 2, compile id 1123 
   4.58%      jvmci, level 4  sun.security.util.math.intpoly.P384OrderField::carryReduce0, version 2, compile id 1144 
   1.96%      jvmci, level 4  sun.security.ec.point.ProjectivePoint$Mutable::conditionalSet, version 2, compile id 1122 
   1.87%      jvmci, level 4  sun.security.ec.point.ProjectivePoint$Mutable::conditionalSet, version 2, compile id 1122 
   1.83%        runtime stub  StubRoutines::jlong_disjoint_arraycopy 
   1.71%      jvmci, level 4  sun.security.util.math.intpoly.IntegerPolynomialP384::mult, version 2, compile id 1073 
   1.49%      jvmci, level 4  sun.security.util.math.intpoly.P384OrderField::square, version 2, compile id 1173 
   1.09%      jvmci, level 4  sun.security.util.math.intpoly.IntegerPolynomialP384::square, version 2, compile id 1123 
   1.08%      jvmci, level 4  sun.security.util.math.intpoly.IntegerPolynomialP384::mult, version 2, compile id 1073 
   0.94%      jvmci, level 4  sun.security.util.math.intpoly.IntegerPolynomialP384::mult, version 2, compile id 1073 
   0.92%      jvmci, level 4  sun.security.util.math.intpoly.P384OrderField::mult, version 2, compile id 1199 
   0.78%      jvmci, level 4  sun.security.util.math.intpoly.IntegerPolynomialP384::mult, version 2, compile id 1073 
   0.77%              kernel  [unknown] 
   0.76%      jvmci, level 4  sun.security.ec.ECOperations::setDouble, version 2, compile id 1164 
   0.76%      jvmci, level 4  sun.security.ec.point.ProjectivePoint$Mutable::conditionalSet, version 2, compile id 1122 
   0.76%      jvmci, level 4  sun.security.ec.ECOperations::setDouble, version 2, compile id 1164 
  17.02%  <...other 962 warm regions...>
....................................................................................................
 100.00%  <totals>

....[Hottest Methods (after inlining)]..............................................................
  34.61%      jvmci, level 4  sun.security.util.math.intpoly.IntegerPolynomialP384::mult, version 2, compile id 1073 
  21.76%      jvmci, level 4  sun.security.util.math.intpoly.IntegerPolynomialP384::carryReduce, version 2, compile id 1067 
   8.17%      jvmci, level 4  sun.security.ec.ECOperations::setDouble, version 2, compile id 1164 
   5.80%      jvmci, level 4  sun.security.util.math.intpoly.IntegerPolynomial$MutableElement::setProduct, version 2, compile id 1103 
   5.70%      jvmci, level 4  sun.security.util.math.intpoly.IntegerPolynomialP384::square, version 2, compile id 1123 
   4.60%      jvmci, level 4  sun.security.ec.point.ProjectivePoint$Mutable::conditionalSet, version 2, compile id 1122 
   4.58%      jvmci, level 4  sun.security.util.math.intpoly.P384OrderField::carryReduce0, version 2, compile id 1144 
   3.75%      jvmci, level 4  sun.security.ec.ECOperations::setSum, version 2, compile id 1242 
   2.21%              kernel  [unknown] 
   2.03%      jvmci, level 4  sun.security.util.math.intpoly.P384OrderField::mult, version 2, compile id 1199 
   1.83%        runtime stub  StubRoutines::jlong_disjoint_arraycopy 
   1.77%      jvmci, level 4  sun.security.util.math.intpoly.P384OrderField::square, version 2, compile id 1173 
   0.68%      jvmci, level 4  sun.security.util.math.IntegerModuloP$MultiplicativeInverser$Default::inverse, version 3, compile id 1315 
   0.50%      jvmci, level 4  sun.security.ec.ECOperations$PointMultiplier::lookup, version 2, compile id 1165 
   0.41%      jvmci, level 4  sun.security.ec.ECOperations::setSum, version 2, compile id 1443 
   0.23%      jvmci, level 4  sun.security.ec.ECOperations$PointMultiplier$Default::pointMultiply, version 2, compile id 1454 
   0.18%      jvmci, level 4  sun.security.util.math.intpoly.IntegerPolynomialP384::reduce, version 2, compile id 1225 
   0.09%                      <unknown> 
   0.07%      jvmci, level 4  sun.security.util.math.intpoly.IntegerPolynomial::encode, version 2, compile id 1466 
   0.06%      jvmci, level 4  sun.security.ec.ECDSAOperations::signDigest, version 2, compile id 1539 
   0.99%  <...other 125 warm methods...>
....................................................................................................
 100.00%  <totals>

....[Distribution by Source]........................................................................
  95.39%      jvmci, level 4
   2.21%              kernel
   1.88%        runtime stub
   0.16%           libjvm.so
   0.13%        libc-2.31.so
   0.09%                    
   0.05%  libpthread-2.31.so
   0.02%         interpreter
   0.02%              [vdso]
   0.02%      hsdis-amd64.so
   0.01%          ld-2.31.so
   0.00%    perf-2107080.map
   0.00%        libjimage.so
   0.00%         c1, level 3
....................................................................................................
 100.00%  <totals>



# JMH version: 1.37
# VM version: JDK 21, OpenJDK 64-Bit Server VM, 21+35-jvmci-23.1-b15
# VM invoker: /home/gogu/bench_jdks/graalvm-community-openjdk-21+35.1/bin/java
# VM options: -XX:ThreadPriorityPolicy=1 -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCIProduct -XX:-UnlockExperimentalVMOptions -Xms4g -Xmx4g -XX:+AlwaysPreTouch
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.performance.benchmarks.api.signature.DsaEcSignatureBenchmark.sign
# Parameters: (algorithm = secp384r1, messageLength = 2048)

# Run progress: 50.00% complete, ETA 00:11:40
# Fork: 1 of 1
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 5216.032 us/op
# Warmup Iteration   2: 1743.223 us/op
# Warmup Iteration   3: 1734.702 us/op
# Warmup Iteration   4: 1734.915 us/op
# Warmup Iteration   5: 1734.717 us/op
Iteration   1: 1734.762 us/op
Iteration   2: 1733.940 us/op
Iteration   3: 1733.603 us/op
Iteration   4: 1733.897 us/op
Iteration   5: 1733.685 us/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "com.ionutbalosin.jvm.performance.benchmarks.api.signature.DsaEcSignatureBenchmark.sign":
  1733.977 ±(99.9%) 1.773 us/op [Average]
  (min, avg, max) = (1733.603, 1733.977, 1734.762), stdev = 0.461
  CI (99.9%): [1732.204, 1735.751] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.signature.DsaEcSignatureBenchmark.sign:asm":
PrintAssembly processed: 414094 total address lines.
Perf output processed (skipped 61.660 seconds):
 Column 1: cycles (50560 events)

Hottest code regions (>10.00% "cycles" events):
 Event counts are percents of total event count.

....[Hottest Region 1]..............................................................................
jvmci, level 4, sun.security.util.math.intpoly.IntegerPolynomialP384::mult, version 2, compile id 1071 

            # parm2:    r8:r8     = &apos;[J&apos;
            #           [sp+0x1d0]  (sp of caller)
            0x00007f96e324bf40:   mov    0x8(%rsi),%r10d
            0x00007f96e324bf44:   movabs $0x7f9667000000,%r12
            0x00007f96e324bf4e:   add    %r12,%r10
            0x00007f96e324bf51:   xor    %r12,%r12
            0x00007f96e324bf54:   cmp    %r10,%rax
            0x00007f96e324bf57:   jne    0x00007f96e2c2f080           ;   {runtime_call ic_miss_stub}
            0x00007f96e324bf5d:   data16 xchg %ax,%ax
          [Verified Entry Point]
   1.34%    0x00007f96e324bf60:   mov    %eax,-0x14000(%rsp)
   1.58%    0x00007f96e324bf67:   sub    $0x1c8,%rsp
   0.01%    0x00007f96e324bf6e:   xchg   %ax,%ax
            0x00007f96e324bf70:   cmpl   $0x0,0x20(%r15)
            0x00007f96e324bf78:   jne    0x00007f96e324ced8
   0.11%    0x00007f96e324bf7e:   mov    %rbp,0x1c0(%rsp)             ; ImmutableOopMap {rcx=Oop rdx=Oop rsi=Oop r8=Oop }
                                                                      ;*aload_1 {reexecute=1 rethrow=0 return_oop=0}
                                                                      ; - (reexecute) sun.security.util.math.intpoly.IntegerPolynomialP384::mult@0 (line 379)
   0.02%    0x00007f96e324bf86:   mov    0xc(%rdx),%r9d               ; implicit exception: dispatches to 0x00007f96e324ceff
                                                                      ; ImmutableOopMap {rcx=Oop rdx=Oop rsi=Oop r8=Oop }
                                                                      ;*aload_1 {reexecute=1 rethrow=0 return_oop=0}
                                                                      ; - (reexecute) sun.security.util.math.intpoly.IntegerPolynomialP384::mult@0 (line 379)
   0.03%    0x00007f96e324bf8a:   mov    0xc(%rcx),%edi               ; implicit exception: dispatches to 0x00007f96e324cf22
   0.01%    0x00007f96e324bf8d:   cmp    $0xe,%r9d
            0x00007f96e324bf91:   jb     0x00007f96e324ceb5           ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@2 (line 379)
   0.11%    0x00007f96e324bf97:   cmp    $0xe,%edi
            0x00007f96e324bf9a:   jb     0x00007f96e324ceb5           ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@5 (line 379)
   0.10%    0x00007f96e324bfa0:   mov    %r8,0xc8(%rsp)
   0.34%    0x00007f96e324bfa8:   mov    %rsi,0xc0(%rsp)
   0.49%    0x00007f96e324bfb0:   mov    0x10(%rdx),%r9               ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@2 (line 379)
   0.00%    0x00007f96e324bfb4:   mov    0x18(%rdx),%rdi              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@18 (line 380)
   0.00%    0x00007f96e324bfb8:   mov    0x20(%rdx),%r10              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@43 (line 381)
   0.00%    0x00007f96e324bfbc:   mov    0x28(%rdx),%r11              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@76 (line 382)
   0.14%    0x00007f96e324bfc0:   mov    0x30(%rdx),%rbx              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@117 (line 383)
            0x00007f96e324bfc4:   mov    0x38(%rdx),%rax              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@166 (line 384)
   0.00%    0x00007f96e324bfc8:   mov    0x40(%rdx),%rbp              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@225 (line 385)
   0.00%    0x00007f96e324bfcc:   mov    0x48(%rdx),%r13              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@294 (line 386)
   0.13%    0x00007f96e324bfd0:   mov    0x50(%rdx),%r14              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@373 (line 387)
   0.01%    0x00007f96e324bfd4:   mov    0x58(%rdx),%r8               ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@462 (line 388)
   0.01%    0x00007f96e324bfd8:   mov    0x60(%rdx),%rsi              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@561 (line 389)
            0x00007f96e324bfdc:   mov    %rsi,0x1b0(%rsp)
   0.25%    0x00007f96e324bfe4:   mov    0x68(%rdx),%rsi              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@670 (line 390)
   0.00%    0x00007f96e324bfe8:   mov    %rsi,0x1a8(%rsp)
            0x00007f96e324bff0:   mov    0x70(%rdx),%rsi              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@789 (line 391)
   0.01%    0x00007f96e324bff4:   mov    0x78(%rdx),%rdx              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@918 (line 392)
   0.10%    0x00007f96e324bff8:   mov    %rdx,0x1a0(%rsp)
   0.00%    0x00007f96e324c000:   mov    0x78(%rcx),%rdx              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@803 (line 392)
   0.02%    0x00007f96e324c004:   mov    %rdx,0x198(%rsp)
   0.05%    0x00007f96e324c00c:   mov    0x70(%rcx),%rdx              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@684 (line 391)
   0.06%    0x00007f96e324c010:   mov    %rsi,0x190(%rsp)
   0.19%    0x00007f96e324c018:   mov    0x68(%rcx),%rsi              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@575 (line 390)
   0.00%    0x00007f96e324c01c:   mov    %rdx,0x188(%rsp)
   0.03%    0x00007f96e324c024:   mov    0x60(%rcx),%rdx              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@476 (line 389)
   0.00%    0x00007f96e324c028:   mov    %rsi,0x180(%rsp)
   0.10%    0x00007f96e324c030:   mov    0x58(%rcx),%rsi              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@387 (line 388)
   0.00%    0x00007f96e324c034:   mov    %rdx,0x178(%rsp)
   0.16%    0x00007f96e324c03c:   mov    0x50(%rcx),%rdx              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@308 (line 387)
   0.01%    0x00007f96e324c040:   mov    %r8,0x170(%rsp)
   0.04%    0x00007f96e324c048:   mov    0x48(%rcx),%r8               ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@239 (line 386)
   0.01%    0x00007f96e324c04c:   mov    %rsi,0x168(%rsp)
   0.22%    0x00007f96e324c054:   mov    0x40(%rcx),%rsi              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@180 (line 385)
                                                                      ;   {no_reloc}
   0.00%    0x00007f96e324c058:   mov    %r14,0x160(%rsp)
   0.07%    0x00007f96e324c060:   mov    0x38(%rcx),%r14              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@130 (line 384)
   0.01%    0x00007f96e324c064:   mov    %rdx,0x158(%rsp)
   0.16%    0x00007f96e324c06c:   mov    0x30(%rcx),%rdx              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@89 (line 383)
   0.01%    0x00007f96e324c070:   mov    %r13,0x150(%rsp)
   0.09%    0x00007f96e324c078:   mov    0x28(%rcx),%r13              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@56 (line 382)
   0.01%    0x00007f96e324c07c:   mov    %r8,0x148(%rsp)
   0.13%    0x00007f96e324c084:   mov    0x20(%rcx),%r8               ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@31 (line 381)
   0.01%    0x00007f96e324c088:   mov    %rbp,0x140(%rsp)
   0.06%    0x00007f96e324c090:   mov    0x18(%rcx),%rbp              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@14 (line 380)
   0.01%    0x00007f96e324c094:   mov    0x10(%rcx),%rcx              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@5 (line 379)
   0.06%    0x00007f96e324c098:   mov    %rsi,0x138(%rsp)
   0.05%    0x00007f96e324c0a0:   mov    %r9,%rsi
   0.02%    0x00007f96e324c0a3:   imul   %rcx,%rsi                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@6 (line 379)
   0.01%    0x00007f96e324c0a7:   mov    %rsi,0x130(%rsp)
   0.09%    0x00007f96e324c0af:   mov    %rbp,%rsi
   0.00%    0x00007f96e324c0b2:   imul   %r9,%rsi                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@15 (line 380)
   0.02%    0x00007f96e324c0b6:   mov    %rax,0x128(%rsp)
   0.08%    0x00007f96e324c0be:   mov    %rdi,%rax
   0.02%    0x00007f96e324c0c1:   imul   %rcx,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@22 (line 380)
   0.00%    0x00007f96e324c0c5:   add    %rsi,%rax                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@23 (line 380)
   0.02%    0x00007f96e324c0c8:   mov    %r8,%rsi
   0.08%    0x00007f96e324c0cb:   imul   %r9,%rsi                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@32 (line 381)
   0.02%    0x00007f96e324c0cf:   mov    %rax,0x120(%rsp)
   0.01%    0x00007f96e324c0d7:   mov    %rdi,%rax
   0.02%    0x00007f96e324c0da:   imul   %rbp,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@39 (line 381)
   0.08%    0x00007f96e324c0de:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@40 (line 381)
   0.02%    0x00007f96e324c0e1:   mov    %r10,%rax
   0.01%    0x00007f96e324c0e4:   imul   %rcx,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@47 (line 381)
   0.03%    0x00007f96e324c0e8:   add    %rsi,%rax                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@48 (line 381)
   0.08%    0x00007f96e324c0eb:   mov    %r13,%rsi
   0.01%    0x00007f96e324c0ee:   imul   %r9,%rsi                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@57 (line 382)
   0.00%    0x00007f96e324c0f2:   mov    %rax,0x118(%rsp)
   0.03%    0x00007f96e324c0fa:   mov    %rdi,%rax
   0.09%    0x00007f96e324c0fd:   imul   %r8,%rax                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@64 (line 382)
   0.02%    0x00007f96e324c101:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@65 (line 382)
   0.00%    0x00007f96e324c104:   mov    %r10,%rax
   0.03%    0x00007f96e324c107:   imul   %rbp,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@72 (line 382)
   0.09%    0x00007f96e324c10b:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@73 (line 382)
   0.02%    0x00007f96e324c10e:   mov    %r11,%rax
   0.01%    0x00007f96e324c111:   imul   %rcx,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@80 (line 382)
   0.02%    0x00007f96e324c115:   add    %rsi,%rax                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@81 (line 382)
   0.12%    0x00007f96e324c118:   mov    %rdx,%rsi
   0.02%    0x00007f96e324c11b:   imul   %r9,%rsi                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@90 (line 383)
   0.01%    0x00007f96e324c11f:   mov    %rax,0x110(%rsp)
   0.04%    0x00007f96e324c127:   mov    %rdi,%rax
   0.06%    0x00007f96e324c12a:   imul   %r13,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@97 (line 383)
   0.02%    0x00007f96e324c12e:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@98 (line 383)
   0.00%    0x00007f96e324c131:   mov    %r10,%rax
   0.04%    0x00007f96e324c134:   imul   %r8,%rax                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@105 (line 383)
   0.07%    0x00007f96e324c138:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@106 (line 383)
   0.02%    0x00007f96e324c13b:   mov    %r11,%rax
   0.00%    0x00007f96e324c13e:   imul   %rbp,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@113 (line 383)
   0.02%    0x00007f96e324c142:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@114 (line 383)
   0.13%    0x00007f96e324c145:   mov    %rbx,%rax
   0.00%    0x00007f96e324c148:   imul   %rcx,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@121 (line 383)
   0.00%    0x00007f96e324c14c:   add    %rsi,%rax                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@122 (line 383)
   0.06%    0x00007f96e324c14f:   mov    %r14,%rsi
   0.08%    0x00007f96e324c152:   imul   %r9,%rsi                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@131 (line 384)
                                                                      ;   {no_reloc}
   0.01%    0x00007f96e324c156:   mov    %rax,0x108(%rsp)
   0.14%    0x00007f96e324c15e:   mov    %rdi,%rax
            0x00007f96e324c161:   imul   %rdx,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@138 (line 384)
   0.01%    0x00007f96e324c165:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@139 (line 384)
   0.00%    0x00007f96e324c168:   mov    %r10,%rax
   0.13%    0x00007f96e324c16b:   imul   %r13,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@146 (line 384)
            0x00007f96e324c16f:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@147 (line 384)
   0.00%    0x00007f96e324c172:   mov    %r11,%rax
   0.00%    0x00007f96e324c175:   imul   %r8,%rax                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@154 (line 384)
   0.13%    0x00007f96e324c179:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@155 (line 384)
   0.00%    0x00007f96e324c17c:   mov    %rbx,%rax
   0.00%    0x00007f96e324c17f:   imul   %rbp,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@162 (line 384)
   0.00%    0x00007f96e324c183:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@163 (line 384)
   0.17%    0x00007f96e324c186:   mov    0x128(%rsp),%rax
            0x00007f96e324c18e:   imul   %rcx,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@170 (line 384)
   0.00%    0x00007f96e324c192:   add    %rsi,%rax                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@171 (line 384)
   0.00%    0x00007f96e324c195:   mov    0x138(%rsp),%rsi
   0.13%    0x00007f96e324c19d:   imul   %r9,%rsi                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@181 (line 385)
            0x00007f96e324c1a1:   mov    %rax,0x100(%rsp)
   0.13%    0x00007f96e324c1a9:   mov    %rdi,%rax
   0.00%    0x00007f96e324c1ac:   imul   %r14,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@188 (line 385)
            0x00007f96e324c1b0:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@189 (line 385)
   0.00%    0x00007f96e324c1b3:   mov    %r10,%rax
   0.11%    0x00007f96e324c1b6:   imul   %rdx,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@196 (line 385)
   0.00%    0x00007f96e324c1ba:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@197 (line 385)
   0.07%    0x00007f96e324c1bd:   mov    %r11,%rax
   0.00%    0x00007f96e324c1c0:   imul   %r13,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@204 (line 385)
   0.09%    0x00007f96e324c1c4:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@205 (line 385)
   0.00%    0x00007f96e324c1c7:   mov    %rbx,%rax
   0.05%    0x00007f96e324c1ca:   imul   %r8,%rax                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@212 (line 385)
   0.00%    0x00007f96e324c1ce:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@213 (line 385)
   0.10%    0x00007f96e324c1d1:   mov    0x128(%rsp),%rax
            0x00007f96e324c1d9:   imul   %rbp,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@220 (line 385)
   0.04%    0x00007f96e324c1dd:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@221 (line 385)
            0x00007f96e324c1e0:   mov    0x140(%rsp),%rax
   0.07%    0x00007f96e324c1e8:   imul   %rcx,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@229 (line 385)
   0.00%    0x00007f96e324c1ec:   add    %rsi,%rax                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@230 (line 385)
   0.08%    0x00007f96e324c1ef:   mov    0x148(%rsp),%rsi
            0x00007f96e324c1f7:   imul   %r9,%rsi                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@240 (line 386)
   0.02%    0x00007f96e324c1fb:   mov    %rax,0xf8(%rsp)
   0.21%    0x00007f96e324c203:   mov    %rdi,%rax
            0x00007f96e324c206:   imul   0x138(%rsp),%rax             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@248 (line 386)
            0x00007f96e324c20f:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@249 (line 386)
            0x00007f96e324c212:   mov    %r10,%rax
   0.12%    0x00007f96e324c215:   imul   %r14,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@256 (line 386)
            0x00007f96e324c219:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@257 (line 386)
            0x00007f96e324c21c:   mov    %r11,%rax
            0x00007f96e324c21f:   imul   %rdx,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@264 (line 386)
   0.09%    0x00007f96e324c223:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@265 (line 386)
            0x00007f96e324c226:   mov    %rbx,%rax
            0x00007f96e324c229:   imul   %r13,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@272 (line 386)
            0x00007f96e324c22d:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@273 (line 386)
   0.19%    0x00007f96e324c230:   mov    0x128(%rsp),%rax
            0x00007f96e324c238:   imul   %r8,%rax                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@280 (line 386)
   0.00%    0x00007f96e324c23c:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@281 (line 386)
            0x00007f96e324c23f:   mov    0x140(%rsp),%rax
   0.13%    0x00007f96e324c247:   imul   %rbp,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@289 (line 386)
            0x00007f96e324c24b:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@290 (line 386)
            0x00007f96e324c24e:   mov    0x150(%rsp),%rax             ;   {no_reloc}
            0x00007f96e324c256:   imul   %rcx,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@298 (line 386)
   0.13%    0x00007f96e324c25a:   add    %rsi,%rax                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@299 (line 386)
            0x00007f96e324c25d:   mov    0x158(%rsp),%rsi
            0x00007f96e324c265:   imul   %r9,%rsi                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@309 (line 387)
            0x00007f96e324c269:   mov    %rax,0xf0(%rsp)
   0.24%    0x00007f96e324c271:   mov    %rdi,%rax
            0x00007f96e324c274:   imul   0x148(%rsp),%rax             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@317 (line 387)
            0x00007f96e324c27d:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@318 (line 387)
            0x00007f96e324c280:   mov    %r10,%rax
   0.12%    0x00007f96e324c283:   imul   0x138(%rsp),%rax             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@326 (line 387)
            0x00007f96e324c28c:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@327 (line 387)
            0x00007f96e324c28f:   mov    %r11,%rax
            0x00007f96e324c292:   imul   %r14,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@334 (line 387)
   0.12%    0x00007f96e324c296:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@335 (line 387)
            0x00007f96e324c299:   mov    %rbx,%rax
            0x00007f96e324c29c:   imul   %rdx,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@342 (line 387)
            0x00007f96e324c2a0:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@343 (line 387)
   0.21%    0x00007f96e324c2a3:   mov    0x128(%rsp),%rax
            0x00007f96e324c2ab:   imul   %r13,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@350 (line 387)
            0x00007f96e324c2af:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@351 (line 387)
   0.05%    0x00007f96e324c2b2:   mov    0x140(%rsp),%rax
   0.09%    0x00007f96e324c2ba:   imul   %r8,%rax                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@359 (line 387)
            0x00007f96e324c2be:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@360 (line 387)
   0.04%    0x00007f96e324c2c1:   mov    0x150(%rsp),%rax
            0x00007f96e324c2c9:   imul   %rbp,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@368 (line 387)
   0.11%    0x00007f96e324c2cd:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@369 (line 387)
   0.02%    0x00007f96e324c2d0:   mov    0x160(%rsp),%rax
            0x00007f96e324c2d8:   imul   %rcx,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@377 (line 387)
            0x00007f96e324c2dc:   add    %rsi,%rax                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@378 (line 387)
   0.11%    0x00007f96e324c2df:   mov    0x168(%rsp),%rsi
            0x00007f96e324c2e7:   imul   %r9,%rsi                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@388 (line 388)
            0x00007f96e324c2eb:   mov    %rax,0xe8(%rsp)
   0.25%    0x00007f96e324c2f3:   mov    %rdi,%rax
            0x00007f96e324c2f6:   imul   0x158(%rsp),%rax             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@396 (line 388)
            0x00007f96e324c2ff:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@397 (line 388)
            0x00007f96e324c302:   mov    %r10,%rax
   0.14%    0x00007f96e324c305:   imul   0x148(%rsp),%rax             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@405 (line 388)
            0x00007f96e324c30e:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@406 (line 388)
            0x00007f96e324c311:   mov    %r11,%rax
            0x00007f96e324c314:   imul   0x138(%rsp),%rax             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@414 (line 388)
   0.12%    0x00007f96e324c31d:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@415 (line 388)
            0x00007f96e324c320:   mov    %rbx,%rax
            0x00007f96e324c323:   imul   %r14,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@422 (line 388)
            0x00007f96e324c327:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@423 (line 388)
   0.15%    0x00007f96e324c32a:   mov    0x128(%rsp),%rax
            0x00007f96e324c332:   imul   %rdx,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@430 (line 388)
            0x00007f96e324c336:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@431 (line 388)
   0.08%    0x00007f96e324c339:   mov    0x140(%rsp),%rax
   0.06%    0x00007f96e324c341:   imul   %r13,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@439 (line 388)
            0x00007f96e324c345:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@440 (line 388)
   0.05%    0x00007f96e324c348:   mov    0x150(%rsp),%rax
            0x00007f96e324c350:   imul   %r8,%rax                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@448 (line 388)
                                                                      ;   {no_reloc}
   0.05%    0x00007f96e324c354:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@449 (line 388)
   0.09%    0x00007f96e324c357:   mov    0x160(%rsp),%rax
            0x00007f96e324c35f:   imul   %rbp,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@457 (line 388)
            0x00007f96e324c363:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@458 (line 388)
   0.13%    0x00007f96e324c366:   mov    0x170(%rsp),%rax
            0x00007f96e324c36e:   imul   %rcx,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@466 (line 388)
            0x00007f96e324c372:   add    %rsi,%rax                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@467 (line 388)
   0.12%    0x00007f96e324c375:   mov    0x178(%rsp),%rsi
            0x00007f96e324c37d:   imul   %r9,%rsi                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@477 (line 389)
            0x00007f96e324c381:   mov    %rax,0xe0(%rsp)
   0.24%    0x00007f96e324c389:   mov    %rdi,%rax
            0x00007f96e324c38c:   imul   0x168(%rsp),%rax             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@485 (line 389)
            0x00007f96e324c395:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@486 (line 389)
            0x00007f96e324c398:   mov    %r10,%rax
   0.14%    0x00007f96e324c39b:   imul   0x158(%rsp),%rax             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@494 (line 389)
            0x00007f96e324c3a4:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@495 (line 389)
            0x00007f96e324c3a7:   mov    %r11,%rax
            0x00007f96e324c3aa:   imul   0x148(%rsp),%rax             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@503 (line 389)
   0.09%    0x00007f96e324c3b3:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@504 (line 389)
            0x00007f96e324c3b6:   mov    %rbx,%rax
            0x00007f96e324c3b9:   imul   0x138(%rsp),%rax             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@512 (line 389)
            0x00007f96e324c3c2:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@513 (line 389)
   0.13%    0x00007f96e324c3c5:   mov    0x128(%rsp),%rax
            0x00007f96e324c3cd:   imul   %r14,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@520 (line 389)
   0.06%    0x00007f96e324c3d1:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@521 (line 389)
   0.16%    0x00007f96e324c3d4:   mov    0x140(%rsp),%rax
            0x00007f96e324c3dc:   imul   %rdx,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@529 (line 389)
            0x00007f96e324c3e0:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@530 (line 389)
   0.12%    0x00007f96e324c3e3:   mov    0x150(%rsp),%rax
            0x00007f96e324c3eb:   imul   %r13,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@538 (line 389)
            0x00007f96e324c3ef:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@539 (line 389)
   0.11%    0x00007f96e324c3f2:   mov    0x160(%rsp),%rax
            0x00007f96e324c3fa:   imul   %r8,%rax                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@547 (line 389)
            0x00007f96e324c3fe:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@548 (line 389)
   0.12%    0x00007f96e324c401:   mov    0x170(%rsp),%rax
            0x00007f96e324c409:   imul   %rbp,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@556 (line 389)
            0x00007f96e324c40d:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@557 (line 389)
   0.13%    0x00007f96e324c410:   mov    0x1b0(%rsp),%rax
            0x00007f96e324c418:   imul   %rcx,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@565 (line 389)
            0x00007f96e324c41c:   add    %rsi,%rax                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@566 (line 389)
   0.11%    0x00007f96e324c41f:   mov    0x180(%rsp),%rsi
            0x00007f96e324c427:   imul   %r9,%rsi                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@576 (line 390)
            0x00007f96e324c42b:   mov    %rax,0xd8(%rsp)
   0.31%    0x00007f96e324c433:   mov    %rdi,%rax
            0x00007f96e324c436:   imul   0x178(%rsp),%rax             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@584 (line 390)
            0x00007f96e324c43f:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@585 (line 390)
            0x00007f96e324c442:   mov    %r10,%rax
   0.09%    0x00007f96e324c445:   imul   0x168(%rsp),%rax             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@593 (line 390)
            0x00007f96e324c44e:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@594 (line 390)
            0x00007f96e324c451:   mov    %r11,%rax                    ;   {no_reloc}
            0x00007f96e324c454:   imul   0x158(%rsp),%rax             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@602 (line 390)
   0.13%    0x00007f96e324c45d:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@603 (line 390)
            0x00007f96e324c460:   mov    %rbx,%rax
            0x00007f96e324c463:   imul   0x148(%rsp),%rax             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@611 (line 390)
            0x00007f96e324c46c:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@612 (line 390)
   0.13%    0x00007f96e324c46f:   mov    0x128(%rsp),%rax
            0x00007f96e324c477:   imul   0x138(%rsp),%rax             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@620 (line 390)
            0x00007f96e324c480:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@621 (line 390)
   0.08%    0x00007f96e324c483:   mov    0x140(%rsp),%rax
   0.04%    0x00007f96e324c48b:   imul   %r14,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@629 (line 390)
            0x00007f96e324c48f:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@630 (line 390)
   0.07%    0x00007f96e324c492:   mov    0x150(%rsp),%rax
            0x00007f96e324c49a:   imul   %rdx,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@638 (line 390)
   0.06%    0x00007f96e324c49e:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@639 (line 390)
   0.06%    0x00007f96e324c4a1:   mov    0x160(%rsp),%rax
            0x00007f96e324c4a9:   imul   %r13,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@647 (line 390)
            0x00007f96e324c4ad:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@648 (line 390)
   0.12%    0x00007f96e324c4b0:   mov    0x170(%rsp),%rax
            0x00007f96e324c4b8:   imul   %r8,%rax                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@656 (line 390)
            0x00007f96e324c4bc:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@657 (line 390)
   0.12%    0x00007f96e324c4bf:   mov    0x1b0(%rsp),%rax
            0x00007f96e324c4c7:   imul   %rbp,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@665 (line 390)
            0x00007f96e324c4cb:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@666 (line 390)
   0.11%    0x00007f96e324c4ce:   mov    0x1a8(%rsp),%rax
            0x00007f96e324c4d6:   imul   %rcx,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@674 (line 390)
            0x00007f96e324c4da:   add    %rsi,%rax                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@675 (line 390)
   0.14%    0x00007f96e324c4dd:   mov    0x188(%rsp),%rsi
            0x00007f96e324c4e5:   imul   %r9,%rsi                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@685 (line 391)
            0x00007f96e324c4e9:   mov    %rax,0xd0(%rsp)
   0.28%    0x00007f96e324c4f1:   mov    %rdi,%rax
            0x00007f96e324c4f4:   imul   0x180(%rsp),%rax             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@693 (line 391)
            0x00007f96e324c4fd:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@694 (line 391)
            0x00007f96e324c500:   mov    %r10,%rax
   0.12%    0x00007f96e324c503:   imul   0x178(%rsp),%rax             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@702 (line 391)
            0x00007f96e324c50c:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@703 (line 391)
            0x00007f96e324c50f:   mov    %r11,%rax
            0x00007f96e324c512:   imul   0x168(%rsp),%rax             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@711 (line 391)
   0.12%    0x00007f96e324c51b:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@712 (line 391)
            0x00007f96e324c51e:   mov    %rbx,%rax
            0x00007f96e324c521:   imul   0x158(%rsp),%rax             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@720 (line 391)
            0x00007f96e324c52a:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@721 (line 391)
   0.12%    0x00007f96e324c52d:   mov    0x128(%rsp),%rax
            0x00007f96e324c535:   imul   0x148(%rsp),%rax             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@729 (line 391)
            0x00007f96e324c53e:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@730 (line 391)
   0.14%    0x00007f96e324c541:   mov    0x140(%rsp),%rax
            0x00007f96e324c549:   imul   0x138(%rsp),%rax             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@739 (line 391)
                                                                      ;   {no_reloc}
            0x00007f96e324c552:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@740 (line 391)
   0.14%    0x00007f96e324c555:   mov    0x150(%rsp),%rax
            0x00007f96e324c55d:   imul   %r14,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@748 (line 391)
   0.09%    0x00007f96e324c561:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@749 (line 391)
   0.11%    0x00007f96e324c564:   mov    0x160(%rsp),%rax
            0x00007f96e324c56c:   imul   %rdx,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@757 (line 391)
            0x00007f96e324c570:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@758 (line 391)
   0.11%    0x00007f96e324c573:   mov    0x170(%rsp),%rax
            0x00007f96e324c57b:   imul   %r13,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@766 (line 391)
            0x00007f96e324c57f:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@767 (line 391)
   0.11%    0x00007f96e324c582:   mov    0x1b0(%rsp),%rax
            0x00007f96e324c58a:   imul   %r8,%rax                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@775 (line 391)
            0x00007f96e324c58e:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@776 (line 391)
   0.10%    0x00007f96e324c591:   mov    0x1a8(%rsp),%rax
            0x00007f96e324c599:   imul   %rbp,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@784 (line 391)
   0.00%    0x00007f96e324c59d:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@785 (line 391)
   0.15%    0x00007f96e324c5a0:   mov    0x190(%rsp),%rax
            0x00007f96e324c5a8:   imul   %rcx,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@793 (line 391)
            0x00007f96e324c5ac:   add    %rsi,%rax                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@794 (line 391)
   0.11%    0x00007f96e324c5af:   mov    0x198(%rsp),%rsi
            0x00007f96e324c5b7:   imul   %r9,%rsi                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@804 (line 392)
            0x00007f96e324c5bb:   mov    %rdi,%r9
            0x00007f96e324c5be:   imul   0x188(%rsp),%r9              ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@812 (line 392)
   0.12%    0x00007f96e324c5c7:   add    %r9,%rsi                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@813 (line 392)
   0.05%    0x00007f96e324c5ca:   mov    %r10,%r9
            0x00007f96e324c5cd:   imul   0x180(%rsp),%r9              ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@821 (line 392)
            0x00007f96e324c5d6:   add    %r9,%rsi                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@822 (line 392)
   0.11%    0x00007f96e324c5d9:   mov    %r11,%r9
            0x00007f96e324c5dc:   imul   0x178(%rsp),%r9              ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@830 (line 392)
            0x00007f96e324c5e5:   add    %r9,%rsi                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@831 (line 392)
   0.12%    0x00007f96e324c5e8:   mov    %rbx,%r9
            0x00007f96e324c5eb:   imul   0x168(%rsp),%r9              ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@839 (line 392)
            0x00007f96e324c5f4:   add    %r9,%rsi                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@840 (line 392)
   0.10%    0x00007f96e324c5f7:   mov    0x128(%rsp),%r9
            0x00007f96e324c5ff:   imul   0x158(%rsp),%r9              ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@848 (line 392)
            0x00007f96e324c608:   add    %r9,%rsi                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@849 (line 392)
   0.12%    0x00007f96e324c60b:   mov    0x140(%rsp),%r9
            0x00007f96e324c613:   imul   0x148(%rsp),%r9              ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@858 (line 392)
            0x00007f96e324c61c:   add    %r9,%rsi                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@859 (line 392)
   0.11%    0x00007f96e324c61f:   mov    0x150(%rsp),%r9
            0x00007f96e324c627:   imul   0x138(%rsp),%r9              ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@868 (line 392)
            0x00007f96e324c630:   add    %r9,%rsi                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@869 (line 392)
   0.12%    0x00007f96e324c633:   mov    0x160(%rsp),%r9
            0x00007f96e324c63b:   imul   %r14,%r9                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@877 (line 392)
            0x00007f96e324c63f:   add    %r9,%rsi                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@878 (line 392)
   0.16%    0x00007f96e324c642:   mov    0x170(%rsp),%r9
            0x00007f96e324c64a:   imul   %rdx,%r9                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@886 (line 392)
            0x00007f96e324c64e:   add    %r9,%rsi                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@887 (line 392)
                                                                      ;   {no_reloc}
   0.14%    0x00007f96e324c651:   mov    0x1b0(%rsp),%r9
            0x00007f96e324c659:   imul   %r13,%r9                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@895 (line 392)
            0x00007f96e324c65d:   add    %r9,%rsi                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@896 (line 392)
   0.17%    0x00007f96e324c660:   mov    0x1a8(%rsp),%r9
            0x00007f96e324c668:   imul   %r8,%r9                      ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@904 (line 392)
            0x00007f96e324c66c:   add    %r9,%rsi                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@905 (line 392)
   0.13%    0x00007f96e324c66f:   mov    0x190(%rsp),%r9
            0x00007f96e324c677:   imul   %rbp,%r9                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@913 (line 392)
            0x00007f96e324c67b:   add    %r9,%rsi                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@914 (line 392)
   0.12%    0x00007f96e324c67e:   imul   0x1a0(%rsp),%rcx             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@922 (line 392)
            0x00007f96e324c687:   add    %rcx,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@923 (line 392)
   0.13%    0x00007f96e324c68a:   imul   0x198(%rsp),%rdi             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@933 (line 393)
   0.05%    0x00007f96e324c693:   mov    %r10,%rcx
            0x00007f96e324c696:   imul   0x188(%rsp),%rcx             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@941 (line 393)
   0.08%    0x00007f96e324c69f:   add    %rcx,%rdi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@942 (line 393)
   0.12%    0x00007f96e324c6a2:   mov    %r11,%rcx
            0x00007f96e324c6a5:   imul   0x180(%rsp),%rcx             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@950 (line 393)
            0x00007f96e324c6ae:   add    %rcx,%rdi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@951 (line 393)
   0.13%    0x00007f96e324c6b1:   mov    %rbx,%rcx
            0x00007f96e324c6b4:   imul   0x178(%rsp),%rcx             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@959 (line 393)
            0x00007f96e324c6bd:   add    %rcx,%rdi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@960 (line 393)
   0.14%    0x00007f96e324c6c0:   mov    0x128(%rsp),%rcx
            0x00007f96e324c6c8:   imul   0x168(%rsp),%rcx             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@968 (line 393)
            0x00007f96e324c6d1:   add    %rcx,%rdi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@969 (line 393)
   0.12%    0x00007f96e324c6d4:   mov    0x140(%rsp),%rcx
            0x00007f96e324c6dc:   imul   0x158(%rsp),%rcx             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@978 (line 393)
            0x00007f96e324c6e5:   add    %rcx,%rdi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@979 (line 393)
   0.13%    0x00007f96e324c6e8:   mov    0x150(%rsp),%rcx
            0x00007f96e324c6f0:   imul   0x148(%rsp),%rcx             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@988 (line 393)
            0x00007f96e324c6f9:   add    %rcx,%rdi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@989 (line 393)
   0.12%    0x00007f96e324c6fc:   mov    0x160(%rsp),%rcx
            0x00007f96e324c704:   imul   0x138(%rsp),%rcx             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@998 (line 393)
            0x00007f96e324c70d:   add    %rcx,%rdi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@999 (line 393)
   0.13%    0x00007f96e324c710:   mov    0x170(%rsp),%rcx
            0x00007f96e324c718:   imul   %r14,%rcx                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1007 (line 393)
            0x00007f96e324c71c:   add    %rcx,%rdi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1008 (line 393)
   0.13%    0x00007f96e324c71f:   mov    0x1b0(%rsp),%rcx
            0x00007f96e324c727:   imul   %rdx,%rcx                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1016 (line 393)
            0x00007f96e324c72b:   add    %rcx,%rdi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1017 (line 393)
   0.15%    0x00007f96e324c72e:   mov    0x1a8(%rsp),%rcx
            0x00007f96e324c736:   imul   %r13,%rcx                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1025 (line 393)
            0x00007f96e324c73a:   add    %rcx,%rdi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1026 (line 393)
   0.13%    0x00007f96e324c73d:   mov    0x190(%rsp),%rcx
            0x00007f96e324c745:   imul   %r8,%rcx                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1034 (line 393)
            0x00007f96e324c749:   add    %rcx,%rdi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1035 (line 393)
   0.09%    0x00007f96e324c74c:   mov    0x1a0(%rsp),%rcx             ;   {no_reloc}
            0x00007f96e324c754:   imul   %rbp,%rcx                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1043 (line 393)
            0x00007f96e324c758:   mov    %rdi,%rbp
            0x00007f96e324c75b:   add    %rcx,%rbp                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1044 (line 393)
   0.12%    0x00007f96e324c75e:   imul   0x198(%rsp),%r10             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1054 (line 394)
            0x00007f96e324c767:   mov    %r11,%rcx
            0x00007f96e324c76a:   imul   0x188(%rsp),%rcx             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1062 (line 394)
   0.14%    0x00007f96e324c773:   add    %rcx,%r10                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1063 (line 394)
   0.12%    0x00007f96e324c776:   mov    %rbx,%rcx
            0x00007f96e324c779:   imul   0x180(%rsp),%rcx             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1071 (line 394)
            0x00007f96e324c782:   add    %rcx,%r10                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1072 (line 394)
   0.09%    0x00007f96e324c785:   mov    0x128(%rsp),%rcx
            0x00007f96e324c78d:   imul   0x178(%rsp),%rcx             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1080 (line 394)
            0x00007f96e324c796:   add    %rcx,%r10                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1081 (line 394)
   0.16%    0x00007f96e324c799:   mov    0x140(%rsp),%rcx
            0x00007f96e324c7a1:   imul   0x168(%rsp),%rcx             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1090 (line 394)
            0x00007f96e324c7aa:   add    %rcx,%r10                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1091 (line 394)
   0.12%    0x00007f96e324c7ad:   mov    0x150(%rsp),%rcx
            0x00007f96e324c7b5:   imul   0x158(%rsp),%rcx             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1100 (line 394)
            0x00007f96e324c7be:   add    %rcx,%r10                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1101 (line 394)
   0.13%    0x00007f96e324c7c1:   mov    0x160(%rsp),%rcx
            0x00007f96e324c7c9:   imul   0x148(%rsp),%rcx             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1110 (line 394)
            0x00007f96e324c7d2:   add    %rcx,%r10                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1111 (line 394)
   0.11%    0x00007f96e324c7d5:   mov    0x170(%rsp),%rcx
            0x00007f96e324c7dd:   imul   0x138(%rsp),%rcx             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1120 (line 394)
            0x00007f96e324c7e6:   add    %rcx,%r10                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1121 (line 394)
   0.13%    0x00007f96e324c7e9:   mov    0x1b0(%rsp),%rcx
            0x00007f96e324c7f1:   imul   %r14,%rcx                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1129 (line 394)
            0x00007f96e324c7f5:   add    %rcx,%r10                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1130 (line 394)
   0.14%    0x00007f96e324c7f8:   mov    0x1a8(%rsp),%rcx
            0x00007f96e324c800:   imul   %rdx,%rcx                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1138 (line 394)
            0x00007f96e324c804:   add    %rcx,%r10                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1139 (line 394)
   0.14%    0x00007f96e324c807:   mov    0x190(%rsp),%rcx
            0x00007f96e324c80f:   imul   %r13,%rcx                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1147 (line 394)
            0x00007f96e324c813:   add    %rcx,%r10                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1148 (line 394)
   0.09%    0x00007f96e324c816:   mov    0x1a0(%rsp),%rcx
            0x00007f96e324c81e:   imul   %r8,%rcx                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1156 (line 394)
   0.03%    0x00007f96e324c822:   add    %rcx,%r10                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1157 (line 394)
   0.14%    0x00007f96e324c825:   imul   0x198(%rsp),%r11             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1167 (line 395)
            0x00007f96e324c82e:   mov    %rbx,%rcx
            0x00007f96e324c831:   imul   0x188(%rsp),%rcx             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1175 (line 395)
   0.08%    0x00007f96e324c83a:   add    %rcx,%r11                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1176 (line 395)
   0.11%    0x00007f96e324c83d:   mov    0x128(%rsp),%rcx
            0x00007f96e324c845:   imul   0x180(%rsp),%rcx             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1184 (line 395)
            0x00007f96e324c84e:   add    %rcx,%r11                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1185 (line 395)
                                                                      ;   {no_reloc}
   0.11%    0x00007f96e324c851:   mov    0x140(%rsp),%rcx
            0x00007f96e324c859:   imul   0x178(%rsp),%rcx             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1194 (line 395)
            0x00007f96e324c862:   add    %rcx,%r11                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1195 (line 395)
   0.12%    0x00007f96e324c865:   mov    0x150(%rsp),%rcx
            0x00007f96e324c86d:   imul   0x168(%rsp),%rcx             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1204 (line 395)
            0x00007f96e324c876:   add    %rcx,%r11                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1205 (line 395)
   0.12%    0x00007f96e324c879:   mov    0x160(%rsp),%rcx
            0x00007f96e324c881:   imul   0x158(%rsp),%rcx             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1214 (line 395)
            0x00007f96e324c88a:   add    %rcx,%r11                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1215 (line 395)
   0.12%    0x00007f96e324c88d:   mov    0x170(%rsp),%r8
            0x00007f96e324c895:   imul   0x148(%rsp),%r8              ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1224 (line 395)
            0x00007f96e324c89e:   add    %r8,%r11                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1225 (line 395)
   0.17%    0x00007f96e324c8a1:   mov    0x1b0(%rsp),%rcx
            0x00007f96e324c8a9:   imul   0x138(%rsp),%rcx             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1234 (line 395)
            0x00007f96e324c8b2:   add    %rcx,%r11                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1235 (line 395)
   0.09%    0x00007f96e324c8b5:   mov    0x1a8(%rsp),%rcx
            0x00007f96e324c8bd:   imul   %r14,%rcx                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1243 (line 395)
   0.06%    0x00007f96e324c8c1:   add    %rcx,%r11                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1244 (line 395)
   0.11%    0x00007f96e324c8c4:   mov    0x190(%rsp),%rcx
            0x00007f96e324c8cc:   imul   %rdx,%rcx                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1252 (line 395)
            0x00007f96e324c8d0:   add    %rcx,%r11                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1253 (line 395)
   0.15%    0x00007f96e324c8d3:   mov    0x1a0(%rsp),%rcx
            0x00007f96e324c8db:   imul   %r13,%rcx                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1261 (line 395)
            0x00007f96e324c8df:   add    %rcx,%r11                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1262 (line 395)
   0.12%    0x00007f96e324c8e2:   imul   0x198(%rsp),%rbx             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1272 (line 396)
            0x00007f96e324c8eb:   mov    0x128(%rsp),%rcx
            0x00007f96e324c8f3:   imul   0x188(%rsp),%rcx             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1280 (line 396)
   0.10%    0x00007f96e324c8fc:   add    %rcx,%rbx                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1281 (line 396)
   0.11%    0x00007f96e324c8ff:   mov    0x140(%rsp),%rcx
            0x00007f96e324c907:   imul   0x180(%rsp),%rcx             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1290 (line 396)
            0x00007f96e324c910:   add    %rcx,%rbx                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1291 (line 396)
   0.12%    0x00007f96e324c913:   mov    0x150(%rsp),%r13
            0x00007f96e324c91b:   imul   0x178(%rsp),%r13             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1300 (line 396)
   0.00%    0x00007f96e324c924:   add    %r13,%rbx                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1301 (line 396)
   0.16%    0x00007f96e324c927:   mov    0x160(%rsp),%rcx
            0x00007f96e324c92f:   imul   0x168(%rsp),%rcx             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1310 (line 396)
            0x00007f96e324c938:   add    %rcx,%rbx                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1311 (line 396)
   0.13%    0x00007f96e324c93b:   mov    0x170(%rsp),%r8
            0x00007f96e324c943:   imul   0x158(%rsp),%r8              ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1320 (line 396)
            0x00007f96e324c94c:   add    %r8,%rbx                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1321 (line 396)
                                                                      ;   {no_reloc}
   0.11%    0x00007f96e324c94f:   mov    0x1b0(%rsp),%rcx
            0x00007f96e324c957:   imul   0x148(%rsp),%rcx             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1330 (line 396)
            0x00007f96e324c960:   add    %rcx,%rbx                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1331 (line 396)
   0.13%    0x00007f96e324c963:   mov    0x1a8(%rsp),%rcx
            0x00007f96e324c96b:   imul   0x138(%rsp),%rcx             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1340 (line 396)
            0x00007f96e324c974:   add    %rcx,%rbx                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1341 (line 396)
   0.13%    0x00007f96e324c977:   mov    0x190(%rsp),%rcx
            0x00007f96e324c97f:   imul   %r14,%rcx                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1349 (line 396)
   0.06%    0x00007f96e324c983:   add    %rcx,%rbx                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1350 (line 396)
   0.12%    0x00007f96e324c986:   imul   0x1a0(%rsp),%rdx             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1358 (line 396)
            0x00007f96e324c98f:   add    %rdx,%rbx                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1359 (line 396)
   0.11%    0x00007f96e324c992:   mov    0x128(%rsp),%rdx
            0x00007f96e324c99a:   imul   0x198(%rsp),%rdx             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1369 (line 397)
            0x00007f96e324c9a3:   mov    0x140(%rsp),%rcx
            0x00007f96e324c9ab:   imul   0x188(%rsp),%rcx             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1378 (line 397)
   0.12%    0x00007f96e324c9b4:   add    %rcx,%rdx                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1379 (line 397)
   0.08%    0x00007f96e324c9b7:   mov    0x150(%rsp),%r13
            0x00007f96e324c9bf:   imul   0x180(%rsp),%r13             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
....................................................................................................
  24.83%  <total for region 1>

....[Hottest Region 2]..............................................................................
jvmci, level 4, sun.security.util.math.intpoly.IntegerPolynomialP384::carryReduce, version 2, compile id 1068 

 <region is too big to display, has 1027 lines, but threshold is 1000>
....................................................................................................
  21.78%  <total for region 2>

....[Hottest Regions]...............................................................................
  24.83%      jvmci, level 4  sun.security.util.math.intpoly.IntegerPolynomialP384::mult, version 2, compile id 1071 
  21.78%      jvmci, level 4  sun.security.util.math.intpoly.IntegerPolynomialP384::carryReduce, version 2, compile id 1068 
   5.59%      jvmci, level 4  sun.security.util.math.intpoly.IntegerPolynomial$MutableElement::setProduct, version 2, compile id 1109 
   4.81%      jvmci, level 4  sun.security.util.math.intpoly.IntegerPolynomialP384::mult, version 2, compile id 1071 
   4.81%      jvmci, level 4  sun.security.ec.point.ProjectivePoint$Mutable::conditionalSet, version 2, compile id 1127 
   4.60%      jvmci, level 4  sun.security.util.math.intpoly.IntegerPolynomialP384::square, version 2, compile id 1128 
   4.40%      jvmci, level 4  sun.security.util.math.intpoly.P384OrderField::carryReduce0, version 2, compile id 1157 
   1.82%      jvmci, level 4  sun.security.util.math.intpoly.IntegerPolynomialP384::mult, version 2, compile id 1071 
   1.75%        runtime stub  StubRoutines::jlong_disjoint_arraycopy 
   1.45%      jvmci, level 4  sun.security.util.math.intpoly.P384OrderField::square, version 2, compile id 1181 
   1.06%      jvmci, level 4  sun.security.util.math.intpoly.IntegerPolynomialP384::square, version 2, compile id 1128 
   1.01%      jvmci, level 4  sun.security.util.math.intpoly.IntegerPolynomialP384::mult, version 2, compile id 1071 
   1.00%      jvmci, level 4  sun.security.util.math.intpoly.IntegerPolynomialP384::mult, version 2, compile id 1071 
   0.99%      jvmci, level 4  sun.security.util.math.intpoly.P384OrderField::mult, version 2, compile id 1202 
   0.97%      jvmci, level 4  sun.security.ec.ECOperations::setDouble, version 2, compile id 1186 
   0.79%      jvmci, level 4  sun.security.ec.ECOperations::setDouble, version 2, compile id 1186 
   0.79%      jvmci, level 4  sun.security.ec.ECOperations::setDouble, version 2, compile id 1186 
   0.78%      jvmci, level 4  sun.security.util.math.intpoly.IntegerPolynomialP384::mult, version 2, compile id 1071 
   0.73%      jvmci, level 4  sun.security.ec.ECOperations::setDouble, version 2, compile id 1186 
   0.68%      jvmci, level 4  sun.security.util.math.IntegerModuloP$MultiplicativeInverser$Default::inverse, version 3, compile id 1315 
  15.38%  <...other 954 warm regions...>
....................................................................................................
 100.00%  <totals>

....[Hottest Methods (after inlining)]..............................................................
  34.82%      jvmci, level 4  sun.security.util.math.intpoly.IntegerPolynomialP384::mult, version 2, compile id 1071 
  21.78%      jvmci, level 4  sun.security.util.math.intpoly.IntegerPolynomialP384::carryReduce, version 2, compile id 1068 
   8.28%      jvmci, level 4  sun.security.ec.ECOperations::setDouble, version 2, compile id 1186 
   5.66%      jvmci, level 4  sun.security.util.math.intpoly.IntegerPolynomialP384::square, version 2, compile id 1128 
   5.59%      jvmci, level 4  sun.security.util.math.intpoly.IntegerPolynomial$MutableElement::setProduct, version 2, compile id 1109 
   4.81%      jvmci, level 4  sun.security.ec.point.ProjectivePoint$Mutable::conditionalSet, version 2, compile id 1127 
   4.40%      jvmci, level 4  sun.security.util.math.intpoly.P384OrderField::carryReduce0, version 2, compile id 1157 
   4.12%      jvmci, level 4  sun.security.ec.ECOperations::setSum, version 2, compile id 1259 
   2.00%      jvmci, level 4  sun.security.util.math.intpoly.P384OrderField::mult, version 2, compile id 1202 
   1.79%      jvmci, level 4  sun.security.util.math.intpoly.P384OrderField::square, version 2, compile id 1181 
   1.75%        runtime stub  StubRoutines::jlong_disjoint_arraycopy 
   1.64%              kernel  [unknown] 
   0.69%      jvmci, level 4  sun.security.util.math.IntegerModuloP$MultiplicativeInverser$Default::inverse, version 3, compile id 1315 
   0.47%      jvmci, level 4  sun.security.ec.ECOperations::setSum, version 2, compile id 1418 
   0.47%      jvmci, level 4  sun.security.ec.ECOperations$PointMultiplier::lookup, version 2, compile id 1173 
   0.25%      jvmci, level 4  sun.security.ec.ECOperations$PointMultiplier$Default::pointMultiply, version 2, compile id 1445 
   0.23%        runtime stub  StubRoutines::sha512_implCompressMB 
   0.17%      jvmci, level 4  sun.security.util.math.intpoly.IntegerPolynomialP384::reduce, version 2, compile id 1250 
   0.09%      jvmci, level 4  sun.security.ec.ECDSAOperations::signDigest, version 2, compile id 1533 
   0.08%                      <unknown> 
   0.93%  <...other 107 warm methods...>
....................................................................................................
 100.00%  <totals>

....[Distribution by Source]........................................................................
  95.96%      jvmci, level 4
   2.01%        runtime stub
   1.64%              kernel
   0.13%           libjvm.so
   0.11%        libc-2.31.so
   0.08%                    
   0.03%         interpreter
   0.02%      hsdis-amd64.so
   0.01%  libpthread-2.31.so
   0.01%          ld-2.31.so
   0.00%         c1, level 3
   0.00%    perf-2107142.map
....................................................................................................
 100.00%  <totals>



# JMH version: 1.37
# VM version: JDK 21, OpenJDK 64-Bit Server VM, 21+35-jvmci-23.1-b15
# VM invoker: /home/gogu/bench_jdks/graalvm-community-openjdk-21+35.1/bin/java
# VM options: -XX:ThreadPriorityPolicy=1 -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCIProduct -XX:-UnlockExperimentalVMOptions -Xms4g -Xmx4g -XX:+AlwaysPreTouch
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.performance.benchmarks.api.signature.DsaEcSignatureBenchmark.sign
# Parameters: (algorithm = secp384r1, messageLength = 16384)

# Run progress: 58.33% complete, ETA 00:09:43
# Fork: 1 of 1
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 5387.710 us/op
# Warmup Iteration   2: 1770.053 us/op
# Warmup Iteration   3: 1757.192 us/op
# Warmup Iteration   4: 1757.242 us/op
# Warmup Iteration   5: 1755.937 us/op
Iteration   1: 1756.070 us/op
Iteration   2: 1757.828 us/op
Iteration   3: 1756.507 us/op
Iteration   4: 1756.295 us/op
Iteration   5: 1756.182 us/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "com.ionutbalosin.jvm.performance.benchmarks.api.signature.DsaEcSignatureBenchmark.sign":
  1756.576 ±(99.9%) 2.764 us/op [Average]
  (min, avg, max) = (1756.070, 1756.576, 1757.828), stdev = 0.718
  CI (99.9%): [1753.812, 1759.340] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.signature.DsaEcSignatureBenchmark.sign:asm":
PrintAssembly processed: 418668 total address lines.
Perf output processed (skipped 61.715 seconds):
 Column 1: cycles (51057 events)

Hottest code regions (>10.00% "cycles" events):
 Event counts are percents of total event count.

....[Hottest Region 1]..............................................................................
jvmci, level 4, sun.security.util.math.intpoly.IntegerPolynomialP384::mult, version 2, compile id 1103 

            # parm2:    r8:r8     = &apos;[J&apos;
            #           [sp+0x1d0]  (sp of caller)
            0x00007f33bb24f840:   mov    0x8(%rsi),%r10d
            0x00007f33bb24f844:   movabs $0x7f333f000000,%r12
            0x00007f33bb24f84e:   add    %r12,%r10
            0x00007f33bb24f851:   xor    %r12,%r12
            0x00007f33bb24f854:   cmp    %r10,%rax
            0x00007f33bb24f857:   jne    0x00007f33bac2f080           ;   {runtime_call ic_miss_stub}
            0x00007f33bb24f85d:   data16 xchg %ax,%ax
          [Verified Entry Point]
   1.14%    0x00007f33bb24f860:   mov    %eax,-0x14000(%rsp)
   1.61%    0x00007f33bb24f867:   sub    $0x1c8,%rsp
   0.00%    0x00007f33bb24f86e:   xchg   %ax,%ax
            0x00007f33bb24f870:   cmpl   $0x0,0x20(%r15)
            0x00007f33bb24f878:   jne    0x00007f33bb2507d8
   0.13%    0x00007f33bb24f87e:   mov    %rbp,0x1c0(%rsp)             ; ImmutableOopMap {rcx=Oop rdx=Oop rsi=Oop r8=Oop }
                                                                      ;*aload_1 {reexecute=1 rethrow=0 return_oop=0}
                                                                      ; - (reexecute) sun.security.util.math.intpoly.IntegerPolynomialP384::mult@0 (line 379)
   0.02%    0x00007f33bb24f886:   mov    0xc(%rdx),%r9d               ; implicit exception: dispatches to 0x00007f33bb2507ff
                                                                      ; ImmutableOopMap {rcx=Oop rdx=Oop rsi=Oop r8=Oop }
                                                                      ;*aload_1 {reexecute=1 rethrow=0 return_oop=0}
                                                                      ; - (reexecute) sun.security.util.math.intpoly.IntegerPolynomialP384::mult@0 (line 379)
   0.06%    0x00007f33bb24f88a:   mov    0xc(%rcx),%edi               ; implicit exception: dispatches to 0x00007f33bb250822
            0x00007f33bb24f88d:   cmp    $0xe,%r9d
            0x00007f33bb24f891:   jb     0x00007f33bb2507b5           ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@2 (line 379)
   0.10%    0x00007f33bb24f897:   cmp    $0xe,%edi
            0x00007f33bb24f89a:   jb     0x00007f33bb2507b5           ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@5 (line 379)
   0.10%    0x00007f33bb24f8a0:   mov    %r8,0xc8(%rsp)
   0.30%    0x00007f33bb24f8a8:   mov    %rsi,0xc0(%rsp)
   0.49%    0x00007f33bb24f8b0:   mov    0x10(%rdx),%r9               ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@2 (line 379)
   0.01%    0x00007f33bb24f8b4:   mov    0x18(%rdx),%rdi              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@18 (line 380)
   0.00%    0x00007f33bb24f8b8:   mov    0x20(%rdx),%r10              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@43 (line 381)
   0.00%    0x00007f33bb24f8bc:   mov    0x28(%rdx),%r11              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@76 (line 382)
   0.17%    0x00007f33bb24f8c0:   mov    0x30(%rdx),%rbx              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@117 (line 383)
   0.00%    0x00007f33bb24f8c4:   mov    0x38(%rdx),%rax              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@166 (line 384)
   0.00%    0x00007f33bb24f8c8:   mov    0x40(%rdx),%rbp              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@225 (line 385)
   0.00%    0x00007f33bb24f8cc:   mov    0x48(%rdx),%r13              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@294 (line 386)
   0.12%    0x00007f33bb24f8d0:   mov    0x50(%rdx),%r14              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@373 (line 387)
   0.01%    0x00007f33bb24f8d4:   mov    0x58(%rdx),%r8               ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@462 (line 388)
            0x00007f33bb24f8d8:   mov    0x60(%rdx),%rsi              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@561 (line 389)
   0.01%    0x00007f33bb24f8dc:   mov    %rsi,0x1b0(%rsp)
   0.23%    0x00007f33bb24f8e4:   mov    0x68(%rdx),%rsi              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@670 (line 390)
   0.01%    0x00007f33bb24f8e8:   mov    %rsi,0x1a8(%rsp)
   0.00%    0x00007f33bb24f8f0:   mov    0x70(%rdx),%rsi              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@789 (line 391)
   0.01%    0x00007f33bb24f8f4:   mov    0x78(%rdx),%rdx              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@918 (line 392)
   0.12%    0x00007f33bb24f8f8:   mov    %rdx,0x1a0(%rsp)
   0.01%    0x00007f33bb24f900:   mov    0x78(%rcx),%rdx              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@803 (line 392)
   0.02%    0x00007f33bb24f904:   mov    %rdx,0x198(%rsp)
   0.06%    0x00007f33bb24f90c:   mov    0x70(%rcx),%rdx              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@684 (line 391)
   0.06%    0x00007f33bb24f910:   mov    %rsi,0x190(%rsp)
   0.24%    0x00007f33bb24f918:   mov    0x68(%rcx),%rsi              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@575 (line 390)
   0.00%    0x00007f33bb24f91c:   mov    %rdx,0x188(%rsp)
   0.02%    0x00007f33bb24f924:   mov    0x60(%rcx),%rdx              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@476 (line 389)
   0.00%    0x00007f33bb24f928:   mov    %rsi,0x180(%rsp)
   0.08%    0x00007f33bb24f930:   mov    0x58(%rcx),%rsi              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@387 (line 388)
   0.00%    0x00007f33bb24f934:   mov    %rdx,0x178(%rsp)
   0.15%    0x00007f33bb24f93c:   mov    0x50(%rcx),%rdx              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@308 (line 387)
   0.00%    0x00007f33bb24f940:   mov    %r8,0x170(%rsp)
   0.04%    0x00007f33bb24f948:   mov    0x48(%rcx),%r8               ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@239 (line 386)
   0.00%    0x00007f33bb24f94c:   mov    %rsi,0x168(%rsp)
   0.15%    0x00007f33bb24f954:   mov    0x40(%rcx),%rsi              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@180 (line 385)
                                                                      ;   {no_reloc}
   0.00%    0x00007f33bb24f958:   mov    %r14,0x160(%rsp)
   0.07%    0x00007f33bb24f960:   mov    0x38(%rcx),%r14              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@130 (line 384)
   0.01%    0x00007f33bb24f964:   mov    %rdx,0x158(%rsp)
   0.18%    0x00007f33bb24f96c:   mov    0x30(%rcx),%rdx              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@89 (line 383)
   0.00%    0x00007f33bb24f970:   mov    %r13,0x150(%rsp)
   0.06%    0x00007f33bb24f978:   mov    0x28(%rcx),%r13              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@56 (line 382)
   0.01%    0x00007f33bb24f97c:   mov    %r8,0x148(%rsp)
   0.13%    0x00007f33bb24f984:   mov    0x20(%rcx),%r8               ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@31 (line 381)
   0.01%    0x00007f33bb24f988:   mov    %rbp,0x140(%rsp)
   0.06%    0x00007f33bb24f990:   mov    0x18(%rcx),%rbp              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@14 (line 380)
   0.01%    0x00007f33bb24f994:   mov    0x10(%rcx),%rcx              ;*laload {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@5 (line 379)
   0.06%    0x00007f33bb24f998:   mov    %rsi,0x138(%rsp)
   0.04%    0x00007f33bb24f9a0:   mov    %r9,%rsi
   0.01%    0x00007f33bb24f9a3:   imul   %rcx,%rsi                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@6 (line 379)
   0.01%    0x00007f33bb24f9a7:   mov    %rsi,0x130(%rsp)
   0.10%    0x00007f33bb24f9af:   mov    %rbp,%rsi
   0.00%    0x00007f33bb24f9b2:   imul   %r9,%rsi                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@15 (line 380)
   0.03%    0x00007f33bb24f9b6:   mov    %rax,0x128(%rsp)
   0.09%    0x00007f33bb24f9be:   mov    %rdi,%rax
   0.02%    0x00007f33bb24f9c1:   imul   %rcx,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@22 (line 380)
            0x00007f33bb24f9c5:   add    %rsi,%rax                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@23 (line 380)
   0.02%    0x00007f33bb24f9c8:   mov    %r8,%rsi
   0.07%    0x00007f33bb24f9cb:   imul   %r9,%rsi                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@32 (line 381)
   0.02%    0x00007f33bb24f9cf:   mov    %rax,0x120(%rsp)
   0.01%    0x00007f33bb24f9d7:   mov    %rdi,%rax
   0.02%    0x00007f33bb24f9da:   imul   %rbp,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@39 (line 381)
   0.08%    0x00007f33bb24f9de:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@40 (line 381)
   0.01%    0x00007f33bb24f9e1:   mov    %r10,%rax
   0.00%    0x00007f33bb24f9e4:   imul   %rcx,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@47 (line 381)
   0.02%    0x00007f33bb24f9e8:   add    %rsi,%rax                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@48 (line 381)
   0.08%    0x00007f33bb24f9eb:   mov    %r13,%rsi
   0.02%    0x00007f33bb24f9ee:   imul   %r9,%rsi                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@57 (line 382)
   0.00%    0x00007f33bb24f9f2:   mov    %rax,0x118(%rsp)
   0.02%    0x00007f33bb24f9fa:   mov    %rdi,%rax
   0.08%    0x00007f33bb24f9fd:   imul   %r8,%rax                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@64 (line 382)
   0.01%    0x00007f33bb24fa01:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@65 (line 382)
   0.00%    0x00007f33bb24fa04:   mov    %r10,%rax
   0.03%    0x00007f33bb24fa07:   imul   %rbp,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@72 (line 382)
   0.08%    0x00007f33bb24fa0b:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@73 (line 382)
   0.02%    0x00007f33bb24fa0e:   mov    %r11,%rax
   0.00%    0x00007f33bb24fa11:   imul   %rcx,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@80 (line 382)
   0.01%    0x00007f33bb24fa15:   add    %rsi,%rax                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@81 (line 382)
   0.10%    0x00007f33bb24fa18:   mov    %rdx,%rsi
   0.01%    0x00007f33bb24fa1b:   imul   %r9,%rsi                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@90 (line 383)
   0.01%    0x00007f33bb24fa1f:   mov    %rax,0x110(%rsp)
   0.05%    0x00007f33bb24fa27:   mov    %rdi,%rax
   0.07%    0x00007f33bb24fa2a:   imul   %r13,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@97 (line 383)
   0.01%    0x00007f33bb24fa2e:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@98 (line 383)
   0.00%    0x00007f33bb24fa31:   mov    %r10,%rax
   0.03%    0x00007f33bb24fa34:   imul   %r8,%rax                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@105 (line 383)
   0.10%    0x00007f33bb24fa38:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@106 (line 383)
   0.01%    0x00007f33bb24fa3b:   mov    %r11,%rax
            0x00007f33bb24fa3e:   imul   %rbp,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@113 (line 383)
   0.03%    0x00007f33bb24fa42:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@114 (line 383)
   0.10%    0x00007f33bb24fa45:   mov    %rbx,%rax
   0.02%    0x00007f33bb24fa48:   imul   %rcx,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@121 (line 383)
            0x00007f33bb24fa4c:   add    %rsi,%rax                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@122 (line 383)
   0.04%    0x00007f33bb24fa4f:   mov    %r14,%rsi
   0.07%    0x00007f33bb24fa52:   imul   %r9,%rsi                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@131 (line 384)
                                                                      ;   {no_reloc}
   0.01%    0x00007f33bb24fa56:   mov    %rax,0x108(%rsp)
   0.12%    0x00007f33bb24fa5e:   mov    %rdi,%rax
            0x00007f33bb24fa61:   imul   %rdx,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@138 (line 384)
            0x00007f33bb24fa65:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@139 (line 384)
   0.00%    0x00007f33bb24fa68:   mov    %r10,%rax
   0.11%    0x00007f33bb24fa6b:   imul   %r13,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@146 (line 384)
            0x00007f33bb24fa6f:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@147 (line 384)
            0x00007f33bb24fa72:   mov    %r11,%rax
   0.01%    0x00007f33bb24fa75:   imul   %r8,%rax                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@154 (line 384)
   0.12%    0x00007f33bb24fa79:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@155 (line 384)
            0x00007f33bb24fa7c:   mov    %rbx,%rax
   0.00%    0x00007f33bb24fa7f:   imul   %rbp,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@162 (line 384)
            0x00007f33bb24fa83:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@163 (line 384)
   0.17%    0x00007f33bb24fa86:   mov    0x128(%rsp),%rax
   0.00%    0x00007f33bb24fa8e:   imul   %rcx,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@170 (line 384)
   0.00%    0x00007f33bb24fa92:   add    %rsi,%rax                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@171 (line 384)
   0.01%    0x00007f33bb24fa95:   mov    0x138(%rsp),%rsi
   0.14%    0x00007f33bb24fa9d:   imul   %r9,%rsi                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@181 (line 385)
   0.00%    0x00007f33bb24faa1:   mov    %rax,0x100(%rsp)
   0.13%    0x00007f33bb24faa9:   mov    %rdi,%rax
            0x00007f33bb24faac:   imul   %r14,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@188 (line 385)
            0x00007f33bb24fab0:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@189 (line 385)
   0.00%    0x00007f33bb24fab3:   mov    %r10,%rax
   0.11%    0x00007f33bb24fab6:   imul   %rdx,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@196 (line 385)
            0x00007f33bb24faba:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@197 (line 385)
   0.07%    0x00007f33bb24fabd:   mov    %r11,%rax
            0x00007f33bb24fac0:   imul   %r13,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@204 (line 385)
   0.09%    0x00007f33bb24fac4:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@205 (line 385)
            0x00007f33bb24fac7:   mov    %rbx,%rax
   0.03%    0x00007f33bb24faca:   imul   %r8,%rax                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@212 (line 385)
            0x00007f33bb24face:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@213 (line 385)
   0.10%    0x00007f33bb24fad1:   mov    0x128(%rsp),%rax
   0.00%    0x00007f33bb24fad9:   imul   %rbp,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@220 (line 385)
   0.04%    0x00007f33bb24fadd:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@221 (line 385)
            0x00007f33bb24fae0:   mov    0x140(%rsp),%rax
   0.06%    0x00007f33bb24fae8:   imul   %rcx,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@229 (line 385)
            0x00007f33bb24faec:   add    %rsi,%rax                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@230 (line 385)
   0.09%    0x00007f33bb24faef:   mov    0x148(%rsp),%rsi
   0.00%    0x00007f33bb24faf7:   imul   %r9,%rsi                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@240 (line 386)
   0.01%    0x00007f33bb24fafb:   mov    %rax,0xf8(%rsp)
   0.22%    0x00007f33bb24fb03:   mov    %rdi,%rax
            0x00007f33bb24fb06:   imul   0x138(%rsp),%rax             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@248 (line 386)
            0x00007f33bb24fb0f:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@249 (line 386)
            0x00007f33bb24fb12:   mov    %r10,%rax
   0.11%    0x00007f33bb24fb15:   imul   %r14,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@256 (line 386)
            0x00007f33bb24fb19:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@257 (line 386)
            0x00007f33bb24fb1c:   mov    %r11,%rax
            0x00007f33bb24fb1f:   imul   %rdx,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@264 (line 386)
   0.14%    0x00007f33bb24fb23:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@265 (line 386)
            0x00007f33bb24fb26:   mov    %rbx,%rax
   0.00%    0x00007f33bb24fb29:   imul   %r13,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@272 (line 386)
            0x00007f33bb24fb2d:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@273 (line 386)
   0.20%    0x00007f33bb24fb30:   mov    0x128(%rsp),%rax
            0x00007f33bb24fb38:   imul   %r8,%rax                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@280 (line 386)
            0x00007f33bb24fb3c:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@281 (line 386)
            0x00007f33bb24fb3f:   mov    0x140(%rsp),%rax
   0.12%    0x00007f33bb24fb47:   imul   %rbp,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@289 (line 386)
            0x00007f33bb24fb4b:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@290 (line 386)
            0x00007f33bb24fb4e:   mov    0x150(%rsp),%rax             ;   {no_reloc}
            0x00007f33bb24fb56:   imul   %rcx,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@298 (line 386)
   0.14%    0x00007f33bb24fb5a:   add    %rsi,%rax                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@299 (line 386)
            0x00007f33bb24fb5d:   mov    0x158(%rsp),%rsi
            0x00007f33bb24fb65:   imul   %r9,%rsi                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@309 (line 387)
   0.00%    0x00007f33bb24fb69:   mov    %rax,0xf0(%rsp)
   0.22%    0x00007f33bb24fb71:   mov    %rdi,%rax
            0x00007f33bb24fb74:   imul   0x148(%rsp),%rax             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@317 (line 387)
            0x00007f33bb24fb7d:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@318 (line 387)
            0x00007f33bb24fb80:   mov    %r10,%rax
   0.09%    0x00007f33bb24fb83:   imul   0x138(%rsp),%rax             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@326 (line 387)
            0x00007f33bb24fb8c:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@327 (line 387)
            0x00007f33bb24fb8f:   mov    %r11,%rax
            0x00007f33bb24fb92:   imul   %r14,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@334 (line 387)
   0.13%    0x00007f33bb24fb96:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@335 (line 387)
            0x00007f33bb24fb99:   mov    %rbx,%rax
            0x00007f33bb24fb9c:   imul   %rdx,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@342 (line 387)
            0x00007f33bb24fba0:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@343 (line 387)
   0.22%    0x00007f33bb24fba3:   mov    0x128(%rsp),%rax
            0x00007f33bb24fbab:   imul   %r13,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@350 (line 387)
            0x00007f33bb24fbaf:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@351 (line 387)
   0.04%    0x00007f33bb24fbb2:   mov    0x140(%rsp),%rax
   0.09%    0x00007f33bb24fbba:   imul   %r8,%rax                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@359 (line 387)
            0x00007f33bb24fbbe:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@360 (line 387)
   0.05%    0x00007f33bb24fbc1:   mov    0x150(%rsp),%rax
            0x00007f33bb24fbc9:   imul   %rbp,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@368 (line 387)
   0.10%    0x00007f33bb24fbcd:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@369 (line 387)
   0.04%    0x00007f33bb24fbd0:   mov    0x160(%rsp),%rax
   0.00%    0x00007f33bb24fbd8:   imul   %rcx,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@377 (line 387)
   0.00%    0x00007f33bb24fbdc:   add    %rsi,%rax                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@378 (line 387)
   0.14%    0x00007f33bb24fbdf:   mov    0x168(%rsp),%rsi
            0x00007f33bb24fbe7:   imul   %r9,%rsi                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@388 (line 388)
   0.00%    0x00007f33bb24fbeb:   mov    %rax,0xe8(%rsp)
   0.27%    0x00007f33bb24fbf3:   mov    %rdi,%rax
            0x00007f33bb24fbf6:   imul   0x158(%rsp),%rax             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@396 (line 388)
            0x00007f33bb24fbff:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@397 (line 388)
   0.00%    0x00007f33bb24fc02:   mov    %r10,%rax
   0.11%    0x00007f33bb24fc05:   imul   0x148(%rsp),%rax             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@405 (line 388)
            0x00007f33bb24fc0e:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@406 (line 388)
            0x00007f33bb24fc11:   mov    %r11,%rax
            0x00007f33bb24fc14:   imul   0x138(%rsp),%rax             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@414 (line 388)
   0.13%    0x00007f33bb24fc1d:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@415 (line 388)
            0x00007f33bb24fc20:   mov    %rbx,%rax
            0x00007f33bb24fc23:   imul   %r14,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@422 (line 388)
            0x00007f33bb24fc27:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@423 (line 388)
   0.12%    0x00007f33bb24fc2a:   mov    0x128(%rsp),%rax
            0x00007f33bb24fc32:   imul   %rdx,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@430 (line 388)
            0x00007f33bb24fc36:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@431 (line 388)
   0.08%    0x00007f33bb24fc39:   mov    0x140(%rsp),%rax
   0.05%    0x00007f33bb24fc41:   imul   %r13,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@439 (line 388)
            0x00007f33bb24fc45:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@440 (line 388)
   0.06%    0x00007f33bb24fc48:   mov    0x150(%rsp),%rax
            0x00007f33bb24fc50:   imul   %r8,%rax                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@448 (line 388)
                                                                      ;   {no_reloc}
   0.06%    0x00007f33bb24fc54:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@449 (line 388)
   0.07%    0x00007f33bb24fc57:   mov    0x160(%rsp),%rax
            0x00007f33bb24fc5f:   imul   %rbp,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@457 (line 388)
            0x00007f33bb24fc63:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@458 (line 388)
   0.14%    0x00007f33bb24fc66:   mov    0x170(%rsp),%rax
            0x00007f33bb24fc6e:   imul   %rcx,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@466 (line 388)
            0x00007f33bb24fc72:   add    %rsi,%rax                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@467 (line 388)
   0.12%    0x00007f33bb24fc75:   mov    0x178(%rsp),%rsi
            0x00007f33bb24fc7d:   imul   %r9,%rsi                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@477 (line 389)
            0x00007f33bb24fc81:   mov    %rax,0xe0(%rsp)
   0.26%    0x00007f33bb24fc89:   mov    %rdi,%rax
            0x00007f33bb24fc8c:   imul   0x168(%rsp),%rax             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@485 (line 389)
            0x00007f33bb24fc95:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@486 (line 389)
            0x00007f33bb24fc98:   mov    %r10,%rax
   0.14%    0x00007f33bb24fc9b:   imul   0x158(%rsp),%rax             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@494 (line 389)
            0x00007f33bb24fca4:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@495 (line 389)
            0x00007f33bb24fca7:   mov    %r11,%rax
            0x00007f33bb24fcaa:   imul   0x148(%rsp),%rax             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@503 (line 389)
   0.11%    0x00007f33bb24fcb3:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@504 (line 389)
            0x00007f33bb24fcb6:   mov    %rbx,%rax
            0x00007f33bb24fcb9:   imul   0x138(%rsp),%rax             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@512 (line 389)
            0x00007f33bb24fcc2:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@513 (line 389)
   0.12%    0x00007f33bb24fcc5:   mov    0x128(%rsp),%rax
            0x00007f33bb24fccd:   imul   %r14,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@520 (line 389)
   0.05%    0x00007f33bb24fcd1:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@521 (line 389)
   0.12%    0x00007f33bb24fcd4:   mov    0x140(%rsp),%rax
            0x00007f33bb24fcdc:   imul   %rdx,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@529 (line 389)
            0x00007f33bb24fce0:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@530 (line 389)
   0.12%    0x00007f33bb24fce3:   mov    0x150(%rsp),%rax
            0x00007f33bb24fceb:   imul   %r13,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@538 (line 389)
            0x00007f33bb24fcef:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@539 (line 389)
   0.12%    0x00007f33bb24fcf2:   mov    0x160(%rsp),%rax
            0x00007f33bb24fcfa:   imul   %r8,%rax                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@547 (line 389)
            0x00007f33bb24fcfe:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@548 (line 389)
   0.11%    0x00007f33bb24fd01:   mov    0x170(%rsp),%rax
            0x00007f33bb24fd09:   imul   %rbp,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@556 (line 389)
            0x00007f33bb24fd0d:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@557 (line 389)
   0.13%    0x00007f33bb24fd10:   mov    0x1b0(%rsp),%rax
            0x00007f33bb24fd18:   imul   %rcx,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@565 (line 389)
            0x00007f33bb24fd1c:   add    %rsi,%rax                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@566 (line 389)
   0.14%    0x00007f33bb24fd1f:   mov    0x180(%rsp),%rsi
            0x00007f33bb24fd27:   imul   %r9,%rsi                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@576 (line 390)
            0x00007f33bb24fd2b:   mov    %rax,0xd8(%rsp)
   0.27%    0x00007f33bb24fd33:   mov    %rdi,%rax
            0x00007f33bb24fd36:   imul   0x178(%rsp),%rax             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@584 (line 390)
            0x00007f33bb24fd3f:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@585 (line 390)
            0x00007f33bb24fd42:   mov    %r10,%rax
   0.12%    0x00007f33bb24fd45:   imul   0x168(%rsp),%rax             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@593 (line 390)
            0x00007f33bb24fd4e:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@594 (line 390)
            0x00007f33bb24fd51:   mov    %r11,%rax                    ;   {no_reloc}
            0x00007f33bb24fd54:   imul   0x158(%rsp),%rax             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@602 (line 390)
   0.13%    0x00007f33bb24fd5d:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@603 (line 390)
            0x00007f33bb24fd60:   mov    %rbx,%rax
            0x00007f33bb24fd63:   imul   0x148(%rsp),%rax             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@611 (line 390)
            0x00007f33bb24fd6c:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@612 (line 390)
   0.13%    0x00007f33bb24fd6f:   mov    0x128(%rsp),%rax
            0x00007f33bb24fd77:   imul   0x138(%rsp),%rax             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@620 (line 390)
            0x00007f33bb24fd80:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@621 (line 390)
   0.07%    0x00007f33bb24fd83:   mov    0x140(%rsp),%rax
   0.05%    0x00007f33bb24fd8b:   imul   %r14,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@629 (line 390)
            0x00007f33bb24fd8f:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@630 (line 390)
   0.06%    0x00007f33bb24fd92:   mov    0x150(%rsp),%rax
            0x00007f33bb24fd9a:   imul   %rdx,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@638 (line 390)
   0.05%    0x00007f33bb24fd9e:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@639 (line 390)
   0.07%    0x00007f33bb24fda1:   mov    0x160(%rsp),%rax
            0x00007f33bb24fda9:   imul   %r13,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@647 (line 390)
            0x00007f33bb24fdad:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@648 (line 390)
   0.10%    0x00007f33bb24fdb0:   mov    0x170(%rsp),%rax
            0x00007f33bb24fdb8:   imul   %r8,%rax                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@656 (line 390)
            0x00007f33bb24fdbc:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@657 (line 390)
   0.11%    0x00007f33bb24fdbf:   mov    0x1b0(%rsp),%rax
            0x00007f33bb24fdc7:   imul   %rbp,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@665 (line 390)
   0.00%    0x00007f33bb24fdcb:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@666 (line 390)
   0.13%    0x00007f33bb24fdce:   mov    0x1a8(%rsp),%rax
            0x00007f33bb24fdd6:   imul   %rcx,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@674 (line 390)
            0x00007f33bb24fdda:   add    %rsi,%rax                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@675 (line 390)
   0.10%    0x00007f33bb24fddd:   mov    0x188(%rsp),%rsi
            0x00007f33bb24fde5:   imul   %r9,%rsi                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@685 (line 391)
            0x00007f33bb24fde9:   mov    %rax,0xd0(%rsp)
   0.24%    0x00007f33bb24fdf1:   mov    %rdi,%rax
            0x00007f33bb24fdf4:   imul   0x180(%rsp),%rax             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@693 (line 391)
            0x00007f33bb24fdfd:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@694 (line 391)
            0x00007f33bb24fe00:   mov    %r10,%rax
   0.14%    0x00007f33bb24fe03:   imul   0x178(%rsp),%rax             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@702 (line 391)
            0x00007f33bb24fe0c:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@703 (line 391)
            0x00007f33bb24fe0f:   mov    %r11,%rax
            0x00007f33bb24fe12:   imul   0x168(%rsp),%rax             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@711 (line 391)
   0.12%    0x00007f33bb24fe1b:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@712 (line 391)
            0x00007f33bb24fe1e:   mov    %rbx,%rax
            0x00007f33bb24fe21:   imul   0x158(%rsp),%rax             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@720 (line 391)
            0x00007f33bb24fe2a:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@721 (line 391)
   0.13%    0x00007f33bb24fe2d:   mov    0x128(%rsp),%rax
            0x00007f33bb24fe35:   imul   0x148(%rsp),%rax             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@729 (line 391)
            0x00007f33bb24fe3e:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@730 (line 391)
   0.12%    0x00007f33bb24fe41:   mov    0x140(%rsp),%rax
            0x00007f33bb24fe49:   imul   0x138(%rsp),%rax             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@739 (line 391)
                                                                      ;   {no_reloc}
            0x00007f33bb24fe52:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@740 (line 391)
   0.13%    0x00007f33bb24fe55:   mov    0x150(%rsp),%rax
            0x00007f33bb24fe5d:   imul   %r14,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@748 (line 391)
   0.02%    0x00007f33bb24fe61:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@749 (line 391)
   0.11%    0x00007f33bb24fe64:   mov    0x160(%rsp),%rax
            0x00007f33bb24fe6c:   imul   %rdx,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@757 (line 391)
            0x00007f33bb24fe70:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@758 (line 391)
   0.15%    0x00007f33bb24fe73:   mov    0x170(%rsp),%rax
            0x00007f33bb24fe7b:   imul   %r13,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@766 (line 391)
            0x00007f33bb24fe7f:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@767 (line 391)
   0.15%    0x00007f33bb24fe82:   mov    0x1b0(%rsp),%rax
            0x00007f33bb24fe8a:   imul   %r8,%rax                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@775 (line 391)
            0x00007f33bb24fe8e:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@776 (line 391)
   0.10%    0x00007f33bb24fe91:   mov    0x1a8(%rsp),%rax
            0x00007f33bb24fe99:   imul   %rbp,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@784 (line 391)
            0x00007f33bb24fe9d:   add    %rax,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@785 (line 391)
   0.11%    0x00007f33bb24fea0:   mov    0x190(%rsp),%rax
            0x00007f33bb24fea8:   imul   %rcx,%rax                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@793 (line 391)
            0x00007f33bb24feac:   add    %rsi,%rax                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@794 (line 391)
   0.13%    0x00007f33bb24feaf:   mov    0x198(%rsp),%rsi
            0x00007f33bb24feb7:   imul   %r9,%rsi                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@804 (line 392)
            0x00007f33bb24febb:   mov    %rdi,%r9
            0x00007f33bb24febe:   imul   0x188(%rsp),%r9              ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@812 (line 392)
   0.12%    0x00007f33bb24fec7:   add    %r9,%rsi                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@813 (line 392)
   0.07%    0x00007f33bb24feca:   mov    %r10,%r9
            0x00007f33bb24fecd:   imul   0x180(%rsp),%r9              ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@821 (line 392)
            0x00007f33bb24fed6:   add    %r9,%rsi                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@822 (line 392)
   0.12%    0x00007f33bb24fed9:   mov    %r11,%r9
            0x00007f33bb24fedc:   imul   0x178(%rsp),%r9              ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@830 (line 392)
            0x00007f33bb24fee5:   add    %r9,%rsi                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@831 (line 392)
   0.10%    0x00007f33bb24fee8:   mov    %rbx,%r9
            0x00007f33bb24feeb:   imul   0x168(%rsp),%r9              ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@839 (line 392)
            0x00007f33bb24fef4:   add    %r9,%rsi                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@840 (line 392)
   0.11%    0x00007f33bb24fef7:   mov    0x128(%rsp),%r9
            0x00007f33bb24feff:   imul   0x158(%rsp),%r9              ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@848 (line 392)
            0x00007f33bb24ff08:   add    %r9,%rsi                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@849 (line 392)
   0.11%    0x00007f33bb24ff0b:   mov    0x140(%rsp),%r9
            0x00007f33bb24ff13:   imul   0x148(%rsp),%r9              ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@858 (line 392)
            0x00007f33bb24ff1c:   add    %r9,%rsi                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@859 (line 392)
   0.12%    0x00007f33bb24ff1f:   mov    0x150(%rsp),%r9
            0x00007f33bb24ff27:   imul   0x138(%rsp),%r9              ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@868 (line 392)
            0x00007f33bb24ff30:   add    %r9,%rsi                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@869 (line 392)
   0.11%    0x00007f33bb24ff33:   mov    0x160(%rsp),%r9
            0x00007f33bb24ff3b:   imul   %r14,%r9                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@877 (line 392)
            0x00007f33bb24ff3f:   add    %r9,%rsi                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@878 (line 392)
   0.11%    0x00007f33bb24ff42:   mov    0x170(%rsp),%r9
            0x00007f33bb24ff4a:   imul   %rdx,%r9                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@886 (line 392)
            0x00007f33bb24ff4e:   add    %r9,%rsi                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@887 (line 392)
                                                                      ;   {no_reloc}
   0.12%    0x00007f33bb24ff51:   mov    0x1b0(%rsp),%r9
            0x00007f33bb24ff59:   imul   %r13,%r9                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@895 (line 392)
            0x00007f33bb24ff5d:   add    %r9,%rsi                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@896 (line 392)
   0.15%    0x00007f33bb24ff60:   mov    0x1a8(%rsp),%r9
            0x00007f33bb24ff68:   imul   %r8,%r9                      ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@904 (line 392)
            0x00007f33bb24ff6c:   add    %r9,%rsi                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@905 (line 392)
   0.13%    0x00007f33bb24ff6f:   mov    0x190(%rsp),%r9
            0x00007f33bb24ff77:   imul   %rbp,%r9                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@913 (line 392)
            0x00007f33bb24ff7b:   add    %r9,%rsi                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@914 (line 392)
   0.11%    0x00007f33bb24ff7e:   imul   0x1a0(%rsp),%rcx             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@922 (line 392)
            0x00007f33bb24ff87:   add    %rcx,%rsi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@923 (line 392)
   0.11%    0x00007f33bb24ff8a:   imul   0x198(%rsp),%rdi             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@933 (line 393)
   0.04%    0x00007f33bb24ff93:   mov    %r10,%rcx
            0x00007f33bb24ff96:   imul   0x188(%rsp),%rcx             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@941 (line 393)
   0.07%    0x00007f33bb24ff9f:   add    %rcx,%rdi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@942 (line 393)
   0.14%    0x00007f33bb24ffa2:   mov    %r11,%rcx
            0x00007f33bb24ffa5:   imul   0x180(%rsp),%rcx             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@950 (line 393)
            0x00007f33bb24ffae:   add    %rcx,%rdi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@951 (line 393)
   0.13%    0x00007f33bb24ffb1:   mov    %rbx,%rcx
            0x00007f33bb24ffb4:   imul   0x178(%rsp),%rcx             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@959 (line 393)
            0x00007f33bb24ffbd:   add    %rcx,%rdi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@960 (line 393)
   0.14%    0x00007f33bb24ffc0:   mov    0x128(%rsp),%rcx
            0x00007f33bb24ffc8:   imul   0x168(%rsp),%rcx             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@968 (line 393)
            0x00007f33bb24ffd1:   add    %rcx,%rdi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@969 (line 393)
   0.10%    0x00007f33bb24ffd4:   mov    0x140(%rsp),%rcx
            0x00007f33bb24ffdc:   imul   0x158(%rsp),%rcx             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@978 (line 393)
            0x00007f33bb24ffe5:   add    %rcx,%rdi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@979 (line 393)
   0.11%    0x00007f33bb24ffe8:   mov    0x150(%rsp),%rcx
            0x00007f33bb24fff0:   imul   0x148(%rsp),%rcx             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@988 (line 393)
   0.00%    0x00007f33bb24fff9:   add    %rcx,%rdi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@989 (line 393)
   0.12%    0x00007f33bb24fffc:   mov    0x160(%rsp),%rcx
            0x00007f33bb250004:   imul   0x138(%rsp),%rcx             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@998 (line 393)
            0x00007f33bb25000d:   add    %rcx,%rdi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@999 (line 393)
   0.13%    0x00007f33bb250010:   mov    0x170(%rsp),%rcx
            0x00007f33bb250018:   imul   %r14,%rcx                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1007 (line 393)
            0x00007f33bb25001c:   add    %rcx,%rdi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1008 (line 393)
   0.13%    0x00007f33bb25001f:   mov    0x1b0(%rsp),%rcx
            0x00007f33bb250027:   imul   %rdx,%rcx                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1016 (line 393)
            0x00007f33bb25002b:   add    %rcx,%rdi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1017 (line 393)
   0.10%    0x00007f33bb25002e:   mov    0x1a8(%rsp),%rcx
            0x00007f33bb250036:   imul   %r13,%rcx                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1025 (line 393)
            0x00007f33bb25003a:   add    %rcx,%rdi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1026 (line 393)
   0.11%    0x00007f33bb25003d:   mov    0x190(%rsp),%rcx
            0x00007f33bb250045:   imul   %r8,%rcx                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1034 (line 393)
            0x00007f33bb250049:   add    %rcx,%rdi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1035 (line 393)
   0.12%    0x00007f33bb25004c:   mov    0x1a0(%rsp),%rcx             ;   {no_reloc}
            0x00007f33bb250054:   imul   %rbp,%rcx                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1043 (line 393)
            0x00007f33bb250058:   mov    %rdi,%rbp
            0x00007f33bb25005b:   add    %rcx,%rbp                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1044 (line 393)
   0.12%    0x00007f33bb25005e:   imul   0x198(%rsp),%r10             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1054 (line 394)
            0x00007f33bb250067:   mov    %r11,%rcx
            0x00007f33bb25006a:   imul   0x188(%rsp),%rcx             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1062 (line 394)
   0.12%    0x00007f33bb250073:   add    %rcx,%r10                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1063 (line 394)
   0.13%    0x00007f33bb250076:   mov    %rbx,%rcx
            0x00007f33bb250079:   imul   0x180(%rsp),%rcx             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1071 (line 394)
            0x00007f33bb250082:   add    %rcx,%r10                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1072 (line 394)
   0.08%    0x00007f33bb250085:   mov    0x128(%rsp),%rcx
            0x00007f33bb25008d:   imul   0x178(%rsp),%rcx             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1080 (line 394)
            0x00007f33bb250096:   add    %rcx,%r10                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1081 (line 394)
   0.11%    0x00007f33bb250099:   mov    0x140(%rsp),%rcx
            0x00007f33bb2500a1:   imul   0x168(%rsp),%rcx             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1090 (line 394)
            0x00007f33bb2500aa:   add    %rcx,%r10                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1091 (line 394)
   0.14%    0x00007f33bb2500ad:   mov    0x150(%rsp),%rcx
            0x00007f33bb2500b5:   imul   0x158(%rsp),%rcx             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1100 (line 394)
            0x00007f33bb2500be:   add    %rcx,%r10                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1101 (line 394)
   0.10%    0x00007f33bb2500c1:   mov    0x160(%rsp),%rcx
            0x00007f33bb2500c9:   imul   0x148(%rsp),%rcx             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1110 (line 394)
            0x00007f33bb2500d2:   add    %rcx,%r10                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1111 (line 394)
   0.10%    0x00007f33bb2500d5:   mov    0x170(%rsp),%rcx
            0x00007f33bb2500dd:   imul   0x138(%rsp),%rcx             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1120 (line 394)
            0x00007f33bb2500e6:   add    %rcx,%r10                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1121 (line 394)
   0.14%    0x00007f33bb2500e9:   mov    0x1b0(%rsp),%rcx
            0x00007f33bb2500f1:   imul   %r14,%rcx                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1129 (line 394)
            0x00007f33bb2500f5:   add    %rcx,%r10                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1130 (line 394)
   0.13%    0x00007f33bb2500f8:   mov    0x1a8(%rsp),%rcx
            0x00007f33bb250100:   imul   %rdx,%rcx                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1138 (line 394)
            0x00007f33bb250104:   add    %rcx,%r10                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1139 (line 394)
   0.13%    0x00007f33bb250107:   mov    0x190(%rsp),%rcx
            0x00007f33bb25010f:   imul   %r13,%rcx                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1147 (line 394)
            0x00007f33bb250113:   add    %rcx,%r10                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1148 (line 394)
   0.11%    0x00007f33bb250116:   mov    0x1a0(%rsp),%rcx
            0x00007f33bb25011e:   imul   %r8,%rcx                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1156 (line 394)
   0.04%    0x00007f33bb250122:   add    %rcx,%r10                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1157 (line 394)
   0.08%    0x00007f33bb250125:   imul   0x198(%rsp),%r11             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1167 (line 395)
            0x00007f33bb25012e:   mov    %rbx,%rcx
            0x00007f33bb250131:   imul   0x188(%rsp),%rcx             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1175 (line 395)
   0.07%    0x00007f33bb25013a:   add    %rcx,%r11                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1176 (line 395)
   0.13%    0x00007f33bb25013d:   mov    0x128(%rsp),%rcx
            0x00007f33bb250145:   imul   0x180(%rsp),%rcx             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1184 (line 395)
   0.00%    0x00007f33bb25014e:   add    %rcx,%r11                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1185 (line 395)
                                                                      ;   {no_reloc}
   0.10%    0x00007f33bb250151:   mov    0x140(%rsp),%rcx
            0x00007f33bb250159:   imul   0x178(%rsp),%rcx             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1194 (line 395)
            0x00007f33bb250162:   add    %rcx,%r11                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1195 (line 395)
   0.10%    0x00007f33bb250165:   mov    0x150(%rsp),%rcx
            0x00007f33bb25016d:   imul   0x168(%rsp),%rcx             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1204 (line 395)
            0x00007f33bb250176:   add    %rcx,%r11                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1205 (line 395)
   0.15%    0x00007f33bb250179:   mov    0x160(%rsp),%rcx
            0x00007f33bb250181:   imul   0x158(%rsp),%rcx             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1214 (line 395)
            0x00007f33bb25018a:   add    %rcx,%r11                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1215 (line 395)
   0.11%    0x00007f33bb25018d:   mov    0x170(%rsp),%r8
            0x00007f33bb250195:   imul   0x148(%rsp),%r8              ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1224 (line 395)
            0x00007f33bb25019e:   add    %r8,%r11                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1225 (line 395)
   0.14%    0x00007f33bb2501a1:   mov    0x1b0(%rsp),%rcx
            0x00007f33bb2501a9:   imul   0x138(%rsp),%rcx             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1234 (line 395)
            0x00007f33bb2501b2:   add    %rcx,%r11                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1235 (line 395)
   0.14%    0x00007f33bb2501b5:   mov    0x1a8(%rsp),%rcx
            0x00007f33bb2501bd:   imul   %r14,%rcx                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1243 (line 395)
   0.02%    0x00007f33bb2501c1:   add    %rcx,%r11                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1244 (line 395)
   0.14%    0x00007f33bb2501c4:   mov    0x190(%rsp),%rcx
            0x00007f33bb2501cc:   imul   %rdx,%rcx                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1252 (line 395)
            0x00007f33bb2501d0:   add    %rcx,%r11                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1253 (line 395)
   0.14%    0x00007f33bb2501d3:   mov    0x1a0(%rsp),%rcx
            0x00007f33bb2501db:   imul   %r13,%rcx                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1261 (line 395)
            0x00007f33bb2501df:   add    %rcx,%r11                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1262 (line 395)
   0.14%    0x00007f33bb2501e2:   imul   0x198(%rsp),%rbx             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1272 (line 396)
            0x00007f33bb2501eb:   mov    0x128(%rsp),%rcx
            0x00007f33bb2501f3:   imul   0x188(%rsp),%rcx             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1280 (line 396)
   0.09%    0x00007f33bb2501fc:   add    %rcx,%rbx                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1281 (line 396)
   0.12%    0x00007f33bb2501ff:   mov    0x140(%rsp),%rcx
            0x00007f33bb250207:   imul   0x180(%rsp),%rcx             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1290 (line 396)
            0x00007f33bb250210:   add    %rcx,%rbx                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1291 (line 396)
   0.10%    0x00007f33bb250213:   mov    0x150(%rsp),%r13
            0x00007f33bb25021b:   imul   0x178(%rsp),%r13             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1300 (line 396)
            0x00007f33bb250224:   add    %r13,%rbx                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1301 (line 396)
   0.10%    0x00007f33bb250227:   mov    0x160(%rsp),%rcx
            0x00007f33bb25022f:   imul   0x168(%rsp),%rcx             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1310 (line 396)
            0x00007f33bb250238:   add    %rcx,%rbx                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1311 (line 396)
   0.09%    0x00007f33bb25023b:   mov    0x170(%rsp),%r8
            0x00007f33bb250243:   imul   0x158(%rsp),%r8              ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1320 (line 396)
            0x00007f33bb25024c:   add    %r8,%rbx                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1321 (line 396)
                                                                      ;   {no_reloc}
   0.13%    0x00007f33bb25024f:   mov    0x1b0(%rsp),%rcx
            0x00007f33bb250257:   imul   0x148(%rsp),%rcx             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1330 (line 396)
            0x00007f33bb250260:   add    %rcx,%rbx                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1331 (line 396)
   0.11%    0x00007f33bb250263:   mov    0x1a8(%rsp),%rcx
            0x00007f33bb25026b:   imul   0x138(%rsp),%rcx             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1340 (line 396)
            0x00007f33bb250274:   add    %rcx,%rbx                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1341 (line 396)
   0.11%    0x00007f33bb250277:   mov    0x190(%rsp),%rcx
            0x00007f33bb25027f:   imul   %r14,%rcx                    ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1349 (line 396)
   0.04%    0x00007f33bb250283:   add    %rcx,%rbx                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1350 (line 396)
   0.13%    0x00007f33bb250286:   imul   0x1a0(%rsp),%rdx             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1358 (line 396)
            0x00007f33bb25028f:   add    %rdx,%rbx                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1359 (line 396)
   0.12%    0x00007f33bb250292:   mov    0x128(%rsp),%rdx
            0x00007f33bb25029a:   imul   0x198(%rsp),%rdx             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1369 (line 397)
            0x00007f33bb2502a3:   mov    0x140(%rsp),%rcx
            0x00007f33bb2502ab:   imul   0x188(%rsp),%rcx             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1378 (line 397)
   0.13%    0x00007f33bb2502b4:   add    %rcx,%rdx                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                                      ; - sun.security.util.math.intpoly.IntegerPolynomialP384::mult@1379 (line 397)
   0.07%    0x00007f33bb2502b7:   mov    0x150(%rsp),%r13
            0x00007f33bb2502bf:   imul   0x180(%rsp),%r13             ;*lmul {reexecute=0 rethrow=0 return_oop=0}
....................................................................................................
  23.79%  <total for region 1>

....[Hottest Region 2]..............................................................................
jvmci, level 4, sun.security.util.math.intpoly.IntegerPolynomialP384::carryReduce, version 2, compile id 1097 

 <region is too big to display, has 1027 lines, but threshold is 1000>
....................................................................................................
  21.45%  <total for region 2>

....[Hottest Regions]...............................................................................
  23.79%      jvmci, level 4  sun.security.util.math.intpoly.IntegerPolynomialP384::mult, version 2, compile id 1103 
  21.45%      jvmci, level 4  sun.security.util.math.intpoly.IntegerPolynomialP384::carryReduce, version 2, compile id 1097 
   5.70%      jvmci, level 4  sun.security.util.math.intpoly.IntegerPolynomial$MutableElement::setProduct, version 2, compile id 1130 
   4.81%      jvmci, level 4  sun.security.util.math.intpoly.IntegerPolynomialP384::mult, version 2, compile id 1103 
   4.41%      jvmci, level 4  sun.security.util.math.intpoly.IntegerPolynomialP384::square, version 2, compile id 1157 
   2.57%      jvmci, level 4  sun.security.util.math.intpoly.P384OrderField::carryReduce0, version 2, compile id 1181 
   1.99%      jvmci, level 4  sun.security.ec.point.ProjectivePoint$Mutable::conditionalSet, version 2, compile id 1153 
   1.88%      jvmci, level 4  sun.security.ec.point.ProjectivePoint$Mutable::conditionalSet, version 2, compile id 1153 
   1.84%        runtime stub  StubRoutines::jlong_disjoint_arraycopy 
   1.65%      jvmci, level 4  sun.security.ec.ECOperations::setDouble, version 2, compile id 1196 
   1.65%      jvmci, level 4  sun.security.util.math.intpoly.IntegerPolynomialP384::mult, version 2, compile id 1103 
   1.50%        runtime stub  StubRoutines::sha512_implCompressMB 
   1.13%              kernel  [unknown] 
   1.13%      jvmci, level 4  sun.security.util.math.intpoly.P384OrderField::carryReduce0, version 2, compile id 1181 
   1.08%      jvmci, level 4  sun.security.util.math.intpoly.IntegerPolynomialP384::mult, version 2, compile id 1103 
   1.03%      jvmci, level 4  sun.security.util.math.intpoly.IntegerPolynomialP384::square, version 2, compile id 1157 
   0.98%      jvmci, level 4  sun.security.util.math.intpoly.IntegerPolynomialP384::mult, version 2, compile id 1103 
   0.86%      jvmci, level 4  sun.security.ec.ECOperations::setDouble, version 2, compile id 1196 
   0.83%      jvmci, level 4  sun.security.util.math.intpoly.P384OrderField::square, version 2, compile id 1198 
   0.78%      jvmci, level 4  sun.security.util.math.intpoly.P384OrderField::mult, version 2, compile id 1211 
  18.93%  <...other 984 warm regions...>
....................................................................................................
 100.00%  <totals>

....[Hottest Methods (after inlining)]..............................................................
  33.72%      jvmci, level 4  sun.security.util.math.intpoly.IntegerPolynomialP384::mult, version 2, compile id 1103 
  21.45%      jvmci, level 4  sun.security.util.math.intpoly.IntegerPolynomialP384::carryReduce, version 2, compile id 1097 
   7.67%      jvmci, level 4  sun.security.ec.ECOperations::setDouble, version 2, compile id 1196 
   5.70%      jvmci, level 4  sun.security.util.math.intpoly.IntegerPolynomial$MutableElement::setProduct, version 2, compile id 1130 
   5.44%      jvmci, level 4  sun.security.util.math.intpoly.IntegerPolynomialP384::square, version 2, compile id 1157 
   4.62%      jvmci, level 4  sun.security.ec.point.ProjectivePoint$Mutable::conditionalSet, version 2, compile id 1153 
   4.37%      jvmci, level 4  sun.security.util.math.intpoly.P384OrderField::carryReduce0, version 2, compile id 1181 
   3.75%      jvmci, level 4  sun.security.ec.ECOperations::setSum, version 2, compile id 1261 
   2.71%              kernel  [unknown] 
   2.09%        runtime stub  StubRoutines::sha512_implCompressMB 
   2.04%      jvmci, level 4  sun.security.util.math.intpoly.P384OrderField::mult, version 2, compile id 1211 
   1.84%        runtime stub  StubRoutines::jlong_disjoint_arraycopy 
   1.74%      jvmci, level 4  sun.security.util.math.intpoly.P384OrderField::square, version 2, compile id 1198 
   0.57%      jvmci, level 4  sun.security.util.math.IntegerModuloP$MultiplicativeInverser$Default::inverse, version 3, compile id 1325 
   0.45%      jvmci, level 4  sun.security.ec.ECOperations$PointMultiplier::lookup, version 2, compile id 1190 
   0.39%      jvmci, level 4  sun.security.ec.ECOperations::setSum, version 2, compile id 1415 
   0.22%      jvmci, level 4  sun.security.ec.ECOperations$PointMultiplier$Default::pointMultiply, version 3, compile id 1464 
   0.14%      jvmci, level 4  sun.security.util.math.intpoly.IntegerPolynomialP384::reduce, version 2, compile id 1251 
   0.09%                      <unknown> 
   0.07%      jvmci, level 4  sun.security.ec.ECDSAOperations::signDigest, version 2, compile id 1553 
   0.92%  <...other 116 warm methods...>
....................................................................................................
 100.00%  <totals>

....[Distribution by Source]........................................................................
  92.90%      jvmci, level 4
   3.95%        runtime stub
   2.71%              kernel
   0.14%           libjvm.so
   0.11%        libc-2.31.so
   0.09%                    
   0.03%         interpreter
   0.03%          ld-2.31.so
   0.02%      hsdis-amd64.so
   0.02%  libpthread-2.31.so
   0.00%    perf-2107209.map
....................................................................................................
 100.00%  <totals>



# JMH version: 1.37
# VM version: JDK 21, OpenJDK 64-Bit Server VM, 21+35-jvmci-23.1-b15
# VM invoker: /home/gogu/bench_jdks/graalvm-community-openjdk-21+35.1/bin/java
# VM options: -XX:ThreadPriorityPolicy=1 -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCIProduct -XX:-UnlockExperimentalVMOptions -Xms4g -Xmx4g -XX:+AlwaysPreTouch
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.performance.benchmarks.api.signature.DsaEcSignatureBenchmark.sign
# Parameters: (algorithm = secp521r1, messageLength = 64)

# Run progress: 66.67% complete, ETA 00:07:46
# Fork: 1 of 1
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 9073.419 us/op
# Warmup Iteration   2: 2819.071 us/op
# Warmup Iteration   3: 2874.894 us/op
# Warmup Iteration   4: 2805.330 us/op
# Warmup Iteration   5: 2806.530 us/op
Iteration   1: 2804.368 us/op
Iteration   2: 2806.546 us/op
Iteration   3: 2806.573 us/op
Iteration   4: 2806.376 us/op
Iteration   5: 2804.077 us/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "com.ionutbalosin.jvm.performance.benchmarks.api.signature.DsaEcSignatureBenchmark.sign":
  2805.588 ±(99.9%) 4.826 us/op [Average]
  (min, avg, max) = (2804.077, 2805.588, 2806.573), stdev = 1.253
  CI (99.9%): [2800.762, 2810.414] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.signature.DsaEcSignatureBenchmark.sign:asm":
PrintAssembly processed: 435845 total address lines.
Perf output processed (skipped 61.751 seconds):
 Column 1: cycles (50906 events)

Hottest code regions (>10.00% "cycles" events):
 Event counts are percents of total event count.

....[Hottest Region 1]..............................................................................
jvmci, level 4, sun.security.util.math.intpoly.IntegerPolynomialP521::mult, version 2, compile id 1059 

 <region is too big to display, has 2723 lines, but threshold is 1000>
....................................................................................................
  52.45%  <total for region 1>

....[Hottest Regions]...............................................................................
  52.45%      jvmci, level 4  sun.security.util.math.intpoly.IntegerPolynomialP521::mult, version 2, compile id 1059 
   8.13%      jvmci, level 4  sun.security.util.math.intpoly.IntegerPolynomialP521::square, version 2, compile id 1113 
   5.18%      jvmci, level 4  sun.security.util.math.intpoly.IntegerPolynomial::multByInt, version 2, compile id 1038 
   3.06%      jvmci, level 4  sun.security.util.math.intpoly.P521OrderField::carryReduce1, version 2, compile id 1149 
   2.70%      jvmci, level 4  sun.security.util.math.intpoly.P521OrderField::carryReduce0, version 2, compile id 1146 
   2.51%      jvmci, level 4  sun.security.ec.point.ProjectivePoint$Mutable::conditionalSet, version 2, compile id 1105 
   1.99%      jvmci, level 4  sun.security.ec.point.ProjectivePoint$Mutable::conditionalSet, version 2, compile id 1105 
   1.78%        runtime stub  StubRoutines::jlong_disjoint_arraycopy 
   1.67%      jvmci, level 4  sun.security.util.math.intpoly.P521OrderField::carryReduce2, version 2, compile id 1144 
   1.11%      jvmci, level 4  sun.security.util.math.intpoly.P521OrderField::square, version 2, compile id 1179 
   0.72%              kernel  [unknown] 
   0.66%      jvmci, level 4  sun.security.ec.ECOperations::setDouble, version 2, compile id 1177 
   0.65%      jvmci, level 4  sun.security.ec.ECOperations::setDouble, version 2, compile id 1177 
   0.60%      jvmci, level 4  sun.security.util.math.IntegerModuloP$MultiplicativeInverser$Default::inverse, version 5, compile id 1317 
   0.54%      jvmci, level 4  sun.security.util.math.intpoly.P521OrderField::mult, version 2, compile id 1187 
   0.53%      jvmci, level 4  sun.security.util.math.intpoly.P521OrderField::carryReduce0, version 2, compile id 1146 
   0.51%      jvmci, level 4  sun.security.util.math.intpoly.P521OrderField::square, version 2, compile id 1179 
   0.51%      jvmci, level 4  sun.security.ec.ECOperations::setDouble, version 2, compile id 1177 
   0.44%      jvmci, level 4  sun.security.ec.ECOperations::setDouble, version 2, compile id 1177 
   0.35%      jvmci, level 4  sun.security.util.math.intpoly.P521OrderField::square, version 2, compile id 1179 
  13.92%  <...other 970 warm regions...>
....................................................................................................
 100.00%  <totals>

....[Hottest Methods (after inlining)]..............................................................
  52.45%      jvmci, level 4  sun.security.util.math.intpoly.IntegerPolynomialP521::mult, version 2, compile id 1059 
   8.13%      jvmci, level 4  sun.security.util.math.intpoly.IntegerPolynomialP521::square, version 2, compile id 1113 
   6.69%      jvmci, level 4  sun.security.ec.ECOperations::setDouble, version 2, compile id 1177 
   5.18%      jvmci, level 4  sun.security.util.math.intpoly.IntegerPolynomial::multByInt, version 2, compile id 1038 
   4.50%      jvmci, level 4  sun.security.ec.point.ProjectivePoint$Mutable::conditionalSet, version 2, compile id 1105 
   3.23%      jvmci, level 4  sun.security.util.math.intpoly.P521OrderField::carryReduce0, version 2, compile id 1146 
   3.09%      jvmci, level 4  sun.security.util.math.intpoly.P521OrderField::mult, version 2, compile id 1187 
   3.06%      jvmci, level 4  sun.security.util.math.intpoly.P521OrderField::carryReduce1, version 2, compile id 1149 
   3.03%      jvmci, level 4  sun.security.ec.ECOperations::setSum, version 2, compile id 1251 
   2.43%              kernel  [unknown] 
   2.35%      jvmci, level 4  sun.security.util.math.intpoly.P521OrderField::square, version 2, compile id 1179 
   1.78%        runtime stub  StubRoutines::jlong_disjoint_arraycopy 
   1.67%      jvmci, level 4  sun.security.util.math.intpoly.P521OrderField::carryReduce2, version 2, compile id 1144 
   0.61%      jvmci, level 4  sun.security.util.math.IntegerModuloP$MultiplicativeInverser$Default::inverse, version 5, compile id 1317 
   0.40%      jvmci, level 4  sun.security.ec.ECOperations$PointMultiplier::lookup, version 2, compile id 1162 
   0.22%      jvmci, level 4  sun.security.ec.ECOperations::setSum, version 3, compile id 1457 
   0.15%      jvmci, level 4  sun.security.util.math.intpoly.IntegerPolynomialP521::reduce, version 2, compile id 1242 
   0.09%      jvmci, level 4  sun.security.ec.ECOperations$PointMultiplier$Default::pointMultiply, version 3, compile id 1485 
   0.07%                      <unknown> 
   0.06%      jvmci, level 4  java.math.BigInteger::shiftRightImpl, version 2, compile id 1338 
   0.83%  <...other 118 warm methods...>
....................................................................................................
 100.00%  <totals>

....[Distribution by Source]........................................................................
  95.35%      jvmci, level 4
   2.43%              kernel
   1.79%        runtime stub
   0.16%           libjvm.so
   0.12%        libc-2.31.so
   0.07%                    
   0.02%  libpthread-2.31.so
   0.02%      hsdis-amd64.so
   0.02%         interpreter
   0.01%    perf-2107274.map
   0.01%          ld-2.31.so
   0.00%       libdl-2.31.so
....................................................................................................
 100.00%  <totals>



# JMH version: 1.37
# VM version: JDK 21, OpenJDK 64-Bit Server VM, 21+35-jvmci-23.1-b15
# VM invoker: /home/gogu/bench_jdks/graalvm-community-openjdk-21+35.1/bin/java
# VM options: -XX:ThreadPriorityPolicy=1 -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCIProduct -XX:-UnlockExperimentalVMOptions -Xms4g -Xmx4g -XX:+AlwaysPreTouch
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.performance.benchmarks.api.signature.DsaEcSignatureBenchmark.sign
# Parameters: (algorithm = secp521r1, messageLength = 512)

# Run progress: 75.00% complete, ETA 00:05:49
# Fork: 1 of 1
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 8301.555 us/op
# Warmup Iteration   2: 2867.119 us/op
# Warmup Iteration   3: 2824.164 us/op
# Warmup Iteration   4: 2820.904 us/op
# Warmup Iteration   5: 2818.475 us/op
Iteration   1: 2818.707 us/op
Iteration   2: 2819.233 us/op
Iteration   3: 2818.270 us/op
Iteration   4: 2818.585 us/op
Iteration   5: 2818.093 us/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "com.ionutbalosin.jvm.performance.benchmarks.api.signature.DsaEcSignatureBenchmark.sign":
  2818.578 ±(99.9%) 1.697 us/op [Average]
  (min, avg, max) = (2818.093, 2818.578, 2819.233), stdev = 0.441
  CI (99.9%): [2816.881, 2820.274] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.signature.DsaEcSignatureBenchmark.sign:asm":
PrintAssembly processed: 435407 total address lines.
Perf output processed (skipped 62.288 seconds):
 Column 1: cycles (50778 events)

Hottest code regions (>10.00% "cycles" events):
 Event counts are percents of total event count.

....[Hottest Region 1]..............................................................................
jvmci, level 4, sun.security.util.math.intpoly.IntegerPolynomialP521::mult, version 2, compile id 1074 

 <region is too big to display, has 2723 lines, but threshold is 1000>
....................................................................................................
  52.75%  <total for region 1>

....[Hottest Regions]...............................................................................
  52.75%       jvmci, level 4  sun.security.util.math.intpoly.IntegerPolynomialP521::mult, version 2, compile id 1074 
   7.99%       jvmci, level 4  sun.security.util.math.intpoly.IntegerPolynomialP521::square, version 2, compile id 1113 
   5.35%       jvmci, level 4  sun.security.util.math.intpoly.IntegerPolynomial::multByInt, version 2, compile id 1055 
   4.61%       jvmci, level 4  sun.security.ec.point.ProjectivePoint$Mutable::conditionalSet, version 2, compile id 1111 
   3.20%       jvmci, level 4  sun.security.util.math.intpoly.P521OrderField::carryReduce0, version 2, compile id 1153 
   3.19%       jvmci, level 4  sun.security.util.math.intpoly.P521OrderField::carryReduce1, version 2, compile id 1162 
   1.73%         runtime stub  StubRoutines::jlong_disjoint_arraycopy 
   1.59%       jvmci, level 4  sun.security.util.math.intpoly.P521OrderField::carryReduce2, version 2, compile id 1160 
   0.66%       jvmci, level 4  sun.security.ec.ECOperations::setDouble, version 2, compile id 1171 
   0.66%       jvmci, level 4  sun.security.util.math.intpoly.P521OrderField::square, version 2, compile id 1173 
   0.60%       jvmci, level 4  sun.security.util.math.intpoly.P521OrderField::square, version 2, compile id 1173 
   0.59%       jvmci, level 4  sun.security.util.math.intpoly.P521OrderField::square, version 2, compile id 1173 
   0.56%       jvmci, level 4  sun.security.util.math.IntegerModuloP$MultiplicativeInverser$Default::inverse, version 5, compile id 1336 
   0.52%       jvmci, level 4  sun.security.ec.ECOperations::setDouble, version 2, compile id 1171 
   0.52%       jvmci, level 4  sun.security.ec.ECOperations::setDouble, version 2, compile id 1171 
   0.46%               kernel  [unknown] 
   0.41%       jvmci, level 4  sun.security.ec.ECOperations::setDouble, version 2, compile id 1171 
   0.40%       jvmci, level 4  sun.security.util.math.intpoly.P521OrderField::mult, version 2, compile id 1208 
   0.38%       jvmci, level 4  sun.security.ec.ECOperations::setDouble, version 2, compile id 1171 
   0.38%       jvmci, level 4  sun.security.util.math.intpoly.P521OrderField::square, version 2, compile id 1173 
  13.43%  <...other 930 warm regions...>
....................................................................................................
 100.00%  <totals>

....[Hottest Methods (after inlining)]..............................................................
  52.75%       jvmci, level 4  sun.security.util.math.intpoly.IntegerPolynomialP521::mult, version 2, compile id 1074 
   7.99%       jvmci, level 4  sun.security.util.math.intpoly.IntegerPolynomialP521::square, version 2, compile id 1113 
   6.92%       jvmci, level 4  sun.security.ec.ECOperations::setDouble, version 2, compile id 1171 
   5.35%       jvmci, level 4  sun.security.util.math.intpoly.IntegerPolynomial::multByInt, version 2, compile id 1055 
   4.61%       jvmci, level 4  sun.security.ec.point.ProjectivePoint$Mutable::conditionalSet, version 2, compile id 1111 
   3.20%       jvmci, level 4  sun.security.util.math.intpoly.P521OrderField::carryReduce0, version 2, compile id 1153 
   3.19%       jvmci, level 4  sun.security.util.math.intpoly.P521OrderField::carryReduce1, version 2, compile id 1162 
   3.03%       jvmci, level 4  sun.security.util.math.intpoly.P521OrderField::mult, version 2, compile id 1208 
   3.00%       jvmci, level 4  sun.security.ec.ECOperations::setSum, version 2, compile id 1266 
   2.50%       jvmci, level 4  sun.security.util.math.intpoly.P521OrderField::square, version 2, compile id 1173 
   1.73%         runtime stub  StubRoutines::jlong_disjoint_arraycopy 
   1.72%               kernel  [unknown] 
   1.59%       jvmci, level 4  sun.security.util.math.intpoly.P521OrderField::carryReduce2, version 2, compile id 1160 
   0.57%       jvmci, level 4  sun.security.util.math.IntegerModuloP$MultiplicativeInverser$Default::inverse, version 5, compile id 1336 
   0.39%       jvmci, level 4  sun.security.ec.ECOperations$PointMultiplier::lookup, version 2, compile id 1145 
   0.19%       jvmci, level 4  sun.security.ec.ECOperations::setSum, version 2, compile id 1478 
   0.14%       jvmci, level 4  sun.security.util.math.intpoly.IntegerPolynomialP521::reduce, version 2, compile id 1258 
   0.08%       jvmci, level 4  sun.security.ec.ECOperations$PointMultiplier$Default::pointMultiply, version 4, compile id 1525 
   0.06%       jvmci, level 4  sun.security.provider.SHA::implCompress0, version 7, compile id 1395 
   0.05%       jvmci, level 4  sun.security.ec.ECDSAOperations::toAffinePoint, version 2, compile id 1617 
   0.91%  <...other 154 warm methods...>
....................................................................................................
 100.00%  <totals>

....[Distribution by Source]........................................................................
  96.07%       jvmci, level 4
   1.78%         runtime stub
   1.72%               kernel
   0.12%         libc-2.31.so
   0.11%            libjvm.so
   0.06%  libjvmcicompiler.so
   0.05%                     
   0.03%          interpreter
   0.02%   libpthread-2.31.so
   0.01%       hsdis-amd64.so
   0.01%           ld-2.31.so
   0.01%               [vdso]
   0.00%     perf-2107339.map
   0.00%          c1, level 3
   0.00%     Unknown, level 0
....................................................................................................
 100.00%  <totals>



# JMH version: 1.37
# VM version: JDK 21, OpenJDK 64-Bit Server VM, 21+35-jvmci-23.1-b15
# VM invoker: /home/gogu/bench_jdks/graalvm-community-openjdk-21+35.1/bin/java
# VM options: -XX:ThreadPriorityPolicy=1 -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCIProduct -XX:-UnlockExperimentalVMOptions -Xms4g -Xmx4g -XX:+AlwaysPreTouch
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.performance.benchmarks.api.signature.DsaEcSignatureBenchmark.sign
# Parameters: (algorithm = secp521r1, messageLength = 2048)

# Run progress: 83.33% complete, ETA 00:03:53
# Fork: 1 of 1
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 8675.180 us/op
# Warmup Iteration   2: 2819.404 us/op
# Warmup Iteration   3: 2812.066 us/op
# Warmup Iteration   4: 2807.416 us/op
# Warmup Iteration   5: 2804.910 us/op
Iteration   1: 2804.782 us/op
Iteration   2: 2805.090 us/op
Iteration   3: 2806.514 us/op
Iteration   4: 2804.911 us/op
Iteration   5: 2804.976 us/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "com.ionutbalosin.jvm.performance.benchmarks.api.signature.DsaEcSignatureBenchmark.sign":
  2805.255 ±(99.9%) 2.745 us/op [Average]
  (min, avg, max) = (2804.782, 2805.255, 2806.514), stdev = 0.713
  CI (99.9%): [2802.510, 2807.999] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.signature.DsaEcSignatureBenchmark.sign:asm":
PrintAssembly processed: 431867 total address lines.
Perf output processed (skipped 62.128 seconds):
 Column 1: cycles (50601 events)

Hottest code regions (>10.00% "cycles" events):
 Event counts are percents of total event count.

....[Hottest Region 1]..............................................................................
jvmci, level 4, sun.security.util.math.intpoly.IntegerPolynomialP521::mult, version 2, compile id 1097 

 <region is too big to display, has 2723 lines, but threshold is 1000>
....................................................................................................
  52.88%  <total for region 1>

....[Hottest Regions]...............................................................................
  52.88%      jvmci, level 4  sun.security.util.math.intpoly.IntegerPolynomialP521::mult, version 2, compile id 1097 
   8.04%      jvmci, level 4  sun.security.util.math.intpoly.IntegerPolynomialP521::square, version 2, compile id 1135 
   5.25%      jvmci, level 4  sun.security.util.math.intpoly.IntegerPolynomial::multByInt, version 2, compile id 1068 
   3.19%      jvmci, level 4  sun.security.util.math.intpoly.P521OrderField::carryReduce1, version 2, compile id 1186 
   3.18%      jvmci, level 4  sun.security.util.math.intpoly.P521OrderField::carryReduce0, version 2, compile id 1185 
   2.45%      jvmci, level 4  sun.security.ec.point.ProjectivePoint$Mutable::conditionalSet, version 2, compile id 1133 
   2.04%      jvmci, level 4  sun.security.ec.point.ProjectivePoint$Mutable::conditionalSet, version 2, compile id 1133 
   1.73%        runtime stub  StubRoutines::jlong_disjoint_arraycopy 
   1.60%      jvmci, level 4  sun.security.util.math.intpoly.P521OrderField::carryReduce2, version 2, compile id 1182 
   0.87%      jvmci, level 4  sun.security.util.math.intpoly.P521OrderField::square, version 2, compile id 1197 
   0.75%      jvmci, level 4  sun.security.ec.ECOperations::setDouble, version 2, compile id 1205 
   0.67%      jvmci, level 4  sun.security.util.math.IntegerModuloP$MultiplicativeInverser$Default::inverse, version 5, compile id 1350 
   0.66%      jvmci, level 4  sun.security.util.math.intpoly.P521OrderField::mult, version 2, compile id 1208 
   0.62%      jvmci, level 4  sun.security.ec.ECOperations::setDouble, version 2, compile id 1205 
   0.55%      jvmci, level 4  sun.security.ec.ECOperations::setDouble, version 2, compile id 1205 
   0.55%      jvmci, level 4  sun.security.ec.ECOperations::setDouble, version 2, compile id 1205 
   0.52%      jvmci, level 4  sun.security.ec.ECOperations::setDouble, version 2, compile id 1205 
   0.46%      jvmci, level 4  sun.security.util.math.intpoly.P521OrderField::mult, version 2, compile id 1208 
   0.39%      jvmci, level 4  sun.security.util.math.intpoly.P521OrderField::square, version 2, compile id 1197 
   0.39%      jvmci, level 4  sun.security.ec.ECOperations::setDouble, version 2, compile id 1205 
  13.22%  <...other 1016 warm regions...>
....................................................................................................
 100.00%  <totals>

....[Hottest Methods (after inlining)]..............................................................
  52.88%      jvmci, level 4  sun.security.util.math.intpoly.IntegerPolynomialP521::mult, version 2, compile id 1097 
   8.04%      jvmci, level 4  sun.security.util.math.intpoly.IntegerPolynomialP521::square, version 2, compile id 1135 
   6.64%      jvmci, level 4  sun.security.ec.ECOperations::setDouble, version 2, compile id 1205 
   5.25%      jvmci, level 4  sun.security.util.math.intpoly.IntegerPolynomial::multByInt, version 2, compile id 1068 
   4.49%      jvmci, level 4  sun.security.ec.point.ProjectivePoint$Mutable::conditionalSet, version 2, compile id 1133 
   3.19%      jvmci, level 4  sun.security.util.math.intpoly.P521OrderField::carryReduce1, version 2, compile id 1186 
   3.18%      jvmci, level 4  sun.security.util.math.intpoly.P521OrderField::carryReduce0, version 2, compile id 1185 
   3.01%      jvmci, level 4  sun.security.util.math.intpoly.P521OrderField::mult, version 2, compile id 1208 
   2.87%      jvmci, level 4  sun.security.ec.ECOperations::setSum, version 2, compile id 1290 
   2.54%      jvmci, level 4  sun.security.util.math.intpoly.P521OrderField::square, version 2, compile id 1197 
   1.85%              kernel  [unknown] 
   1.73%        runtime stub  StubRoutines::jlong_disjoint_arraycopy 
   1.60%      jvmci, level 4  sun.security.util.math.intpoly.P521OrderField::carryReduce2, version 2, compile id 1182 
   0.67%      jvmci, level 4  sun.security.util.math.IntegerModuloP$MultiplicativeInverser$Default::inverse, version 5, compile id 1350 
   0.42%      jvmci, level 4  sun.security.ec.ECOperations$PointMultiplier::lookup, version 2, compile id 1194 
   0.27%      jvmci, level 4  sun.security.ec.ECOperations::setSum, version 3, compile id 1473 
   0.17%        runtime stub  StubRoutines::sha512_implCompressMB 
   0.16%      jvmci, level 4  sun.security.util.math.intpoly.IntegerPolynomialP521::reduce, version 2, compile id 1282 
   0.12%                      <unknown> 
   0.09%      jvmci, level 4  sun.security.ec.ECOperations$PointMultiplier$Default::pointMultiply, version 3, compile id 1504 
   0.83%  <...other 112 warm methods...>
....................................................................................................
 100.00%  <totals>

....[Distribution by Source]........................................................................
  95.79%      jvmci, level 4
   1.91%        runtime stub
   1.85%              kernel
   0.15%           libjvm.so
   0.12%        libc-2.31.so
   0.12%                    
   0.02%         interpreter
   0.01%      hsdis-amd64.so
   0.01%  libpthread-2.31.so
   0.00%          ld-2.31.so
   0.00%    perf-2107405.map
....................................................................................................
 100.00%  <totals>



# JMH version: 1.37
# VM version: JDK 21, OpenJDK 64-Bit Server VM, 21+35-jvmci-23.1-b15
# VM invoker: /home/gogu/bench_jdks/graalvm-community-openjdk-21+35.1/bin/java
# VM options: -XX:ThreadPriorityPolicy=1 -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCIProduct -XX:-UnlockExperimentalVMOptions -Xms4g -Xmx4g -XX:+AlwaysPreTouch
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.performance.benchmarks.api.signature.DsaEcSignatureBenchmark.sign
# Parameters: (algorithm = secp521r1, messageLength = 16384)

# Run progress: 91.67% complete, ETA 00:01:56
# Fork: 1 of 1
# Preparing profilers: LinuxPerfAsmProfiler 
# Profilers consume stdout and stderr from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 10849.114 us/op
# Warmup Iteration   2: 2937.792 us/op
# Warmup Iteration   3: 2840.583 us/op
# Warmup Iteration   4: 2840.036 us/op
# Warmup Iteration   5: 2835.892 us/op
Iteration   1: 2836.991 us/op
Iteration   2: 2835.820 us/op
Iteration   3: 2835.895 us/op
Iteration   4: 2836.005 us/op
Iteration   5: 2836.303 us/op
# Processing profiler results: LinuxPerfAsmProfiler 


Result "com.ionutbalosin.jvm.performance.benchmarks.api.signature.DsaEcSignatureBenchmark.sign":
  2836.203 ±(99.9%) 1.838 us/op [Average]
  (min, avg, max) = (2835.820, 2836.203, 2836.991), stdev = 0.477
  CI (99.9%): [2834.364, 2838.041] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.performance.benchmarks.api.signature.DsaEcSignatureBenchmark.sign:asm":
PrintAssembly processed: 449249 total address lines.
Perf output processed (skipped 61.550 seconds):
 Column 1: cycles (50885 events)

Hottest code regions (>10.00% "cycles" events):
 Event counts are percents of total event count.

....[Hottest Region 1]..............................................................................
jvmci, level 4, sun.security.util.math.intpoly.IntegerPolynomialP521::mult, version 2, compile id 1085 

 <region is too big to display, has 2723 lines, but threshold is 1000>
....................................................................................................
  51.81%  <total for region 1>

....[Hottest Regions]...............................................................................
  51.81%      jvmci, level 4  sun.security.util.math.intpoly.IntegerPolynomialP521::mult, version 2, compile id 1085 
   8.35%      jvmci, level 4  sun.security.util.math.intpoly.IntegerPolynomialP521::square, version 2, compile id 1138 
   5.03%      jvmci, level 4  sun.security.util.math.intpoly.IntegerPolynomial::multByInt, version 2, compile id 1041 
   3.20%      jvmci, level 4  sun.security.util.math.intpoly.P521OrderField::carryReduce0, version 2, compile id 1170 
   2.54%      jvmci, level 4  sun.security.ec.point.ProjectivePoint$Mutable::conditionalSet, version 2, compile id 1127 
   2.45%      jvmci, level 4  sun.security.util.math.intpoly.P521OrderField::carryReduce1, version 2, compile id 1171 
   2.04%      jvmci, level 4  sun.security.ec.point.ProjectivePoint$Mutable::conditionalSet, version 2, compile id 1127 
   1.79%        runtime stub  StubRoutines::jlong_disjoint_arraycopy 
   1.53%      jvmci, level 4  sun.security.util.math.intpoly.P521OrderField::carryReduce2, version 2, compile id 1174 
   1.17%        runtime stub  StubRoutines::sha512_implCompressMB 
   0.90%      jvmci, level 4  sun.security.util.math.intpoly.P521OrderField::square, version 2, compile id 1205 
   0.70%      jvmci, level 4  sun.security.util.math.intpoly.P521OrderField::square, version 2, compile id 1205 
   0.62%              kernel  [unknown] 
   0.61%      jvmci, level 4  sun.security.util.math.IntegerModuloP$MultiplicativeInverser$Default::inverse, version 4, compile id 1330 
   0.57%      jvmci, level 4  sun.security.ec.ECOperations::setDouble, version 2, compile id 1202 
   0.50%      jvmci, level 4  sun.security.ec.ECOperations::setDouble, version 2, compile id 1202 
   0.49%      jvmci, level 4  sun.security.ec.ECOperations::setDouble, version 2, compile id 1202 
   0.48%      jvmci, level 4  sun.security.util.math.intpoly.P521OrderField::carryReduce1, version 2, compile id 1171 
   0.46%      jvmci, level 4  sun.security.ec.ECOperations::setDouble, version 2, compile id 1202 
   0.44%      jvmci, level 4  sun.security.ec.ECOperations::setDouble, version 2, compile id 1202 
  14.33%  <...other 916 warm regions...>
....................................................................................................
 100.00%  <totals>

....[Hottest Methods (after inlining)]..............................................................
  51.81%      jvmci, level 4  sun.security.util.math.intpoly.IntegerPolynomialP521::mult, version 2, compile id 1085 
   8.35%      jvmci, level 4  sun.security.util.math.intpoly.IntegerPolynomialP521::square, version 2, compile id 1138 
   6.58%      jvmci, level 4  sun.security.ec.ECOperations::setDouble, version 2, compile id 1202 
   5.03%      jvmci, level 4  sun.security.util.math.intpoly.IntegerPolynomial::multByInt, version 2, compile id 1041 
   4.58%      jvmci, level 4  sun.security.ec.point.ProjectivePoint$Mutable::conditionalSet, version 2, compile id 1127 
   3.20%      jvmci, level 4  sun.security.util.math.intpoly.P521OrderField::carryReduce0, version 2, compile id 1170 
   3.07%      jvmci, level 4  sun.security.util.math.intpoly.P521OrderField::mult, version 2, compile id 1210 
   2.93%      jvmci, level 4  sun.security.util.math.intpoly.P521OrderField::carryReduce1, version 2, compile id 1171 
   2.88%      jvmci, level 4  sun.security.ec.ECOperations::setSum, version 2, compile id 1280 
   2.49%      jvmci, level 4  sun.security.util.math.intpoly.P521OrderField::square, version 2, compile id 1205 
   1.87%              kernel  [unknown] 
   1.79%        runtime stub  StubRoutines::jlong_disjoint_arraycopy 
   1.53%      jvmci, level 4  sun.security.util.math.intpoly.P521OrderField::carryReduce2, version 2, compile id 1174 
   1.32%        runtime stub  StubRoutines::sha512_implCompressMB 
   0.62%      jvmci, level 4  sun.security.util.math.IntegerModuloP$MultiplicativeInverser$Default::inverse, version 4, compile id 1330 
   0.40%      jvmci, level 4  sun.security.ec.ECOperations$PointMultiplier::lookup, version 2, compile id 1190 
   0.28%      jvmci, level 4  sun.security.ec.ECOperations::setSum, version 3, compile id 1479 
   0.15%      jvmci, level 4  sun.security.util.math.intpoly.IntegerPolynomialP521::reduce, version 2, compile id 1267 
   0.13%                      <unknown> 
   0.10%      jvmci, level 4  sun.security.ec.ECOperations$PointMultiplier$Default::pointMultiply, version 3, compile id 1512 
   0.87%  <...other 121 warm methods...>
....................................................................................................
 100.00%  <totals>

....[Distribution by Source]........................................................................
  94.50%      jvmci, level 4
   3.14%        runtime stub
   1.87%              kernel
   0.16%           libjvm.so
   0.13%                    
   0.11%        libc-2.31.so
   0.03%         interpreter
   0.02%  libpthread-2.31.so
   0.01%      hsdis-amd64.so
   0.01%              [vdso]
   0.00%    perf-2107468.map
   0.00%          ld-2.31.so
   0.00%         c1, level 2
....................................................................................................
 100.00%  <totals>



# Run complete. Total time: 00:23:17

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                         (algorithm)  (messageLength)  Mode  Cnt     Score   Error  Units
DsaEcSignatureBenchmark.sign        secp256r1               64  avgt    5   313.931 ± 0.964  us/op
DsaEcSignatureBenchmark.sign:asm    secp256r1               64  avgt            NaN            ---
DsaEcSignatureBenchmark.sign        secp256r1              512  avgt    5   316.653 ± 1.544  us/op
DsaEcSignatureBenchmark.sign:asm    secp256r1              512  avgt            NaN            ---
DsaEcSignatureBenchmark.sign        secp256r1             2048  avgt    5   323.184 ± 1.187  us/op
DsaEcSignatureBenchmark.sign:asm    secp256r1             2048  avgt            NaN            ---
DsaEcSignatureBenchmark.sign        secp256r1            16384  avgt    5   368.472 ± 0.414  us/op
DsaEcSignatureBenchmark.sign:asm    secp256r1            16384  avgt            NaN            ---
DsaEcSignatureBenchmark.sign        secp384r1               64  avgt    5  1718.733 ± 0.273  us/op
DsaEcSignatureBenchmark.sign:asm    secp384r1               64  avgt            NaN            ---
DsaEcSignatureBenchmark.sign        secp384r1              512  avgt    5  1720.905 ± 1.403  us/op
DsaEcSignatureBenchmark.sign:asm    secp384r1              512  avgt            NaN            ---
DsaEcSignatureBenchmark.sign        secp384r1             2048  avgt    5  1733.977 ± 1.773  us/op
DsaEcSignatureBenchmark.sign:asm    secp384r1             2048  avgt            NaN            ---
DsaEcSignatureBenchmark.sign        secp384r1            16384  avgt    5  1756.576 ± 2.764  us/op
DsaEcSignatureBenchmark.sign:asm    secp384r1            16384  avgt            NaN            ---
DsaEcSignatureBenchmark.sign        secp521r1               64  avgt    5  2805.588 ± 4.826  us/op
DsaEcSignatureBenchmark.sign:asm    secp521r1               64  avgt            NaN            ---
DsaEcSignatureBenchmark.sign        secp521r1              512  avgt    5  2818.578 ± 1.697  us/op
DsaEcSignatureBenchmark.sign:asm    secp521r1              512  avgt            NaN            ---
DsaEcSignatureBenchmark.sign        secp521r1             2048  avgt    5  2805.255 ± 2.745  us/op
DsaEcSignatureBenchmark.sign:asm    secp521r1             2048  avgt            NaN            ---
DsaEcSignatureBenchmark.sign        secp521r1            16384  avgt    5  2836.203 ± 1.838  us/op
DsaEcSignatureBenchmark.sign:asm    secp521r1            16384  avgt            NaN            ---
